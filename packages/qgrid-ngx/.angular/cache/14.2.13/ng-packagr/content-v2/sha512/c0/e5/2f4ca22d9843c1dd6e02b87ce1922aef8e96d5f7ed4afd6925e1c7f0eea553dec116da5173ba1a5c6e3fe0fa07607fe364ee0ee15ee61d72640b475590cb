{"hash":"503ecc222a94b192d5cf675c742de7aa95b8a9f4","fesm2020":{"code":"import * as valueService from '@qgrid/core';\nimport { Defer, isFunction, isNumber, GridError, ModelBuilder, noop, identity, Pipe, PipeUnit, Command, Action, Node, RowDetailsStatus, GridService, viewFactory, Disposable as Disposable$1, Lazy, ObservableEvent, ObservableReplyEvent, bodyCellClassifier, headCellClassifier, isString, isArray, GRID_PREFIX, Log, SubjectLike, BodyHost, EventListener, EventManager, RowState, RowDetails, Event, BoxHost, jobLine, Fastdom, EditService, isUndefined, ColumnListHost, parseFactory, ColumnListState, guid, DragService, no, elementFromPoint, parents, clone, HeadHost, TableCommandManager, ViewHost, GridState, DataState, EditState, FilterState, GroupState, PivotState, SelectionState, ScrollState, SortState, StyleState, GridHost, eventPath, tableFactory, yes, FormatService } from '@qgrid/core';\nexport { Bag as DomBag, Box as DomBox, Cell as DomCell, Data as DomData, Row as DomRow, Table as DomTable, View as DomView, GridError, GridService } from '@qgrid/core';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Injectable, Directive, Input, Optional, Pipe as Pipe$1, Component, ChangeDetectionStrategy, NgModule, ViewChild, Host, SkipSelf, HostBinding, Inject, ViewEncapsulation } from '@angular/core';\nimport * as i4 from '@angular/common';\nimport { CommonModule, DOCUMENT, DatePipe, DecimalPipe, CurrencyPipe } from '@angular/common';\n\nconst rAF = window.requestAnimationFrame;\r\nclass VscrollContainer {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        this.lastPage = 0;\r\n        this.force = false;\r\n        this.count = 0;\r\n        this.position = 0;\r\n        this.reset$ = new EventEmitter();\r\n        this.update$ = new EventEmitter();\r\n        this.draw$ = new EventEmitter();\r\n    }\r\n    get currentPage() {\r\n        const threshold = this.settings.threshold;\r\n        const position = this.position;\r\n        return Math.ceil((position + threshold) / threshold) - 1;\r\n    }\r\n    tick(f) {\r\n        rAF(f);\r\n    }\r\n    read(f) {\r\n        f();\r\n    }\r\n    write(f) {\r\n        f();\r\n    }\r\n    apply(f, emit) {\r\n        emit(f);\r\n    }\r\n    update(count) {\r\n        if (this.count !== count) {\r\n            this.count = count;\r\n            this.update$.emit(count);\r\n        }\r\n        const { lastPage, currentPage } = this;\r\n        if (currentPage > lastPage) {\r\n            this.fetchPage(currentPage);\r\n        }\r\n    }\r\n    fetchPage(page) {\r\n        const { settings, lastPage } = this;\r\n        const { threshold } = settings;\r\n        this.lastPage = page;\r\n        const deferred = new Defer();\r\n        deferred.promise.then(count => {\r\n            this.force = true;\r\n            if (count !== this.count) {\r\n                this.update(count);\r\n            }\r\n        });\r\n        if (page === 0) {\r\n            settings.fetch(0, threshold, deferred);\r\n        }\r\n        else {\r\n            const skip = (lastPage + 1) * threshold;\r\n            if (this.count < skip) {\r\n                deferred.resolve(this.count);\r\n            }\r\n            else {\r\n                const take = (page - lastPage) * threshold;\r\n                settings.fetch(skip, take, deferred);\r\n            }\r\n        }\r\n    }\r\n    reset() {\r\n        this.force = false;\r\n        this.position = 0;\r\n        this.count = 0;\r\n        this.lastPage = 0;\r\n        this.reset$.emit({\r\n            handled: false,\r\n            source: 'container',\r\n        });\r\n    }\r\n}\r\nfunction sizeFactory(size, container, element, index) {\r\n    if (isFunction(size)) {\r\n        return () => size(element, container.position + index);\r\n    }\r\n    if (isNumber(size)) {\r\n        return () => size;\r\n    }\r\n    throw new GridError('vscroll.utility', `Invalid size ${size}`);\r\n}\n\nclass VscrollSettings {\r\n    constructor(getCount) {\r\n        this.getCount = getCount;\r\n        this.threshold = 64;\r\n        this.placeholderHeight = 0;\r\n        this.placeholderWidth = 0;\r\n        this.resetTriggers = ['resize'];\r\n    }\r\n    fetch(skip, take, d) {\r\n        d.resolve(this.getCount());\r\n    }\r\n    rowHeight(element) {\r\n        let height = element.offsetHeight;\r\n        const style = getComputedStyle(element);\r\n        height += Number.parseInt(style.marginTop, 10) + Number.parseInt(style.marginBottom, 10);\r\n        return height;\r\n    }\r\n    columnWidth(element) {\r\n        let width = element.offsetWidth;\r\n        const style = getComputedStyle(element);\r\n        width += Number.parseInt(style.marginLeft, 10) + Number.parseInt(style.marginRight, 10);\r\n        return width;\r\n    }\r\n}\n\nclass VscrollContext {\r\n    constructor(settings) {\r\n        this.settings = new VscrollSettings(() => this.container.count);\r\n        if (settings) {\r\n            Object.assign(this.settings, settings);\r\n        }\r\n        this.container = new VscrollContainer(this.settings);\r\n    }\r\n    id(index) {\r\n        return index;\r\n    }\r\n}\n\nclass ScrollService {\r\n    factory(settings) {\r\n        return new VscrollContext(settings);\r\n    }\r\n}\r\nScrollService.ɵfac = function ScrollService_Factory(t) { return new (t || ScrollService)(); };\r\nScrollService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ScrollService, factory: ScrollService.ɵfac });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScrollService, [{\r\n        type: Injectable\r\n    }], null, null); })();\n\nclass GridModelBuilder {\r\n    constructor() {\r\n        this.builder = new ModelBuilder();\r\n    }\r\n    register(key, ctor) {\r\n        return this.builder.register(key, ctor);\r\n    }\r\n    build() {\r\n        return this.builder.build();\r\n    }\r\n}\r\nGridModelBuilder.ɵfac = function GridModelBuilder_Factory(t) { return new (t || GridModelBuilder)(); };\r\nGridModelBuilder.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: GridModelBuilder, factory: GridModelBuilder.ɵfac });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridModelBuilder, [{\r\n        type: Injectable\r\n    }], null, null); })();\n\nclass Grid {\r\n    constructor(modelBuilder) {\r\n        this.modelBuilder = modelBuilder;\r\n    }\r\n    get noop() {\r\n        return noop;\r\n    }\r\n    get identity() {\r\n        return identity;\r\n    }\r\n    get pipe() {\r\n        return Pipe;\r\n    }\r\n    get pipeUnit() {\r\n        return PipeUnit;\r\n    }\r\n    get Command() {\r\n        return Command;\r\n    }\r\n    get Action() {\r\n        return Action;\r\n    }\r\n    get Node() {\r\n        return Node;\r\n    }\r\n    get RowDetailsStatus() {\r\n        return RowDetailsStatus;\r\n    }\r\n    get valueFactory() {\r\n        return valueService.getValueFactory;\r\n    }\r\n    get labelFactory() {\r\n        return valueService.getLabelFactory;\r\n    }\r\n    model() {\r\n        return this.modelBuilder.build();\r\n    }\r\n    service(model) {\r\n        return new GridService(model);\r\n    }\r\n}\r\nGrid.ɵfac = function Grid_Factory(t) { return new (t || Grid)(i0.ɵɵinject(GridModelBuilder)); };\r\nGrid.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: Grid, factory: Grid.ɵfac });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Grid, [{\r\n        type: Injectable\r\n    }], function () { return [{ type: GridModelBuilder }]; }, null); })();\n\nclass GridLet {\r\n    constructor(qgrid, scrollService) {\r\n        this.qgrid = qgrid;\r\n        this.scrollService = scrollService;\r\n    }\r\n    init(plugin, commandManager) {\r\n        const selectors = {\r\n            th: 'q-grid-core-th',\r\n            tr: 'q-grid-core-tr',\r\n        };\r\n        const injectLetServicesTo = viewFactory(plugin, commandManager, this.scrollService, selectors);\r\n        injectLetServicesTo(this);\r\n    }\r\n}\r\nGridLet.ɵfac = function GridLet_Factory(t) { return new (t || GridLet)(i0.ɵɵinject(Grid), i0.ɵɵinject(ScrollService)); };\r\nGridLet.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: GridLet, factory: GridLet.ɵfac });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridLet, [{\r\n        type: Injectable\r\n    }], function () { return [{ type: Grid }, { type: ScrollService }]; }, null); })();\n\nclass GridRoot {\r\n}\r\nGridRoot.ɵfac = function GridRoot_Factory(t) { return new (t || GridRoot)(); };\r\nGridRoot.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: GridRoot, factory: GridRoot.ɵfac });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridRoot, [{\r\n        type: Injectable\r\n    }], null, null); })();\n\nclass Disposable {\r\n    constructor() {\r\n        this.disposable = new Disposable$1();\r\n    }\r\n    add(resource) {\r\n        this.disposable.add(resource);\r\n    }\r\n    remove(resource) {\r\n        return this.disposable.remove(resource);\r\n    }\r\n    finalize() {\r\n        this.disposable.finalize();\r\n    }\r\n    ngOnDestroy() {\r\n        this.finalize();\r\n    }\r\n}\r\nDisposable.ɵfac = function Disposable_Factory(t) { return new (t || Disposable)(); };\r\nDisposable.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: Disposable, factory: Disposable.ɵfac });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Disposable, [{\r\n        type: Injectable\r\n    }], null, null); })();\n\nclass GridPlugin {\r\n    constructor($view, $root, qgrid) {\r\n        this.$view = $view;\r\n        this.$root = $root;\r\n        this.qgrid = qgrid;\r\n        this.serviceLazy = new Lazy(() => this.qgrid.service(this.$root.model));\r\n        this.disposable = new Disposable();\r\n        this.observe = (event) => new ObservableEvent(event, this.disposable);\r\n        this.observeReply = (event) => new ObservableReplyEvent(event, this.disposable);\r\n    }\r\n    get model() {\r\n        const { model } = this.$root;\r\n        return model;\r\n    }\r\n    get view() {\r\n        return this.$view;\r\n    }\r\n    get table() {\r\n        const { table } = this.$root;\r\n        return table;\r\n    }\r\n    get service() {\r\n        return this.serviceLazy.instance;\r\n    }\r\n    ngOnDestroy() {\r\n        this.disposable.finalize();\r\n    }\r\n}\r\nGridPlugin.ɵfac = function GridPlugin_Factory(t) { return new (t || GridPlugin)(i0.ɵɵinject(GridLet), i0.ɵɵinject(GridRoot), i0.ɵɵinject(Grid)); };\r\nGridPlugin.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: GridPlugin, factory: GridPlugin.ɵfac });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridPlugin, [{\r\n        type: Injectable\r\n    }], function () { return [{ type: GridLet }, { type: GridRoot }, { type: Grid }]; }, null); })();\n\nclass TableCoreService {\r\n}\r\nTableCoreService.ɵfac = function TableCoreService_Factory(t) { return new (t || TableCoreService)(); };\r\nTableCoreService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: TableCoreService, factory: TableCoreService.ɵfac });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TableCoreService, [{\r\n        type: Injectable\r\n    }], null, null); })();\n\nfunction capitalize(text) {\r\n    return text[0].toUpperCase() + text.slice(1);\r\n}\r\nfunction placeholderBitmap(width, height) {\r\n    const minWidth = Math.max(width, 1);\r\n    const minHeight = Math.max(height, 1);\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = Math.max(width * 2, 1);\r\n    canvas.height = Math.max(height * 2, 1);\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.04)';\r\n    ctx.fillRect(0, 0, minWidth, minHeight);\r\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.08)';\r\n    ctx.fillRect(width, height, minWidth, minHeight);\r\n    return canvas.toDataURL();\r\n}\n\nclass VscrollDirective {\r\n    constructor(elementRef, zone, renderer) {\r\n        this.elementRef = elementRef;\r\n        this.scroll = new EventEmitter();\r\n        this.reset = new EventEmitter();\r\n        zone.runOutsideAngular(() => {\r\n            elementRef\r\n                .nativeElement\r\n                .addEventListener('scroll', () => this.scroll.emit(), { passive: true });\r\n            renderer.listen(window, 'resize', () => {\r\n                const e = { handled: false, source: 'resize' };\r\n                this.reset.emit(e);\r\n            });\r\n        });\r\n    }\r\n    get element() {\r\n        return this.elementRef.nativeElement;\r\n    }\r\n    drawPlaceholder(width, height) {\r\n        const box = this.elementRef.nativeElement;\r\n        const style = box.style;\r\n        const placeholder = placeholderBitmap(width || box.clientWidth, height || box.clientHeight);\r\n        style.backgroundImage = 'url(' + placeholder + ')';\r\n        style.backgroundRepeat = 'repeat';\r\n    }\r\n    resetX() {\r\n        this.elementRef.nativeElement.scrollLeft = 0;\r\n    }\r\n    resetY() {\r\n        this.elementRef.nativeElement.scrollTop = 0;\r\n    }\r\n}\r\nVscrollDirective.ɵfac = function VscrollDirective_Factory(t) { return new (t || VscrollDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.Renderer2)); };\r\nVscrollDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: VscrollDirective, selectors: [[\"\", \"q-grid-vscroll\", \"\"]] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VscrollDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-vscroll]',\r\n            }]\r\n    }], function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.Renderer2 }]; }, null); })();\n\nfunction findIndexAt(items, value) {\r\n    const length = items.length;\r\n    let min = 0;\r\n    let max = length - 1;\r\n    while (min <= max) {\r\n        const mid = (min + max) >> 1;\r\n        const k = items[mid];\r\n        if (k === value) {\r\n            return mid;\r\n        }\r\n        else if (k < value) {\r\n            min = mid + 1;\r\n        }\r\n        else {\r\n            max = mid - 1;\r\n        }\r\n    }\r\n    return min;\r\n}\r\nfunction findPositionUsingItemSize(value, itemSize) {\r\n    const index = Math.max(0, Math.round(value / itemSize));\r\n    return {\r\n        index,\r\n        offset: itemSize * index,\r\n        lastOffset: 0,\r\n        value,\r\n        pad: 0,\r\n    };\r\n}\r\nfunction findPositionUsingOffsets(value, offsets) {\r\n    const index = findIndexAt(offsets, value);\r\n    const { length } = offsets;\r\n    if (index > 0) {\r\n        return {\r\n            index,\r\n            offset: offsets[index - 1],\r\n            lastOffset: offsets[length - 1],\r\n            value,\r\n            pad: 0,\r\n        };\r\n    }\r\n    return {\r\n        index: 0,\r\n        offset: 0,\r\n        lastOffset: 0,\r\n        value,\r\n        pad: 0,\r\n    };\r\n}\r\nfunction recycleFactory(items) {\r\n    const offsets = new Array();\r\n    return (index, count) => {\r\n        let cursor = offsets.length;\r\n        const threshold = items.length;\r\n        const diff = Math.min(count, threshold + index) - cursor;\r\n        for (let i = threshold - diff; i < threshold; i++) {\r\n            const getSize = items[i];\r\n            const size = getSize();\r\n            if (cursor === 0) {\r\n                offsets[cursor] = size;\r\n            }\r\n            else {\r\n                offsets[cursor] = offsets[cursor - 1] + size;\r\n            }\r\n            cursor++;\r\n        }\r\n        return offsets;\r\n    };\r\n}\n\nconst UNSET_ARM = Number.MAX_SAFE_INTEGER;\r\nfunction empty() {\r\n    return 0;\r\n}\r\nclass VscrollLayout {\r\n    constructor(port) {\r\n        this.port = port;\r\n        this.items = [];\r\n        this.minArm = UNSET_ARM;\r\n        this.position = findPositionUsingOffsets(0, []);\r\n        this.getOffsets = recycleFactory(this.items);\r\n    }\r\n    get container() {\r\n        return this.port.context.container;\r\n    }\r\n    get settings() {\r\n        return this.port.context.settings;\r\n    }\r\n    recycle(count, box, force) {\r\n        const { port } = this;\r\n        const itemSize = port.getItemSize();\r\n        if (itemSize) {\r\n            return this.recycleItemSize(count, box, force, itemSize);\r\n        }\r\n        return this.recycleOffsets(count, box, force);\r\n    }\r\n    invalidate(position) {\r\n        const { offset } = position;\r\n        const pad1 = Math.max(0, offset);\r\n        const pad2 = Math.max(0, position.pad - pad1);\r\n        this.port.move(pad1, pad2);\r\n        return position.index;\r\n    }\r\n    reset() {\r\n        this.minArm = UNSET_ARM;\r\n        this.getOffsets = this.port.recycleFactory(this.items);\r\n        this.position = findPositionUsingOffsets(0, []);\r\n        return this.invalidate(this.position);\r\n    }\r\n    setItem(index, item) {\r\n        const { items } = this;\r\n        items[index] = item;\r\n        while (--index >= 0) {\r\n            if (items[index]) {\r\n                break;\r\n            }\r\n            items[index] = empty;\r\n        }\r\n    }\r\n    removeItem(index) {\r\n        const { items } = this;\r\n        const last = items.length - 1;\r\n        if (index === last) {\r\n            items.pop();\r\n            while (--index >= 0) {\r\n                const item = items[index];\r\n                if (item !== empty) {\r\n                    break;\r\n                }\r\n                items.pop();\r\n            }\r\n        }\r\n        else {\r\n            items[index] = empty;\r\n        }\r\n    }\r\n    recycleOffsets(count, box, force) {\r\n        const { position, port } = this;\r\n        const { threshold } = this.settings;\r\n        const offsets = this.getOffsets(position.index, count);\r\n        const arm = this.getArmUsingOffsets(offsets, box, position.index);\r\n        this.minArm = Math.min(this.minArm, arm);\r\n        const newPosition = port.getPositionUsingOffsets(offsets, box, this.minArm);\r\n        if (force || position.index !== newPosition.index) {\r\n            const last = Math.min(offsets.length - 1, newPosition.index + threshold - 1);\r\n            const first = newPosition.index - 1;\r\n            const viewSize = (offsets[last] || 0) - (offsets[first] || 0);\r\n            const scrollSize = offsets[offsets.length - 1] || 0;\r\n            const padSize = scrollSize - viewSize;\r\n            newPosition.pad = padSize;\r\n            return this.position = newPosition;\r\n        }\r\n        return null;\r\n    }\r\n    recycleItemSize(count, box, force, itemSize) {\r\n        const { position, port } = this;\r\n        const arm = this.getArmUsingItemSize(itemSize, box);\r\n        const newPosition = port.getPositionUsingItemSize(itemSize, box, arm);\r\n        if (force || position.index !== newPosition.index) {\r\n            const { threshold } = this.settings;\r\n            const remain = Math.max(0, newPosition.index + threshold - this.container.count);\r\n            newPosition.pad = Math.max(0, itemSize * (count + remain - threshold));\r\n            return this.position = newPosition;\r\n        }\r\n        return null;\r\n    }\r\n    getArmUsingItemSize(itemSize, box) {\r\n        const { threshold } = this.settings;\r\n        const portSize = this.port.getSize(box);\r\n        const viewSize = threshold * itemSize;\r\n        return Math.max(0, (viewSize - portSize) / 2);\r\n    }\r\n    getArmUsingOffsets(offsets, box, index) {\r\n        if (offsets.length) {\r\n            const { threshold } = this.settings;\r\n            const portSize = this.port.getSize(box);\r\n            const last = Math.min(offsets.length, index + threshold) - 1;\r\n            const first = (last + 1) - threshold;\r\n            const viewSize = offsets[last] - offsets[first];\r\n            return Math.max(0, (viewSize - portSize) / 2);\r\n        }\r\n        return UNSET_ARM;\r\n    }\r\n}\n\nclass VscrollBox {\r\n    constructor() {\r\n        this.scrollWidth = 0;\r\n        this.scrollHeight = 0;\r\n        this.scrollTop = 0;\r\n        this.scrollLeft = 0;\r\n        this.portWidth = 0;\r\n        this.portHeight = 0;\r\n    }\r\n}\n\nclass VscrollLink {\r\n    constructor(port, view) {\r\n        this.port = port;\r\n        this.view = view;\r\n        this.box = new VscrollBox();\r\n        this.ticking = false;\r\n        const { layout } = port;\r\n        const { settings, container } = this;\r\n        if (settings.placeholderHeight > 0 || settings.placeholderWidth > 0) {\r\n            const width = settings.placeholderWidth || (isNumber(settings.columnWidth) && settings.columnWidth);\r\n            const height = settings.placeholderHeight || (isNumber(settings.rowHeight) && settings.rowHeight);\r\n            view.drawPlaceholder(width, height);\r\n        }\r\n        view.scroll.subscribe(() => this.update(false));\r\n        view.reset.subscribe(e => {\r\n            if (e.handled) {\r\n                return;\r\n            }\r\n            e.handled = settings.resetTriggers.indexOf(e.source) < 0;\r\n            container.reset$.emit(e);\r\n        });\r\n        container.reset$.subscribe(e => {\r\n            if (e.handled) {\r\n                return;\r\n            }\r\n            container.position = layout.reset();\r\n            port.reset();\r\n            container.fetchPage(0);\r\n        });\r\n        container.update$.subscribe(() => this.update(true));\r\n    }\r\n    get settings() {\r\n        return this.port.context.settings;\r\n    }\r\n    get container() {\r\n        return this.port.context.container;\r\n    }\r\n    tick(force) {\r\n        this.ticking = false;\r\n        const { port, container, box } = this;\r\n        const count = container.count;\r\n        const position = port.layout.recycle(count, box, force);\r\n        if (position) {\r\n            const draw = () => {\r\n                container.position = port.layout.invalidate(position);\r\n                container.draw$.emit({\r\n                    position: container.position,\r\n                });\r\n            };\r\n            const emit = f => port.emit(f);\r\n            container.apply(draw, emit);\r\n        }\r\n    }\r\n    update(force) {\r\n        const { container, port, box } = this;\r\n        const { element } = this.view;\r\n        this.container.read(() => {\r\n            const newBox = {\r\n                scrollWidth: element.scrollWidth,\r\n                scrollHeight: element.scrollHeight,\r\n                scrollTop: element.scrollTop,\r\n                scrollLeft: element.scrollLeft,\r\n                portWidth: element.clientWidth,\r\n                portHeight: element.clientHeight,\r\n            };\r\n            if (force || port.hasChanges(newBox, box)) {\r\n                this.box = newBox;\r\n                if (container.count && !this.ticking) {\r\n                    this.ticking = true;\r\n                    container.tick(() => this.tick(force));\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\n\nclass VscrollPortYDirective {\r\n    constructor(elementRef, view) {\r\n        this.elementRef = elementRef;\r\n        this.view = view;\r\n        this.link = null;\r\n        this.layout = null;\r\n        this.markup = {};\r\n    }\r\n    ngOnChanges(changes) {\r\n        const contextChange = changes['context'];\r\n        if (contextChange && this.context) {\r\n            this.layout = new VscrollLayout(this);\r\n            this.link = new VscrollLink(this, this.view);\r\n            this.context.container.reset();\r\n        }\r\n    }\r\n    reset() {\r\n        this.view.resetY();\r\n    }\r\n    emit(f) {\r\n        const { settings } = this.context;\r\n        if (settings.emit) {\r\n            settings.emit(f);\r\n        }\r\n        else {\r\n            f();\r\n        }\r\n    }\r\n    getPositionUsingItemSize(itemSize, box, arm) {\r\n        const limitTop = box.scrollTop - arm;\r\n        const limitBottom = box.scrollHeight - (box.portHeight + arm);\r\n        const value = Math.min(limitBottom, Math.max(0, limitTop));\r\n        return findPositionUsingItemSize(value, itemSize);\r\n    }\r\n    getPositionUsingOffsets(offsets, box, arm) {\r\n        const limitTop = box.scrollTop - arm;\r\n        const limitBottom = box.scrollHeight - (box.portHeight + arm);\r\n        const value = Math.min(limitBottom, Math.max(0, limitTop));\r\n        return findPositionUsingOffsets(value, offsets);\r\n    }\r\n    move(top, bottom) {\r\n        this.pad('top', top);\r\n        this.pad('bottom', bottom);\r\n    }\r\n    getItemSize() {\r\n        const rowHeight = this.context.settings.rowHeight;\r\n        return isNumber(rowHeight) ? rowHeight : 0;\r\n    }\r\n    getScrollSize(box) {\r\n        return box.scrollHeight;\r\n    }\r\n    getSize(box) {\r\n        return box.portHeight;\r\n    }\r\n    recycleFactory(items) {\r\n        const recycle = recycleFactory(items);\r\n        return (index, count) => {\r\n            const size = this.getItemSize();\r\n            if (size) {\r\n                return [];\r\n            }\r\n            return recycle(index, count);\r\n        };\r\n    }\r\n    hasChanges(newBox, oldBox) {\r\n        return !oldBox.portHeight || newBox.scrollTop !== oldBox.scrollTop;\r\n    }\r\n    pad(pos, value) {\r\n        if (Object.prototype.hasOwnProperty.call(this.markup, pos)) {\r\n            const mark = this.markup[pos];\r\n            mark.style.height = value + 'px';\r\n        }\r\n        else {\r\n            this.elementRef.nativeElement.style['padding' + capitalize(pos)] = value + 'px';\r\n        }\r\n    }\r\n}\r\nVscrollPortYDirective.ɵfac = function VscrollPortYDirective_Factory(t) { return new (t || VscrollPortYDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(VscrollDirective)); };\r\nVscrollPortYDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: VscrollPortYDirective, selectors: [[\"\", \"q-grid-vscroll-port-y\", \"\"]], inputs: { context: [\"q-grid-vscroll-port-y\", \"context\"] }, features: [i0.ɵɵNgOnChangesFeature] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VscrollPortYDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-vscroll-port-y]',\r\n            }]\r\n    }], function () { return [{ type: i0.ElementRef }, { type: VscrollDirective }]; }, { context: [{\r\n            type: Input,\r\n            args: ['q-grid-vscroll-port-y']\r\n        }] }); })();\n\nclass VscrollRowDirective {\r\n    constructor(elementRef, port) {\r\n        this.port = port;\r\n        this.row = elementRef.nativeElement;\r\n    }\r\n    get layout() {\r\n        return this.port.layout;\r\n    }\r\n    get settings() {\r\n        return this.port.context.settings;\r\n    }\r\n    get container() {\r\n        return this.port.context.container;\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes['index']) {\r\n            if (this.port.getItemSize()) {\r\n                this.ngOnChanges = null;\r\n                return;\r\n            }\r\n            const { layout, settings, container, row } = this;\r\n            const { rowHeight } = settings;\r\n            this.ngOnChanges = (e) => {\r\n                if (e['index']) {\r\n                    const change = e['index'];\r\n                    const newIndex = change.currentValue;\r\n                    const oldIndex = change.previousValue;\r\n                    layout.removeItem(oldIndex);\r\n                    const size = sizeFactory(rowHeight, container, row, newIndex);\r\n                    layout.setItem(newIndex, size);\r\n                }\r\n            };\r\n            const firstChange = changes['index'];\r\n            const firstNewIndex = firstChange.currentValue;\r\n            const firstSize = sizeFactory(rowHeight, container, row, firstNewIndex);\r\n            layout.setItem(firstNewIndex, firstSize);\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.port.layout.removeItem(this.index);\r\n    }\r\n}\r\nVscrollRowDirective.ɵfac = function VscrollRowDirective_Factory(t) { return new (t || VscrollRowDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(VscrollPortYDirective)); };\r\nVscrollRowDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: VscrollRowDirective, selectors: [[\"\", \"q-grid-vscroll-row\", \"\"]], inputs: { index: [\"q-grid-vscroll-row\", \"index\"] }, features: [i0.ɵɵNgOnChangesFeature] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VscrollRowDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-vscroll-row]',\r\n            }]\r\n    }], function () { return [{ type: i0.ElementRef }, { type: VscrollPortYDirective }]; }, { index: [{\r\n            type: Input,\r\n            args: ['q-grid-vscroll-row']\r\n        }] }); })();\n\nclass VscrollPortXDirective {\r\n    constructor(elementRef, view) {\r\n        this.elementRef = elementRef;\r\n        this.view = view;\r\n        this.link = null;\r\n        this.markup = {};\r\n        this.layout = null;\r\n    }\r\n    ngOnChanges(changes) {\r\n        const contextChange = changes['context'];\r\n        if (contextChange && this.context) {\r\n            this.layout = new VscrollLayout(this);\r\n            this.link = new VscrollLink(this, this.view);\r\n            this.context.container.reset();\r\n        }\r\n    }\r\n    reset() {\r\n        this.view.resetX();\r\n    }\r\n    emit(f) {\r\n        const { settings } = this.context;\r\n        if (settings.emit) {\r\n            settings.emit(f);\r\n        }\r\n        else {\r\n            f();\r\n        }\r\n    }\r\n    getPositionUsingItemSize(itemSize, box, arm) {\r\n        const limitTop = box.scrollLeft - arm;\r\n        const limitBottom = box.scrollWidth - (box.portWidth + arm);\r\n        const value = Math.min(limitBottom, Math.max(0, limitTop));\r\n        return findPositionUsingItemSize(value, itemSize);\r\n    }\r\n    getPositionUsingOffsets(offsets, box, arm) {\r\n        const limitTop = box.scrollLeft - arm;\r\n        const limitBottom = box.scrollHeight - (box.portWidth + arm);\r\n        const value = Math.min(limitBottom, Math.max(0, limitTop));\r\n        return findPositionUsingOffsets(value, offsets);\r\n    }\r\n    move(left, right) {\r\n        this.pad('left', left);\r\n        this.pad('right', right);\r\n    }\r\n    getItemSize() {\r\n        const columnWidth = this.context.settings.columnWidth;\r\n        return isNumber(columnWidth) ? columnWidth : 0;\r\n    }\r\n    getScrollSize(box) {\r\n        return box.scrollWidth;\r\n    }\r\n    getSize(box) {\r\n        return box.portWidth;\r\n    }\r\n    recycleFactory(items) {\r\n        const recycle = recycleFactory(items);\r\n        return (index, count) => {\r\n            const size = this.getItemSize();\r\n            if (size) {\r\n                return [];\r\n            }\r\n            return recycle(index, count);\r\n        };\r\n    }\r\n    hasChanges(newBox, oldBox) {\r\n        return !oldBox.portWidth || newBox.scrollWidth !== oldBox.scrollWidth;\r\n    }\r\n    pad(pos, value) {\r\n        if (Object.prototype.hasOwnProperty.call(this.markup, pos)) {\r\n            const mark = this.markup[pos];\r\n            mark.style.width = value + 'px';\r\n        }\r\n        else {\r\n            this.elementRef.nativeElement.style['padding' + capitalize(pos)] = value + 'px';\r\n        }\r\n    }\r\n}\r\nVscrollPortXDirective.ɵfac = function VscrollPortXDirective_Factory(t) { return new (t || VscrollPortXDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(VscrollDirective)); };\r\nVscrollPortXDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: VscrollPortXDirective, selectors: [[\"\", \"q-grid-vscroll-port-x\", \"\"]], inputs: { context: [\"q-grid-vscroll-port-x\", \"context\"] }, features: [i0.ɵɵNgOnChangesFeature] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VscrollPortXDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-vscroll-port-x]',\r\n            }]\r\n    }], function () { return [{ type: i0.ElementRef }, { type: VscrollDirective }]; }, { context: [{\r\n            type: Input,\r\n            args: ['q-grid-vscroll-port-x']\r\n        }] }); })();\n\nclass VscrollMarkDirective {\r\n    constructor(elementRef, portX, portY) {\r\n        this.elementRef = elementRef;\r\n        this.ports = [];\r\n        if (portX) {\r\n            this.ports.push(portX);\r\n        }\r\n        if (portY) {\r\n            this.ports.push(portY);\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        const element = this.elementRef.nativeElement;\r\n        const key = this.key;\r\n        this.ports.forEach(port => port.markup[key] = element);\r\n    }\r\n    ngOnDestroy() {\r\n        const key = this.key;\r\n        this.ports.forEach(port => delete port.markup[key]);\r\n    }\r\n}\r\nVscrollMarkDirective.ɵfac = function VscrollMarkDirective_Factory(t) { return new (t || VscrollMarkDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(VscrollPortXDirective, 8), i0.ɵɵdirectiveInject(VscrollPortYDirective, 8)); };\r\nVscrollMarkDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: VscrollMarkDirective, selectors: [[\"\", \"q-grid-vscroll-mark\", \"\"]], inputs: { key: [\"q-grid-vscroll-mark\", \"key\"] } });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VscrollMarkDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-vscroll-mark]',\r\n            }]\r\n    }], function () { return [{ type: i0.ElementRef }, { type: VscrollPortXDirective, decorators: [{\r\n                type: Optional\r\n            }] }, { type: VscrollPortYDirective, decorators: [{\r\n                type: Optional\r\n            }] }]; }, { key: [{\r\n            type: Input,\r\n            args: ['q-grid-vscroll-mark']\r\n        }] }); })();\n\nclass TrCoreDirective {\r\n    constructor($view, plugin, elementRef) {\r\n        this.$view = $view;\r\n        this.plugin = plugin;\r\n        this.element = elementRef.nativeElement;\r\n    }\r\n    get index() {\r\n        return this.$view.scroll.y.container.position + this.viewIndex;\r\n    }\r\n    ngOnInit() {\r\n        this.plugin.table.box.bag[this.source].addRow(this);\r\n    }\r\n    ngOnDestroy() {\r\n        this.plugin.table.box.bag[this.source].deleteRow(this);\r\n    }\r\n}\r\nTrCoreDirective.ɵfac = function TrCoreDirective_Factory(t) { return new (t || TrCoreDirective)(i0.ɵɵdirectiveInject(GridLet), i0.ɵɵdirectiveInject(GridPlugin), i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nTrCoreDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: TrCoreDirective, selectors: [[\"\", \"q-grid-core-tr\", \"\"]], inputs: { viewIndex: [\"q-grid-core-index\", \"viewIndex\"], model: [\"q-grid-core-tr\", \"model\"], source: [\"q-grid-core-source\", \"source\"] } });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TrCoreDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-core-tr]',\r\n            }]\r\n    }], function () { return [{ type: GridLet }, { type: GridPlugin }, { type: i0.ElementRef }]; }, { viewIndex: [{\r\n            type: Input,\r\n            args: ['q-grid-core-index']\r\n        }], model: [{\r\n            type: Input,\r\n            args: ['q-grid-core-tr']\r\n        }], source: [{\r\n            type: Input,\r\n            args: ['q-grid-core-source']\r\n        }] }); })();\n\nclass CellClassService {\r\n    constructor() {\r\n        this.bodyCache = new Map();\r\n    }\r\n    toBody(element, column) {\r\n        let classify = this.bodyCache.get(column);\r\n        if (!classify) {\r\n            classify = bodyCellClassifier(column);\r\n            this.bodyCache.set(column, classify);\r\n        }\r\n        classify(element);\r\n    }\r\n    toHead(element, column) {\r\n        const classify = headCellClassifier(column);\r\n        classify(element);\r\n    }\r\n}\r\nCellClassService.ɵfac = function CellClassService_Factory(t) { return new (t || CellClassService)(); };\r\nCellClassService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: CellClassService, factory: CellClassService.ɵfac });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellClassService, [{\r\n        type: Injectable\r\n    }], null, null); })();\n\nclass TdCoreAlignDirective {\r\n    constructor(elementRef, cellClass) {\r\n        this.elementRef = elementRef;\r\n        this.cellClass = cellClass;\r\n    }\r\n    ngOnInit() {\r\n        this.cellClass.toBody(this.elementRef.nativeElement, this.columnView.model);\r\n    }\r\n}\r\nTdCoreAlignDirective.ɵfac = function TdCoreAlignDirective_Factory(t) { return new (t || TdCoreAlignDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(CellClassService)); };\r\nTdCoreAlignDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: TdCoreAlignDirective, selectors: [[\"\", \"q-grid-core-td-align\", \"\"]], inputs: { columnView: [\"q-grid-core-td-align\", \"columnView\"] } });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TdCoreAlignDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-core-td-align]',\r\n            }]\r\n    }], function () { return [{ type: i0.ElementRef }, { type: CellClassService }]; }, { columnView: [{\r\n            type: Input,\r\n            args: ['q-grid-core-td-align']\r\n        }] }); })();\n\nclass TemplateCacheService {\r\n    constructor() {\r\n        this.cache = new Map();\r\n    }\r\n    get(key) {\r\n        return this.cache.get(key);\r\n    }\r\n    put(key, value) {\r\n        this.cache.set(key, value);\r\n    }\r\n}\r\nTemplateCacheService.ɵfac = function TemplateCacheService_Factory(t) { return new (t || TemplateCacheService)(); };\r\nTemplateCacheService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: TemplateCacheService, factory: TemplateCacheService.ɵfac });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TemplateCacheService, [{\r\n        type: Injectable\r\n    }], function () { return []; }, null); })();\n\nclass TemplateLinkService {\r\n    constructor() {\r\n        this.cache = new Map();\r\n    }\r\n    get(key) {\r\n        return this.cache.get(key);\r\n    }\r\n    put(key, value) {\r\n        this.cache.set(key, value);\r\n    }\r\n}\r\nTemplateLinkService.ɵfac = function TemplateLinkService_Factory(t) { return new (t || TemplateLinkService)(); };\r\nTemplateLinkService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: TemplateLinkService, factory: TemplateLinkService.ɵfac });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TemplateLinkService, [{\r\n        type: Injectable\r\n    }], null, null); })();\n\nclass TemplateService {\r\n    constructor(templateLink, templateCache) {\r\n        this.templateLink = templateLink;\r\n        this.templateCache = templateCache;\r\n    }\r\n    find(keys) {\r\n        if (isString(keys)) {\r\n            const key = keys;\r\n            const link = this.templateCache.get(key) || this.templateLink.get(key);\r\n            return link || null;\r\n        }\r\n        if (isArray(keys)) {\r\n            return this.lookInCache(keys) || this.lookInLink(keys);\r\n        }\r\n    }\r\n    lookInCache(keys) {\r\n        for (const key of keys) {\r\n            const link = this.templateCache.get(key);\r\n            if (link) {\r\n                return link;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    lookInLink(keys) {\r\n        for (const key of keys) {\r\n            const link = this.templateLink.get(key);\r\n            if (link) {\r\n                return link;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\r\nTemplateService.ɵfac = function TemplateService_Factory(t) { return new (t || TemplateService)(i0.ɵɵinject(TemplateLinkService), i0.ɵɵinject(TemplateCacheService)); };\r\nTemplateService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: TemplateService, factory: TemplateService.ɵfac });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TemplateService, [{\r\n        type: Injectable\r\n    }], function () { return [{ type: TemplateLinkService }, { type: TemplateCacheService }]; }, null); })();\n\nfunction canBuild(column) {\r\n    return column.type !== 'pad';\r\n}\r\nfunction buildId(source, column, mode = 'view') {\r\n    const { key, type, itemType } = column;\r\n    return `${source}-${mode}-cell-${type}-of-${itemType}-the-${key}.tpl.html`;\r\n}\r\nfunction buildKeys(source, column, mode = 'view') {\r\n    const { key, itemType } = column;\r\n    let { type } = column;\r\n    switch (mode) {\r\n        case 'view': {\r\n            const result = [\r\n                `${source}-cell-${type}-the-${key}.tpl.html`,\r\n                `${source}-cell-the-${key}.tpl.html`,\r\n                `${source}-cell-${type}.tpl.html`,\r\n                `${source}-cell.tpl.html`,\r\n                `${source}-cell-text.tpl.html`,\r\n            ];\r\n            if (itemType) {\r\n                result.splice(0, 0, ...[`${source}-cell-${type}-of-${itemType}-the-${key}.tpl.html`, `${source}-cell-${type}-of-${itemType}.tpl.html`]);\r\n            }\r\n            return result;\r\n        }\r\n        case 'change':\r\n        case 'edit': {\r\n            type = column.editor || type;\r\n            const result = [\r\n                `${mode}-cell-${type}-the-${key}.tpl.html`,\r\n                `${mode}-cell-the-${key}.tpl.html`,\r\n                `${mode}-cell-${type}.tpl.html`,\r\n                `${mode}-cell.tpl.html`,\r\n                `${mode}-cell-text.tpl.html`,\r\n            ];\r\n            if (itemType) {\r\n                result.splice(0, 0, ...[`${mode}-cell-${type}-of-${itemType}-the-${key}.tpl.html`, `${mode}-cell-${type}-of-${itemType}.tpl.html`]);\r\n            }\r\n            return result;\r\n        }\r\n        default:\r\n            throw new GridError('cell.service', `Invalid mode '${mode}'`);\r\n    }\r\n}\r\nclass CellTemplateService {\r\n    constructor(templateService) {\r\n        this.templateService = templateService;\r\n        this.commits = new Map();\r\n    }\r\n    build(source, column, mode = 'view') {\r\n        if (!canBuild(column)) {\r\n            return noop;\r\n        }\r\n        const id = buildId(source, column, mode);\r\n        let commit = this.commits.get(id);\r\n        if (commit) {\r\n            return commit;\r\n        }\r\n        const keys = buildKeys(source, column, mode);\r\n        const templateLink = this.templateService.find(keys);\r\n        if (!templateLink) {\r\n            return noop;\r\n        }\r\n        commit = (container, context) => {\r\n            container.clear();\r\n            return container.createEmbeddedView(templateLink.template, context);\r\n        };\r\n        this.commits.set(id, commit);\r\n        return commit;\r\n    }\r\n}\r\nCellTemplateService.ɵfac = function CellTemplateService_Factory(t) { return new (t || CellTemplateService)(i0.ɵɵinject(TemplateService)); };\r\nCellTemplateService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: CellTemplateService, factory: CellTemplateService.ɵfac });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellTemplateService, [{\r\n        type: Injectable\r\n    }], function () { return [{ type: TemplateService }]; }, null); })();\n\nclass TdCoreDirective {\r\n    constructor($view, root, viewContainerRef, cellTemplate, cellClass, tr, cd, elementRef) {\r\n        this.$view = $view;\r\n        this.root = root;\r\n        this.viewContainerRef = viewContainerRef;\r\n        this.cellTemplate = cellTemplate;\r\n        this.cellClass = cellClass;\r\n        this.tr = tr;\r\n        this.cd = cd;\r\n        this.$implicit = this;\r\n        this.element = elementRef.nativeElement.parentNode;\r\n    }\r\n    get value() {\r\n        return this.actualValue;\r\n    }\r\n    set value(value) {\r\n        const { column, row, rowIndex, columnIndex } = this;\r\n        this.$view.body.render.setValue(row, column, value, rowIndex, columnIndex);\r\n    }\r\n    get label() {\r\n        return this.actualLabel;\r\n    }\r\n    set label(label) {\r\n        const { column, row, rowIndex, columnIndex } = this;\r\n        this.$view.body.render.setLabel(row, column, label, rowIndex, columnIndex);\r\n    }\r\n    get column() {\r\n        return this.columnView.model;\r\n    }\r\n    get columnIndex() {\r\n        return this.columnView.columnIndex;\r\n    }\r\n    get row() {\r\n        return this.tr.model;\r\n    }\r\n    get rowIndex() {\r\n        return this.tr.index;\r\n    }\r\n    get dataRowIndex() {\r\n        const { model } = this.root;\r\n        const { rows } = model.data();\r\n        return rows.indexOf(this.row);\r\n    }\r\n    ngOnInit() {\r\n        const { table } = this.root;\r\n        table.box.bag.body.addCell(this);\r\n        this.cellClass.toBody(this.element, this.column);\r\n        const link = this.cellTemplate.build('body', this.column, 'view');\r\n        link(this.viewContainerRef, this);\r\n    }\r\n    ngOnChanges(changes) {\r\n        const { actualLabel } = changes;\r\n        if (actualLabel && !actualLabel.firstChange && actualLabel.currentValue !== actualLabel.previousValue) {\r\n            this.changes = actualLabel;\r\n            this.mode('change');\r\n        }\r\n    }\r\n    mode(value) {\r\n        const link = this.cellTemplate.build('body', this.column, value);\r\n        switch (value) {\r\n            case 'view': {\r\n                this.element.classList.remove(`${GRID_PREFIX}-change`);\r\n                this.element.classList.remove(`${GRID_PREFIX}-edit`);\r\n                if (link !== noop) {\r\n                    link(this.viewContainerRef, this);\r\n                    this.cd.markForCheck();\r\n                    this.cd.detectChanges();\r\n                }\r\n                break;\r\n            }\r\n            case 'edit': {\r\n                if (link === noop) {\r\n                    throw new GridError('td-core.directive', `Can't find template link for edit of ${this.column.key}`);\r\n                }\r\n                this.element.classList.add(`${GRID_PREFIX}-${value}`);\r\n                link(this.viewContainerRef, this);\r\n                this.cd.markForCheck();\r\n                this.cd.detectChanges();\r\n                break;\r\n            }\r\n            case 'change': {\r\n                if (link !== noop) {\r\n                    this.element.classList.add(`${GRID_PREFIX}-${value}`);\r\n                    link(this.viewContainerRef, this);\r\n                    this.cd.markForCheck();\r\n                    this.cd.detectChanges();\r\n                }\r\n                break;\r\n            }\r\n            default: {\r\n                throw new GridError('td-core.directive', `Invalid mode ${value}`);\r\n            }\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        const { table } = this.root;\r\n        table.box.bag.body.deleteCell(this);\r\n    }\r\n}\r\nTdCoreDirective.ɵfac = function TdCoreDirective_Factory(t) { return new (t || TdCoreDirective)(i0.ɵɵdirectiveInject(GridLet), i0.ɵɵdirectiveInject(GridRoot), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(CellTemplateService), i0.ɵɵdirectiveInject(CellClassService), i0.ɵɵdirectiveInject(TrCoreDirective), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nTdCoreDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: TdCoreDirective, selectors: [[\"\", \"q-grid-core-td\", \"\"]], inputs: { actualValue: [\"q-grid-core-value\", \"actualValue\"], actualLabel: [\"q-grid-core-label\", \"actualLabel\"], columnView: [\"q-grid-core-td\", \"columnView\"] }, features: [i0.ɵɵNgOnChangesFeature] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TdCoreDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-core-td]',\r\n            }]\r\n    }], function () { return [{ type: GridLet }, { type: GridRoot }, { type: i0.ViewContainerRef }, { type: CellTemplateService }, { type: CellClassService }, { type: TrCoreDirective }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }]; }, { actualValue: [{\r\n            type: Input,\r\n            args: ['q-grid-core-value']\r\n        }], actualLabel: [{\r\n            type: Input,\r\n            args: ['q-grid-core-label']\r\n        }], columnView: [{\r\n            type: Input,\r\n            args: ['q-grid-core-td']\r\n        }] }); })();\n\nclass VscrollPipe {\r\n    constructor(cd) {\r\n        this.cd = cd;\r\n        this.disposable = new Disposable$1();\r\n    }\r\n    transform(data, context) {\r\n        this.disposable.finalize();\r\n        if (!context) {\r\n            Log.warn('VscrollPipe', 'Context is not defined');\r\n            return new SubjectLike();\r\n        }\r\n        data = data || [];\r\n        const { container, settings } = context;\r\n        const items$ = new SubjectLike();\r\n        container.update(data.length);\r\n        let cursor = container.position;\r\n        this.disposable.add(container.draw$.subscribe(({ position }) => {\r\n            const { length } = data;\r\n            const { threshold } = settings;\r\n            container.update(length);\r\n            // We need to have a less number of virtual items on\r\n            // the bottom, as deferred loading is happen there should\r\n            // be a threshold place to draw several items below so we use cursor for the last\r\n            const first = position;\r\n            if (container.force || first !== cursor) {\r\n                const last = Math.min(first + threshold, length);\r\n                const wnd = new Array(last - first);\r\n                cursor = first;\r\n                container.force = false;\r\n                for (let i = first, j = 0; i < last; i++, j++) {\r\n                    wnd[j] = data[i];\r\n                }\r\n                // TODO: remove that workaround\r\n                // async pipe doesn't trigger change detection,\r\n                // so we put subscription here to invoke detect changes\r\n                // after async pipe marks for check\r\n                const sub = items$.subscribe(() => {\r\n                    this.cd.detectChanges();\r\n                });\r\n                try {\r\n                    items$.next(wnd);\r\n                }\r\n                finally {\r\n                    sub.unsubscribe();\r\n                }\r\n            }\r\n        }));\r\n        return items$;\r\n    }\r\n    ngOnDestroy() {\r\n        this.disposable.finalize();\r\n    }\r\n}\r\nVscrollPipe.ɵfac = function VscrollPipe_Factory(t) { return new (t || VscrollPipe)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef, 16)); };\r\nVscrollPipe.ɵpipe = /*@__PURE__*/ i0.ɵɵdefinePipe({ name: \"qGridVscroll$\", type: VscrollPipe, pure: true });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VscrollPipe, [{\r\n        type: Pipe$1,\r\n        args: [{\r\n                name: 'qGridVscroll$',\r\n                pure: true,\r\n            }]\r\n    }], function () { return [{ type: i0.ChangeDetectorRef }]; }, null); })();\n\nconst _c0$a = [\"q-grid-core-body\", \"\"];\r\nfunction BodyCoreComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementContainer(0);\r\n} }\r\nfunction BodyCoreComponent_ng_template_1_td_2_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelement(0, \"td\", 8);\r\n} if (rf & 2) {\r\n    const $column_r7 = ctx.$implicit;\r\n    i0.ɵɵproperty(\"q-grid-core-td-align\", $column_r7);\r\n} }\r\nfunction BodyCoreComponent_ng_template_1_tr_3_td_1_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"td\");\r\n    i0.ɵɵelementContainer(1, 11);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const $column_r11 = ctx.$implicit;\r\n    const $columnIndex_r12 = ctx.index;\r\n    const ctx_r13 = i0.ɵɵnextContext();\r\n    const $row_r8 = ctx_r13.$implicit;\r\n    const $vscrollIndex_r9 = ctx_r13.index;\r\n    const ctx_r10 = i0.ɵɵnextContext(2);\r\n    i0.ɵɵattribute(\"rowspan\", ctx_r10.$view.body.render.rowspan($row_r8, $column_r11, ctx_r10.mapToDataIndex($vscrollIndex_r9), $columnIndex_r12))(\"colspan\", ctx_r10.$view.body.render.colspan($row_r8, $column_r11, ctx_r10.mapToDataIndex($vscrollIndex_r9), $columnIndex_r12));\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"q-grid-core-td\", $column_r11)(\"q-grid-core-label\", ctx_r10.$view.body.render.getLabel($row_r8, $column_r11.model, ctx_r10.mapToDataIndex($vscrollIndex_r9), $columnIndex_r12))(\"q-grid-core-value\", ctx_r10.$view.body.render.getValue($row_r8, $column_r11.model, ctx_r10.mapToDataIndex($vscrollIndex_r9), $columnIndex_r12));\r\n} }\r\nfunction BodyCoreComponent_ng_template_1_tr_3_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"tr\", 9);\r\n    i0.ɵɵtemplate(1, BodyCoreComponent_ng_template_1_tr_3_td_1_Template, 2, 5, \"td\", 10);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const $row_r8 = ctx.$implicit;\r\n    const $vscrollIndex_r9 = ctx.index;\r\n    const ctx_r6 = i0.ɵɵnextContext(2);\r\n    i0.ɵɵproperty(\"q-grid-core-tr\", $row_r8)(\"q-grid-core-index\", $vscrollIndex_r9)(\"q-grid-vscroll-row\", $vscrollIndex_r9);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.$view.body.render.columns($row_r8, ctx_r6.$table.pin, ctx_r6.mapToDataIndex($vscrollIndex_r9)))(\"ngForTrackBy\", ctx_r6.columnId);\r\n} }\r\nfunction BodyCoreComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelement(0, \"tr\", 3);\r\n    i0.ɵɵelementStart(1, \"tr\", 4);\r\n    i0.ɵɵtemplate(2, BodyCoreComponent_ng_template_1_td_2_Template, 1, 1, \"td\", 5);\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵtemplate(3, BodyCoreComponent_ng_template_1_tr_3_Template, 2, 5, \"tr\", 6);\r\n    i0.ɵɵpipe(4, \"async\");\r\n    i0.ɵɵpipe(5, \"qGridVscroll$\");\r\n    i0.ɵɵelement(6, \"tr\", 7);\r\n} if (rf & 2) {\r\n    const ctx_r2 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(2);\r\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.$view.body.columns(ctx_r2.$table.pin))(\"ngForTrackBy\", ctx_r2.columnId);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(4, 4, i0.ɵɵpipeBind2(5, 6, ctx_r2.$view.body.render.rows[ctx_r2.pin], ctx_r2.$view.scroll.y)))(\"ngForTrackBy\", ctx_r2.$view.scroll.y.id);\r\n} }\r\nfunction BodyCoreComponent_ng_template_3_td_1_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelement(0, \"td\", 8);\r\n} if (rf & 2) {\r\n    const $column_r16 = ctx.$implicit;\r\n    i0.ɵɵproperty(\"q-grid-core-td-align\", $column_r16);\r\n} }\r\nfunction BodyCoreComponent_ng_template_3_tr_2_td_1_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"td\");\r\n    i0.ɵɵelementContainer(1, 11);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const $column_r20 = ctx.$implicit;\r\n    const $columnIndex_r21 = ctx.index;\r\n    const ctx_r22 = i0.ɵɵnextContext();\r\n    const $row_r17 = ctx_r22.$implicit;\r\n    const $rowIndex_r18 = ctx_r22.index;\r\n    const ctx_r19 = i0.ɵɵnextContext(2);\r\n    i0.ɵɵattribute(\"rowspan\", ctx_r19.$view.body.render.rowspan($row_r17, $column_r20, $rowIndex_r18, $columnIndex_r21))(\"colspan\", ctx_r19.$view.body.render.colspan($row_r17, $column_r20, $rowIndex_r18, $columnIndex_r21));\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"q-grid-core-td\", $column_r20)(\"q-grid-core-label\", ctx_r19.$view.body.render.getLabel($row_r17, $column_r20.model, $rowIndex_r18, $columnIndex_r21))(\"q-grid-core-value\", ctx_r19.$view.body.render.getValue($row_r17, $column_r20.model, $rowIndex_r18, $columnIndex_r21));\r\n} }\r\nfunction BodyCoreComponent_ng_template_3_tr_2_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"tr\", 13);\r\n    i0.ɵɵtemplate(1, BodyCoreComponent_ng_template_3_tr_2_td_1_Template, 2, 5, \"td\", 10);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const $row_r17 = ctx.$implicit;\r\n    const $rowIndex_r18 = ctx.index;\r\n    const ctx_r15 = i0.ɵɵnextContext(2);\r\n    i0.ɵɵproperty(\"q-grid-core-tr\", $row_r17)(\"q-grid-core-index\", $rowIndex_r18);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngForOf\", ctx_r15.$view.body.render.columns($row_r17, ctx_r15.$table.pin, $rowIndex_r18))(\"ngForTrackBy\", ctx_r15.columnId);\r\n} }\r\nfunction BodyCoreComponent_ng_template_3_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"tr\", 4);\r\n    i0.ɵɵtemplate(1, BodyCoreComponent_ng_template_3_td_1_Template, 1, 1, \"td\", 5);\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵtemplate(2, BodyCoreComponent_ng_template_3_tr_2_Template, 2, 4, \"tr\", 12);\r\n} if (rf & 2) {\r\n    const ctx_r4 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.$view.body.columns(ctx_r4.$table.pin))(\"ngForTrackBy\", ctx_r4.columnId);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.$view.body.render.rows[ctx_r4.pin])(\"ngForTrackBy\", ctx_r4.rowId);\r\n} }\r\nclass BodyCoreComponent {\r\n    constructor($view, $table, elementRef, zone, cd, plugin) {\r\n        this.$view = $view;\r\n        this.$table = $table;\r\n        this.elementRef = elementRef;\r\n        this.zone = zone;\r\n        this.cd = cd;\r\n        this.plugin = plugin;\r\n        this.pin = 'body';\r\n    }\r\n    // @deprecated\r\n    get selection() {\r\n        return this.model.selection();\r\n    }\r\n    get model() {\r\n        return this.plugin.model;\r\n    }\r\n    ngOnInit() {\r\n        const { model, disposable, observeReply, observe } = this.plugin;\r\n        const nativeElement = this.elementRef.nativeElement;\r\n        const host = new BodyHost(this.plugin);\r\n        const listener = new EventListener(this.elementRef.nativeElement, new EventManager(this));\r\n        this.zone.runOutsideAngular(() => {\r\n            const scrollSettings = { passive: true };\r\n            disposable.add(listener.on('scroll', () => host.scroll({\r\n                scrollLeft: this.$table.pin === 'mid' ? nativeElement.scrollLeft : model.scroll().left,\r\n                scrollTop: nativeElement.scrollTop,\r\n            }), scrollSettings));\r\n            disposable.add(listener.on('wheel', e => host.wheel(e)));\r\n            disposable.add(listener.on('mouseleave', e => host.mouseLeave(e)));\r\n        });\r\n        observeReply(model.sceneChanged)\r\n            .subscribe(e => {\r\n            if (model.grid().interactionMode === 'detached') {\r\n                if (e.hasChanges('status')) {\r\n                    switch (e.state.status) {\r\n                        case 'stop':\r\n                            this.cd.detach();\r\n                            break;\r\n                        case 'start':\r\n                            this.cd.reattach();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        observe(model.sceneChanged)\r\n            .subscribe(e => {\r\n            if (e.hasChanges('status') && e.state.status === 'push') {\r\n                this.cd.markForCheck();\r\n            }\r\n        });\r\n    }\r\n    columnId(index, item) {\r\n        return item.model.key;\r\n    }\r\n    rowId(index) {\r\n        return index;\r\n    }\r\n    mapToDataIndex(viewIndex) {\r\n        return this.$view.scroll.y.container.position + viewIndex;\r\n    }\r\n}\r\nBodyCoreComponent.ɵfac = function BodyCoreComponent_Factory(t) { return new (t || BodyCoreComponent)(i0.ɵɵdirectiveInject(GridLet), i0.ɵɵdirectiveInject(TableCoreService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(GridPlugin)); };\r\nBodyCoreComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: BodyCoreComponent, selectors: [[\"tbody\", \"q-grid-core-body\", \"\"]], inputs: { pin: \"pin\" }, features: [i0.ɵɵProvidersFeature([GridPlugin])], attrs: _c0$a, decls: 5, vars: 1, consts: [[4, \"ngTemplateOutlet\"], [\"virtualRows\", \"\"], [\"rows\", \"\"], [\"q-grid-vscroll-mark\", \"top\", 1, \"q-grid-scroll-mark\"], [1, \"q-grid-align\"], [3, \"q-grid-core-td-align\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"q-grid-core-source\", \"body\", 3, \"q-grid-core-tr\", \"q-grid-core-index\", \"q-grid-vscroll-row\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"q-grid-vscroll-mark\", \"bottom\", 1, \"q-grid-scroll-mark\"], [3, \"q-grid-core-td-align\"], [\"q-grid-core-source\", \"body\", 3, \"q-grid-core-tr\", \"q-grid-core-index\", \"q-grid-vscroll-row\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"q-grid-core-td\", \"q-grid-core-label\", \"q-grid-core-value\"], [\"q-grid-core-source\", \"body\", 3, \"q-grid-core-tr\", \"q-grid-core-index\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"q-grid-core-source\", \"body\", 3, \"q-grid-core-tr\", \"q-grid-core-index\"]], template: function BodyCoreComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵtemplate(0, BodyCoreComponent_ng_container_0_Template, 1, 0, \"ng-container\", 0);\r\n        i0.ɵɵtemplate(1, BodyCoreComponent_ng_template_1_Template, 7, 9, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\r\n        i0.ɵɵtemplate(3, BodyCoreComponent_ng_template_3_Template, 3, 4, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\r\n    } if (rf & 2) {\r\n        const _r1 = i0.ɵɵreference(2);\r\n        const _r3 = i0.ɵɵreference(4);\r\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.$view.scroll.mode === \"virtual\" && ctx.pin === \"body\" ? _r1 : _r3);\r\n    } }, dependencies: [i4.NgForOf, i4.NgTemplateOutlet, VscrollRowDirective, VscrollMarkDirective, TrCoreDirective, TdCoreAlignDirective, TdCoreDirective, i4.AsyncPipe, VscrollPipe], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BodyCoreComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'tbody[q-grid-core-body]', providers: [GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container *ngTemplateOutlet=\\\"$view.scroll.mode === 'virtual' && pin === 'body' ? virtualRows : rows\\\">\\n</ng-container>\\n\\n<ng-template #virtualRows>\\n\\t<tr q-grid-vscroll-mark=\\\"top\\\"\\n\\t\\tclass=\\\"q-grid-scroll-mark\\\">\\n\\t</tr>\\n\\t<tr class=\\\"q-grid-align\\\">\\n\\t\\t<td *ngFor=\\\"let $column of $view.body.columns($table.pin); trackBy: columnId\\\"\\n\\t\\t\\t[q-grid-core-td-align]=\\\"$column\\\">\\n\\t\\t</td>\\n\\t</tr>\\n\\t<tr *ngFor=\\\"\\n\\t\\tlet $row of $view.body.render.rows[pin] | qGridVscroll$: $view.scroll.y | async;\\n\\t\\tindex as $vscrollIndex;\\n\\t\\ttrackBy: $view.scroll.y.id\\\"\\n\\t\\t\\t[q-grid-core-tr]=\\\"$row\\\"\\n\\t\\t\\t[q-grid-core-index]=\\\"$vscrollIndex\\\"\\n\\t\\t\\t[q-grid-vscroll-row]=\\\"$vscrollIndex\\\"\\n\\t\\t\\tq-grid-core-source=\\\"body\\\">\\n\\t\\t<td *ngFor=\\\"\\n\\t\\t\\tlet $column of $view.body.render.columns($row, $table.pin, mapToDataIndex($vscrollIndex));\\n\\t\\t\\tindex as $columnIndex;\\n\\t\\t\\ttrackBy: columnId\\\"\\n\\t\\t\\t\\t[attr.rowspan]=\\\"$view.body.render.rowspan($row, $column, mapToDataIndex($vscrollIndex), $columnIndex)\\\"\\n\\t\\t\\t\\t[attr.colspan]=\\\"$view.body.render.colspan($row, $column, mapToDataIndex($vscrollIndex), $columnIndex)\\\">\\n\\t\\t\\t\\t<ng-container [q-grid-core-td]=\\\"$column\\\"\\n\\t\\t\\t\\t\\t[q-grid-core-label]=\\\"$view.body.render.getLabel($row, $column.model, mapToDataIndex($vscrollIndex), $columnIndex)\\\"\\n\\t\\t\\t\\t\\t[q-grid-core-value]=\\\"$view.body.render.getValue($row, $column.model, mapToDataIndex($vscrollIndex), $columnIndex)\\\">\\n\\t\\t\\t\\t</ng-container>\\n\\t\\t</td>\\n\\t</tr>\\n\\t<tr q-grid-vscroll-mark=\\\"bottom\\\"\\n\\t\\tclass=\\\"q-grid-scroll-mark\\\">\\n\\t</tr>\\n</ng-template>\\n\\n<ng-template #rows>\\n\\t<tr class=\\\"q-grid-align\\\">\\n\\t\\t<td *ngFor=\\\"let $column of $view.body.columns($table.pin); trackBy: columnId\\\"\\n\\t\\t\\t[q-grid-core-td-align]=\\\"$column\\\">\\n\\t\\t</td>\\n\\t</tr>\\n\\t<tr *ngFor=\\\"let $row of $view.body.render.rows[pin]; index as $rowIndex; trackBy: rowId\\\"\\n\\t\\t[q-grid-core-tr]=\\\"$row\\\"\\n\\t\\t[q-grid-core-index]=\\\"$rowIndex\\\"\\n\\t\\tq-grid-core-source=\\\"body\\\">\\n\\t\\t<td *ngFor=\\\"let $column of $view.body.render.columns($row, $table.pin, $rowIndex); index as $columnIndex; trackBy: columnId\\\"\\n\\t\\t\\t[attr.rowspan]=\\\"$view.body.render.rowspan($row, $column, $rowIndex, $columnIndex)\\\"\\n\\t\\t\\t[attr.colspan]=\\\"$view.body.render.colspan($row, $column, $rowIndex, $columnIndex)\\\">\\n\\t\\t\\t<ng-container [q-grid-core-td]=\\\"$column\\\"\\n\\t\\t\\t\\t[q-grid-core-label]=\\\"$view.body.render.getLabel($row, $column.model, $rowIndex, $columnIndex)\\\"\\n\\t\\t\\t\\t[q-grid-core-value]=\\\"$view.body.render.getValue($row, $column.model, $rowIndex, $columnIndex)\\\">\\n\\t\\t\\t</ng-container>\\n\\t\\t</td>\\n\\t</tr>\\n</ng-template>\\n\" }]\r\n    }], function () { return [{ type: GridLet }, { type: TableCoreService }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: GridPlugin }]; }, { pin: [{\r\n            type: Input\r\n        }] }); })();\n\nclass VscrollService {\r\n    context(settings = {}) {\r\n        const context = new VscrollContext();\r\n        Object.assign(context.settings, settings);\r\n        return context;\r\n    }\r\n}\r\nVscrollService.ɵfac = function VscrollService_Factory(t) { return new (t || VscrollService)(); };\r\nVscrollService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: VscrollService, factory: VscrollService.ɵfac });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VscrollService, [{\r\n        type: Injectable\r\n    }], null, null); })();\n\nclass VscrollColumnDirective {\r\n    constructor(elementRef, port) {\r\n        this.port = port;\r\n        this.column = elementRef.nativeElement;\r\n    }\r\n    get layout() {\r\n        return this.port.layout;\r\n    }\r\n    get settings() {\r\n        return this.port.context.settings;\r\n    }\r\n    get container() {\r\n        return this.port.context.container;\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes['index']) {\r\n            if (this.port.getItemSize()) {\r\n                this.ngOnChanges = null;\r\n                return;\r\n            }\r\n            const { layout, settings, container, column } = this;\r\n            const { rowHeight } = settings;\r\n            this.ngOnChanges = (e) => {\r\n                if (e['index']) {\r\n                    const change = e['index'];\r\n                    const newIndex = change.currentValue;\r\n                    const oldIndex = change.previousValue;\r\n                    layout.removeItem(oldIndex);\r\n                    const size = sizeFactory(rowHeight, container, column, newIndex);\r\n                    layout.setItem(newIndex, size);\r\n                }\r\n            };\r\n            const firstChange = changes['index'];\r\n            const firstIndex = firstChange.currentValue;\r\n            const firstSize = sizeFactory(rowHeight, container, column, firstIndex);\r\n            layout.setItem(firstIndex, firstSize);\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.port.layout.removeItem(this.index);\r\n    }\r\n}\r\nVscrollColumnDirective.ɵfac = function VscrollColumnDirective_Factory(t) { return new (t || VscrollColumnDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(VscrollPortYDirective)); };\r\nVscrollColumnDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: VscrollColumnDirective, selectors: [[\"\", \"q-grid-vscroll-column\", \"\"]], inputs: { index: [\"q-grid-vscroll-column\", \"index\"] }, features: [i0.ɵɵNgOnChangesFeature] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VscrollColumnDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-vscroll-column]',\r\n            }]\r\n    }], function () { return [{ type: i0.ElementRef }, { type: VscrollPortYDirective }]; }, { index: [{\r\n            type: Input,\r\n            args: ['q-grid-vscroll-column']\r\n        }] }); })();\n\nclass VscrollModule {\r\n}\r\nVscrollModule.ɵfac = function VscrollModule_Factory(t) { return new (t || VscrollModule)(); };\r\nVscrollModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: VscrollModule });\r\nVscrollModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ providers: [\r\n        VscrollService,\r\n    ] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VscrollModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    VscrollDirective,\r\n                    VscrollColumnDirective,\r\n                    VscrollRowDirective,\r\n                    VscrollMarkDirective,\r\n                    VscrollPortXDirective,\r\n                    VscrollPortYDirective,\r\n                    VscrollPipe,\r\n                ],\r\n                exports: [\r\n                    VscrollDirective,\r\n                    VscrollColumnDirective,\r\n                    VscrollRowDirective,\r\n                    VscrollMarkDirective,\r\n                    VscrollPortXDirective,\r\n                    VscrollPortYDirective,\r\n                    VscrollPipe,\r\n                ],\r\n                providers: [\r\n                    VscrollService,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(VscrollModule, { declarations: [VscrollDirective,\r\n        VscrollColumnDirective,\r\n        VscrollRowDirective,\r\n        VscrollMarkDirective,\r\n        VscrollPortXDirective,\r\n        VscrollPortYDirective,\r\n        VscrollPipe], exports: [VscrollDirective,\r\n        VscrollColumnDirective,\r\n        VscrollRowDirective,\r\n        VscrollMarkDirective,\r\n        VscrollPortXDirective,\r\n        VscrollPortYDirective,\r\n        VscrollPipe] }); })();\n\nclass StateAccessor {\r\n    constructor() {\r\n        this.setters = [];\r\n    }\r\n    setter(type) {\r\n        return value => {\r\n            this.setters.push(model => {\r\n                const accessor = model.resolve(type);\r\n                accessor.state(value);\r\n            });\r\n        };\r\n    }\r\n    write(model) {\r\n        for (const setter of this.setters) {\r\n            setter(model);\r\n        }\r\n        this.setters = [];\r\n    }\r\n}\r\nStateAccessor.ɵfac = function StateAccessor_Factory(t) { return new (t || StateAccessor)(); };\r\nStateAccessor.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: StateAccessor, factory: StateAccessor.ɵfac });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StateAccessor, [{\r\n        type: Injectable\r\n    }], null, null); })();\n\nclass TemplateHostService {\r\n    constructor() {\r\n        this.key = identity;\r\n    }\r\n}\r\nTemplateHostService.ɵfac = function TemplateHostService_Factory(t) { return new (t || TemplateHostService)(); };\r\nTemplateHostService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: TemplateHostService, factory: TemplateHostService.ɵfac });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TemplateHostService, [{\r\n        type: Injectable\r\n    }], null, null); })();\n\nconst _c0$9 = [\"*\"];\r\n// TODO: move it to plugins\r\nclass RowComponent {\r\n    constructor(plugin, stateAccessor, templateHost) {\r\n        this.plugin = plugin;\r\n        this.stateAccessor = stateAccessor;\r\n        this.rowAccessor = this.stateAccessor.setter(RowState);\r\n        this.toggleStatus = new Command({\r\n            execute: row => {\r\n                const { view } = this.plugin;\r\n                return view.rowDetails.toggleStatus.execute(row);\r\n            },\r\n            canExecute: row => {\r\n                if (row instanceof RowDetails) {\r\n                    return false;\r\n                }\r\n                const { view } = this.plugin;\r\n                return view.rowDetails.toggleStatus.canExecute(row);\r\n            },\r\n        });\r\n        this.behavior = [];\r\n        templateHost.key = source => `body-cell-row-${source}.tpl.html`;\r\n    }\r\n    set mode(mode) { this.rowAccessor({ mode }); }\r\n    set unit(unit) { this.rowAccessor({ unit }); }\r\n    set canMove(canMove) { this.rowAccessor({ canMove }); }\r\n    set canResize(canResize) { this.rowAccessor({ canResize }); }\r\n    set minHeight(minHeight) { this.rowAccessor({ minHeight }); }\r\n    set height(height) { this.rowAccessor({ height }); }\r\n    ngOnInit() {\r\n        const { model, observe } = this.plugin;\r\n        if (this.behavior.indexOf('expandOnShortcut') >= 0) {\r\n            observe(model.keyboardChanged)\r\n                .subscribe(e => {\r\n                const { codes, status } = e.state;\r\n                if (status === 'down') {\r\n                    switch (codes[0]) {\r\n                        // TODO: replace it from row state shortcut property.\r\n                        case 'enter':\r\n                        case 'space': {\r\n                            const { cell } = model.navigation();\r\n                            if (cell) {\r\n                                const { row, column } = cell;\r\n                                if (column.type !== 'row-expand' && this.toggleStatus.canExecute(row)) {\r\n                                    this.toggleStatus.execute(row);\r\n                                }\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            if (this.behavior.indexOf('expandOnClick') >= 0) {\r\n                observe(model.mouseChanged)\r\n                    .subscribe(e => {\r\n                    const { code, status, target } = e.state;\r\n                    if (code === 'left' && status === 'up') {\r\n                        if (target && target.column.type !== 'row-expand') {\r\n                            if (this.toggleStatus.canExecute(target.row)) {\r\n                                this.toggleStatus.execute(target.row);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        if (this.behavior.indexOf('expandOnDblClick') >= 0) {\r\n            let firstClickTarget = null;\r\n            observe(model.mouseChanged)\r\n                .subscribe(e => {\r\n                const { code, timestamp } = e.changes;\r\n                if (e.state.status === 'release' && code?.oldValue === 'left') {\r\n                    const target = e.changes.target?.oldValue;\r\n                    if (firstClickTarget === null) {\r\n                        firstClickTarget = target || null;\r\n                    }\r\n                    else {\r\n                        const dblClickInterval = 300;\r\n                        if (firstClickTarget === target && timestamp && timestamp.newValue - timestamp.oldValue <= dblClickInterval) {\r\n                            if (target.column.type !== 'row-expand') {\r\n                                if (this.toggleStatus.canExecute(target.row)) {\r\n                                    this.toggleStatus.execute(target.row);\r\n                                }\r\n                            }\r\n                        }\r\n                        firstClickTarget = null;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    ngOnChanges() {\r\n        const { model } = this.plugin;\r\n        this.stateAccessor.write(model);\r\n    }\r\n}\r\nRowComponent.ɵfac = function RowComponent_Factory(t) { return new (t || RowComponent)(i0.ɵɵdirectiveInject(GridPlugin), i0.ɵɵdirectiveInject(StateAccessor), i0.ɵɵdirectiveInject(TemplateHostService)); };\r\nRowComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: RowComponent, selectors: [[\"q-grid-row\"]], inputs: { behavior: \"behavior\", mode: \"mode\", unit: \"unit\", canMove: \"canMove\", canResize: \"canResize\", minHeight: \"minHeight\", height: \"height\" }, features: [i0.ɵɵProvidersFeature([\r\n            TemplateHostService,\r\n            GridPlugin,\r\n            StateAccessor,\r\n        ]), i0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0$9, decls: 1, vars: 0, template: function RowComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵprojectionDef();\r\n        i0.ɵɵprojection(0);\r\n    } }, encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RowComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'q-grid-row',\r\n                template: `<ng-content></ng-content>\n`,\r\n                providers: [\r\n                    TemplateHostService,\r\n                    GridPlugin,\r\n                    StateAccessor,\r\n                ],\r\n                changeDetection: ChangeDetectionStrategy.OnPush,\r\n            }]\r\n    }], function () { return [{ type: GridPlugin }, { type: StateAccessor }, { type: TemplateHostService }]; }, { behavior: [{\r\n            type: Input\r\n        }], mode: [{\r\n            type: Input\r\n        }], unit: [{\r\n            type: Input\r\n        }], canMove: [{\r\n            type: Input\r\n        }], canResize: [{\r\n            type: Input\r\n        }], minHeight: [{\r\n            type: Input\r\n        }], height: [{\r\n            type: Input\r\n        }] }); })();\n\nclass TrhCoreDirective {\r\n    constructor($view, plugin, elementRef) {\r\n        this.$view = $view;\r\n        this.plugin = plugin;\r\n        this.element = elementRef.nativeElement;\r\n    }\r\n    ngOnInit() {\r\n        this.plugin.table.box.bag[this.source].addRow(this);\r\n    }\r\n    ngOnDestroy() {\r\n        this.plugin.table.box.bag[this.source].deleteRow(this);\r\n    }\r\n}\r\nTrhCoreDirective.ɵfac = function TrhCoreDirective_Factory(t) { return new (t || TrhCoreDirective)(i0.ɵɵdirectiveInject(GridLet), i0.ɵɵdirectiveInject(GridPlugin), i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nTrhCoreDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: TrhCoreDirective, selectors: [[\"\", \"q-grid-core-trh\", \"\"]], inputs: { index: [\"q-grid-core-index\", \"index\"], model: [\"q-grid-core-trh\", \"model\"], source: [\"q-grid-core-source\", \"source\"] } });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TrhCoreDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-core-trh]',\r\n            }]\r\n    }], function () { return [{ type: GridLet }, { type: GridPlugin }, { type: i0.ElementRef }]; }, { index: [{\r\n            type: Input,\r\n            args: ['q-grid-core-index']\r\n        }], model: [{\r\n            type: Input,\r\n            args: ['q-grid-core-trh']\r\n        }], source: [{\r\n            type: Input,\r\n            args: ['q-grid-core-source']\r\n        }] }); })();\n\nclass RowModule {\r\n}\r\nRowModule.ɵfac = function RowModule_Factory(t) { return new (t || RowModule)(); };\r\nRowModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: RowModule });\r\nRowModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RowModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    RowComponent,\r\n                    TrCoreDirective,\r\n                    TrhCoreDirective,\r\n                ],\r\n                exports: [\r\n                    RowComponent,\r\n                    TrCoreDirective,\r\n                    TrhCoreDirective,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(RowModule, { declarations: [RowComponent,\r\n        TrCoreDirective,\r\n        TrhCoreDirective], exports: [RowComponent,\r\n        TrCoreDirective,\r\n        TrhCoreDirective] }); })();\n\nclass BodyModule {\r\n}\r\nBodyModule.ɵfac = function BodyModule_Factory(t) { return new (t || BodyModule)(); };\r\nBodyModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: BodyModule });\r\nBodyModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\r\n        VscrollModule,\r\n        RowModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BodyModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    BodyCoreComponent,\r\n                    TdCoreAlignDirective,\r\n                    TdCoreDirective,\r\n                ],\r\n                imports: [\r\n                    CommonModule,\r\n                    VscrollModule,\r\n                    RowModule,\r\n                ],\r\n                exports: [\r\n                    BodyCoreComponent,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(BodyModule, { declarations: [BodyCoreComponent,\r\n        TdCoreAlignDirective,\r\n        TdCoreDirective], imports: [CommonModule,\r\n        VscrollModule,\r\n        RowModule], exports: [BodyCoreComponent] }); })();\n\nclass ThemeService {\r\n    constructor() {\r\n        this.themeName = '';\r\n        this.changed = new Event();\r\n    }\r\n    get name() {\r\n        return this.themeName;\r\n    }\r\n    set name(value) {\r\n        if (value !== this.themeName) {\r\n            const oldName = this.themeName;\r\n            const newName = value;\r\n            this.changed.emit({ oldName, newName });\r\n        }\r\n    }\r\n}\r\nThemeService.ɵfac = function ThemeService_Factory(t) { return new (t || ThemeService)(); };\r\nThemeService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ThemeService, factory: ThemeService.ɵfac });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThemeService, [{\r\n        type: Injectable\r\n    }], null, null); })();\n\nconst _c0$8 = [\"*\"];\r\nclass BoxComponent {\r\n    constructor(elementRef, theme, plugin) {\r\n        this.elementRef = elementRef;\r\n        this.theme = theme;\r\n        this.plugin = plugin;\r\n    }\r\n    ngOnInit() {\r\n        // tslint:disable-next-line:no-unused-expression\r\n        new BoxHost(this.elementRef.nativeElement, this.plugin);\r\n        this.initTheme();\r\n    }\r\n    initTheme() {\r\n        const { observeReply } = this.plugin;\r\n        const { nativeElement } = this.elementRef;\r\n        observeReply(this.theme.changed)\r\n            .subscribe(e => {\r\n            if (e) {\r\n                nativeElement.classList.remove(`${GRID_PREFIX}-theme-${e.oldName}`);\r\n            }\r\n            nativeElement.classList.add(`${GRID_PREFIX}-theme-${e.newName}`);\r\n        });\r\n    }\r\n}\r\nBoxComponent.ɵfac = function BoxComponent_Factory(t) { return new (t || BoxComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(ThemeService), i0.ɵɵdirectiveInject(GridPlugin)); };\r\nBoxComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: BoxComponent, selectors: [[\"q-grid-box\"]], features: [i0.ɵɵProvidersFeature([GridPlugin])], ngContentSelectors: _c0$8, decls: 1, vars: 0, template: function BoxComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵprojectionDef();\r\n        i0.ɵɵprojection(0);\r\n    } }, encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BoxComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-box', providers: [GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-content></ng-content>\\n\" }]\r\n    }], function () { return [{ type: i0.ElementRef }, { type: ThemeService }, { type: GridPlugin }]; }, null); })();\n\nclass BoxModule {\r\n}\r\nBoxModule.ɵfac = function BoxModule_Factory(t) { return new (t || BoxModule)(); };\r\nBoxModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: BoxModule });\r\nBoxModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BoxModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    BoxComponent,\r\n                ],\r\n                exports: [\r\n                    BoxComponent,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(BoxModule, { declarations: [BoxComponent], exports: [BoxComponent] }); })();\n\nconst _c0$7 = [\"marker\"];\r\nfunction CellHandlerComponent_i_0_Template(rf, ctx) { if (rf & 1) {\r\n    const _r3 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"i\", 1, 2);\r\n    i0.ɵɵlistener(\"mousedown\", function CellHandlerComponent_i_0_Template_i_mousedown_0_listener() { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2.startBatchEdit()); });\r\n    i0.ɵɵtext(2, \" signal_cellular_4_bar\\n\");\r\n    i0.ɵɵelementEnd();\r\n} }\r\nclass CellHandlerComponent {\r\n    constructor(elementRef, plugin, cd) {\r\n        this.elementRef = elementRef;\r\n        this.plugin = plugin;\r\n        this.cd = cd;\r\n        this.canEditBatch = false;\r\n        this.elementRef.nativeElement.style.display = 'none';\r\n    }\r\n    ngOnInit() {\r\n        const { model, observeReply } = this.plugin;\r\n        const updateHandler = this.updateHandlerFactory();\r\n        observeReply(model.navigationChanged)\r\n            .subscribe(e => updateHandler(e));\r\n        observeReply(model.editChanged)\r\n            .subscribe(e => {\r\n            if (e.hasChanges('method')) {\r\n                this.canEditBatch = e.state.method === 'batch';\r\n                this.cd.markForCheck();\r\n                this.cd.detectChanges();\r\n            }\r\n            if (e.hasChanges('status')) {\r\n                if (e.state.status === 'endBatch' && this.endBatchEdit) {\r\n                    this.endBatchEdit();\r\n                    this.endBatchEdit = null;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    ngAfterViewInit() {\r\n        this.elementRef.nativeElement.style.display = '';\r\n    }\r\n    updateHandlerFactory() {\r\n        const { model, table } = this.plugin;\r\n        const element = this.elementRef.nativeElement;\r\n        const job = jobLine(150);\r\n        // When navigate first or when animation wasn't applied we need to omit\r\n        // next navigation event to make handler to correct position.\r\n        let doNotPassAnimation = false;\r\n        return (e) => {\r\n            if (e.hasChanges('cell')) {\r\n                const { cell } = e.state;\r\n                if (cell) {\r\n                    const oldCell = e.changes.cell.oldValue || {};\r\n                    const newCell = e.changes.cell.newValue || {};\r\n                    const oldColumn = oldCell.column || {};\r\n                    const newColumn = newCell.column || {};\r\n                    // Do not apply animation for columns that have viewWidth assigned\r\n                    // because it can be animated too.\r\n                    const shouldAnimate = !model.drag().isActive\r\n                        && (oldColumn.key === newColumn.key || !(oldColumn.viewWidth || newColumn.viewWidth))\r\n                        && !(oldCell.row instanceof RowDetails || newCell.row instanceof RowDetails);\r\n                    const domCell = table.body.cell(cell.rowIndex, cell.columnIndex);\r\n                    if (shouldAnimate) {\r\n                        // It can be that the cell object was changed but indices are not.\r\n                        doNotPassAnimation =\r\n                            oldCell.rowIndex >= 0\r\n                                && oldCell.columnIndex >= 0\r\n                                && (newCell.rowIndex !== oldCell.rowIndex || newCell.columnIndex !== oldCell.columnIndex);\r\n                        if (doNotPassAnimation) {\r\n                            domCell.addClass('q-grid-animate');\r\n                            element.classList.add('q-grid-active');\r\n                            job(() => {\r\n                                element.classList.remove('q-grid-active');\r\n                                domCell.removeClass('q-grid-animate');\r\n                            }).catch(() => {\r\n                                Fastdom.mutate(() => {\r\n                                    domCell.removeClass('q-grid-animate');\r\n                                });\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        doNotPassAnimation = false;\r\n                    }\r\n                    Fastdom.measure(() => {\r\n                        const target = domCell.element;\r\n                        const scrollState = model.scroll();\r\n                        const headHeight = table.view.height('head-mid');\r\n                        const top = Math.max(headHeight, (target.offsetTop - scrollState.top));\r\n                        const left = (target.offsetLeft - (cell.column.pin === 'mid' ? scrollState.left : 0));\r\n                        const width = target.offsetWidth;\r\n                        const height = target.offsetHeight;\r\n                        Fastdom.mutate(() => {\r\n                            element.style.top = top + 'px';\r\n                            element.style.left = left + 'px';\r\n                            element.style.width = width + 'px';\r\n                            element.style.height = height + 'px';\r\n                        });\r\n                    });\r\n                    doNotPassAnimation = true;\r\n                }\r\n            }\r\n        };\r\n    }\r\n    startBatchEdit() {\r\n        const { model } = this.plugin;\r\n        const { cell: startCell } = model.navigation();\r\n        if (startCell) {\r\n            const editService = new EditService(this.plugin);\r\n            this.endBatchEdit = editService.startBatch(startCell);\r\n        }\r\n    }\r\n}\r\nCellHandlerComponent.ɵfac = function CellHandlerComponent_Factory(t) { return new (t || CellHandlerComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(GridPlugin), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };\r\nCellHandlerComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CellHandlerComponent, selectors: [[\"q-grid-cell-handler\"]], viewQuery: function CellHandlerComponent_Query(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵviewQuery(_c0$7, 7);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.marker = _t.first);\r\n    } }, features: [i0.ɵɵProvidersFeature([GridPlugin])], decls: 1, vars: 1, consts: [[\"class\", \"material-icons q-grid-edit-marker\", 3, \"mousedown\", 4, \"ngIf\"], [1, \"material-icons\", \"q-grid-edit-marker\", 3, \"mousedown\"], [\"marker\", \"\"]], template: function CellHandlerComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵtemplate(0, CellHandlerComponent_i_0_Template, 3, 0, \"i\", 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"ngIf\", ctx.canEditBatch);\r\n    } }, dependencies: [i4.NgIf], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellHandlerComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-cell-handler', changeDetection: ChangeDetectionStrategy.OnPush, providers: [GridPlugin], template: \"<i #marker\\n   *ngIf=\\\"canEditBatch\\\"\\n   class=\\\"material-icons q-grid-edit-marker\\\"\\n   (mousedown)=\\\"startBatchEdit()\\\">\\n    signal_cellular_4_bar\\n</i>\\n\" }]\r\n    }], function () { return [{ type: i0.ElementRef }, { type: GridPlugin }, { type: i0.ChangeDetectorRef }]; }, { marker: [{\r\n            type: ViewChild,\r\n            args: ['marker', { static: true }]\r\n        }] }); })();\n\nclass CellHandlerModule {\r\n}\r\nCellHandlerModule.ɵfac = function CellHandlerModule_Factory(t) { return new (t || CellHandlerModule)(); };\r\nCellHandlerModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: CellHandlerModule });\r\nCellHandlerModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellHandlerModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    CellHandlerComponent,\r\n                ],\r\n                exports: [\r\n                    CellHandlerComponent,\r\n                ],\r\n                imports: [\r\n                    CommonModule,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(CellHandlerModule, { declarations: [CellHandlerComponent], imports: [CommonModule], exports: [CellHandlerComponent] }); })();\n\nclass DirtyHostDirective {\r\n    constructor(zone, cd) {\r\n        this.zone = zone;\r\n        this.cd = cd;\r\n        this.subscription = null;\r\n        this.whoNeedsIt = 0;\r\n    }\r\n    set trigger(value) {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n            this.subscription = null;\r\n        }\r\n        if (value) {\r\n            this.subscription = value.subscribe(() => {\r\n                if (this.whoNeedsIt > 0) {\r\n                    this.zone.run(() => {\r\n                        this.cd.detectChanges();\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n            this.subscription = null;\r\n        }\r\n    }\r\n}\r\nDirtyHostDirective.ɵfac = function DirtyHostDirective_Factory(t) { return new (t || DirtyHostDirective)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };\r\nDirtyHostDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: DirtyHostDirective, selectors: [[\"\", \"q-grid-dirty-host\", \"\"]], inputs: { trigger: [\"q-grid-dirty-host\", \"trigger\"] } });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DirtyHostDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-dirty-host]',\r\n            }]\r\n    }], function () { return [{ type: i0.NgZone }, { type: i0.ChangeDetectorRef }]; }, { trigger: [{\r\n            type: Input,\r\n            args: ['q-grid-dirty-host']\r\n        }] }); })();\n\nclass DirtyDirective {\r\n    constructor(zone, cd, host) {\r\n        this.zone = zone;\r\n        this.cd = cd;\r\n        this.host = host;\r\n        this.subscription = null;\r\n        if (this.host) {\r\n            this.host.whoNeedsIt++;\r\n        }\r\n    }\r\n    set trigger(value) {\r\n        // todo: trigger cd only for particular values\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n            this.subscription = null;\r\n        }\r\n        if (value) {\r\n            this.subscription = value.subscribe(() => {\r\n                if (this.host) {\r\n                    this.cd.markForCheck();\r\n                }\r\n                else {\r\n                    this.zone.run(() => {\r\n                        this.cd.markForCheck();\r\n                        this.cd.detectChanges();\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.host) {\r\n            this.host.whoNeedsIt--;\r\n        }\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n            this.subscription = null;\r\n        }\r\n    }\r\n}\r\nDirtyDirective.ɵfac = function DirtyDirective_Factory(t) { return new (t || DirtyDirective)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(DirtyHostDirective, 13)); };\r\nDirtyDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: DirtyDirective, selectors: [[\"\", \"q-grid-dirty\", \"\"]], inputs: { trigger: [\"q-grid-dirty\", \"trigger\"] } });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DirtyDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-dirty]',\r\n            }]\r\n    }], function () { return [{ type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: DirtyHostDirective, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Host\r\n            }, {\r\n                type: SkipSelf\r\n            }] }]; }, { trigger: [{\r\n            type: Input,\r\n            args: ['q-grid-dirty']\r\n        }] }); })();\n\nclass ChangeDetectorModule {\r\n}\r\nChangeDetectorModule.ɵfac = function ChangeDetectorModule_Factory(t) { return new (t || ChangeDetectorModule)(); };\r\nChangeDetectorModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ChangeDetectorModule });\r\nChangeDetectorModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChangeDetectorModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    DirtyDirective,\r\n                    DirtyHostDirective,\r\n                ],\r\n                exports: [\r\n                    DirtyDirective,\r\n                    DirtyHostDirective,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ChangeDetectorModule, { declarations: [DirtyDirective,\r\n        DirtyHostDirective], exports: [DirtyDirective,\r\n        DirtyHostDirective] }); })();\n\nclass ColumnListService {\r\n    constructor(plugin) {\r\n        this.plugin = plugin;\r\n        this.host = new Lazy(() => {\r\n            const canCopy = (key, source, target) => Object.prototype.hasOwnProperty.call(target, key) && !isUndefined(source[key]);\r\n            return new ColumnListHost(this.plugin.model, canCopy, parseFactory);\r\n        });\r\n    }\r\n    add(column) {\r\n        this.host.instance.add(column);\r\n    }\r\n    copy(target, source) {\r\n        this.host.instance.copy(target, source);\r\n    }\r\n    generateKey(source) {\r\n        return this.host.instance.generateKey(source);\r\n    }\r\n    extract(key, type) {\r\n        return this.host.instance.extract(key, type);\r\n    }\r\n    register(column) {\r\n        this.host.instance.register(column);\r\n    }\r\n    delete(key) {\r\n        this.host.instance.delete(key);\r\n    }\r\n}\r\nColumnListService.ɵfac = function ColumnListService_Factory(t) { return new (t || ColumnListService)(i0.ɵɵinject(GridPlugin)); };\r\nColumnListService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ColumnListService, factory: ColumnListService.ɵfac });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnListService, [{\r\n        type: Injectable\r\n    }], function () { return [{ type: GridPlugin }]; }, null); })();\n\nconst _c0$6 = [\"*\"];\r\nclass ColumnListComponent {\r\n    constructor(plugin, stateAccessor) {\r\n        this.plugin = plugin;\r\n        this.stateAccessor = stateAccessor;\r\n        this.columnListAccessor = this.stateAccessor.setter(ColumnListState);\r\n    }\r\n    set generation(generation) { this.columnListAccessor({ generation }); }\r\n    set typeDetection(typeDetection) { this.columnListAccessor({ typeDetection }); }\r\n    ngOnChanges() {\r\n        const { model } = this.plugin;\r\n        this.stateAccessor.write(model);\r\n    }\r\n}\r\nColumnListComponent.ɵfac = function ColumnListComponent_Factory(t) { return new (t || ColumnListComponent)(i0.ɵɵdirectiveInject(GridPlugin), i0.ɵɵdirectiveInject(StateAccessor)); };\r\nColumnListComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ColumnListComponent, selectors: [[\"q-grid-columns\"]], inputs: { generation: \"generation\", typeDetection: \"typeDetection\" }, features: [i0.ɵɵProvidersFeature([\r\n            ColumnListService,\r\n            GridPlugin,\r\n            StateAccessor,\r\n        ]), i0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0$6, decls: 1, vars: 0, template: function ColumnListComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵprojectionDef();\r\n        i0.ɵɵprojection(0);\r\n    } }, encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnListComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'q-grid-columns',\r\n                template: `<ng-content></ng-content>\n`,\r\n                providers: [\r\n                    ColumnListService,\r\n                    GridPlugin,\r\n                    StateAccessor,\r\n                ],\r\n                changeDetection: ChangeDetectionStrategy.OnPush,\r\n            }]\r\n    }], function () { return [{ type: GridPlugin }, { type: StateAccessor }]; }, { generation: [{\r\n            type: Input\r\n        }], typeDetection: [{\r\n            type: Input\r\n        }] }); })();\n\nclass ColumnListModule {\r\n}\r\nColumnListModule.ɵfac = function ColumnListModule_Factory(t) { return new (t || ColumnListModule)(); };\r\nColumnListModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ColumnListModule });\r\nColumnListModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnListModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    ColumnListComponent,\r\n                ],\r\n                exports: [\r\n                    ColumnListComponent,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ColumnListModule, { declarations: [ColumnListComponent], exports: [ColumnListComponent] }); })();\n\nclass TemplateLink {\r\n    constructor(template, context) {\r\n        this.template = template;\r\n        this.context = context;\r\n    }\r\n}\n\nclass ColumnBodyTemplateDirective {\r\n    constructor(templateCache, templateRef) {\r\n        this.templateCache = templateCache;\r\n        this.templateRef = templateRef;\r\n        this.key = '';\r\n    }\r\n    ngOnInit() {\r\n        const link = new TemplateLink(this.templateRef, null);\r\n        this.templateCache.put(`body-cell-the-${this.key}.tpl.html`, link);\r\n    }\r\n}\r\nColumnBodyTemplateDirective.ɵfac = function ColumnBodyTemplateDirective_Factory(t) { return new (t || ColumnBodyTemplateDirective)(i0.ɵɵdirectiveInject(TemplateCacheService), i0.ɵɵdirectiveInject(i0.TemplateRef)); };\r\nColumnBodyTemplateDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: ColumnBodyTemplateDirective, selectors: [[\"ng-template\", \"qGridColumnBody\", \"\"]], inputs: { key: [\"qGridColumnBody\", \"key\"] } });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnBodyTemplateDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: 'ng-template[qGridColumnBody]', // eslint-disable-line @angular-eslint/directive-selector\r\n            }]\r\n    }], function () { return [{ type: TemplateCacheService }, { type: i0.TemplateRef }]; }, { key: [{\r\n            type: Input,\r\n            args: ['qGridColumnBody']\r\n        }] }); })();\n\nclass ColumnEditTemplateDirective {\r\n    constructor(templateCache, templateRef) {\r\n        this.templateCache = templateCache;\r\n        this.templateRef = templateRef;\r\n        this.key = '';\r\n    }\r\n    ngOnInit() {\r\n        const link = new TemplateLink(this.templateRef, null);\r\n        this.templateCache.put(`edit-cell-the-${this.key}.tpl.html`, link);\r\n    }\r\n}\r\nColumnEditTemplateDirective.ɵfac = function ColumnEditTemplateDirective_Factory(t) { return new (t || ColumnEditTemplateDirective)(i0.ɵɵdirectiveInject(TemplateCacheService), i0.ɵɵdirectiveInject(i0.TemplateRef)); };\r\nColumnEditTemplateDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: ColumnEditTemplateDirective, selectors: [[\"ng-template\", \"qGridColumnEdit\", \"\"]], inputs: { key: [\"qGridColumnEdit\", \"key\"] } });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnEditTemplateDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: 'ng-template[qGridColumnEdit]', // eslint-disable-line @angular-eslint/directive-selector\r\n            }]\r\n    }], function () { return [{ type: TemplateCacheService }, { type: i0.TemplateRef }]; }, { key: [{\r\n            type: Input,\r\n            args: ['qGridColumnEdit']\r\n        }] }); })();\n\nclass ColumnFootTemplateDirective {\r\n    constructor(templateCache, templateRef) {\r\n        this.templateCache = templateCache;\r\n        this.templateRef = templateRef;\r\n        this.key = '';\r\n    }\r\n    ngOnInit() {\r\n        const link = new TemplateLink(this.templateRef, null);\r\n        this.templateCache.put(`foot-cell-the-${this.key}.tpl.html`, link);\r\n    }\r\n}\r\nColumnFootTemplateDirective.ɵfac = function ColumnFootTemplateDirective_Factory(t) { return new (t || ColumnFootTemplateDirective)(i0.ɵɵdirectiveInject(TemplateCacheService), i0.ɵɵdirectiveInject(i0.TemplateRef)); };\r\nColumnFootTemplateDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: ColumnFootTemplateDirective, selectors: [[\"ng-template\", \"qGridColumnFoot\", \"\"]], inputs: { key: [\"qGridColumnFoot\", \"key\"] } });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnFootTemplateDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: 'ng-template[qGridColumnFoot]', // eslint-disable-line @angular-eslint/directive-selector\r\n            }]\r\n    }], function () { return [{ type: TemplateCacheService }, { type: i0.TemplateRef }]; }, { key: [{\r\n            type: Input,\r\n            args: ['qGridColumnFoot']\r\n        }] }); })();\n\nclass ColumnHeadTemplateDirective {\r\n    constructor(templateCache, templateRef) {\r\n        this.templateCache = templateCache;\r\n        this.templateRef = templateRef;\r\n        this.key = '';\r\n    }\r\n    ngOnInit() {\r\n        const link = new TemplateLink(this.templateRef, null);\r\n        this.templateCache.put(`head-cell-the-${this.key}.tpl.html`, link);\r\n    }\r\n}\r\nColumnHeadTemplateDirective.ɵfac = function ColumnHeadTemplateDirective_Factory(t) { return new (t || ColumnHeadTemplateDirective)(i0.ɵɵdirectiveInject(TemplateCacheService), i0.ɵɵdirectiveInject(i0.TemplateRef)); };\r\nColumnHeadTemplateDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: ColumnHeadTemplateDirective, selectors: [[\"ng-template\", \"qGridColumnHead\", \"\"]], inputs: { key: [\"qGridColumnHead\", \"key\"] } });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnHeadTemplateDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: 'ng-template[qGridColumnHead]', // eslint-disable-line @angular-eslint/directive-selector\r\n            }]\r\n    }], function () { return [{ type: TemplateCacheService }, { type: i0.TemplateRef }]; }, { key: [{\r\n            type: Input,\r\n            args: ['qGridColumnHead']\r\n        }] }); })();\n\nclass ColumnHostService {\r\n}\r\nColumnHostService.ɵfac = function ColumnHostService_Factory(t) { return new (t || ColumnHostService)(); };\r\nColumnHostService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ColumnHostService, factory: ColumnHostService.ɵfac });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnHostService, [{\r\n        type: Injectable\r\n    }], null, null); })();\n\nconst _c0$5 = [\"*\"];\r\nclass ColumnComponent {\r\n    constructor(parentHost, selfHost, columnList, templateHost, elementRef, plugin) {\r\n        this.parentHost = parentHost;\r\n        this.selfHost = selfHost;\r\n        this.columnList = columnList;\r\n        this.templateHost = templateHost;\r\n        this.elementRef = elementRef;\r\n        this.plugin = plugin;\r\n    }\r\n    ngOnInit() {\r\n        let withKey = !isUndefined(this.key);\r\n        let withType = !isUndefined(this.type);\r\n        // We want to update model when ngOntInit is triggered and not in afterViewInit\r\n        // so we apply dirty hack to understand if column is cohort or not.\r\n        const element = this.elementRef.nativeElement;\r\n        if (element.children.length && element.children.item(0).tagName === 'Q-GRID-COLUMN') {\r\n            this.type = 'cohort';\r\n            if (!withKey) {\r\n                this.key = `$cohort-${this.title || guid()}`;\r\n            }\r\n            withKey = true;\r\n            withType = true;\r\n        }\r\n        if (!withKey) {\r\n            this.key = this.columnList.generateKey(this);\r\n        }\r\n        const column = this.columnList.extract(this.key, this.type);\r\n        this.columnList.copy(column, this);\r\n        this.templateHost.key = source => {\r\n            const parts = [source, 'cell'];\r\n            if (withType) {\r\n                parts.push(this.type);\r\n            }\r\n            if (withKey) {\r\n                parts.push(`the-${this.key}`);\r\n            }\r\n            return parts.join('-') + '.tpl.html';\r\n        };\r\n        if (withKey) {\r\n            if (this.parentHost) {\r\n                this.parentHost.column.children.push(column);\r\n            }\r\n            else {\r\n                this.columnList.add(column);\r\n            }\r\n            this.selfHost.column = column;\r\n        }\r\n        else {\r\n            const settings = Object\r\n                .keys(this)\r\n                .filter(key => !isUndefined(this[key]) && Object.prototype.hasOwnProperty.call(column, key))\r\n                .reduce((memo, key) => {\r\n                memo[key] = column[key];\r\n                return memo;\r\n            }, {});\r\n            this.columnList.register(settings);\r\n        }\r\n    }\r\n    ngOnChanges(changes) {\r\n        const { column } = this.selfHost;\r\n        if (column && changes.isVisible) {\r\n            if (column.isVisible !== this.isVisible) {\r\n                column.isVisible = this.isVisible;\r\n                const { model } = this.plugin;\r\n                model.data({\r\n                    columns: Array.from(model.data().columns),\r\n                }, {\r\n                    source: 'column.component',\r\n                });\r\n            }\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        const { column } = this.selfHost;\r\n        if (column && column.source === 'template') {\r\n            this.columnList.delete(column.key);\r\n        }\r\n    }\r\n}\r\nColumnComponent.ɵfac = function ColumnComponent_Factory(t) { return new (t || ColumnComponent)(i0.ɵɵdirectiveInject(ColumnHostService, 12), i0.ɵɵdirectiveInject(ColumnHostService), i0.ɵɵdirectiveInject(ColumnListService), i0.ɵɵdirectiveInject(TemplateHostService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(GridPlugin)); };\r\nColumnComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ColumnComponent, selectors: [[\"q-grid-column\"]], inputs: { type: \"type\", key: \"key\", category: \"category\", class: \"class\", title: \"title\", description: \"description\", pin: \"pin\", aggregation: \"aggregation\", aggregationOptions: \"aggregationOptions\", editor: \"editor\", editorOptions: \"editorOptions\", format: \"format\", dateFormat: \"dateFormat\", timeFormat: \"timeFormat\", symbol: \"symbol\", code: \"code\", width: \"width\", widthMode: \"widthMode\", minWidth: \"minWidth\", maxWidth: \"maxWidth\", viewWidth: \"viewWidth\", offset: \"offset\", canEdit: \"canEdit\", canResize: \"canResize\", canSort: \"canSort\", canMove: \"canMove\", canFilter: \"canFilter\", canHighlight: \"canHighlight\", canFocus: \"canFocus\", isVisible: \"isVisible\", isDefault: \"isDefault\", index: \"index\", label: \"label\", labelPath: \"labelPath\", itemLabel: \"itemLabel\", itemFormat: \"itemFormat\", itemType: \"itemType\", value: \"value\", path: \"path\", compare: \"compare\", trueValue: \"trueValue\", falseValue: \"falseValue\", maxLength: \"maxLength\", startNumber: \"startNumber\" }, features: [i0.ɵɵProvidersFeature([\r\n            TemplateHostService,\r\n            ColumnHostService,\r\n            GridPlugin,\r\n        ]), i0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0$5, decls: 1, vars: 0, template: function ColumnComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵprojectionDef();\r\n        i0.ɵɵprojection(0);\r\n    } }, encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'q-grid-column',\r\n                template: `<ng-content></ng-content>\n`,\r\n                providers: [\r\n                    TemplateHostService,\r\n                    ColumnHostService,\r\n                    GridPlugin,\r\n                ],\r\n                changeDetection: ChangeDetectionStrategy.OnPush,\r\n            }]\r\n    }], function () { return [{ type: ColumnHostService, decorators: [{\r\n                type: SkipSelf\r\n            }, {\r\n                type: Optional\r\n            }] }, { type: ColumnHostService }, { type: ColumnListService }, { type: TemplateHostService }, { type: i0.ElementRef }, { type: GridPlugin }]; }, { type: [{\r\n            type: Input\r\n        }], key: [{\r\n            type: Input\r\n        }], category: [{\r\n            type: Input\r\n        }], class: [{\r\n            type: Input\r\n        }], title: [{\r\n            type: Input\r\n        }], description: [{\r\n            type: Input\r\n        }], pin: [{\r\n            type: Input\r\n        }], aggregation: [{\r\n            type: Input\r\n        }], aggregationOptions: [{\r\n            type: Input\r\n        }], editor: [{\r\n            type: Input\r\n        }], editorOptions: [{\r\n            type: Input\r\n        }], format: [{\r\n            type: Input\r\n        }], dateFormat: [{\r\n            type: Input\r\n        }], timeFormat: [{\r\n            type: Input\r\n        }], symbol: [{\r\n            type: Input\r\n        }], code: [{\r\n            type: Input\r\n        }], width: [{\r\n            type: Input\r\n        }], widthMode: [{\r\n            type: Input\r\n        }], minWidth: [{\r\n            type: Input\r\n        }], maxWidth: [{\r\n            type: Input\r\n        }], viewWidth: [{\r\n            type: Input\r\n        }], offset: [{\r\n            type: Input\r\n        }], canEdit: [{\r\n            type: Input\r\n        }], canResize: [{\r\n            type: Input\r\n        }], canSort: [{\r\n            type: Input\r\n        }], canMove: [{\r\n            type: Input\r\n        }], canFilter: [{\r\n            type: Input\r\n        }], canHighlight: [{\r\n            type: Input\r\n        }], canFocus: [{\r\n            type: Input\r\n        }], isVisible: [{\r\n            type: Input\r\n        }], isDefault: [{\r\n            type: Input\r\n        }], index: [{\r\n            type: Input\r\n        }], label: [{\r\n            type: Input\r\n        }], labelPath: [{\r\n            type: Input\r\n        }], itemLabel: [{\r\n            type: Input\r\n        }], itemFormat: [{\r\n            type: Input\r\n        }], itemType: [{\r\n            type: Input\r\n        }], value: [{\r\n            type: Input\r\n        }], path: [{\r\n            type: Input\r\n        }], compare: [{\r\n            type: Input\r\n        }], trueValue: [{\r\n            type: Input\r\n        }], falseValue: [{\r\n            type: Input\r\n        }], maxLength: [{\r\n            type: Input\r\n        }], startNumber: [{\r\n            type: Input\r\n        }] }); })();\n\nclass ColumnModule {\r\n}\r\nColumnModule.ɵfac = function ColumnModule_Factory(t) { return new (t || ColumnModule)(); };\r\nColumnModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ColumnModule });\r\nColumnModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    ColumnComponent,\r\n                    ColumnBodyTemplateDirective,\r\n                    ColumnEditTemplateDirective,\r\n                    ColumnFootTemplateDirective,\r\n                    ColumnHeadTemplateDirective,\r\n                ],\r\n                exports: [\r\n                    ColumnComponent,\r\n                    ColumnBodyTemplateDirective,\r\n                    ColumnEditTemplateDirective,\r\n                    ColumnFootTemplateDirective,\r\n                    ColumnHeadTemplateDirective,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ColumnModule, { declarations: [ColumnComponent,\r\n        ColumnBodyTemplateDirective,\r\n        ColumnEditTemplateDirective,\r\n        ColumnFootTemplateDirective,\r\n        ColumnHeadTemplateDirective], exports: [ColumnComponent,\r\n        ColumnBodyTemplateDirective,\r\n        ColumnEditTemplateDirective,\r\n        ColumnFootTemplateDirective,\r\n        ColumnHeadTemplateDirective] }); })();\n\nclass DragDirective {\r\n    constructor(plugin, elementRef) {\r\n        this.plugin = plugin;\r\n        this.elementRef = elementRef;\r\n        const element = elementRef.nativeElement;\r\n        const listener = new EventListener(element, new EventManager(this));\r\n        element.classList.add(`${GRID_PREFIX}-can-drag`);\r\n        element.setAttribute('draggable', true);\r\n        listener.on('dragstart', this.onStart);\r\n        listener.on('dragend', this.onEnd);\r\n    }\r\n    onStart(e) {\r\n        const transfer = e.dataTransfer;\r\n        const data = this.data;\r\n        const eventArg = { data };\r\n        if (this.drag.canExecute(eventArg) === false) {\r\n            e.preventDefault();\r\n            if (transfer) {\r\n                transfer.effectAllowed = 'none';\r\n            }\r\n            return false;\r\n        }\r\n        const result = this.drag.execute(eventArg);\r\n        DragService.element =\r\n            result && isFunction(result.getBoundingClientRect)\r\n                // tslint:disable-next-line: deprecation\r\n                ? result : (e.srcElement || e.target);\r\n        this.elementRef.nativeElement.classList.add(`${GRID_PREFIX}-drag`);\r\n        if (transfer) {\r\n            transfer.setData(DragService.mimeType, DragService.encode(data));\r\n            transfer.effectAllowed = this.effect || 'move';\r\n        }\r\n        DragService.data = data;\r\n        DragService.area = this.area;\r\n        const rect = DragService.element.getBoundingClientRect();\r\n        DragService.startPosition = {\r\n            x: e.clientX,\r\n            y: e.clientY,\r\n            rect,\r\n        };\r\n        if (this.plugin) {\r\n            const { model } = this.plugin;\r\n            model.drag({ isActive: true }, { source: 'drag.directive' });\r\n        }\r\n    }\r\n    onEnd() {\r\n        if (this.plugin) {\r\n            const { model } = this.plugin;\r\n            model.drag({ isActive: false }, { source: 'drag.directive' });\r\n        }\r\n        this.elementRef.nativeElement.classList.remove(`${GRID_PREFIX}-drag`);\r\n        DragService.data = null;\r\n        DragService.area = null;\r\n        DragService.element = null;\r\n        DragService.startPosition = null;\r\n    }\r\n}\r\nDragDirective.ɵfac = function DragDirective_Factory(t) { return new (t || DragDirective)(i0.ɵɵdirectiveInject(GridPlugin, 8), i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nDragDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: DragDirective, selectors: [[\"\", \"q-grid-drag\", \"\"]], inputs: { data: [\"q-grid-drag-data\", \"data\"], effect: [\"q-grid-drag-effect\", \"effect\"], drag: [\"q-grid-drag\", \"drag\"], area: [\"q-grid-drop-area\", \"area\"] } });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DragDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-drag]',\r\n            }]\r\n    }], function () { return [{ type: GridPlugin, decorators: [{\r\n                type: Optional\r\n            }] }, { type: i0.ElementRef }]; }, { data: [{\r\n            type: Input,\r\n            args: ['q-grid-drag-data']\r\n        }], effect: [{\r\n            type: Input,\r\n            args: ['q-grid-drag-effect']\r\n        }], drag: [{\r\n            type: Input,\r\n            args: ['q-grid-drag']\r\n        }], area: [{\r\n            type: Input,\r\n            args: ['q-grid-drop-area']\r\n        }] }); })();\n\nclass DropDirective {\r\n    constructor(plugin, elementRef, zone) {\r\n        this.plugin = plugin;\r\n        this.elementRef = elementRef;\r\n        this.dragDirection = 'y';\r\n        const element = elementRef.nativeElement;\r\n        const listener = new EventListener(element, new EventManager(this));\r\n        element.classList.add(`${GRID_PREFIX}-can-drop`);\r\n        zone.runOutsideAngular(() => {\r\n            listener.on('dragenter', this.onEnter);\r\n            listener.on('dragover', this.onOver);\r\n            listener.on('dragleave', this.onLeave);\r\n        });\r\n        listener.on('drop', this.onDrop);\r\n    }\r\n    ngOnInit() {\r\n        if (this.plugin) {\r\n            const { model, observe } = this.plugin;\r\n            observe(model.dragChanged)\r\n                .subscribe(e => {\r\n                if (e.hasChanges('isActive')) {\r\n                    if (!e.state.isActive) {\r\n                        const eventArg = {\r\n                            path: [],\r\n                            dragData: DragService.data,\r\n                            dropData: this.dropData,\r\n                            action: 'end',\r\n                            inAreaX: no,\r\n                            inAreaY: no,\r\n                        };\r\n                        if (this.drop.canExecute(eventArg)) {\r\n                            this.drop.execute(eventArg);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    onDrop(e) {\r\n        e.stopPropagation();\r\n        this.elementRef.nativeElement.classList.remove(`${GRID_PREFIX}-dragover`);\r\n        const eventArg = {\r\n            path: e.path,\r\n            dragData: DragService.data,\r\n            dropData: this.dropData,\r\n            action: 'drop',\r\n            inAreaX: this.inAreaFactory(e, 'x'),\r\n            inAreaY: this.inAreaFactory(e, 'y'),\r\n        };\r\n        if (this.drop.canExecute(eventArg)) {\r\n            this.drop.execute(eventArg);\r\n        }\r\n        return false;\r\n    }\r\n    onEnter(e) {\r\n        e.preventDefault();\r\n        this.elementRef.nativeElement.classList.add(`${GRID_PREFIX}-dragover`);\r\n        e.dataTransfer.dropEffect = 'move';\r\n        return false;\r\n    }\r\n    onOver(e) {\r\n        e.preventDefault();\r\n        if (this.plugin && this.plugin.model.scene().status !== 'stop') {\r\n            return false;\r\n        }\r\n        if (this.area !== DragService.area) {\r\n            e.dataTransfer.dropEffect = 'none';\r\n            return false;\r\n        }\r\n        const pos = this.getPosition(e);\r\n        const path = this.getPath(pos);\r\n        if (path.indexOf(DragService.element) >= 0) {\r\n            return false;\r\n        }\r\n        const eventArg = {\r\n            path,\r\n            dragData: DragService.data,\r\n            dropData: this.dropData,\r\n            action: 'over',\r\n            inAreaX: this.inAreaFactory(e, 'x'),\r\n            inAreaY: this.inAreaFactory(e, 'y'),\r\n        };\r\n        if (this.dragOver.canExecute(eventArg)) {\r\n            this.dragOver.execute(eventArg);\r\n            if (DragService.data !== eventArg.dragData) {\r\n                DragService.data = eventArg.dragData;\r\n            }\r\n            e.dataTransfer.dropEffect = 'move';\r\n        }\r\n        return false;\r\n    }\r\n    onLeave() {\r\n        this.elementRef.nativeElement.classList.remove(`${GRID_PREFIX}-dragover`);\r\n    }\r\n    getPosition(e) {\r\n        const start = DragService.startPosition;\r\n        const src = start.rect;\r\n        const offsetX = start.x - (src.left + src.width / 2);\r\n        const offsetY = start.y - (src.top + src.height / 2);\r\n        const { clientX, clientY } = e;\r\n        const x = clientX - offsetX;\r\n        const y = clientY - offsetY;\r\n        return { x, y };\r\n    }\r\n    getPath({ x, y }) {\r\n        // Document.elementsFromPoint is not working with tr?\r\n        // so we need to go through all parent.\r\n        const element = elementFromPoint(x, y);\r\n        const path = parents(element);\r\n        return path;\r\n    }\r\n    inAreaFactory(e, direction) {\r\n        const src = DragService.startPosition.rect;\r\n        const { x, y } = this.getPosition(e);\r\n        if (direction === 'y') {\r\n            return (element) => {\r\n                const trg = element.getBoundingClientRect();\r\n                // we are on the top of target\r\n                if (src.top < trg.top) {\r\n                    return trg.bottom > y && y > trg.bottom - src.height;\r\n                }\r\n                // we are on the bottom of target\r\n                return trg.top < y && y < trg.top + src.height;\r\n            };\r\n        }\r\n        return (element) => {\r\n            const trg = element.getBoundingClientRect();\r\n            // we are on the left of target\r\n            if (src.left < trg.left) {\r\n                return trg.right > x && x > trg.right - src.width;\r\n            }\r\n            // we are on the right of target\r\n            return trg.left < x && x < trg.left + src.width;\r\n        };\r\n    }\r\n}\r\nDropDirective.ɵfac = function DropDirective_Factory(t) { return new (t || DropDirective)(i0.ɵɵdirectiveInject(GridPlugin, 8), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone)); };\r\nDropDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: DropDirective, selectors: [[\"\", \"q-grid-drop\", \"\"]], inputs: { area: [\"q-grid-drop-area\", \"area\"], dropData: [\"q-grid-drop-data\", \"dropData\"], drop: [\"q-grid-drop\", \"drop\"], dragOver: [\"q-grid-drag-over\", \"dragOver\"], dragDirection: [\"q-grid-drag-direction\", \"dragDirection\"] } });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-drop]',\r\n            }]\r\n    }], function () { return [{ type: GridPlugin, decorators: [{\r\n                type: Optional\r\n            }] }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, { area: [{\r\n            type: Input,\r\n            args: ['q-grid-drop-area']\r\n        }], dropData: [{\r\n            type: Input,\r\n            args: ['q-grid-drop-data']\r\n        }], drop: [{\r\n            type: Input,\r\n            args: ['q-grid-drop']\r\n        }], dragOver: [{\r\n            type: Input,\r\n            args: ['q-grid-drag-over']\r\n        }], dragDirection: [{\r\n            type: Input,\r\n            args: ['q-grid-drag-direction']\r\n        }] }); })();\n\nclass DndModule {\r\n}\r\nDndModule.ɵfac = function DndModule_Factory(t) { return new (t || DndModule)(); };\r\nDndModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: DndModule });\r\nDndModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DndModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    DragDirective,\r\n                    DropDirective,\r\n                ],\r\n                exports: [\r\n                    DragDirective,\r\n                    DropDirective,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(DndModule, { declarations: [DragDirective,\r\n        DropDirective], exports: [DragDirective,\r\n        DropDirective] }); })();\n\nclass TfCoreDirective {\r\n    constructor($view, plugin, cellTemplate, cellClass, viewContainerRef, tr, elementRef) {\r\n        this.$view = $view;\r\n        this.plugin = plugin;\r\n        this.cellTemplate = cellTemplate;\r\n        this.cellClass = cellClass;\r\n        this.viewContainerRef = viewContainerRef;\r\n        this.tr = tr;\r\n        this.elementRef = elementRef;\r\n        this.$implicit = this;\r\n        this.element = this.elementRef.nativeElement.parentNode;\r\n    }\r\n    get value() {\r\n        const column = this.column;\r\n        return this.$view.foot.value(column);\r\n    }\r\n    get label() {\r\n        return this.value;\r\n    }\r\n    get column() {\r\n        return this.columnView.model;\r\n    }\r\n    get columnIndex() {\r\n        return this.columnView.columnIndex;\r\n    }\r\n    get row() {\r\n        return this.tr.model;\r\n    }\r\n    get rowIndex() {\r\n        return this.tr.index;\r\n    }\r\n    ngOnInit() {\r\n        const { column, element } = this;\r\n        const { table } = this.plugin;\r\n        table.box.bag.foot.addCell(this);\r\n        this.cellClass.toBody(element, column);\r\n        const link = this.cellTemplate.build('foot', this.column);\r\n        link(this.viewContainerRef, this);\r\n    }\r\n    mode(value) {\r\n        throw new GridError('tf-core.directive', `${value} mode is not supported`);\r\n    }\r\n    ngOnDestroy() {\r\n        const { table } = this.plugin;\r\n        table.box.bag.foot.deleteCell(this);\r\n    }\r\n}\r\nTfCoreDirective.ɵfac = function TfCoreDirective_Factory(t) { return new (t || TfCoreDirective)(i0.ɵɵdirectiveInject(GridLet), i0.ɵɵdirectiveInject(GridPlugin), i0.ɵɵdirectiveInject(CellTemplateService), i0.ɵɵdirectiveInject(CellClassService), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(TrhCoreDirective), i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nTfCoreDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: TfCoreDirective, selectors: [[\"\", \"q-grid-core-tf\", \"\"]], inputs: { columnView: [\"q-grid-core-tf\", \"columnView\"] } });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TfCoreDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-core-tf]',\r\n            }]\r\n    }], function () { return [{ type: GridLet }, { type: GridPlugin }, { type: CellTemplateService }, { type: CellClassService }, { type: i0.ViewContainerRef }, { type: TrhCoreDirective }, { type: i0.ElementRef }]; }, { columnView: [{\r\n            type: Input,\r\n            args: ['q-grid-core-tf']\r\n        }] }); })();\n\nconst _c0$4 = [\"q-grid-core-foot\", \"\"];\r\nfunction FootCoreComponent_tr_0_td_1_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"td\");\r\n    i0.ɵɵelementContainer(1, 3);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const $column_r4 = ctx.$implicit;\r\n    i0.ɵɵattribute(\"rowspan\", $column_r4.rowspan)(\"colspan\", $column_r4.colspan);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"q-grid-core-tf\", $column_r4);\r\n} }\r\nfunction FootCoreComponent_tr_0_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"tr\", 1);\r\n    i0.ɵɵtemplate(1, FootCoreComponent_tr_0_td_1_Template, 2, 3, \"td\", 2);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const $row_r1 = ctx.$implicit;\r\n    const $rowIndex_r2 = ctx.index;\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"q-grid-core-trh\", $row_r1)(\"q-grid-core-index\", $rowIndex_r2);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.$view.foot.columns($row_r1, ctx_r0.$table.pin))(\"ngForTrackBy\", ctx_r0.columnId);\r\n} }\r\nclass FootCoreComponent {\r\n    constructor($view, $table, plugin, cd) {\r\n        this.$view = $view;\r\n        this.$table = $table;\r\n        this.plugin = plugin;\r\n        this.cd = cd;\r\n    }\r\n    ngOnInit() {\r\n        const { model, observe } = this.plugin;\r\n        observe(model.sceneChanged)\r\n            .subscribe(e => {\r\n            if (e.hasChanges('status') && e.state.status === 'push') {\r\n                this.cd.markForCheck();\r\n            }\r\n        });\r\n    }\r\n    columnId(index, item) {\r\n        return item.model.key;\r\n    }\r\n    rowId(index) {\r\n        return index;\r\n    }\r\n}\r\nFootCoreComponent.ɵfac = function FootCoreComponent_Factory(t) { return new (t || FootCoreComponent)(i0.ɵɵdirectiveInject(GridLet), i0.ɵɵdirectiveInject(TableCoreService), i0.ɵɵdirectiveInject(GridPlugin), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };\r\nFootCoreComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: FootCoreComponent, selectors: [[\"tfoot\", \"q-grid-core-foot\", \"\"]], features: [i0.ɵɵProvidersFeature([GridPlugin])], attrs: _c0$4, decls: 1, vars: 2, consts: [[\"q-grid-core-source\", \"foot\", 3, \"q-grid-core-trh\", \"q-grid-core-index\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"q-grid-core-source\", \"foot\", 3, \"q-grid-core-trh\", \"q-grid-core-index\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"q-grid-core-tf\"]], template: function FootCoreComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵtemplate(0, FootCoreComponent_tr_0_Template, 2, 4, \"tr\", 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"ngForOf\", ctx.$view.foot.rows)(\"ngForTrackBy\", ctx.rowId);\r\n    } }, dependencies: [i4.NgForOf, TrhCoreDirective, TfCoreDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FootCoreComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'tfoot[q-grid-core-foot]', changeDetection: ChangeDetectionStrategy.OnPush, providers: [GridPlugin], template: \"<tr *ngFor=\\\"let $row of $view.foot.rows; trackBy: rowId; index as $rowIndex\\\"\\n\\t\\t[q-grid-core-trh]=\\\"$row\\\"\\n\\t\\t[q-grid-core-index]=\\\"$rowIndex\\\"\\n\\t\\tq-grid-core-source=\\\"foot\\\">\\n\\t<td *ngFor=\\\"let $column of $view.foot.columns($row, $table.pin); trackBy: columnId; index as $columnIndex\\\"\\n\\t\\t\\t[attr.rowspan]=\\\"$column.rowspan\\\"\\n\\t\\t\\t[attr.colspan]=\\\"$column.colspan\\\">\\n\\t\\t<ng-container [q-grid-core-tf]=\\\"$column\\\">\\n\\t\\t</ng-container>\\n\\t</td>\\n</tr>\\n\" }]\r\n    }], function () { return [{ type: GridLet }, { type: TableCoreService }, { type: GridPlugin }, { type: i0.ChangeDetectorRef }]; }, null); })();\n\nclass FootModule {\r\n}\r\nFootModule.ɵfac = function FootModule_Factory(t) { return new (t || FootModule)(); };\r\nFootModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: FootModule });\r\nFootModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\r\n        RowModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FootModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    FootCoreComponent,\r\n                    TfCoreDirective,\r\n                ],\r\n                exports: [\r\n                    FootCoreComponent,\r\n                    TfCoreDirective,\r\n                ],\r\n                imports: [\r\n                    CommonModule,\r\n                    RowModule,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(FootModule, { declarations: [FootCoreComponent,\r\n        TfCoreDirective], imports: [CommonModule,\r\n        RowModule], exports: [FootCoreComponent,\r\n        TfCoreDirective] }); })();\n\nclass Layer {\r\n    constructor(onDestroy) {\r\n        this.onDestroy = onDestroy;\r\n    }\r\n    destroy() {\r\n        this.onDestroy();\r\n    }\r\n}\n\nclass LayerService {\r\n    constructor(templateService) {\r\n        this.templateService = templateService;\r\n        this.layers = new Map();\r\n    }\r\n    get count() {\r\n        return this.layers.size;\r\n    }\r\n    init(container) {\r\n        this.container = container;\r\n    }\r\n    create(name) {\r\n        if (this.layers.has(name)) {\r\n            return this.layers.get(name);\r\n        }\r\n        const { container, templateService } = this;\r\n        const link = templateService.find(`layer-${name}.tpl.html`);\r\n        if (link && container) {\r\n            const { nativeElement } = container.element;\r\n            nativeElement.parentElement.classList.add(`q-grid-layer-${name}`);\r\n            this.getHostElement()?.classList.add(`q-grid-${name}`);\r\n            container.createEmbeddedView(link.template, {});\r\n        }\r\n        const destroy = container\r\n            ? () => {\r\n                this.layers.delete(name);\r\n                const { nativeElement } = container.element;\r\n                nativeElement.parentElement.classList.add(`q-grid-layer-${name}`);\r\n                this.getHostElement()?.classList.remove(`q-grid-${name}`);\r\n                container.clear();\r\n            }\r\n            : () => this.layers.delete(name);\r\n        const layer = new Layer(destroy);\r\n        this.layers.set(name, layer);\r\n        return layer;\r\n    }\r\n    getHostElement() {\r\n        const { nativeElement } = this.container.element;\r\n        for (let el = nativeElement; el; el = el.parentElement) {\r\n            if (el.tagName === 'Q-GRID') {\r\n                return el;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\r\nLayerService.ɵfac = function LayerService_Factory(t) { return new (t || LayerService)(i0.ɵɵinject(TemplateService)); };\r\nLayerService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: LayerService, factory: LayerService.ɵfac });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LayerService, [{\r\n        type: Injectable\r\n    }], function () { return [{ type: TemplateService }]; }, null); })();\n\nclass LayerCoreDirective {\r\n    constructor(layerService, viewContainerRef) {\r\n        layerService.init(viewContainerRef);\r\n    }\r\n}\r\nLayerCoreDirective.ɵfac = function LayerCoreDirective_Factory(t) { return new (t || LayerCoreDirective)(i0.ɵɵdirectiveInject(LayerService), i0.ɵɵdirectiveInject(i0.ViewContainerRef)); };\r\nLayerCoreDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: LayerCoreDirective, selectors: [[\"\", \"q-grid-core-layer\", \"\"]] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LayerCoreDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-core-layer]',\r\n            }]\r\n    }], function () { return [{ type: LayerService }, { type: i0.ViewContainerRef }]; }, null); })();\n\nclass LayerCoreComponent {\r\n    constructor() {\r\n        this.hostClass = 'q-grid-layer';\r\n    }\r\n}\r\nLayerCoreComponent.ɵfac = function LayerCoreComponent_Factory(t) { return new (t || LayerCoreComponent)(); };\r\nLayerCoreComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: LayerCoreComponent, selectors: [[\"q-grid-core-layer\"]], hostVars: 2, hostBindings: function LayerCoreComponent_HostBindings(rf, ctx) { if (rf & 2) {\r\n        i0.ɵɵclassMap(ctx.hostClass);\r\n    } }, decls: 1, vars: 0, consts: [[\"q-grid-core-layer\", \"\"]], template: function LayerCoreComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementContainer(0, 0);\r\n    } }, dependencies: [LayerCoreDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LayerCoreComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-core-layer', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container q-grid-core-layer></ng-container>\\n\" }]\r\n    }], null, { hostClass: [{\r\n            type: HostBinding,\r\n            args: ['class']\r\n        }] }); })();\n\nclass MarkupDirective {\r\n    constructor(plugin, elementRef, table) {\r\n        this.plugin = plugin;\r\n        this.elementRef = elementRef;\r\n        this.table = table;\r\n        this.name = '';\r\n    }\r\n    ngOnInit() {\r\n        const { table, disposable } = this.plugin;\r\n        table.box.markup[this.getName()] = this.elementRef.nativeElement;\r\n        disposable.add(() => delete table.box.markup[this.getName()]);\r\n    }\r\n    getName() {\r\n        if (this.table && this.table.pin) {\r\n            return `${this.name}-${this.table.pin}`;\r\n        }\r\n        return this.name;\r\n    }\r\n}\r\nMarkupDirective.ɵfac = function MarkupDirective_Factory(t) { return new (t || MarkupDirective)(i0.ɵɵdirectiveInject(GridPlugin), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(TableCoreService, 8)); };\r\nMarkupDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: MarkupDirective, selectors: [[\"\", \"q-grid-markup\", \"\"]], inputs: { name: [\"q-grid-markup\", \"name\"] }, features: [i0.ɵɵProvidersFeature([GridPlugin])] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MarkupDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-markup]',\r\n                providers: [GridPlugin],\r\n            }]\r\n    }], function () { return [{ type: GridPlugin }, { type: i0.ElementRef }, { type: TableCoreService, decorators: [{\r\n                type: Optional\r\n            }] }]; }, { name: [{\r\n            type: Input,\r\n            args: ['q-grid-markup']\r\n        }] }); })();\n\n/* eslint-disable @angular-eslint/no-conflicting-lifecycle */\r\nclass TemplateDirective {\r\n    constructor(templateService, viewContainerRef) {\r\n        this.templateService = templateService;\r\n        this.viewContainerRef = viewContainerRef;\r\n        this.key = '';\r\n        this.context = null;\r\n        this.check = false;\r\n    }\r\n    ngOnChanges(changes) {\r\n        const keyChange = changes['key'];\r\n        if (keyChange) {\r\n            if (this.viewRef) {\r\n                this.viewRef.destroy();\r\n                this.viewRef = null;\r\n            }\r\n        }\r\n    }\r\n    ngDoCheck() {\r\n        if (!this.viewRef) {\r\n            const link = this.templateService.find(this.key);\r\n            if (link) {\r\n                this.viewRef = this.viewContainerRef.createEmbeddedView(link.template, this.context);\r\n            }\r\n        }\r\n    }\r\n}\r\nTemplateDirective.ɵfac = function TemplateDirective_Factory(t) { return new (t || TemplateDirective)(i0.ɵɵdirectiveInject(TemplateService), i0.ɵɵdirectiveInject(i0.ViewContainerRef)); };\r\nTemplateDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: TemplateDirective, selectors: [[\"ng-container\", \"key\", \"\"]], inputs: { key: \"key\", context: \"context\", check: \"check\" }, features: [i0.ɵɵNgOnChangesFeature] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TemplateDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: 'ng-container[key]', // eslint-disable-line @angular-eslint/directive-selector\r\n            }]\r\n    }], function () { return [{ type: TemplateService }, { type: i0.ViewContainerRef }]; }, { key: [{\r\n            type: Input\r\n        }], context: [{\r\n            type: Input\r\n        }], check: [{\r\n            type: Input\r\n        }] }); })();\n\nclass ToolbarCoreComponent {\r\n}\r\nToolbarCoreComponent.ɵfac = function ToolbarCoreComponent_Factory(t) { return new (t || ToolbarCoreComponent)(); };\r\nToolbarCoreComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ToolbarCoreComponent, selectors: [[\"q-grid-core-toolbar\"]], inputs: { position: \"position\" }, decls: 1, vars: 1, consts: [[3, \"key\"]], template: function ToolbarCoreComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementContainer(0, 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵpropertyInterpolate1(\"key\", \"toolbar-\", ctx.position, \".tpl.html\");\r\n    } }, dependencies: [TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToolbarCoreComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-core-toolbar', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"toolbar-{{position}}.tpl.html\\\"></ng-container>\\n\" }]\r\n    }], null, { position: [{\r\n            type: Input\r\n        }] }); })();\n\nclass ResizeDirective {\r\n    constructor(zone, plugin, qgrid, document, elementRef) {\r\n        this.zone = zone;\r\n        this.plugin = plugin;\r\n        this.qgrid = qgrid;\r\n        this.context = {\r\n            x: 0,\r\n            y: 0,\r\n            height: 0,\r\n            width: 0,\r\n        };\r\n        this.element = elementRef.nativeElement;\r\n        this.divider = document.createElement('div');\r\n        this.listener = {\r\n            divider: new EventListener(this.divider, new EventManager(this)),\r\n            document: new EventListener(document, new EventManager(this)),\r\n        };\r\n    }\r\n    get model() {\r\n        return this.plugin.model;\r\n    }\r\n    ngOnInit() {\r\n        const e = { data: this.key };\r\n        if (this.canResize(e)) {\r\n            this.zone.runOutsideAngular(() => {\r\n                this.listener.divider.on('mousedown', this.dragStart);\r\n            });\r\n            this.divider.classList.add(`${GRID_PREFIX}-resize-handler`);\r\n            this.element.appendChild(this.divider);\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.listener.divider.off();\r\n        this.listener.document.off();\r\n    }\r\n    dragStart(e) {\r\n        e.preventDefault();\r\n        const context = this.context;\r\n        const host = this.select();\r\n        context.width = host.clientWidth;\r\n        context.height = host.clientHeight;\r\n        context.x = e.screenX;\r\n        context.y = e.screenY;\r\n        this.zone.runOutsideAngular(() => {\r\n            this.listener.document.on('mousemove', this.drag);\r\n            this.listener.document.on('mouseup', this.dragEnd);\r\n        });\r\n        const model = this.model;\r\n        model.drag({ isActive: true });\r\n    }\r\n    drag(e) {\r\n        const { context, path, key } = this;\r\n        const { layout } = this.model;\r\n        const state = clone(layout()[path]);\r\n        state.set(key, {\r\n            width: context.width + e.screenX - context.x,\r\n            height: context.height + e.screenY - context.y,\r\n        });\r\n        layout({ [path]: state });\r\n    }\r\n    dragEnd() {\r\n        this.listener.document.off();\r\n        const model = this.model;\r\n        model.drag({ isActive: false });\r\n    }\r\n    select() {\r\n        if (this.selector === 'parent') {\r\n            return this.element.parentElement;\r\n        }\r\n        return this.element;\r\n    }\r\n}\r\nResizeDirective.ɵfac = function ResizeDirective_Factory(t) { return new (t || ResizeDirective)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(GridPlugin, 8), i0.ɵɵdirectiveInject(Grid), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nResizeDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: ResizeDirective, selectors: [[\"\", \"q-grid-resize\", \"\"]], inputs: { key: [\"q-grid-resize\", \"key\"], path: [\"q-grid-resize-path\", \"path\"], canResize: [\"q-grid-can-resize\", \"canResize\"], selector: [\"q-grid-resize-selector\", \"selector\"] } });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ResizeDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-resize]',\r\n            }]\r\n    }], function () { return [{ type: i0.NgZone }, { type: GridPlugin, decorators: [{\r\n                type: Optional\r\n            }] }, { type: Grid }, { type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [DOCUMENT]\r\n            }] }, { type: i0.ElementRef }]; }, { key: [{\r\n            type: Input,\r\n            args: ['q-grid-resize']\r\n        }], path: [{\r\n            type: Input,\r\n            args: ['q-grid-resize-path']\r\n        }], canResize: [{\r\n            type: Input,\r\n            args: ['q-grid-can-resize']\r\n        }], selector: [{\r\n            type: Input,\r\n            args: ['q-grid-resize-selector']\r\n        }] }); })();\n\nclass ThCoreDirective {\r\n    constructor($view, root, viewContainerRef, cellTemplate, cellClass, tr, elementRef) {\r\n        this.$view = $view;\r\n        this.root = root;\r\n        this.viewContainerRef = viewContainerRef;\r\n        this.cellTemplate = cellTemplate;\r\n        this.cellClass = cellClass;\r\n        this.tr = tr;\r\n        this.$implicit = this;\r\n        this.element = elementRef.nativeElement.parentNode;\r\n    }\r\n    get column() {\r\n        return this.columnView.model;\r\n    }\r\n    get columnIndex() {\r\n        return this.columnView.columnIndex;\r\n    }\r\n    get row() {\r\n        return this.tr.model;\r\n    }\r\n    get rowIndex() {\r\n        return this.tr.index;\r\n    }\r\n    ngOnInit() {\r\n        const { column, element } = this;\r\n        const { table } = this.root;\r\n        table.box.bag.head.addCell(this);\r\n        let targetColumn = column;\r\n        let targetSource = 'head';\r\n        if (column.type === 'filter-row') {\r\n            targetSource = 'filter';\r\n            targetColumn = column.model;\r\n            this.element.classList.add('q-grid-filter-row');\r\n        }\r\n        this.cellClass.toHead(element, column);\r\n        this.cellClass.toBody(element, targetColumn);\r\n        const link = this.cellTemplate.build(targetSource, targetColumn, 'view');\r\n        link(this.viewContainerRef, this);\r\n    }\r\n    mode(value) {\r\n        throw new GridError('th-core.directive', `${value} mode is not supported`);\r\n    }\r\n    ngOnDestroy() {\r\n        const { table } = this.root;\r\n        table.box.bag.head.deleteCell(this);\r\n    }\r\n}\r\nThCoreDirective.ɵfac = function ThCoreDirective_Factory(t) { return new (t || ThCoreDirective)(i0.ɵɵdirectiveInject(GridLet), i0.ɵɵdirectiveInject(GridPlugin), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(CellTemplateService), i0.ɵɵdirectiveInject(CellClassService), i0.ɵɵdirectiveInject(TrhCoreDirective), i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nThCoreDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: ThCoreDirective, selectors: [[\"\", \"q-grid-core-th\", \"\"]], inputs: { columnView: [\"q-grid-core-th\", \"columnView\"] } });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThCoreDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-core-th]',\r\n            }]\r\n    }], function () { return [{ type: GridLet }, { type: GridPlugin }, { type: i0.ViewContainerRef }, { type: CellTemplateService }, { type: CellClassService }, { type: TrhCoreDirective }, { type: i0.ElementRef }]; }, { columnView: [{\r\n            type: Input,\r\n            args: ['q-grid-core-th']\r\n        }] }); })();\n\nconst _c0$3 = [\"q-grid-core-head\", \"\"];\r\nfunction HeadCoreComponent_tr_0_th_1_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"th\", 3);\r\n    i0.ɵɵelementContainer(1, 4);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const $column_r4 = ctx.$implicit;\r\n    const ctx_r3 = i0.ɵɵnextContext(2);\r\n    i0.ɵɵproperty(\"q-grid-drag\", ctx_r3.$view.head.drag)(\"q-grid-drag-data\", $column_r4.model.key)(\"q-grid-resize\", $column_r4.model.key)(\"q-grid-can-resize\", ctx_r3.$view.head.resize.canExecute);\r\n    i0.ɵɵattribute(\"rowspan\", $column_r4.rowspan)(\"colspan\", $column_r4.colspan);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"q-grid-core-th\", $column_r4);\r\n} }\r\nfunction HeadCoreComponent_tr_0_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"tr\", 1);\r\n    i0.ɵɵtemplate(1, HeadCoreComponent_tr_0_th_1_Template, 2, 7, \"th\", 2);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const $row_r1 = ctx.$implicit;\r\n    const $rowIndex_r2 = ctx.index;\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"q-grid-core-trh\", $row_r1)(\"q-grid-core-index\", $rowIndex_r2);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.$view.head.columns($row_r1, ctx_r0.$table.pin))(\"ngForTrackBy\", ctx_r0.columnId);\r\n} }\r\nclass HeadCoreComponent {\r\n    constructor($view, $table, elementRef, plugin, zone, cd) {\r\n        this.$view = $view;\r\n        this.$table = $table;\r\n        this.elementRef = elementRef;\r\n        this.plugin = plugin;\r\n        this.zone = zone;\r\n        this.cd = cd;\r\n    }\r\n    ngOnInit() {\r\n        const { disposable, model, observe } = this.plugin;\r\n        const element = this.elementRef.nativeElement;\r\n        const host = new HeadHost(this.plugin);\r\n        const listener = new EventListener(element, new EventManager(this));\r\n        this.zone.runOutsideAngular(() => {\r\n            disposable.add(listener.on('mousemove', e => host.mouseMove(e)));\r\n            disposable.add(listener.on('mouseleave', e => host.mouseLeave(e)));\r\n        });\r\n        observe(model.sceneChanged)\r\n            .subscribe(e => {\r\n            if (e.hasChanges('status') && e.state.status === 'push') {\r\n                this.cd.markForCheck();\r\n            }\r\n        });\r\n    }\r\n    columnId(index, item) {\r\n        return item.model.key;\r\n    }\r\n    rowId(index) {\r\n        return index;\r\n    }\r\n}\r\nHeadCoreComponent.ɵfac = function HeadCoreComponent_Factory(t) { return new (t || HeadCoreComponent)(i0.ɵɵdirectiveInject(GridLet), i0.ɵɵdirectiveInject(TableCoreService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(GridPlugin), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };\r\nHeadCoreComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: HeadCoreComponent, selectors: [[\"thead\", \"q-grid-core-head\", \"\"]], features: [i0.ɵɵProvidersFeature([GridPlugin])], attrs: _c0$3, decls: 1, vars: 2, consts: [[\"q-grid-core-source\", \"head\", 3, \"q-grid-core-trh\", \"q-grid-core-index\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"q-grid-core-source\", \"head\", 3, \"q-grid-core-trh\", \"q-grid-core-index\"], [\"q-grid-drop-area\", \"head\", \"q-grid-resize-path\", \"columns\", 3, \"q-grid-drag\", \"q-grid-drag-data\", \"q-grid-resize\", \"q-grid-can-resize\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"q-grid-drop-area\", \"head\", \"q-grid-resize-path\", \"columns\", 3, \"q-grid-drag\", \"q-grid-drag-data\", \"q-grid-resize\", \"q-grid-can-resize\"], [3, \"q-grid-core-th\"]], template: function HeadCoreComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵtemplate(0, HeadCoreComponent_tr_0_Template, 2, 4, \"tr\", 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"ngForOf\", ctx.$view.head.rows)(\"ngForTrackBy\", ctx.rowId);\r\n    } }, dependencies: [i4.NgForOf, TrhCoreDirective, ResizeDirective, DragDirective, ThCoreDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HeadCoreComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'thead[q-grid-core-head]', providers: [GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<tr *ngFor=\\\"let $row of $view.head.rows; trackBy: rowId; index as $rowIndex\\\"\\n    [q-grid-core-trh]=\\\"$row\\\"\\n    [q-grid-core-index]=\\\"$rowIndex\\\"\\n    q-grid-core-source=\\\"head\\\">\\n    <th *ngFor=\\\"let $column of $view.head.columns($row, $table.pin); trackBy: columnId; index as $columnIndex\\\"\\n        [attr.rowspan]=\\\"$column.rowspan\\\"\\n        [attr.colspan]=\\\"$column.colspan\\\"\\n        [q-grid-drag]=\\\"$view.head.drag\\\"\\n        [q-grid-drag-data]=\\\"$column.model.key\\\"\\n        q-grid-drop-area=\\\"head\\\"\\n        q-grid-resize-path=\\\"columns\\\"\\n        [q-grid-resize]=\\\"$column.model.key\\\"\\n        [q-grid-can-resize]=\\\"$view.head.resize.canExecute\\\">\\n        <ng-container [q-grid-core-th]=\\\"$column\\\">\\n        </ng-container>\\n    </th>\\n</tr>\\n\" }]\r\n    }], function () { return [{ type: GridLet }, { type: TableCoreService }, { type: i0.ElementRef }, { type: GridPlugin }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }]; }, null); })();\n\nfunction TableCoreComponent_thead_1_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelement(0, \"thead\", 6);\r\n} if (rf & 2) {\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"q-grid-drop\", ctx_r0.$view.head.drop)(\"q-grid-drag-over\", ctx_r0.$view.head.drop);\r\n} }\r\nfunction TableCoreComponent_tbody_2_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelement(0, \"tbody\", 7);\r\n} if (rf & 2) {\r\n    const ctx_r1 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"q-grid-drop\", ctx_r1.$view.row.drop)(\"q-grid-drag-over\", ctx_r1.$view.row.drop);\r\n} }\r\nfunction TableCoreComponent_tbody_3_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelement(0, \"tbody\", 8);\r\n} if (rf & 2) {\r\n    const ctx_r2 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"q-grid-drop\", ctx_r2.$view.row.drop)(\"q-grid-vscroll-port-y\", ctx_r2.$view.scroll.y)(\"q-grid-drag-over\", ctx_r2.$view.row.drop);\r\n} }\r\nfunction TableCoreComponent_tbody_4_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelement(0, \"tbody\", 9);\r\n} if (rf & 2) {\r\n    const ctx_r3 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"q-grid-drop\", ctx_r3.$view.row.drop)(\"q-grid-drag-over\", ctx_r3.$view.row.drop);\r\n} }\r\nfunction TableCoreComponent_tfoot_5_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelement(0, \"tfoot\", 10);\r\n} }\r\nclass TableCoreComponent {\r\n    constructor($view, plugin, tableHost, cd) {\r\n        this.$view = $view;\r\n        this.plugin = plugin;\r\n        this.tableHost = tableHost;\r\n        this.cd = cd;\r\n        this.pin = 'mid';\r\n    }\r\n    get visibility() {\r\n        const { model } = this.plugin;\r\n        return model.visibility();\r\n    }\r\n    ngOnInit() {\r\n        const { model, observe } = this.plugin;\r\n        this.tableHost.pin = this.pin;\r\n        observe(model.visibilityChanged)\r\n            .subscribe(() => {\r\n            this.cd.markForCheck();\r\n            this.cd.detectChanges();\r\n        });\r\n    }\r\n}\r\nTableCoreComponent.ɵfac = function TableCoreComponent_Factory(t) { return new (t || TableCoreComponent)(i0.ɵɵdirectiveInject(GridLet), i0.ɵɵdirectiveInject(GridPlugin), i0.ɵɵdirectiveInject(TableCoreService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };\r\nTableCoreComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TableCoreComponent, selectors: [[\"q-grid-core-table\"]], inputs: { pin: \"pin\" }, features: [i0.ɵɵProvidersFeature([TableCoreService])], decls: 6, vars: 5, consts: [[\"q-grid-markup\", \"table\"], [\"q-grid-core-head\", \"\", \"q-grid-markup\", \"head\", \"q-grid-animate\", \"false\", \"q-grid-drop-area\", \"head\", \"q-grid-drag-direction\", \"x\", 3, \"q-grid-drop\", \"q-grid-drag-over\", 4, \"ngIf\"], [\"class\", \"q-grid-body-top\", \"pin\", \"top\", \"q-grid-core-body\", \"\", \"q-grid-markup\", \"body-top\", \"q-grid-animate\", \"false\", \"tabindex\", \"0\", \"q-grid-drop-area\", \"body\", \"q-grid-drag-direction\", \"y\", 3, \"q-grid-drop\", \"q-grid-drag-over\", 4, \"ngIf\"], [\"q-grid-core-body\", \"\", \"q-grid-markup\", \"body\", \"q-grid-animate\", \"false\", \"tabindex\", \"0\", \"q-grid-drop-area\", \"body\", \"q-grid-drag-direction\", \"y\", \"q-grid-vscroll\", \"\", 3, \"q-grid-drop\", \"q-grid-vscroll-port-y\", \"q-grid-drag-over\", 4, \"ngIf\"], [\"class\", \"q-grid-body-bottom\", \"pin\", \"bottom\", \"q-grid-core-body\", \"\", \"q-grid-markup\", \"body-bottom\", \"q-grid-animate\", \"false\", \"tabindex\", \"0\", \"q-grid-drop-area\", \"body\", \"q-grid-drag-direction\", \"y\", 3, \"q-grid-drop\", \"q-grid-drag-over\", 4, \"ngIf\"], [\"q-grid-core-foot\", \"\", \"q-grid-markup\", \"foot\", \"q-grid-animate\", \"false\", 4, \"ngIf\"], [\"q-grid-core-head\", \"\", \"q-grid-markup\", \"head\", \"q-grid-animate\", \"false\", \"q-grid-drop-area\", \"head\", \"q-grid-drag-direction\", \"x\", 3, \"q-grid-drop\", \"q-grid-drag-over\"], [\"pin\", \"top\", \"q-grid-core-body\", \"\", \"q-grid-markup\", \"body-top\", \"q-grid-animate\", \"false\", \"tabindex\", \"0\", \"q-grid-drop-area\", \"body\", \"q-grid-drag-direction\", \"y\", 1, \"q-grid-body-top\", 3, \"q-grid-drop\", \"q-grid-drag-over\"], [\"q-grid-core-body\", \"\", \"q-grid-markup\", \"body\", \"q-grid-animate\", \"false\", \"tabindex\", \"0\", \"q-grid-drop-area\", \"body\", \"q-grid-drag-direction\", \"y\", \"q-grid-vscroll\", \"\", 3, \"q-grid-drop\", \"q-grid-vscroll-port-y\", \"q-grid-drag-over\"], [\"pin\", \"bottom\", \"q-grid-core-body\", \"\", \"q-grid-markup\", \"body-bottom\", \"q-grid-animate\", \"false\", \"tabindex\", \"0\", \"q-grid-drop-area\", \"body\", \"q-grid-drag-direction\", \"y\", 1, \"q-grid-body-bottom\", 3, \"q-grid-drop\", \"q-grid-drag-over\"], [\"q-grid-core-foot\", \"\", \"q-grid-markup\", \"foot\", \"q-grid-animate\", \"false\"]], template: function TableCoreComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"table\", 0);\r\n        i0.ɵɵtemplate(1, TableCoreComponent_thead_1_Template, 1, 2, \"thead\", 1);\r\n        i0.ɵɵtemplate(2, TableCoreComponent_tbody_2_Template, 1, 2, \"tbody\", 2);\r\n        i0.ɵɵtemplate(3, TableCoreComponent_tbody_3_Template, 1, 3, \"tbody\", 3);\r\n        i0.ɵɵtemplate(4, TableCoreComponent_tbody_4_Template, 1, 2, \"tbody\", 4);\r\n        i0.ɵɵtemplate(5, TableCoreComponent_tfoot_5_Template, 1, 0, \"tfoot\", 5);\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.visibility.head);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.visibility.pin.top);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.visibility.body);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.visibility.pin.bottom);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.visibility.foot);\r\n    } }, dependencies: [i4.NgIf, HeadCoreComponent, FootCoreComponent, BodyCoreComponent, MarkupDirective, DropDirective, VscrollDirective, VscrollPortYDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TableCoreComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-core-table', providers: [TableCoreService], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<table q-grid-markup=\\\"table\\\">\\n\\t<thead *ngIf=\\\"visibility.head\\\"\\n\\t\\t\\t\\tq-grid-core-head\\n\\t\\t\\t\\tq-grid-markup=\\\"head\\\"\\n\\t\\t\\t\\tq-grid-animate=\\\"false\\\"\\n\\t\\t\\t\\tq-grid-drop-area=\\\"head\\\"\\n\\t\\t\\t\\t[q-grid-drop]=\\\"$any($view.head.drop)\\\"\\n\\t\\t\\t\\tq-grid-drag-direction=\\\"x\\\"\\n\\t\\t\\t\\t[q-grid-drag-over]=\\\"$any($view.head.drop)\\\">\\n\\t</thead>\\n\\t<tbody *ngIf=\\\"visibility.pin.top\\\"\\n\\t\\t\\t\\tclass=\\\"q-grid-body-top\\\"\\n\\t\\t\\t\\tpin=\\\"top\\\"\\n\\t\\t\\t\\tq-grid-core-body\\n\\t\\t\\t\\tq-grid-markup=\\\"body-top\\\"\\n\\t\\t\\t\\tq-grid-animate=\\\"false\\\"\\n\\t\\t\\t\\ttabindex=\\\"0\\\"\\n\\t\\t\\t\\tq-grid-drop-area=\\\"body\\\"\\n\\t\\t\\t\\t[q-grid-drop]=\\\"$any($view.row.drop)\\\"\\n\\t\\t\\t\\tq-grid-drag-direction=\\\"y\\\"\\n\\t\\t\\t\\t[q-grid-drag-over]=\\\"$any($view.row.drop)\\\">\\n\\t</tbody>\\n\\t<tbody *ngIf=\\\"visibility.body\\\"\\n\\t\\t\\t\\tq-grid-core-body\\n\\t\\t\\t\\tq-grid-markup=\\\"body\\\"\\n\\t\\t\\t\\tq-grid-animate=\\\"false\\\"\\n\\t\\t\\t\\ttabindex=\\\"0\\\"\\n\\t\\t\\t\\tq-grid-drop-area=\\\"body\\\"\\n\\t\\t\\t\\t[q-grid-drop]=\\\"$any($view.row.drop)\\\"\\n\\t\\t\\t\\tq-grid-drag-direction=\\\"y\\\"\\n\\t\\t\\t\\tq-grid-vscroll\\n\\t\\t\\t\\t[q-grid-vscroll-port-y]=\\\"$any($view.scroll.y)\\\"\\n\\t\\t\\t\\t[q-grid-drag-over]=\\\"$any($view.row.drop)\\\">\\n\\t</tbody>\\n\\t<tbody *ngIf=\\\"visibility.pin.bottom\\\"\\n\\t\\t\\t\\tclass=\\\"q-grid-body-bottom\\\"\\n\\t\\t\\t\\tpin=\\\"bottom\\\"\\n\\t\\t\\t\\tq-grid-core-body\\n\\t\\t\\t\\tq-grid-markup=\\\"body-bottom\\\"\\n\\t\\t\\t\\tq-grid-animate=\\\"false\\\"\\n\\t\\t\\t\\ttabindex=\\\"0\\\"\\n\\t\\t\\t\\tq-grid-drop-area=\\\"body\\\"\\n\\t\\t\\t\\t[q-grid-drop]=\\\"$any($view.row.drop)\\\"\\n\\t\\t\\t\\tq-grid-drag-direction=\\\"y\\\"\\n\\t\\t\\t\\t[q-grid-drag-over]=\\\"$any($view.row.drop)\\\">\\n\\t</tbody>\\n\\t<tfoot *ngIf=\\\"visibility.foot\\\"\\n\\t\\t\\t\\tq-grid-core-foot\\n\\t\\t\\t\\tq-grid-markup=\\\"foot\\\"\\n\\t\\t\\t\\tq-grid-animate=\\\"false\\\">\\n\\t</tfoot>\\n</table>\\n\" }]\r\n    }], function () { return [{ type: GridLet }, { type: GridPlugin }, { type: TableCoreService }, { type: i0.ChangeDetectorRef }]; }, { pin: [{\r\n            type: Input\r\n        }] }); })();\n\nfunction ViewCoreComponent_q_grid_core_table_0_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelement(0, \"q-grid-core-table\", 4);\r\n} }\r\nfunction ViewCoreComponent_q_grid_core_table_2_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelement(0, \"q-grid-core-table\", 5);\r\n} }\r\nclass ViewCoreComponent {\r\n    constructor(plugin, qgrid, cd, zone, view, elementRef) {\r\n        this.plugin = plugin;\r\n        this.qgrid = qgrid;\r\n        this.cd = cd;\r\n        this.zone = zone;\r\n        this.view = view;\r\n        this.elementRef = elementRef;\r\n        zone\r\n            .onStable\r\n            .subscribe(() => {\r\n            const { model, table } = this.plugin;\r\n            if (model) {\r\n                const { status } = model.scene();\r\n                if (status === 'push') {\r\n                    table.invalidate();\r\n                    model.scene({\r\n                        status: 'stop',\r\n                    }, {\r\n                        source: 'view-core.component',\r\n                        behavior: 'core',\r\n                    });\r\n                    if (this.host) {\r\n                        this.host.invalidate();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    get visibility() {\r\n        const { model } = this.plugin;\r\n        return model.visibility();\r\n    }\r\n    ngDoCheck() {\r\n        if (this.host) {\r\n            const { model } = this.plugin;\r\n            if (model.scene().status === 'stop') {\r\n                this.host.invalidate();\r\n            }\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        const { model, table, observeReply, observe, view, disposable, service, } = this.plugin;\r\n        // TODO: make it better\r\n        table.box.markup.view = this.elementRef.nativeElement;\r\n        const cmdManager = new TableCommandManager(f => f(), table);\r\n        this.view.init(this.plugin, cmdManager);\r\n        view.scroll.y.settings.emit = f => {\r\n            f();\r\n            this.cd.markForCheck();\r\n            this.cd.detectChanges();\r\n        };\r\n        this.host = new ViewHost(this.plugin);\r\n        observeReply(model.sceneChanged)\r\n            .subscribe(e => {\r\n            if (e.hasChanges('status') && e.state.status === 'pull') {\r\n                this.cd.markForCheck();\r\n                this.zone.run(() => model.scene({\r\n                    status: 'push',\r\n                }, {\r\n                    source: 'view-core.component',\r\n                    behavior: 'core',\r\n                }));\r\n            }\r\n        });\r\n        observe(model.styleChanged)\r\n            .subscribe(() => this.host.invalidate());\r\n        observe(model.layoutChanged)\r\n            .subscribe(e => {\r\n            if (e.hasChanges('rows')) {\r\n                this.host.invalidate();\r\n            }\r\n        });\r\n        observeReply(model.editChanged)\r\n            .subscribe(e => {\r\n            if (e.hasChanges('status')) {\r\n                if (e.state.status === 'endBatch') {\r\n                    service.invalidate({\r\n                        source: 'view-core.component',\r\n                        why: 'refresh',\r\n                    });\r\n                }\r\n            }\r\n        });\r\n        const listener = new EventListener(this.elementRef.nativeElement, new EventManager(this));\r\n        this.zone.runOutsideAngular(() => {\r\n            disposable.add(listener.on('mousemove', e => this.host.mouseMove(e)));\r\n            disposable.add(listener.on('mouseenter', e => this.host.mouseEnter(e)));\r\n            disposable.add(listener.on('mouseleave', e => this.host.mouseLeave(e)));\r\n            disposable.add(listener.on('mouseup', e => this.host.mouseUp(e)));\r\n        });\r\n        disposable.add(listener.on('mousedown', e => this.host.mouseDown(e)));\r\n        if (model.scroll().mode === 'virtual') {\r\n            const asVirtualBody = table.body;\r\n            if (asVirtualBody.requestInvalidate) {\r\n                asVirtualBody.requestInvalidate.on(() => this.host.invalidate());\r\n            }\r\n        }\r\n    }\r\n}\r\nViewCoreComponent.ɵfac = function ViewCoreComponent_Factory(t) { return new (t || ViewCoreComponent)(i0.ɵɵdirectiveInject(GridPlugin), i0.ɵɵdirectiveInject(Grid), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(GridLet), i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nViewCoreComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ViewCoreComponent, selectors: [[\"q-grid-core-view\"]], features: [i0.ɵɵProvidersFeature([\r\n            CellTemplateService,\r\n            CellClassService,\r\n            GridPlugin,\r\n        ])], decls: 4, vars: 2, consts: [[\"pin\", \"left\", \"class\", \"q-grid-table q-grid-table-left q-grid-layout-column\", 4, \"ngIf\"], [\"pin\", \"mid\", 1, \"q-grid-table\", \"q-grid-table-mid\", \"q-grid-layout-column\", \"q-grid-flex\"], [\"pin\", \"right\", \"class\", \"q-grid-table q-grid-table-right q-grid-layout-column\", 4, \"ngIf\"], [1, \"q-grid-cell-handler\"], [\"pin\", \"left\", 1, \"q-grid-table\", \"q-grid-table-left\", \"q-grid-layout-column\"], [\"pin\", \"right\", 1, \"q-grid-table\", \"q-grid-table-right\", \"q-grid-layout-column\"]], template: function ViewCoreComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵtemplate(0, ViewCoreComponent_q_grid_core_table_0_Template, 1, 0, \"q-grid-core-table\", 0);\r\n        i0.ɵɵelement(1, \"q-grid-core-table\", 1);\r\n        i0.ɵɵtemplate(2, ViewCoreComponent_q_grid_core_table_2_Template, 1, 0, \"q-grid-core-table\", 2);\r\n        i0.ɵɵelement(3, \"q-grid-cell-handler\", 3);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"ngIf\", ctx.visibility.pin.left);\r\n        i0.ɵɵadvance(2);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.visibility.pin.right);\r\n    } }, dependencies: [i4.NgIf, CellHandlerComponent, TableCoreComponent], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ViewCoreComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-core-view', providers: [\r\n                    CellTemplateService,\r\n                    CellClassService,\r\n                    GridPlugin,\r\n                ], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<q-grid-core-table *ngIf=\\\"visibility.pin.left\\\"\\n                   pin=\\\"left\\\"\\n                   class=\\\"q-grid-table q-grid-table-left q-grid-layout-column\\\">\\n</q-grid-core-table>\\n\\n<q-grid-core-table pin=\\\"mid\\\"\\n                   class=\\\"q-grid-table q-grid-table-mid q-grid-layout-column q-grid-flex\\\">\\n</q-grid-core-table>\\n\\n<q-grid-core-table *ngIf=\\\"visibility.pin.right\\\"\\n                   pin=\\\"right\\\"\\n                   class=\\\"q-grid-table q-grid-table-right q-grid-layout-column\\\">\\n</q-grid-core-table>\\n\\n<q-grid-cell-handler class=\\\"q-grid-cell-handler\\\">\\n</q-grid-cell-handler>\\n\" }]\r\n    }], function () { return [{ type: GridPlugin }, { type: Grid }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: GridLet }, { type: i0.ElementRef }]; }, null); })();\n\nfunction GridComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementContainer(0);\r\n} }\r\nfunction GridComponent_q_grid_core_toolbar_2_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelement(0, \"q-grid-core-toolbar\", 8);\r\n} }\r\nfunction GridComponent_q_grid_core_toolbar_4_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelement(0, \"q-grid-core-toolbar\", 9);\r\n} }\r\nfunction GridComponent_q_grid_core_toolbar_6_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelement(0, \"q-grid-core-toolbar\", 10);\r\n} }\r\nfunction GridComponent_q_grid_core_toolbar_7_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelement(0, \"q-grid-core-toolbar\", 11);\r\n} }\r\nconst _c0$2 = function (a0, a1, a2, a3) { return { \"q-grid-with-left-pin\": a0, \"q-grid-with-right-pin\": a1, \"q-grid-with-top-pin\": a2, \"q-grid-with-bottom-pin\": a3 }; };\r\nclass GridComponent {\r\n    constructor(root, plugin, elementRef, zone, layerService, cd, stateAccessor, modelBuilder, document, theme) {\r\n        this.root = root;\r\n        this.plugin = plugin;\r\n        this.elementRef = elementRef;\r\n        this.zone = zone;\r\n        this.layerService = layerService;\r\n        this.cd = cd;\r\n        this.stateAccessor = stateAccessor;\r\n        this.modelBuilder = modelBuilder;\r\n        this.document = document;\r\n        this.firstSetup = true;\r\n        this.gridState = this.stateAccessor.setter(GridState);\r\n        this.dataState = this.stateAccessor.setter(DataState);\r\n        this.editState = this.stateAccessor.setter(EditState);\r\n        this.filterState = this.stateAccessor.setter(FilterState);\r\n        this.groupState = this.stateAccessor.setter(GroupState);\r\n        this.pivotState = this.stateAccessor.setter(PivotState);\r\n        this.selectionState = this.stateAccessor.setter(SelectionState);\r\n        this.scrollState = this.stateAccessor.setter(ScrollState);\r\n        this.sortState = this.stateAccessor.setter(SortState);\r\n        this.styleState = this.stateAccessor.setter(StyleState);\r\n        if (!theme.component) {\r\n            throw new GridError('grid.component', 'Ensure that grid theme module was included');\r\n        }\r\n        this.themeComponent = theme.component;\r\n    }\r\n    set model(value) {\r\n        this.root.model = value;\r\n    }\r\n    get model() {\r\n        return this.root.model;\r\n    }\r\n    // @deprecated\r\n    get visibility() {\r\n        // TODO: get rid of that\r\n        const { model } = this.plugin;\r\n        return model.visibility();\r\n    }\r\n    set gridId(id) { this.gridState({ id }); }\r\n    set gridTitle(header) { this.gridState({ caption: header }); }\r\n    set gridCaption(caption) { this.gridState({ caption }); }\r\n    set gridInteractionMode(interactionMode) { this.gridState({ interactionMode }); }\r\n    set dataColumns(columns) { if (Array.isArray(columns)) {\r\n        this.dataState({ columns });\r\n    } }\r\n    set dataRows(rows) {\r\n        if (Array.isArray(rows)) {\r\n            this.dataState({ rows });\r\n        }\r\n    }\r\n    set editCancel(cancel) { this.editState({ cancel }); }\r\n    set editCommit(commit) { this.editState({ commit }); }\r\n    set editEnter(enter) { this.editState({ enter }); }\r\n    set editMethod(method) { this.editState({ method }); }\r\n    set editMode(mode) { this.editState({ mode }); }\r\n    set editReset(reset) { this.editState({ reset }); }\r\n    set filterUnit(unit) { this.filterState({ unit }); }\r\n    set groupBy(by) { this.groupState({ by }); }\r\n    set groupMode(mode) { this.groupState({ mode }); }\r\n    set groupSummary(summary) { this.groupState({ summary }); }\r\n    set pivotBy(by) { this.pivotState({ by }); }\r\n    set selectionItems(items) { this.selectionState({ items }); }\r\n    set selectionArea(area) { this.selectionState({ area }); }\r\n    set selectionMode(mode) { this.selectionState({ mode }); }\r\n    set selectionUnit(unit) { this.selectionState({ unit }); }\r\n    set scrollMode(mode) { this.scrollState({ mode }); }\r\n    set sortBy(by) { this.sortState({ by }); }\r\n    set sortMode(mode) { this.sortState({ mode }); }\r\n    set sortTrigger(trigger) { this.sortState({ trigger }); }\r\n    set styleCell(cell) { this.styleState({ cell }); }\r\n    set styleRow(row) { this.styleState({ row }); }\r\n    ngOnInit() {\r\n        if (this.firstSetup) {\r\n            this.setup();\r\n        }\r\n        const { model, disposable, observe } = this.plugin;\r\n        const { nativeElement } = this.elementRef;\r\n        if (nativeElement.classList.length) {\r\n            model.style({\r\n                classList: Array.from(nativeElement.classList),\r\n            }, {\r\n                source: 'grid.component',\r\n            });\r\n        }\r\n        const host = new GridHost(nativeElement, this.plugin);\r\n        const listener = new EventListener(nativeElement, new EventManager(this));\r\n        const docListener = new EventListener(this.document, new EventManager(this));\r\n        this.zone.runOutsideAngular(() => {\r\n            disposable.add(docListener.on('focusin', () => host.invalidateActive()));\r\n            disposable.add(docListener.on('mousedown', e => {\r\n                if (model.edit().status === 'edit') {\r\n                    const path = eventPath(e);\r\n                    const clickedOutside = path.every(x => x !== nativeElement && x.classList && !x.classList.contains('q-grid-editor-part'));\r\n                    if (clickedOutside) {\r\n                        model.edit({\r\n                            status: 'view',\r\n                        }, {\r\n                            source: 'document.click',\r\n                        });\r\n                    }\r\n                }\r\n            }));\r\n            disposable.add(listener.on('keyup', e => host.keyUp(e, 'grid')));\r\n        });\r\n        disposable.add(listener.on('keydown', e => host.keyDown(e, 'grid')));\r\n        observe(model.visibilityChanged)\r\n            .subscribe(() => this.cd.detectChanges());\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes.model || this.firstSetup) {\r\n            this.setup();\r\n        }\r\n        this.stateAccessor.write(this.model);\r\n    }\r\n    setup() {\r\n        this.firstSetup = false;\r\n        const model = this.model || this.modelBuilder.build();\r\n        const table = tableFactory(model, name => this.layerService.create(name));\r\n        this.root.model = model;\r\n        this.root.table = table;\r\n    }\r\n}\r\nGridComponent.ɵfac = function GridComponent_Factory(t) { return new (t || GridComponent)(i0.ɵɵdirectiveInject(GridRoot), i0.ɵɵdirectiveInject(GridPlugin), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(LayerService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(StateAccessor), i0.ɵɵdirectiveInject(GridModelBuilder), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(ThemeService)); };\r\nGridComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: GridComponent, selectors: [[\"q-grid\"]], inputs: { model: \"model\", gridId: [\"id\", \"gridId\"], gridTitle: [\"header\", \"gridTitle\"], gridCaption: [\"caption\", \"gridCaption\"], gridInteractionMode: [\"interactionMode\", \"gridInteractionMode\"], dataColumns: [\"columns\", \"dataColumns\"], dataRows: [\"rows\", \"dataRows\"], editCancel: \"editCancel\", editCommit: \"editCommit\", editEnter: \"editEnter\", editMethod: \"editMethod\", editMode: \"editMode\", editReset: \"editReset\", filterUnit: \"filterUnit\", groupBy: \"groupBy\", groupMode: \"groupMode\", groupSummary: \"groupSummary\", pivotBy: \"pivotBy\", selectionItems: [\"selection\", \"selectionItems\"], selectionArea: \"selectionArea\", selectionMode: \"selectionMode\", selectionUnit: \"selectionUnit\", scrollMode: \"scrollMode\", sortBy: \"sortBy\", sortMode: \"sortMode\", sortTrigger: \"sortTrigger\", styleCell: \"styleCell\", styleRow: \"styleRow\" }, features: [i0.ɵɵProvidersFeature([\r\n            Grid,\r\n            GridPlugin,\r\n            GridRoot,\r\n            GridLet,\r\n            LayerService,\r\n            TemplateCacheService,\r\n            TemplateLinkService,\r\n            TemplateService,\r\n            StateAccessor,\r\n        ]), i0.ɵɵNgOnChangesFeature], decls: 9, vars: 11, consts: [[4, \"ngComponentOutlet\"], [\"q-grid-markup\", \"box\", 1, \"q-grid-box\", \"q-grid-layout-column\"], [\"position\", \"top\", \"class\", \"q-grid-toolbar q-grid-toolbar-top q-grid-flex-auto\", 4, \"ngIf\"], [1, \"q-grid-flex-100\", \"q-grid-layout-row\", 3, \"ngClass\"], [\"position\", \"left\", \"class\", \"q-grid-toolbar q-grid-toolbar-left q-grid-flex-auto\", 4, \"ngIf\"], [\"q-grid-markup\", \"view\", 1, \"q-grid-view\", \"q-grid-layout-row\", \"q-grid-flex\"], [\"position\", \"right\", \"class\", \"q-grid-toolbar q-grid-toolbar-right q-grid-flex-auto\", 4, \"ngIf\"], [\"position\", \"bottom\", \"class\", \"q-grid-toolbar q-grid-toolbar-bottom q-grid-flex-auto\", 4, \"ngIf\"], [\"position\", \"top\", 1, \"q-grid-toolbar\", \"q-grid-toolbar-top\", \"q-grid-flex-auto\"], [\"position\", \"left\", 1, \"q-grid-toolbar\", \"q-grid-toolbar-left\", \"q-grid-flex-auto\"], [\"position\", \"right\", 1, \"q-grid-toolbar\", \"q-grid-toolbar-right\", \"q-grid-flex-auto\"], [\"position\", \"bottom\", 1, \"q-grid-toolbar\", \"q-grid-toolbar-bottom\", \"q-grid-flex-auto\"]], template: function GridComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵtemplate(0, GridComponent_ng_container_0_Template, 1, 0, \"ng-container\", 0);\r\n        i0.ɵɵelementStart(1, \"q-grid-box\", 1);\r\n        i0.ɵɵtemplate(2, GridComponent_q_grid_core_toolbar_2_Template, 1, 0, \"q-grid-core-toolbar\", 2);\r\n        i0.ɵɵelementStart(3, \"div\", 3);\r\n        i0.ɵɵtemplate(4, GridComponent_q_grid_core_toolbar_4_Template, 1, 0, \"q-grid-core-toolbar\", 4);\r\n        i0.ɵɵelement(5, \"q-grid-core-view\", 5);\r\n        i0.ɵɵtemplate(6, GridComponent_q_grid_core_toolbar_6_Template, 1, 0, \"q-grid-core-toolbar\", 6);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵtemplate(7, GridComponent_q_grid_core_toolbar_7_Template, 1, 0, \"q-grid-core-toolbar\", 7);\r\n        i0.ɵɵelement(8, \"q-grid-core-layer\");\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"ngComponentOutlet\", ctx.themeComponent);\r\n        i0.ɵɵadvance(2);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.visibility.toolbar.top);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction4(6, _c0$2, ctx.visibility.pin.left, ctx.visibility.pin.right, ctx.visibility.pin.top, ctx.visibility.pin.bottom));\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.visibility.toolbar.left);\r\n        i0.ɵɵadvance(2);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.visibility.toolbar.right);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.visibility.toolbar.bottom);\r\n    } }, dependencies: [i4.NgClass, i4.NgComponentOutlet, i4.NgIf, BoxComponent, LayerCoreComponent, MarkupDirective, ToolbarCoreComponent, ViewCoreComponent], styles: [\".q-grid-flex-auto{flex:1 1 auto;box-sizing:border-box}.q-grid-flex-none{flex:0 0 auto;box-sizing:border-box}.q-grid-flex{flex:1;box-sizing:border-box}.q-grid-flex-100{flex:1 1 100%;max-width:100%;max-height:100%;box-sizing:border-box}.q-grid-layout-row>.q-grid-flex-100{flex:1 1 100%;max-width:100%;max-height:100%;box-sizing:border-box}.q-grid-layout-column>.q-grid-flex-100{flex:1 1 100%;max-width:100%;max-height:100%;box-sizing:border-box}.q-grid-layout-row>.q-grid-flex{min-width:0}.q-grid-layout-column>.q-grid-flex{min-height:0}.q-grid-layout-column,.q-grid-layout-row{display:flex;box-sizing:border-box}.q-grid-layout-column{flex-direction:column}.q-grid-layout-row{flex-direction:row;min-height:0}.q-grid-layout-align-center-center{justify-content:center;align-items:center;align-content:center;max-width:100%}.q-grid-layout-align-center-center>*{max-width:100%;box-sizing:border-box}.q-grid-layout-align-start-center{justify-content:flex-start;align-items:center;align-content:center;max-width:100%}.q-grid-layout-align-start-center>*{max-width:100%;box-sizing:border-box}.q-grid-layout-align-end-center{justify-content:flex-end;align-items:center;align-content:center;max-width:100%}.q-grid-layout-align-end-center>*{max-width:100%;box-sizing:border-box}q-grid{display:block}.q-grid tbody tr.q-grid-scroll-mark{height:0;border:none}.q-grid ::-webkit-scrollbar{width:8px;height:8px}.q-grid ::-webkit-scrollbar-thumb{height:15px;background-color:#c8c8c8;box-shadow:inset 1px 1px #0000001a,inset 0 -1px #00000012}.q-grid ::-webkit-scrollbar-button{width:0;height:0;display:none}.q-grid ::-webkit-scrollbar-corner{background-color:transparent}.q-grid ::-webkit-scrollbar-track,.q-grid ::-webkit-scrollbar-track-piece{background-color:#f8f8f8}.q-grid.q-grid-box{height:100%;min-height:100%;max-height:100%;transform:translateZ(0);position:relative;font-family:roboto,Helvetica Neue,sans-serif}.q-grid td,.q-grid th{width:150px;min-width:150px;max-width:150px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;-ms-box-sizing:border-box;user-select:none;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;vertical-align:middle;text-align:left;position:relative}.q-grid td.q-grid-pivot,.q-grid th.q-grid-pivot{text-align:center}.q-grid td.q-grid-pad,.q-grid th.q-grid-pad{width:100%;min-width:100%;max-width:100%;padding:0 0 0 1px!important;margin:0!important}.q-grid td.q-grid-row-indicator,.q-grid th.q-grid-row-indicator{width:24px;min-width:24px;max-width:24px}.q-grid td.q-grid-row-expand,.q-grid td.q-grid-row-options,.q-grid th.q-grid-row-expand,.q-grid th.q-grid-row-options{width:48px;min-width:48px;max-width:48px}.q-grid td.q-grid-row-number,.q-grid td.q-grid-select,.q-grid th.q-grid-row-number,.q-grid th.q-grid-select{width:56px;min-width:56px;max-width:56px}.q-grid td.q-grid-image,.q-grid td.q-grid-pivot,.q-grid td.q-grid-bool,.q-grid th.q-grid-image,.q-grid th.q-grid-pivot,.q-grid th.q-grid-bool{width:80px;min-width:80px;max-width:80px}.q-grid td.q-grid-password,.q-grid td.q-grid-number,.q-grid td.q-grid-currency,.q-grid td.q-grid-id,.q-grid th.q-grid-password,.q-grid th.q-grid-number,.q-grid th.q-grid-currency,.q-grid th.q-grid-id{width:100px;min-width:100px;max-width:100px}.q-grid td.q-grid-date,.q-grid th.q-grid-date{width:120px;min-width:120px;max-width:120px}.q-grid td.q-grid-datetime,.q-grid th.q-grid-datetime{width:180px;min-width:180px;max-width:180px}.q-grid td.q-grid-group,.q-grid td.q-grid-email,.q-grid th.q-grid-group,.q-grid th.q-grid-email{width:200px;min-width:200px;max-width:200px}.q-grid td.q-grid-array,.q-grid th.q-grid-array{width:250px;min-width:250px;max-width:250px}.q-grid td.q-grid-the-\\\\$alt\\\\.number,.q-grid th.q-grid-the-\\\\$alt\\\\.number{width:48px;min-width:48px;max-width:48px}.q-grid td.q-grid-select,.q-grid td.q-grid-row-options,.q-grid td.q-grid-row-indicator,.q-grid td.q-grid-array,.q-grid td.q-grid-image,.q-grid td.q-grid-row-expand,.q-grid td.q-grid-pad,.q-grid th.q-grid-select,.q-grid th.q-grid-row-options,.q-grid th.q-grid-row-indicator,.q-grid th.q-grid-array,.q-grid th.q-grid-image,.q-grid th.q-grid-row-expand,.q-grid th.q-grid-pad{text-overflow:initial}.q-grid td.q-grid-has-view-width,.q-grid th.q-grid-has-view-width{transition:min-width .3s,width .3s,max-width .3s}.q-grid td.q-grid-can-select-text,.q-grid th.q-grid-can-select-text{user-select:auto;-moz-user-select:auto;-webkit-user-select:auto;-ms-user-select:auto}.q-grid td.q-grid-fit-head,.q-grid th.q-grid-fit-head{width:auto;max-width:none;min-width:auto}.q-grid tbody td.q-grid-number,.q-grid tbody td.q-grid-currency,.q-grid tfoot td.q-grid-number,.q-grid tfoot td.q-grid-currency{text-align:right}.q-grid tbody td.q-grid-id,.q-grid tfoot td.q-grid-id{text-align:left}.q-grid tbody td.q-grid-bool,.q-grid tbody td.q-grid-password,.q-grid tbody td.q-grid-select,.q-grid tfoot td.q-grid-bool,.q-grid tfoot td.q-grid-password,.q-grid tfoot td.q-grid-select{text-align:center}.q-grid tbody td.q-grid-dropdown select,.q-grid tfoot td.q-grid-dropdown select{width:100%}.q-grid tbody td.q-grid-row-options,.q-grid tfoot td.q-grid-row-options{cursor:pointer}.q-grid tbody tr:not(.q-grid-highlighted) td:not(.q-grid-highlighted).q-grid-row-number,.q-grid tfoot tr:not(.q-grid-highlighted) td:not(.q-grid-highlighted).q-grid-row-number{background:#f5f5f5}.q-grid-can-drag{user-select:none;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;-khtml-user-drag:element;-webkit-user-drag:element}.q-grid.q-grid-box.q-grid-drag tr,.q-grid.q-grid-box.q-grid-drag td,.q-grid.q-grid-box.q-grid-drag th{transition:none!important;background-color:inherit!important;outline:none!important}.q-grid.q-grid-box.q-grid-drag th .q-grid-icon,.q-grid.q-grid-box.q-grid-drag th .q-grid-resize-handler{visibility:hidden}.q-grid.q-grid-box .q-grid-row-indicator .q-grid-can-drag{cursor:move;opacity:.4}.q-grid.q-grid-box .q-grid-row-indicator .q-grid-can-drag .q-grid-icon{min-width:16px;width:16px;min-height:16px;height:16px;font-size:16px;line-height:16px;vertical-align:middle}.q-grid tr.q-grid-drag,.q-grid td.q-grid-drag,.q-grid th.q-grid-drag{opacity:.5}.q-grid .q-grid-layer{position:absolute;inset:0;pointer-events:none;z-index:3}.q-grid .q-grid-layer>*{pointer-events:all}.q-grid .q-grid-live-row{border:none!important}.q-grid .q-grid-table-mid .q-grid-live-row{background-color:#fff!important;z-index:2;position:relative;display:inline-table!important;opacity:1!important}.q-grid .q-grid-table-mid .q-grid-live-row:before,.q-grid .q-grid-table-mid .q-grid-live-row:after{content:\\\"\\\";position:absolute;width:100%;height:.7px;background-color:#e0e0e0;left:0}.q-grid .q-grid-table-mid .q-grid-live-row:before{top:0}.q-grid .q-grid-table-mid .q-grid-live-row:after{bottom:0}.q-grid .q-grid-live-cell{display:block;margin:0 -10px;border-radius:5px}@keyframes textBackroundColor{0%{background-color:transparent}to{background-color:transparent}}.q-grid .q-grid-live-cell span{display:inline-block;padding:0 5px;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.q-grid .q-grid-live-cell span:first-child{padding-left:10px}.q-grid .q-grid-live-cell span:last-child{padding-right:10px}.q-grid .q-grid-live-cell-diff{font-weight:700}.q-grid .q-grid-live-cell-up{color:green;background-color:transparent}.q-grid .q-grid-live-cell-down{color:red;background-color:transparent}.q-grid .q-grid-live-cell-text .q-grid-live-cell-prev{text-decoration:line-through}.q-grid .q-grid-live-cell-text .q-grid-live-cell-container{animation:textBackroundColor 3s}.q-grid .q-grid-live-cell-currency .q-grid-live-cell-prev{display:none}.q-grid th>.q-grid-resize-handler{position:absolute;top:20%;bottom:20%;right:0;height:60%;width:4px;z-index:2;background:transparent;border-right:1px solid #e0e0e0;cursor:col-resize;opacity:0}.q-grid th.q-grid-highlighted .q-grid-resize-handler,.q-grid th.q-grid-highlighted-prev .q-grid-resize-handler{opacity:1}.q-grid td>.q-grid-can-drag>.q-grid-resize-handler{position:absolute;height:2px;width:100%;bottom:0;left:0;cursor:row-resize;z-index:2;pointer-events:all}.q-grid td q-grid-resize{border-right:2px solid #000}.q-grid .q-grid-table tbody,.q-grid .q-grid-table thead,.q-grid .q-grid-table tfoot{border-collapse:collapse;border-spacing:0}.q-grid .q-grid-table table{border-spacing:0;overflow:hidden;table-layout:fixed;display:flex;flex-flow:column;height:100%;width:100%;outline:none}.q-grid .q-grid-table table thead,.q-grid .q-grid-table table tfoot{flex:0 0 auto;width:calc(100% - 8px);overflow:hidden}.q-grid .q-grid-table table tbody{flex:1 1 auto;display:block;overflow:scroll;scrollbar-color:#c8c8c8 #f8f8f8;scrollbar-width:thin;outline:none;overflow-anchor:none}.q-grid .q-grid-table table tbody.q-grid-body-top{flex:none;overflow-x:hidden}.q-grid .q-grid-table table tbody.q-grid-body-bottom{flex:none}.q-grid .q-grid-table table tbody tr{width:100%;display:table-row;table-layout:fixed}.q-grid .q-grid-table table tbody tr.q-grid-align{height:0!important;border:0}.q-grid .q-grid-table table tbody tr.q-grid-align:last-child{display:initial}.q-grid .q-grid-table.q-grid-table-left thead,.q-grid .q-grid-table.q-grid-table-left tfoot{width:100%}.q-grid .q-grid-with-right-pin>.q-grid-view>.q-grid-table.q-grid-table-mid>table>thead,.q-grid .q-grid-with-right-pin>.q-grid-view>.q-grid-table.q-grid-table-mid>table>tfoot{width:100%}.q-grid .q-grid-toolbar{position:relative}.q-grid .q-grid-toolbar-left,.q-grid .q-grid-toolbar-right{max-width:250px;overflow:auto}.q-grid .q-grid-toolbar-top,.q-grid .q-grid-toolbar-bottom{overflow:hidden}.q-grid .q-grid-toolbar-top{height:56px;min-height:56px;max-height:56px}.q-grid .q-grid-toolbar-top>div{height:100%}.q-grid .q-grid-toolbar-bottom{height:50px;min-height:50px;max-height:50px}.q-grid .q-grid-view{position:relative;overflow:hidden}.q-grid .q-grid-view.q-grid-select-range thead td,.q-grid .q-grid-view.q-grid-select-range thead th,.q-grid .q-grid-view.q-grid-select-range tfoot td,.q-grid .q-grid-view.q-grid-select-range tfoot th,.q-grid .q-grid-view.q-grid-select-range tbody td,.q-grid .q-grid-view.q-grid-select-range tbody th{user-select:none;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;cursor:default}.q-grid .q-grid-view>.q-grid-table-left>table>tbody{overflow-y:hidden}.q-grid .q-grid-with-right-pin>.q-grid-view .q-grid-table thead th:first-child{border-left:none}.q-grid .q-grid-with-right-pin>.q-grid-view>.q-grid-table-mid>table>tbody{overflow-y:hidden}.q-grid .q-grid-with-bottom-pin>.q-grid-view>.q-grid-table-mid>table>tbody:not(.q-grid-body-bottom){overflow-x:hidden}.q-grid td.q-grid-sorted{background-color:#f5f5f5}.q-grid .q-grid-select-row tr:not(.q-grid-highlighted) td:not(.q-grid-highlighted).q-grid-selected,.q-grid .q-grid-select-column tr:not(.q-grid-highlighted) td:not(.q-grid-highlighted).q-grid-selected,.q-grid .q-grid-select-mix tr:not(.q-grid-highlighted) td:not(.q-grid-highlighted).q-grid-selected,.q-grid .q-grid-select-range tr:not(.q-grid-highlighted) td:not(.q-grid-highlighted).q-grid-selected{background-color:#f5f5f5}.q-grid td.q-grid-focused{outline:2px solid rgba(63,81,181,.05);outline-offset:-2px}.q-grid td.q-grid-focused.q-grid-animate{outline:none}.q-grid .q-grid-edit-marker{width:10px;height:10px;user-select:none;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;display:block;position:absolute;pointer-events:all;cursor:move;bottom:3px;right:3px;font-size:14px;color:#c8c8c8;opacity:.2}.q-grid .q-grid-view.q-grid-active td.q-grid-focused{outline-color:#3f51b540}.q-grid .q-grid-view.q-grid-active .q-grid-edit-marker{opacity:1}.q-grid .q-grid-cell-handler{display:block;position:absolute;outline:none;pointer-events:none;outline-offset:-2px;transition:width .15s,height .15s,top .15s,left .15s}.q-grid .q-grid-cell-handler.q-grid-active{outline:2px solid rgba(63,81,181,.25)}.q-grid tr.q-grid-highlighted,.q-grid td.q-grid-highlighted,.q-grid tr.q-grid-highlighted td.q-grid-sorted,.q-grid tr.q-grid-highlighted td.q-grid-selected,.q-grid tr.q-grid-highlighted td.q-grid-focused{background-color:#eee}.q-grid-highlight-part{background-color:#ff0;color:#000}\\n\"], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid', providers: [\r\n                    Grid,\r\n                    GridPlugin,\r\n                    GridRoot,\r\n                    GridLet,\r\n                    LayerService,\r\n                    TemplateCacheService,\r\n                    TemplateLinkService,\r\n                    TemplateService,\r\n                    StateAccessor,\r\n                ], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container *ngComponentOutlet=\\\"themeComponent\\\">\\n</ng-container>\\n\\n<q-grid-box class=\\\"q-grid-box q-grid-layout-column\\\"\\n\\t\\t\\t\\t\\t\\tq-grid-markup=\\\"box\\\">\\n\\n\\t<q-grid-core-toolbar position=\\\"top\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"q-grid-toolbar q-grid-toolbar-top q-grid-flex-auto\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t*ngIf=\\\"visibility.toolbar.top\\\">\\n\\t</q-grid-core-toolbar>\\n\\n\\t<div class=\\\"q-grid-flex-100 q-grid-layout-row\\\"\\n\\t\\t\\t[ngClass]=\\\"{\\n\\t\\t\\t\\t'q-grid-with-left-pin': visibility.pin.left,\\n\\t\\t\\t\\t'q-grid-with-right-pin': visibility.pin.right,\\n\\t\\t\\t\\t'q-grid-with-top-pin': visibility.pin.top,\\n\\t\\t\\t\\t'q-grid-with-bottom-pin': visibility.pin.bottom\\n\\t\\t\\t}\\\">\\n\\t\\t<q-grid-core-toolbar position=\\\"left\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"q-grid-toolbar q-grid-toolbar-left q-grid-flex-auto\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t*ngIf=\\\"visibility.toolbar.left\\\">\\n\\t\\t</q-grid-core-toolbar>\\n\\t\\t<q-grid-core-view class=\\\"q-grid-view q-grid-layout-row q-grid-flex\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tq-grid-markup=\\\"view\\\">\\n\\t\\t</q-grid-core-view>\\n\\t\\t<q-grid-core-toolbar position=\\\"right\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"q-grid-toolbar q-grid-toolbar-right q-grid-flex-auto\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t*ngIf=\\\"visibility.toolbar.right\\\">\\n\\t\\t</q-grid-core-toolbar>\\n\\t</div>\\n\\n\\t<q-grid-core-toolbar position=\\\"bottom\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"q-grid-toolbar q-grid-toolbar-bottom q-grid-flex-auto\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t*ngIf=\\\"visibility.toolbar.bottom\\\">\\n\\t</q-grid-core-toolbar>\\n\\n\\t<q-grid-core-layer>\\n\\t</q-grid-core-layer>\\n\\n</q-grid-box>\\n\", styles: [\".q-grid-flex-auto{flex:1 1 auto;box-sizing:border-box}.q-grid-flex-none{flex:0 0 auto;box-sizing:border-box}.q-grid-flex{flex:1;box-sizing:border-box}.q-grid-flex-100{flex:1 1 100%;max-width:100%;max-height:100%;box-sizing:border-box}.q-grid-layout-row>.q-grid-flex-100{flex:1 1 100%;max-width:100%;max-height:100%;box-sizing:border-box}.q-grid-layout-column>.q-grid-flex-100{flex:1 1 100%;max-width:100%;max-height:100%;box-sizing:border-box}.q-grid-layout-row>.q-grid-flex{min-width:0}.q-grid-layout-column>.q-grid-flex{min-height:0}.q-grid-layout-column,.q-grid-layout-row{display:flex;box-sizing:border-box}.q-grid-layout-column{flex-direction:column}.q-grid-layout-row{flex-direction:row;min-height:0}.q-grid-layout-align-center-center{justify-content:center;align-items:center;align-content:center;max-width:100%}.q-grid-layout-align-center-center>*{max-width:100%;box-sizing:border-box}.q-grid-layout-align-start-center{justify-content:flex-start;align-items:center;align-content:center;max-width:100%}.q-grid-layout-align-start-center>*{max-width:100%;box-sizing:border-box}.q-grid-layout-align-end-center{justify-content:flex-end;align-items:center;align-content:center;max-width:100%}.q-grid-layout-align-end-center>*{max-width:100%;box-sizing:border-box}q-grid{display:block}.q-grid tbody tr.q-grid-scroll-mark{height:0;border:none}.q-grid ::-webkit-scrollbar{width:8px;height:8px}.q-grid ::-webkit-scrollbar-thumb{height:15px;background-color:#c8c8c8;box-shadow:inset 1px 1px #0000001a,inset 0 -1px #00000012}.q-grid ::-webkit-scrollbar-button{width:0;height:0;display:none}.q-grid ::-webkit-scrollbar-corner{background-color:transparent}.q-grid ::-webkit-scrollbar-track,.q-grid ::-webkit-scrollbar-track-piece{background-color:#f8f8f8}.q-grid.q-grid-box{height:100%;min-height:100%;max-height:100%;transform:translateZ(0);position:relative;font-family:roboto,Helvetica Neue,sans-serif}.q-grid td,.q-grid th{width:150px;min-width:150px;max-width:150px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;-ms-box-sizing:border-box;user-select:none;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;vertical-align:middle;text-align:left;position:relative}.q-grid td.q-grid-pivot,.q-grid th.q-grid-pivot{text-align:center}.q-grid td.q-grid-pad,.q-grid th.q-grid-pad{width:100%;min-width:100%;max-width:100%;padding:0 0 0 1px!important;margin:0!important}.q-grid td.q-grid-row-indicator,.q-grid th.q-grid-row-indicator{width:24px;min-width:24px;max-width:24px}.q-grid td.q-grid-row-expand,.q-grid td.q-grid-row-options,.q-grid th.q-grid-row-expand,.q-grid th.q-grid-row-options{width:48px;min-width:48px;max-width:48px}.q-grid td.q-grid-row-number,.q-grid td.q-grid-select,.q-grid th.q-grid-row-number,.q-grid th.q-grid-select{width:56px;min-width:56px;max-width:56px}.q-grid td.q-grid-image,.q-grid td.q-grid-pivot,.q-grid td.q-grid-bool,.q-grid th.q-grid-image,.q-grid th.q-grid-pivot,.q-grid th.q-grid-bool{width:80px;min-width:80px;max-width:80px}.q-grid td.q-grid-password,.q-grid td.q-grid-number,.q-grid td.q-grid-currency,.q-grid td.q-grid-id,.q-grid th.q-grid-password,.q-grid th.q-grid-number,.q-grid th.q-grid-currency,.q-grid th.q-grid-id{width:100px;min-width:100px;max-width:100px}.q-grid td.q-grid-date,.q-grid th.q-grid-date{width:120px;min-width:120px;max-width:120px}.q-grid td.q-grid-datetime,.q-grid th.q-grid-datetime{width:180px;min-width:180px;max-width:180px}.q-grid td.q-grid-group,.q-grid td.q-grid-email,.q-grid th.q-grid-group,.q-grid th.q-grid-email{width:200px;min-width:200px;max-width:200px}.q-grid td.q-grid-array,.q-grid th.q-grid-array{width:250px;min-width:250px;max-width:250px}.q-grid td.q-grid-the-\\\\$alt\\\\.number,.q-grid th.q-grid-the-\\\\$alt\\\\.number{width:48px;min-width:48px;max-width:48px}.q-grid td.q-grid-select,.q-grid td.q-grid-row-options,.q-grid td.q-grid-row-indicator,.q-grid td.q-grid-array,.q-grid td.q-grid-image,.q-grid td.q-grid-row-expand,.q-grid td.q-grid-pad,.q-grid th.q-grid-select,.q-grid th.q-grid-row-options,.q-grid th.q-grid-row-indicator,.q-grid th.q-grid-array,.q-grid th.q-grid-image,.q-grid th.q-grid-row-expand,.q-grid th.q-grid-pad{text-overflow:initial}.q-grid td.q-grid-has-view-width,.q-grid th.q-grid-has-view-width{transition:min-width .3s,width .3s,max-width .3s}.q-grid td.q-grid-can-select-text,.q-grid th.q-grid-can-select-text{user-select:auto;-moz-user-select:auto;-webkit-user-select:auto;-ms-user-select:auto}.q-grid td.q-grid-fit-head,.q-grid th.q-grid-fit-head{width:auto;max-width:none;min-width:auto}.q-grid tbody td.q-grid-number,.q-grid tbody td.q-grid-currency,.q-grid tfoot td.q-grid-number,.q-grid tfoot td.q-grid-currency{text-align:right}.q-grid tbody td.q-grid-id,.q-grid tfoot td.q-grid-id{text-align:left}.q-grid tbody td.q-grid-bool,.q-grid tbody td.q-grid-password,.q-grid tbody td.q-grid-select,.q-grid tfoot td.q-grid-bool,.q-grid tfoot td.q-grid-password,.q-grid tfoot td.q-grid-select{text-align:center}.q-grid tbody td.q-grid-dropdown select,.q-grid tfoot td.q-grid-dropdown select{width:100%}.q-grid tbody td.q-grid-row-options,.q-grid tfoot td.q-grid-row-options{cursor:pointer}.q-grid tbody tr:not(.q-grid-highlighted) td:not(.q-grid-highlighted).q-grid-row-number,.q-grid tfoot tr:not(.q-grid-highlighted) td:not(.q-grid-highlighted).q-grid-row-number{background:#f5f5f5}.q-grid-can-drag{user-select:none;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;-khtml-user-drag:element;-webkit-user-drag:element}.q-grid.q-grid-box.q-grid-drag tr,.q-grid.q-grid-box.q-grid-drag td,.q-grid.q-grid-box.q-grid-drag th{transition:none!important;background-color:inherit!important;outline:none!important}.q-grid.q-grid-box.q-grid-drag th .q-grid-icon,.q-grid.q-grid-box.q-grid-drag th .q-grid-resize-handler{visibility:hidden}.q-grid.q-grid-box .q-grid-row-indicator .q-grid-can-drag{cursor:move;opacity:.4}.q-grid.q-grid-box .q-grid-row-indicator .q-grid-can-drag .q-grid-icon{min-width:16px;width:16px;min-height:16px;height:16px;font-size:16px;line-height:16px;vertical-align:middle}.q-grid tr.q-grid-drag,.q-grid td.q-grid-drag,.q-grid th.q-grid-drag{opacity:.5}.q-grid .q-grid-layer{position:absolute;inset:0;pointer-events:none;z-index:3}.q-grid .q-grid-layer>*{pointer-events:all}.q-grid .q-grid-live-row{border:none!important}.q-grid .q-grid-table-mid .q-grid-live-row{background-color:#fff!important;z-index:2;position:relative;display:inline-table!important;opacity:1!important}.q-grid .q-grid-table-mid .q-grid-live-row:before,.q-grid .q-grid-table-mid .q-grid-live-row:after{content:\\\"\\\";position:absolute;width:100%;height:.7px;background-color:#e0e0e0;left:0}.q-grid .q-grid-table-mid .q-grid-live-row:before{top:0}.q-grid .q-grid-table-mid .q-grid-live-row:after{bottom:0}.q-grid .q-grid-live-cell{display:block;margin:0 -10px;border-radius:5px}@keyframes textBackroundColor{0%{background-color:transparent}to{background-color:transparent}}.q-grid .q-grid-live-cell span{display:inline-block;padding:0 5px;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.q-grid .q-grid-live-cell span:first-child{padding-left:10px}.q-grid .q-grid-live-cell span:last-child{padding-right:10px}.q-grid .q-grid-live-cell-diff{font-weight:700}.q-grid .q-grid-live-cell-up{color:green;background-color:transparent}.q-grid .q-grid-live-cell-down{color:red;background-color:transparent}.q-grid .q-grid-live-cell-text .q-grid-live-cell-prev{text-decoration:line-through}.q-grid .q-grid-live-cell-text .q-grid-live-cell-container{animation:textBackroundColor 3s}.q-grid .q-grid-live-cell-currency .q-grid-live-cell-prev{display:none}.q-grid th>.q-grid-resize-handler{position:absolute;top:20%;bottom:20%;right:0;height:60%;width:4px;z-index:2;background:transparent;border-right:1px solid #e0e0e0;cursor:col-resize;opacity:0}.q-grid th.q-grid-highlighted .q-grid-resize-handler,.q-grid th.q-grid-highlighted-prev .q-grid-resize-handler{opacity:1}.q-grid td>.q-grid-can-drag>.q-grid-resize-handler{position:absolute;height:2px;width:100%;bottom:0;left:0;cursor:row-resize;z-index:2;pointer-events:all}.q-grid td q-grid-resize{border-right:2px solid #000}.q-grid .q-grid-table tbody,.q-grid .q-grid-table thead,.q-grid .q-grid-table tfoot{border-collapse:collapse;border-spacing:0}.q-grid .q-grid-table table{border-spacing:0;overflow:hidden;table-layout:fixed;display:flex;flex-flow:column;height:100%;width:100%;outline:none}.q-grid .q-grid-table table thead,.q-grid .q-grid-table table tfoot{flex:0 0 auto;width:calc(100% - 8px);overflow:hidden}.q-grid .q-grid-table table tbody{flex:1 1 auto;display:block;overflow:scroll;scrollbar-color:#c8c8c8 #f8f8f8;scrollbar-width:thin;outline:none;overflow-anchor:none}.q-grid .q-grid-table table tbody.q-grid-body-top{flex:none;overflow-x:hidden}.q-grid .q-grid-table table tbody.q-grid-body-bottom{flex:none}.q-grid .q-grid-table table tbody tr{width:100%;display:table-row;table-layout:fixed}.q-grid .q-grid-table table tbody tr.q-grid-align{height:0!important;border:0}.q-grid .q-grid-table table tbody tr.q-grid-align:last-child{display:initial}.q-grid .q-grid-table.q-grid-table-left thead,.q-grid .q-grid-table.q-grid-table-left tfoot{width:100%}.q-grid .q-grid-with-right-pin>.q-grid-view>.q-grid-table.q-grid-table-mid>table>thead,.q-grid .q-grid-with-right-pin>.q-grid-view>.q-grid-table.q-grid-table-mid>table>tfoot{width:100%}.q-grid .q-grid-toolbar{position:relative}.q-grid .q-grid-toolbar-left,.q-grid .q-grid-toolbar-right{max-width:250px;overflow:auto}.q-grid .q-grid-toolbar-top,.q-grid .q-grid-toolbar-bottom{overflow:hidden}.q-grid .q-grid-toolbar-top{height:56px;min-height:56px;max-height:56px}.q-grid .q-grid-toolbar-top>div{height:100%}.q-grid .q-grid-toolbar-bottom{height:50px;min-height:50px;max-height:50px}.q-grid .q-grid-view{position:relative;overflow:hidden}.q-grid .q-grid-view.q-grid-select-range thead td,.q-grid .q-grid-view.q-grid-select-range thead th,.q-grid .q-grid-view.q-grid-select-range tfoot td,.q-grid .q-grid-view.q-grid-select-range tfoot th,.q-grid .q-grid-view.q-grid-select-range tbody td,.q-grid .q-grid-view.q-grid-select-range tbody th{user-select:none;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;cursor:default}.q-grid .q-grid-view>.q-grid-table-left>table>tbody{overflow-y:hidden}.q-grid .q-grid-with-right-pin>.q-grid-view .q-grid-table thead th:first-child{border-left:none}.q-grid .q-grid-with-right-pin>.q-grid-view>.q-grid-table-mid>table>tbody{overflow-y:hidden}.q-grid .q-grid-with-bottom-pin>.q-grid-view>.q-grid-table-mid>table>tbody:not(.q-grid-body-bottom){overflow-x:hidden}.q-grid td.q-grid-sorted{background-color:#f5f5f5}.q-grid .q-grid-select-row tr:not(.q-grid-highlighted) td:not(.q-grid-highlighted).q-grid-selected,.q-grid .q-grid-select-column tr:not(.q-grid-highlighted) td:not(.q-grid-highlighted).q-grid-selected,.q-grid .q-grid-select-mix tr:not(.q-grid-highlighted) td:not(.q-grid-highlighted).q-grid-selected,.q-grid .q-grid-select-range tr:not(.q-grid-highlighted) td:not(.q-grid-highlighted).q-grid-selected{background-color:#f5f5f5}.q-grid td.q-grid-focused{outline:2px solid rgba(63,81,181,.05);outline-offset:-2px}.q-grid td.q-grid-focused.q-grid-animate{outline:none}.q-grid .q-grid-edit-marker{width:10px;height:10px;user-select:none;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;display:block;position:absolute;pointer-events:all;cursor:move;bottom:3px;right:3px;font-size:14px;color:#c8c8c8;opacity:.2}.q-grid .q-grid-view.q-grid-active td.q-grid-focused{outline-color:#3f51b540}.q-grid .q-grid-view.q-grid-active .q-grid-edit-marker{opacity:1}.q-grid .q-grid-cell-handler{display:block;position:absolute;outline:none;pointer-events:none;outline-offset:-2px;transition:width .15s,height .15s,top .15s,left .15s}.q-grid .q-grid-cell-handler.q-grid-active{outline:2px solid rgba(63,81,181,.25)}.q-grid tr.q-grid-highlighted,.q-grid td.q-grid-highlighted,.q-grid tr.q-grid-highlighted td.q-grid-sorted,.q-grid tr.q-grid-highlighted td.q-grid-selected,.q-grid tr.q-grid-highlighted td.q-grid-focused{background-color:#eee}.q-grid-highlight-part{background-color:#ff0;color:#000}\\n\"] }]\r\n    }], function () { return [{ type: GridRoot }, { type: GridPlugin }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: LayerService }, { type: i0.ChangeDetectorRef }, { type: StateAccessor }, { type: GridModelBuilder }, { type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [DOCUMENT]\r\n            }] }, { type: ThemeService }]; }, { model: [{\r\n            type: Input\r\n        }], gridId: [{\r\n            type: Input,\r\n            args: ['id']\r\n        }], gridTitle: [{\r\n            type: Input,\r\n            args: ['header']\r\n        }], gridCaption: [{\r\n            type: Input,\r\n            args: ['caption']\r\n        }], gridInteractionMode: [{\r\n            type: Input,\r\n            args: ['interactionMode']\r\n        }], dataColumns: [{\r\n            type: Input,\r\n            args: ['columns']\r\n        }], dataRows: [{\r\n            type: Input,\r\n            args: ['rows']\r\n        }], editCancel: [{\r\n            type: Input\r\n        }], editCommit: [{\r\n            type: Input\r\n        }], editEnter: [{\r\n            type: Input\r\n        }], editMethod: [{\r\n            type: Input\r\n        }], editMode: [{\r\n            type: Input\r\n        }], editReset: [{\r\n            type: Input\r\n        }], filterUnit: [{\r\n            type: Input\r\n        }], groupBy: [{\r\n            type: Input\r\n        }], groupMode: [{\r\n            type: Input\r\n        }], groupSummary: [{\r\n            type: Input\r\n        }], pivotBy: [{\r\n            type: Input\r\n        }], selectionItems: [{\r\n            type: Input,\r\n            args: ['selection']\r\n        }], selectionArea: [{\r\n            type: Input\r\n        }], selectionMode: [{\r\n            type: Input\r\n        }], selectionUnit: [{\r\n            type: Input\r\n        }], scrollMode: [{\r\n            type: Input\r\n        }], sortBy: [{\r\n            type: Input\r\n        }], sortMode: [{\r\n            type: Input\r\n        }], sortTrigger: [{\r\n            type: Input\r\n        }], styleCell: [{\r\n            type: Input\r\n        }], styleRow: [{\r\n            type: Input\r\n        }] }); })();\n\nconst _c0$1 = [\"*\"];\r\nclass LayerComponent {\r\n    constructor(templateHost) {\r\n        templateHost.key = source => `layer-${source}.tpl.html`;\r\n    }\r\n}\r\nLayerComponent.ɵfac = function LayerComponent_Factory(t) { return new (t || LayerComponent)(i0.ɵɵdirectiveInject(TemplateHostService)); };\r\nLayerComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: LayerComponent, selectors: [[\"q-grid-layer\"]], features: [i0.ɵɵProvidersFeature([TemplateHostService])], ngContentSelectors: _c0$1, decls: 1, vars: 0, template: function LayerComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵprojectionDef();\r\n        i0.ɵɵprojection(0);\r\n    } }, encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LayerComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'q-grid-layer',\r\n                template: `<ng-content></ng-content>\n`,\r\n                providers: [TemplateHostService],\r\n                changeDetection: ChangeDetectionStrategy.OnPush,\r\n            }]\r\n    }], function () { return [{ type: TemplateHostService }]; }, null); })();\n\nclass TemplateLinkDirective {\r\n    constructor(templateLink, templateRef) {\r\n        this.templateLink = templateLink;\r\n        this.templateRef = templateRef;\r\n        this.key = '';\r\n        this.context = {};\r\n    }\r\n    ngOnInit() {\r\n        const link = new TemplateLink(this.templateRef, this.context);\r\n        this.templateLink.put(this.key, link);\r\n    }\r\n}\r\nTemplateLinkDirective.ɵfac = function TemplateLinkDirective_Factory(t) { return new (t || TemplateLinkDirective)(i0.ɵɵdirectiveInject(TemplateLinkService), i0.ɵɵdirectiveInject(i0.TemplateRef)); };\r\nTemplateLinkDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: TemplateLinkDirective, selectors: [[\"ng-template\", \"key\", \"\"]], inputs: { key: \"key\", context: \"context\" } });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TemplateLinkDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: 'ng-template[key]', // eslint-disable-line @angular-eslint/directive-selector\r\n            }]\r\n    }], function () { return [{ type: TemplateLinkService }, { type: i0.TemplateRef }]; }, { key: [{\r\n            type: Input\r\n        }], context: [{\r\n            type: Input\r\n        }] }); })();\n\nclass TemplateCacheDirective {\r\n    constructor(templateCache, templateRef, templateHost) {\r\n        this.templateCache = templateCache;\r\n        this.templateRef = templateRef;\r\n        this.templateHost = templateHost;\r\n        this.key = '';\r\n        this.context = {};\r\n    }\r\n    ngOnInit() {\r\n        const link = new TemplateLink(this.templateRef, this.context);\r\n        if (this.templateHost) {\r\n            this.templateCache.put(this.templateHost.key(this.key), link);\r\n        }\r\n        else {\r\n            this.templateCache.put(this.key, link);\r\n        }\r\n    }\r\n}\r\nTemplateCacheDirective.ɵfac = function TemplateCacheDirective_Factory(t) { return new (t || TemplateCacheDirective)(i0.ɵɵdirectiveInject(TemplateCacheService), i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(TemplateHostService, 8)); };\r\nTemplateCacheDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: TemplateCacheDirective, selectors: [[\"ng-template\", \"for\", \"\"]], inputs: { key: [\"for\", \"key\"], context: \"context\" } });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TemplateCacheDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: 'ng-template[for]', // eslint-disable-line @angular-eslint/directive-selector\r\n            }]\r\n    }], function () { return [{ type: TemplateCacheService }, { type: i0.TemplateRef }, { type: TemplateHostService, decorators: [{\r\n                type: Optional\r\n            }] }]; }, { key: [{\r\n            type: Input,\r\n            args: ['for']\r\n        }], context: [{\r\n            type: Input\r\n        }] }); })();\n\nclass TemplateModule {\r\n}\r\nTemplateModule.ɵfac = function TemplateModule_Factory(t) { return new (t || TemplateModule)(); };\r\nTemplateModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: TemplateModule });\r\nTemplateModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TemplateModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    TemplateDirective,\r\n                    TemplateLinkDirective,\r\n                    TemplateCacheDirective,\r\n                ],\r\n                exports: [\r\n                    TemplateDirective,\r\n                    TemplateLinkDirective,\r\n                    TemplateCacheDirective,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(TemplateModule, { declarations: [TemplateDirective,\r\n        TemplateLinkDirective,\r\n        TemplateCacheDirective], exports: [TemplateDirective,\r\n        TemplateLinkDirective,\r\n        TemplateCacheDirective] }); })();\n\nclass LayerModule {\r\n}\r\nLayerModule.ɵfac = function LayerModule_Factory(t) { return new (t || LayerModule)(); };\r\nLayerModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: LayerModule });\r\nLayerModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LayerModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    LayerCoreComponent,\r\n                    LayerCoreDirective,\r\n                    LayerComponent,\r\n                ],\r\n                exports: [\r\n                    LayerCoreComponent,\r\n                    LayerCoreDirective,\r\n                    LayerComponent,\r\n                ],\r\n                imports: [\r\n                    TemplateModule,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(LayerModule, { declarations: [LayerCoreComponent,\r\n        LayerCoreDirective,\r\n        LayerComponent], imports: [TemplateModule], exports: [LayerCoreComponent,\r\n        LayerCoreDirective,\r\n        LayerComponent] }); })();\n\nclass StopPropagateDirective {\r\n    constructor(element, renderer, zone) {\r\n        this.element = element;\r\n        this.renderer = renderer;\r\n        this.zone = zone;\r\n        this.eventName = 'click';\r\n        // tslint:disable-next-line:no-input-rename\r\n        this.needStop = yes;\r\n    }\r\n    ngOnInit() {\r\n        let eventNames = this.eventName;\r\n        if (isString(this.eventName)) {\r\n            eventNames = [this.eventName];\r\n        }\r\n        this.zone.runOutsideAngular(() => eventNames.forEach(eventName => this.renderer.listen(this.element.nativeElement, eventName, e => {\r\n            if (this.needStop()) {\r\n                e.stopPropagation();\r\n            }\r\n        })));\r\n    }\r\n}\r\nStopPropagateDirective.ɵfac = function StopPropagateDirective_Factory(t) { return new (t || StopPropagateDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone)); };\r\nStopPropagateDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: StopPropagateDirective, selectors: [[\"\", \"q-grid-stop-propagate\", \"\"]], inputs: { eventName: [\"q-grid-stop-propagate\", \"eventName\"], needStop: [\"q-grid-stop-propagate-when\", \"needStop\"] } });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StopPropagateDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-stop-propagate]',\r\n            }]\r\n    }], function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.NgZone }]; }, { eventName: [{\r\n            type: Input,\r\n            args: ['q-grid-stop-propagate']\r\n        }], needStop: [{\r\n            type: Input,\r\n            args: ['q-grid-stop-propagate-when']\r\n        }] }); })();\n\nclass MarkupModule {\r\n}\r\nMarkupModule.ɵfac = function MarkupModule_Factory(t) { return new (t || MarkupModule)(); };\r\nMarkupModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: MarkupModule });\r\nMarkupModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MarkupModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    MarkupDirective,\r\n                    StopPropagateDirective,\r\n                ],\r\n                exports: [\r\n                    MarkupDirective,\r\n                    StopPropagateDirective,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(MarkupModule, { declarations: [MarkupDirective,\r\n        StopPropagateDirective], exports: [MarkupDirective,\r\n        StopPropagateDirective] }); })();\n\nclass ScrollModule {\r\n}\r\nScrollModule.ɵfac = function ScrollModule_Factory(t) { return new (t || ScrollModule)(); };\r\nScrollModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ScrollModule });\r\nScrollModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ providers: [\r\n        ScrollService,\r\n    ] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScrollModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                providers: [\r\n                    ScrollService,\r\n                ],\r\n            }]\r\n    }], null, null); })();\n\nclass ThemeModule {\r\n}\r\nThemeModule.ɵfac = function ThemeModule_Factory(t) { return new (t || ThemeModule)(); };\r\nThemeModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ThemeModule });\r\nThemeModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ providers: [\r\n        ThemeService,\r\n    ] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThemeModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                providers: [\r\n                    ThemeService,\r\n                ],\r\n            }]\r\n    }], null, null); })();\n\nconst _c0 = [\"*\"];\r\nclass ToolbarComponent {\r\n    constructor(templateHost) {\r\n        templateHost.key = source => `toolbar-${source}.tpl.html`;\r\n    }\r\n}\r\nToolbarComponent.ɵfac = function ToolbarComponent_Factory(t) { return new (t || ToolbarComponent)(i0.ɵɵdirectiveInject(TemplateHostService)); };\r\nToolbarComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ToolbarComponent, selectors: [[\"q-grid-toolbar\"]], features: [i0.ɵɵProvidersFeature([TemplateHostService])], ngContentSelectors: _c0, decls: 1, vars: 0, template: function ToolbarComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵprojectionDef();\r\n        i0.ɵɵprojection(0);\r\n    } }, encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToolbarComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'q-grid-toolbar',\r\n                template: `<ng-content></ng-content>\n`,\r\n                providers: [TemplateHostService],\r\n                changeDetection: ChangeDetectionStrategy.OnPush,\r\n            }]\r\n    }], function () { return [{ type: TemplateHostService }]; }, null); })();\n\nclass ToolbarModule {\r\n}\r\nToolbarModule.ɵfac = function ToolbarModule_Factory(t) { return new (t || ToolbarModule)(); };\r\nToolbarModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ToolbarModule });\r\nToolbarModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToolbarModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    ToolbarComponent,\r\n                    ToolbarCoreComponent,\r\n                ],\r\n                exports: [\r\n                    ToolbarComponent,\r\n                    ToolbarCoreComponent,\r\n                ],\r\n                imports: [\r\n                    TemplateModule,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ToolbarModule, { declarations: [ToolbarComponent,\r\n        ToolbarCoreComponent], imports: [TemplateModule], exports: [ToolbarComponent,\r\n        ToolbarCoreComponent] }); })();\n\nclass AutoSizeDirective {\r\n    constructor(element) {\r\n        this.emptyWidth = 75;\r\n        this.host = element.nativeElement;\r\n    }\r\n    set value(value) {\r\n        this.autoWidth(value);\r\n    }\r\n    ngOnInit() {\r\n        this.element = this.selector ? this.host.querySelector(this.selector) : this.host;\r\n    }\r\n    autoWidth(text) {\r\n        if (!text) {\r\n            this.actualText = text;\r\n            Fastdom.measure(() => {\r\n                Fastdom.mutate(() => {\r\n                    this.host.style.width = `${this.emptyWidth}px`;\r\n                });\r\n            });\r\n            return;\r\n        }\r\n        if (!this.element) {\r\n            return;\r\n        }\r\n        if (this.actualText === text) {\r\n            return;\r\n        }\r\n        this.actualText = text;\r\n        Fastdom.measure(() => {\r\n            const width = `${this.calculateWidth(this.element, text)}px`;\r\n            Fastdom.mutate(() => this.host.style.width = width);\r\n        });\r\n    }\r\n    calculateWidth(element, text) {\r\n        let width = 0;\r\n        if (text) {\r\n            const document = element.ownerDocument;\r\n            const body = document.body;\r\n            const test = document.createElement('span');\r\n            test.innerText = text;\r\n            test.style.whiteSpace = 'pre';\r\n            test.style.visibility = 'hidden';\r\n            test.style.font = element.style.font;\r\n            test.style.fontFamily = element.style.fontFamily;\r\n            test.style.lineHeight = element.style.lineHeight;\r\n            test.style.border = element.style.border;\r\n            // borderBox ?\r\n            body.appendChild(test);\r\n            width = test.offsetWidth;\r\n            test.remove();\r\n        }\r\n        return width;\r\n    }\r\n}\r\nAutoSizeDirective.ɵfac = function AutoSizeDirective_Factory(t) { return new (t || AutoSizeDirective)(i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nAutoSizeDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: AutoSizeDirective, selectors: [[\"\", \"q-grid-autosize\", \"\"]], inputs: { selector: [\"q-grid-autosize\", \"selector\"], emptyWidth: [\"q-grid-autosize-empty-width\", \"emptyWidth\"], value: [\"q-grid-autosize-value\", \"value\"] } });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AutoSizeDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-autosize]',\r\n            }]\r\n    }], function () { return [{ type: i0.ElementRef }]; }, { selector: [{\r\n            type: Input,\r\n            args: ['q-grid-autosize']\r\n        }], emptyWidth: [{\r\n            type: Input,\r\n            args: ['q-grid-autosize-empty-width']\r\n        }], value: [{\r\n            type: Input,\r\n            args: ['q-grid-autosize-value']\r\n        }] }); })();\n\nclass ResizeModule {\r\n}\r\nResizeModule.ɵfac = function ResizeModule_Factory(t) { return new (t || ResizeModule)(); };\r\nResizeModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ResizeModule });\r\nResizeModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ResizeModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    ResizeDirective,\r\n                    AutoSizeDirective,\r\n                ],\r\n                exports: [\r\n                    ResizeDirective,\r\n                    AutoSizeDirective,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ResizeModule, { declarations: [ResizeDirective,\r\n        AutoSizeDirective], exports: [ResizeDirective,\r\n        AutoSizeDirective] }); })();\n\nclass HeadModule {\r\n}\r\nHeadModule.ɵfac = function HeadModule_Factory(t) { return new (t || HeadModule)(); };\r\nHeadModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: HeadModule });\r\nHeadModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\r\n        RowModule,\r\n        ResizeModule,\r\n        DndModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HeadModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    HeadCoreComponent,\r\n                    ThCoreDirective,\r\n                ],\r\n                exports: [\r\n                    HeadCoreComponent,\r\n                    ThCoreDirective,\r\n                ],\r\n                imports: [\r\n                    CommonModule,\r\n                    RowModule,\r\n                    ResizeModule,\r\n                    DndModule,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(HeadModule, { declarations: [HeadCoreComponent,\r\n        ThCoreDirective], imports: [CommonModule,\r\n        RowModule,\r\n        ResizeModule,\r\n        DndModule], exports: [HeadCoreComponent,\r\n        ThCoreDirective] }); })();\n\nclass TableModule {\r\n}\r\nTableModule.ɵfac = function TableModule_Factory(t) { return new (t || TableModule)(); };\r\nTableModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: TableModule });\r\nTableModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\r\n        HeadModule,\r\n        FootModule,\r\n        BodyModule,\r\n        MarkupModule,\r\n        DndModule,\r\n        VscrollModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TableModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    TableCoreComponent,\r\n                ],\r\n                exports: [\r\n                    TableCoreComponent,\r\n                ],\r\n                imports: [\r\n                    CommonModule,\r\n                    HeadModule,\r\n                    FootModule,\r\n                    BodyModule,\r\n                    MarkupModule,\r\n                    DndModule,\r\n                    VscrollModule,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(TableModule, { declarations: [TableCoreComponent], imports: [CommonModule,\r\n        HeadModule,\r\n        FootModule,\r\n        BodyModule,\r\n        MarkupModule,\r\n        DndModule,\r\n        VscrollModule], exports: [TableCoreComponent] }); })();\n\nclass ViewModule {\r\n}\r\nViewModule.ɵfac = function ViewModule_Factory(t) { return new (t || ViewModule)(); };\r\nViewModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ViewModule });\r\nViewModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\r\n        CellHandlerModule,\r\n        TableModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ViewModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    ViewCoreComponent,\r\n                ],\r\n                exports: [\r\n                    ViewCoreComponent,\r\n                ],\r\n                imports: [\r\n                    CommonModule,\r\n                    CellHandlerModule,\r\n                    TableModule,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ViewModule, { declarations: [ViewCoreComponent], imports: [CommonModule,\r\n        CellHandlerModule,\r\n        TableModule], exports: [ViewCoreComponent] }); })();\n\nclass GridModule {\r\n    constructor(zone, datePipe, numberPipe, currencyPipe) {\r\n        FormatService.date = (x, format) => datePipe.transform(x, format);\r\n        FormatService.number = (x, format) => numberPipe.transform(x, format);\r\n        FormatService.currency = (x, format) => currencyPipe.transform(x, format);\r\n        Fastdom.invoke = task => zone.runOutsideAngular(task);\r\n    }\r\n}\r\nGridModule.ɵfac = function GridModule_Factory(t) { return new (t || GridModule)(i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i4.DatePipe), i0.ɵɵinject(i4.DecimalPipe), i0.ɵɵinject(i4.CurrencyPipe)); };\r\nGridModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: GridModule });\r\nGridModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ providers: [\r\n        DatePipe,\r\n        DecimalPipe,\r\n        CurrencyPipe,\r\n        GridModelBuilder,\r\n        Grid,\r\n    ], imports: [CommonModule,\r\n        BoxModule,\r\n        LayerModule,\r\n        MarkupModule,\r\n        ScrollModule,\r\n        TemplateModule,\r\n        ThemeModule,\r\n        ToolbarModule,\r\n        ViewModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    GridComponent,\r\n                ],\r\n                exports: [\r\n                    GridComponent,\r\n                ],\r\n                imports: [\r\n                    CommonModule,\r\n                    BoxModule,\r\n                    LayerModule,\r\n                    MarkupModule,\r\n                    ScrollModule,\r\n                    TemplateModule,\r\n                    ThemeModule,\r\n                    ToolbarModule,\r\n                    ViewModule,\r\n                ],\r\n                providers: [\r\n                    DatePipe,\r\n                    DecimalPipe,\r\n                    CurrencyPipe,\r\n                    GridModelBuilder,\r\n                    Grid,\r\n                ],\r\n            }]\r\n    }], function () { return [{ type: i0.NgZone }, { type: i4.DatePipe }, { type: i4.DecimalPipe }, { type: i4.CurrencyPipe }]; }, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(GridModule, { declarations: [GridComponent], imports: [CommonModule,\r\n        BoxModule,\r\n        LayerModule,\r\n        MarkupModule,\r\n        ScrollModule,\r\n        TemplateModule,\r\n        ThemeModule,\r\n        ToolbarModule,\r\n        ViewModule], exports: [GridComponent] }); })();\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { AutoSizeDirective, BodyCoreComponent, BodyModule, BoxComponent, BoxModule, CellHandlerComponent, CellHandlerModule, CellTemplateService, ChangeDetectorModule, ColumnBodyTemplateDirective, ColumnComponent, ColumnEditTemplateDirective, ColumnFootTemplateDirective, ColumnHeadTemplateDirective, ColumnHostService, ColumnListComponent, ColumnListModule, ColumnListService, ColumnModule, DirtyDirective, DirtyHostDirective, Disposable, DndModule, DragDirective, DropDirective, FootCoreComponent, FootModule, Grid, GridComponent, GridLet, GridModelBuilder, GridModule, GridPlugin, GridRoot, HeadCoreComponent, HeadModule, LayerComponent, LayerCoreComponent, LayerCoreDirective, LayerModule, LayerService, MarkupDirective, MarkupModule, ResizeDirective, ResizeModule, RowComponent, RowModule, ScrollModule, ScrollService, StateAccessor, StopPropagateDirective, TableCoreComponent, TableCoreService, TableModule, TdCoreAlignDirective, TdCoreDirective, TemplateCacheDirective, TemplateCacheService, TemplateDirective, TemplateHostService, TemplateLinkDirective, TemplateLinkService, TemplateModule, TemplateService, TfCoreDirective, ThCoreDirective, ThemeModule, ThemeService, ToolbarComponent, ToolbarCoreComponent, ToolbarModule, TrCoreDirective, TrhCoreDirective, ViewCoreComponent, ViewModule, VscrollColumnDirective, VscrollContext, VscrollDirective, VscrollMarkDirective, VscrollModule, VscrollPipe, VscrollPortXDirective, VscrollPortYDirective, VscrollRowDirective, VscrollService };\n//# sourceMappingURL=qgrid-ngx.mjs.map\n","map":{"version":3,"file":"qgrid-ngx.mjs","sources":["../../src/lib/vscroll/vscroll.container.ts","../../src/lib/vscroll/vscroll.settings.ts","../../src/lib/vscroll/vscroll.context.ts","../../src/lib/scroll/scroll.service.ts","../../src/lib/grid/grid-model.builder.ts","../../src/lib/grid/grid.ts","../../src/lib/grid/grid-let.ts","../../src/lib/grid/grid-root.ts","../../src/lib/infrastructure/disposable.ts","../../src/lib/plugin/grid-plugin.ts","../../src/lib/table/table-core.service.ts","../../src/lib/vscroll/vscroll.utility.ts","../../src/lib/vscroll/vscroll.directive.ts","../../src/lib/vscroll/vscroll.position.ts","../../src/lib/vscroll/vscroll.layout.ts","../../src/lib/vscroll/vscroll.box.ts","../../src/lib/vscroll/vscroll.link.ts","../../src/lib/vscroll/vscroll-port-y.directive.ts","../../src/lib/vscroll/vscroll-row.directive.ts","../../src/lib/vscroll/vscroll-port-x.directive.ts","../../src/lib/vscroll/vscroll-mark.directive.ts","../../src/lib/row/tr-core.directive.ts","../../src/lib/cell/cell-class.service.ts","../../src/lib/body/td-core-align.directive.ts","../../src/lib/template/template-cache.service.ts","../../src/lib/template/template-link.service.ts","../../src/lib/template/template.service.ts","../../src/lib/cell/cell-template.service.ts","../../src/lib/body/td-core.directive.ts","../../src/lib/vscroll/vscroll.pipe.ts","../../src/lib/body/body-core.component.html","../../src/lib/body/body-core.component.ts","../../src/lib/vscroll/vscroll.service.ts","../../src/lib/vscroll/vscroll-column.directive.ts","../../src/lib/vscroll/vscroll.module.ts","../../src/lib/state/state-accessor.ts","../../src/lib/template/template-host.service.ts","../../src/lib/row/row.component.ts","../../src/lib/row/trh-core.directive.ts","../../src/lib/row/row.module.ts","../../src/lib/body/body.module.ts","../../src/lib/theme/theme.service.ts","../../src/lib/box/box.component.ts","../../src/lib/box/box.component.html","../../src/lib/box/box.module.ts","../../src/lib/cell-handler/cell-handler.component.html","../../src/lib/cell-handler/cell-handler.component.ts","../../src/lib/cell-handler/cell-handler.module.ts","../../src/lib/change-detector/dirty-host.directive.ts","../../src/lib/change-detector/dirty.directive.ts","../../src/lib/change-detector/change-detector.module.ts","../../src/lib/column-list/column-list.service.ts","../../src/lib/column-list/column-list.component.ts","../../src/lib/column-list/column-list.module.ts","../../src/lib/template/template-link.ts","../../src/lib/column/column-body-template.directive.ts","../../src/lib/column/column-edit-template.directive.ts","../../src/lib/column/column-foot-template.directive.ts","../../src/lib/column/column-head-template.directive.ts","../../src/lib/column/column-host.service.ts","../../src/lib/column/column.component.ts","../../src/lib/column/column.module.ts","../../src/lib/dnd/drag.directive.ts","../../src/lib/dnd/drop.directive.ts","../../src/lib/dnd/dnd.module.ts","../../src/lib/foot/tf-core.directive.ts","../../src/lib/foot/foot-core.component.html","../../src/lib/foot/foot-core.component.ts","../../src/lib/foot/foot.module.ts","../../src/lib/layer/layer.ts","../../src/lib/layer/layer.service.ts","../../src/lib/layer/layer-core.directive.ts","../../src/lib/layer/layer-core.component.ts","../../src/lib/layer/layer-core.component.html","../../src/lib/markup/markup.directive.ts","../../src/lib/template/template.directive.ts","../../src/lib/toolbar/toolbar-core.component.ts","../../src/lib/toolbar/toolbar-core.component.html","../../src/lib/resize/resize.directive.ts","../../src/lib/head/th-core.directive.ts","../../src/lib/head/head-core.component.html","../../src/lib/head/head-core.component.ts","../../src/lib/table/table-core.component.html","../../src/lib/table/table-core.component.ts","../../src/lib/view/view-core.component.html","../../src/lib/view/view-core.component.ts","../../src/lib/grid/grid.component.html","../../src/lib/grid/grid.component.ts","../../src/lib/layer/layer.component.ts","../../src/lib/template/template-link.directive.ts","../../src/lib/template/template-cache.directive.ts","../../src/lib/template/template.module.ts","../../src/lib/layer/layer.module.ts","../../src/lib/markup/stop-propagate.directive.ts","../../src/lib/markup/markup.module.ts","../../src/lib/scroll/scroll.module.ts","../../src/lib/theme/theme.module.ts","../../src/lib/toolbar/toolbar.component.ts","../../src/lib/toolbar/toolbar.module.ts","../../src/lib/resize/autosize.directive.ts","../../src/lib/resize/resize.module.ts","../../src/lib/head/head.module.ts","../../src/lib/table/table.module.ts","../../src/lib/view/view.module.ts","../../src/lib/grid/grid.module.ts","../../src/qgrid-ngx.ts"],"sourcesContent":["import { EventEmitter } from '@angular/core';\nimport {\n  Defer,\n  GridError,\n  isFunction,\n  isNumber,\n  IVscrollContainer,\n  IVscrollSettings,\n} from '@qgrid/core';\n\nexport const rAF = window.requestAnimationFrame;\n\nexport class VscrollContainer implements IVscrollContainer {\n  private lastPage = 0;\n\n  force = false;\n  count = 0;\n  position = 0;\n\n  reset$ = new EventEmitter<{ handled: boolean; source: string }>();\n  update$ = new EventEmitter<number>();\n  draw$ = new EventEmitter<{ position: number }>();\n\n  get currentPage() {\n    const threshold = this.settings.threshold;\n    const position = this.position;\n    return Math.ceil((position + threshold) / threshold) - 1;\n  }\n\n  constructor(\n\t\tprivate settings: IVscrollSettings,\n  ) {\n  }\n\n  tick(f: () => void) {\n    rAF(f);\n  }\n\n  read(f: () => void) {\n    f();\n  }\n\n  write(f: () => void) {\n    f();\n  }\n\n  apply(f: () => void, emit: (x: () => void) => void) {\n    emit(f);\n  }\n\n  update(count: number) {\n    if (this.count !== count) {\n      this.count = count;\n      this.update$.emit(count);\n    }\n\n    const { lastPage, currentPage } = this;\n    if (currentPage > lastPage) {\n      this.fetchPage(currentPage);\n    }\n  }\n\n  fetchPage(page: number) {\n    const { settings, lastPage } = this;\n    const { threshold } = settings;\n\n    this.lastPage = page;\n\n    const deferred = new Defer<number>();\n\n    deferred.promise.then(count => {\n      this.force = true;\n\n      if (count !== this.count) {\n        this.update(count);\n      }\n    });\n\n    if (page === 0) {\n      settings.fetch(0, threshold, deferred);\n    } else {\n      const skip = (lastPage + 1) * threshold;\n      if (this.count < skip) {\n        deferred.resolve(this.count);\n      } else {\n        const take = (page - lastPage) * threshold;\n        settings.fetch(skip, take, deferred);\n      }\n    }\n  }\n\n  reset() {\n    this.force = false;\n    this.position = 0;\n    this.count = 0;\n    this.lastPage = 0;\n\n    this.reset$.emit({\n      handled: false,\n      source: 'container',\n    });\n  }\n}\n\nexport type VscrollSize = (element: HTMLElement, index: number) => number;\n\nexport function sizeFactory(\n  size: number | VscrollSize,\n  container: VscrollContainer,\n  element: HTMLElement,\n  index: number,\n): () => number {\n  if (isFunction(size)) {\n    return () => (size as VscrollSize)(element, container.position + index);\n  }\n\n  if (isNumber(size)) {\n    return () => size as number;\n  }\n\n  throw new GridError('vscroll.utility', `Invalid size ${size}`);\n}\n","import { IVscrollSettings } from '@qgrid/core';\n\nexport class VscrollSettings implements IVscrollSettings {\n  threshold = 64;\n  placeholderHeight = 0;\n  placeholderWidth = 0;\n  resetTriggers = ['resize'];\n  emit: (f: () => void) => void;\n\n  constructor(private getCount: () => number) {\n  }\n\n  fetch(skip: number, take: number, d: { resolve: (count: number) => void; reject: () => void }) {\n    d.resolve(this.getCount());\n  }\n\n  rowHeight(element: HTMLElement) {\n    let height = element.offsetHeight;\n    const style = getComputedStyle(element);\n\n    height += Number.parseInt(style.marginTop, 10) + Number.parseInt(style.marginBottom, 10);\n    return height;\n  }\n\n  columnWidth(element: HTMLElement) {\n    let width = element.offsetWidth;\n    const style = getComputedStyle(element);\n\n    width += Number.parseInt(style.marginLeft, 10) + Number.parseInt(style.marginRight, 10);\n    return width;\n  }\n}\n","import { IVscrollContext, IVscrollSettings } from '@qgrid/core';\nimport { VscrollContainer } from './vscroll.container';\nimport { VscrollSettings } from './vscroll.settings';\n\nexport class VscrollContext implements IVscrollContext {\n  settings: IVscrollSettings;\n  container: VscrollContainer;\n\n  constructor(settings?: Partial<IVscrollSettings>) {\n    this.settings = new VscrollSettings(() => this.container.count);\n    if (settings) {\n      Object.assign(this.settings, settings);\n    }\n\n    this.container = new VscrollContainer(this.settings);\n  }\n\n  id(index: number) {\n    return index;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IVscrollContext, IVscrollSettings } from '@qgrid/core';\nimport { VscrollContext } from '../vscroll/vscroll.context';\n\n@Injectable()\nexport class ScrollService {\n  factory(settings: IVscrollSettings): IVscrollContext {\n    return new VscrollContext(settings);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ModelBuilder } from '@qgrid/core';\nimport { GridModel } from './grid-model';\n\n@Injectable()\nexport class GridModelBuilder {\n  private builder = new ModelBuilder();\n\n  register<T>(key: string, ctor: T) {\n    return this.builder.register(key, ctor);\n  }\n\n  build(): GridModel {\n    return this.builder.build();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as labelService from '@qgrid/core';\nimport * as valueService from '@qgrid/core';\nimport {\n  Action,\n  Command,\n  GridService,\n  identity,\n  Node,\n  noop,\n  Pipe,\n  PipeUnit,\n  RowDetailsStatus,\n} from '@qgrid/core';\nimport { GridModelBuilder } from '../grid/grid-model.builder';\nimport { GridModel } from './grid-model';\n\nexport { GridService } from '@qgrid/core';\n\n@Injectable()\nexport class Grid {\n\n  get noop() {\n    return noop;\n  }\n\n  get identity() {\n    return identity;\n  }\n\n  get pipe() {\n    return Pipe;\n  }\n\n  get pipeUnit() {\n    return PipeUnit;\n  }\n\n  get Command() {\n    return Command;\n  }\n\n  get Action() {\n    return Action;\n  }\n\n  get Node() {\n    return Node;\n  }\n\n  get RowDetailsStatus() {\n    return RowDetailsStatus;\n  }\n\n  get valueFactory() {\n    return valueService.getValueFactory;\n  }\n\n  get labelFactory() {\n    return labelService.getLabelFactory;\n  }\n\n  constructor(private modelBuilder: GridModelBuilder) {\n  }\n\n  model(): GridModel {\n    return this.modelBuilder.build();\n  }\n\n  service(model: GridModel): GridService {\n    return new GridService(model);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  BodyLet,\n  ClipboardLet,\n  CommandManager,\n  EditLet,\n  FilterLet,\n  FootLet,\n  GroupLet,\n  HeadLet,\n  HighlightLet,\n  LayoutLet,\n  NavigationLet,\n  PaginationLet,\n  RowDetailsLet,\n  RowLet,\n  ScrollLet,\n  SelectionLet,\n  SortLet,\n  StyleLet,\n  viewFactory,\n} from '@qgrid/core';\nimport { GridPlugin } from '../plugin/grid-plugin';\nimport { ScrollService } from '../scroll/scroll.service';\nimport { Grid } from './grid';\n\n@Injectable()\nexport class GridLet {\n  body: BodyLet;\n  edit: EditLet;\n  filter: FilterLet;\n  foot: FootLet;\n  group: GroupLet;\n  head: HeadLet;\n  highlight: HighlightLet;\n  layout: LayoutLet;\n  nav: NavigationLet;\n  pagination: PaginationLet;\n  row: RowLet;\n  rowDetails: RowDetailsLet;\n  scroll: ScrollLet;\n  selection: SelectionLet;\n  sort: SortLet;\n  style: StyleLet;\n  clipboard: ClipboardLet;\n\n  constructor(\n\t\tprivate qgrid: Grid,\n\t\tprivate scrollService: ScrollService,\n  ) { }\n\n  init(plugin: GridPlugin, commandManager: CommandManager) {\n    const selectors = {\n      th: 'q-grid-core-th',\n      tr: 'q-grid-core-tr',\n    };\n\n    const injectLetServicesTo = viewFactory(\n      plugin,\n      commandManager,\n      this.scrollService,\n      selectors,\n    );\n\n    injectLetServicesTo(this);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DomTable } from '../dom/dom';\nimport { GridModel } from '../grid/grid-model';\n\n@Injectable()\nexport class GridRoot {\n  model: GridModel;\n  table: DomTable;\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Disposable as DisposableCore, DisposableResource } from '@qgrid/core';\n\n@Injectable()\nexport class Disposable implements OnDestroy {\n  private disposable = new DisposableCore();\n\n  add(resource: DisposableResource) {\n    this.disposable.add(resource);\n  }\n\n  remove(resource: DisposableResource): boolean {\n    return this.disposable.remove(resource);\n  }\n\n  finalize() {\n    this.disposable.finalize();\n  }\n\n  ngOnDestroy() {\n    this.finalize();\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport {\n  Event,\n  GridLet,\n  Lazy,\n  ObservableEvent,\n  ObservableLike,\n  ObservableReplyEvent,\n} from '@qgrid/core';\nimport { DomTable } from '../dom/dom';\nimport { Grid, GridService } from '../grid/grid';\nimport { GridLet as NgxGridLet } from '../grid/grid-let';\nimport { GridModel } from '../grid/grid-model';\nimport { GridRoot } from '../grid/grid-root';\nimport { Disposable } from '../infrastructure/disposable';\n\n@Injectable()\nexport class GridPlugin implements OnDestroy {\n  private serviceLazy = new Lazy(() => this.qgrid.service(this.$root.model));\n\n  readonly disposable = new Disposable();\n\n  get model(): GridModel {\n    const { model } = this.$root;\n    return model;\n  }\n\n  get view(): GridLet {\n    return this.$view;\n  }\n\n  get table(): DomTable {\n    const { table } = this.$root;\n    return table;\n  }\n\n  get service(): GridService {\n    return this.serviceLazy.instance;\n  }\n\n  constructor(\n\t\tprivate $view: NgxGridLet,\n\t\tprivate $root: GridRoot,\n\t\tprivate qgrid: Grid,\n  ) {\n  }\n\n  readonly observe = <TState>(event: Event<TState>): ObservableLike<TState> => new ObservableEvent(event, this.disposable);\n\n  readonly observeReply = <TState>(event: Event<TState>): ObservableLike<TState> => new ObservableReplyEvent(event, this.disposable);\n\n  ngOnDestroy() {\n    this.disposable.finalize();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ColumnModelPin } from '@qgrid/core';\n\n@Injectable()\nexport class TableCoreService {\n  pin: ColumnModelPin;\n}\n","export function capitalize(text: string) {\n  return text[0].toUpperCase() + text.slice(1);\n}\n\nexport function placeholderBitmap(width: number, height: number) {\n  const minWidth = Math.max(width, 1);\n  const minHeight = Math.max(height, 1);\n  const canvas = document.createElement('canvas');\n  canvas.width = Math.max(width * 2, 1);\n  canvas.height = Math.max(height * 2, 1);\n\n  const ctx = canvas.getContext('2d');\n  ctx.fillStyle = 'rgba(0, 0, 0, 0.04)';\n  ctx.fillRect(0, 0, minWidth, minHeight);\n  ctx.fillStyle = 'rgba(0, 0, 0, 0.08)';\n  ctx.fillRect(width, height, minWidth, minHeight);\n\n  return canvas.toDataURL();\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  NgZone,\n  Renderer2,\n} from '@angular/core';\nimport { placeholderBitmap } from './vscroll.utility';\n\n@Directive({\n  selector: '[q-grid-vscroll]',\n})\nexport class VscrollDirective {\n  scroll = new EventEmitter();\n  reset = new EventEmitter<{ handled: boolean; source: string }>();\n\n  get element() {\n    return this.elementRef.nativeElement;\n  }\n\n  constructor(private elementRef: ElementRef, zone: NgZone, renderer: Renderer2) {\n    zone.runOutsideAngular(() => {\n      elementRef\n        .nativeElement\n        .addEventListener(\n          'scroll',\n          () => this.scroll.emit(),\n          { passive: true },\n        );\n\n      renderer.listen(\n        window,\n        'resize',\n        () => {\n          const e = { handled: false, source: 'resize' };\n          this.reset.emit(e);\n        },\n      );\n    });\n  }\n\n  drawPlaceholder(width: number, height: number) {\n    const box = this.elementRef.nativeElement;\n    const style = box.style;\n    const placeholder = placeholderBitmap(width || box.clientWidth, height || box.clientHeight);\n\n    style.backgroundImage = 'url(' + placeholder + ')';\n    style.backgroundRepeat = 'repeat';\n  }\n\n  resetX() {\n    this.elementRef.nativeElement.scrollLeft = 0;\n  }\n\n  resetY() {\n    this.elementRef.nativeElement.scrollTop = 0;\n  }\n}\n","function findIndexAt(items: Array<number>, value: number) {\n  const length = items.length;\n  let min = 0;\n  let max = length - 1;\n  while (min <= max) {\n    const mid = (min + max) >> 1;\n    const k = items[mid];\n    if (k === value) {\n      return mid;\n    } else if (k < value) {\n      min = mid + 1;\n    } else {\n      max = mid - 1;\n    }\n  }\n\n  return min;\n}\n\nexport interface IVscrollPosition {\n\tindex: number;\n\toffset: number;\n\tlastOffset: number;\n\tvalue: number;\n\tpad: number;\n}\n\nexport function findPositionUsingItemSize(value: number, itemSize: number) {\n  const index = Math.max(0, Math.round(value / itemSize));\n  return {\n    index,\n    offset: itemSize * index,\n    lastOffset: 0,\n    value,\n    pad: 0,\n  };\n}\n\nexport function findPositionUsingOffsets(value: number, offsets: Array<number>): IVscrollPosition {\n  const index = findIndexAt(offsets, value);\n  const { length } = offsets;\n  if (index > 0) {\n    return {\n      index,\n      offset: offsets[index - 1],\n      lastOffset: offsets[length - 1],\n      value,\n      pad: 0,\n    };\n  }\n\n  return {\n    index: 0,\n    offset: 0,\n    lastOffset: 0,\n    value,\n    pad: 0,\n  };\n}\n\nexport function recycleFactory(items: Array<() => number>) {\n  const offsets = new Array<number>();\n  return (index: number, count: number) => {\n    let cursor = offsets.length;\n    const threshold = items.length;\n    const diff = Math.min(count, threshold + index) - cursor;\n\n    for (let i = threshold - diff; i < threshold; i++) {\n      const getSize = items[i];\n      const size = getSize();\n      if (cursor === 0) {\n        offsets[cursor] = size;\n      } else {\n        offsets[cursor] = offsets[cursor - 1] + size;\n      }\n\n      cursor++;\n    }\n\n    return offsets;\n  };\n}\n","import { findPositionUsingOffsets, IVscrollPosition, recycleFactory } from './vscroll.position';\nimport { VscrollBox } from './vscroll.box';\nimport { VscrollPort } from './vscroll.port';\n\nconst UNSET_ARM = Number.MAX_SAFE_INTEGER;\n\nfunction empty() {\n  return 0;\n}\n\nexport class VscrollLayout {\n  private items = [];\n  private minArm = UNSET_ARM;\n  private position = findPositionUsingOffsets(0, []);\n  private getOffsets = recycleFactory(this.items);\n\n  private get container() {\n    return this.port.context.container;\n  }\n\n  private get settings() {\n    return this.port.context.settings;\n  }\n\n  constructor(private port: VscrollPort) {\n  }\n\n  recycle(count: number, box: VscrollBox, force: boolean): IVscrollPosition | null {\n    const { port } = this;\n    const itemSize = port.getItemSize();\n    if (itemSize) {\n      return this.recycleItemSize(count, box, force, itemSize);\n    }\n\n    return this.recycleOffsets(count, box, force);\n  }\n\n  invalidate(position: IVscrollPosition): number {\n    const { offset } = position;\n    const pad1 = Math.max(0, offset);\n    const pad2 = Math.max(0, position.pad - pad1);\n\n    this.port.move(pad1, pad2);\n    return position.index;\n  }\n\n  reset() {\n    this.minArm = UNSET_ARM;\n    this.getOffsets = this.port.recycleFactory(this.items);\n    this.position = findPositionUsingOffsets(0, []);\n    return this.invalidate(this.position);\n  }\n\n  setItem(index: number, item: () => number) {\n    const { items } = this;\n    items[index] = item;\n    while (--index >= 0) {\n      if (items[index]) {\n        break;\n      }\n\n      items[index] = empty;\n    }\n  }\n\n  removeItem(index: number) {\n    const { items } = this;\n    const last = items.length - 1;\n    if (index === last) {\n      items.pop();\n      while (--index >= 0) {\n        const item = items[index];\n        if (item !== empty) {\n          break;\n        }\n\n        items.pop();\n      }\n    } else {\n      items[index] = empty;\n    }\n  }\n\n  private recycleOffsets(count: number, box: VscrollBox, force: boolean) {\n    const { position, port } = this;\n    const { threshold } = this.settings;\n    const offsets = this.getOffsets(position.index, count);\n    const arm = this.getArmUsingOffsets(offsets, box, position.index);\n\n    this.minArm = Math.min(this.minArm, arm);\n\n    const newPosition = port.getPositionUsingOffsets(offsets, box, this.minArm);\n    if (force || position.index !== newPosition.index) {\n      const last = Math.min(offsets.length - 1, newPosition.index + threshold - 1);\n      const first = newPosition.index - 1;\n      const viewSize = (offsets[last] || 0) - (offsets[first] || 0);\n      const scrollSize = offsets[offsets.length - 1] || 0;\n      const padSize = scrollSize - viewSize;\n      newPosition.pad = padSize;\n      return this.position = newPosition;\n    }\n\n    return null;\n  }\n\n  private recycleItemSize(count: number, box: VscrollBox, force: boolean, itemSize: number) {\n    const { position, port } = this;\n    const arm = this.getArmUsingItemSize(itemSize, box);\n    const newPosition = port.getPositionUsingItemSize(itemSize, box, arm);\n\n    if (force || position.index !== newPosition.index) {\n      const { threshold } = this.settings;\n      const remain = Math.max(0, newPosition.index + threshold - this.container.count);\n      newPosition.pad = Math.max(0, itemSize * (count + remain - threshold));\n      return this.position = newPosition;\n    }\n\n    return null;\n  }\n\n  private getArmUsingItemSize(itemSize: number, box: VscrollBox) {\n    const { threshold } = this.settings;\n    const portSize = this.port.getSize(box);\n    const viewSize = threshold * itemSize;\n    return Math.max(0, (viewSize - portSize) / 2);\n  }\n\n  private getArmUsingOffsets(offsets: Array<number>, box: VscrollBox, index: number) {\n    if (offsets.length) {\n      const { threshold } = this.settings;\n      const portSize = this.port.getSize(box);\n      const last = Math.min(offsets.length, index + threshold) - 1;\n      const first = (last + 1) - threshold;\n      const viewSize = offsets[last] - offsets[first];\n      return Math.max(0, (viewSize - portSize) / 2);\n    }\n\n    return UNSET_ARM;\n  }\n}\n","export class VscrollBox {\n  scrollWidth = 0;\n  scrollHeight = 0;\n  scrollTop = 0;\n  scrollLeft = 0;\n  portWidth = 0;\n  portHeight = 0;\n}\n","import { isNumber } from '@qgrid/core';\nimport { VscrollBox } from './vscroll.box';\nimport { VscrollDirective } from './vscroll.directive';\nimport { VscrollPort } from './vscroll.port';\n\nexport class VscrollLink {\n  private box = new VscrollBox();\n  private ticking = false;\n\n  private get settings() {\n    return this.port.context.settings;\n  }\n\n  private get container() {\n    return this.port.context.container;\n  }\n\n  constructor(\n\t\tprivate port: VscrollPort,\n\t\tprivate view: VscrollDirective,\n  ) {\n    const { layout } = port;\n    const { settings, container } = this;\n\n    if (settings.placeholderHeight > 0 || settings.placeholderWidth > 0) {\n      const width = settings.placeholderWidth || (isNumber(settings.columnWidth) && settings.columnWidth as number);\n      const height = settings.placeholderHeight || (isNumber(settings.rowHeight) && settings.rowHeight as number);\n      view.drawPlaceholder(width, height);\n    }\n\n    view.scroll.subscribe(() => this.update(false));\n\n    view.reset.subscribe(e => {\n      if (e.handled) {\n        return;\n      }\n\n      e.handled = settings.resetTriggers.indexOf(e.source) < 0;\n      container.reset$.emit(e);\n    });\n\n    container.reset$.subscribe(e => {\n      if (e.handled) {\n        return;\n      }\n\n      container.position = layout.reset();\n      port.reset();\n\n      container.fetchPage(0);\n    });\n\n    container.update$.subscribe(() => this.update(true));\n  }\n\n  tick(force: boolean) {\n    this.ticking = false;\n\n    const { port, container, box } = this;\n    const count = container.count;\n    const position = port.layout.recycle(count, box, force);\n    if (position) {\n      const draw = () => {\n        container.position = port.layout.invalidate(position);\n        container.draw$.emit({\n          position: container.position,\n        });\n      };\n\n      const emit = f => port.emit(f);\n      container.apply(draw, emit);\n    }\n  }\n\n  update(force: boolean) {\n    const { container, port, box } = this;\n    const { element } = this.view;\n\n    this.container.read(() => {\n      const newBox = {\n        scrollWidth: element.scrollWidth,\n        scrollHeight: element.scrollHeight,\n        scrollTop: element.scrollTop,\n        scrollLeft: element.scrollLeft,\n        portWidth: element.clientWidth,\n        portHeight: element.clientHeight,\n      };\n\n      if (force || port.hasChanges(newBox, box)) {\n        this.box = newBox;\n        if (container.count && !this.ticking) {\n          this.ticking = true;\n          container.tick(() => this.tick(force));\n        }\n      }\n    });\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { isNumber } from '@qgrid/core';\nimport { VscrollBox } from './vscroll.box';\nimport { VscrollContext } from './vscroll.context';\nimport { VscrollDirective } from './vscroll.directive';\nimport { VscrollLayout } from './vscroll.layout';\nimport { VscrollLink } from './vscroll.link';\nimport { VscrollPort } from './vscroll.port';\nimport { findPositionUsingItemSize, findPositionUsingOffsets, IVscrollPosition, recycleFactory } from './vscroll.position';\nimport { capitalize } from './vscroll.utility';\n\n@Directive({\n  selector: '[q-grid-vscroll-port-y]',\n})\nexport class VscrollPortYDirective implements VscrollPort, OnChanges {\n  private link: VscrollLink = null;\n\n  @Input('q-grid-vscroll-port-y') context: VscrollContext;\n\n  layout: VscrollLayout = null;\n  markup: { [key: string]: HTMLElement } = {};\n\n  constructor(\n    private elementRef: ElementRef,\n    private view: VscrollDirective,\n  ) {\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const contextChange = changes['context'];\n    if (contextChange && this.context) {\n      this.layout = new VscrollLayout(this);\n      this.link = new VscrollLink(this, this.view);\n      this.context.container.reset();\n    }\n  }\n\n  public reset() {\n    this.view.resetY();\n  }\n\n  emit(f: () => void) {\n    const { settings } = this.context;\n    if (settings.emit) {\n      settings.emit(f);\n    } else {\n      f();\n    }\n  }\n\n  getPositionUsingItemSize(itemSize: number, box: VscrollBox, arm: number): IVscrollPosition {\n    const limitTop = box.scrollTop - arm;\n    const limitBottom = box.scrollHeight - (box.portHeight + arm);\n    const value = Math.min(limitBottom, Math.max(0, limitTop));\n    return findPositionUsingItemSize(value, itemSize);\n  }\n\n  getPositionUsingOffsets(offsets: Array<number>, box: VscrollBox, arm: number): IVscrollPosition {\n    const limitTop = box.scrollTop - arm;\n    const limitBottom = box.scrollHeight - (box.portHeight + arm);\n    const value = Math.min(limitBottom, Math.max(0, limitTop));\n    return findPositionUsingOffsets(value, offsets);\n  }\n\n  move(top: number, bottom: number) {\n    this.pad('top', top);\n    this.pad('bottom', bottom);\n  }\n\n  getItemSize(): number {\n    const rowHeight = this.context.settings.rowHeight as number;\n    return isNumber(rowHeight) ? rowHeight : 0;\n  }\n\n  getScrollSize(box: VscrollBox) {\n    return box.scrollHeight;\n  }\n\n  getSize(box: VscrollBox) {\n    return box.portHeight;\n  }\n\n  recycleFactory(items: Array<any>) {\n    const recycle = recycleFactory(items);\n    return (index: number, count: number) => {\n      const size = this.getItemSize();\n      if (size) {\n        return [];\n      }\n\n      return recycle(index, count);\n    };\n  }\n\n  hasChanges(newBox: VscrollBox, oldBox: VscrollBox) {\n    return !oldBox.portHeight || newBox.scrollTop !== oldBox.scrollTop;\n  }\n\n  private pad(pos: string, value: number) {\n    if (Object.prototype.hasOwnProperty.call(this.markup, pos)) {\n      const mark = this.markup[pos];\n      mark.style.height = value + 'px';\n    } else {\n      this.elementRef.nativeElement.style['padding' + capitalize(pos)] = value + 'px';\n    }\n  }\n}\n","import {\n  Directive,\n  Input,\n  ElementRef,\n  OnDestroy,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { sizeFactory } from './vscroll.container';\nimport { VscrollPortYDirective } from './vscroll-port-y.directive';\n\n@Directive({\n  selector: '[q-grid-vscroll-row]',\n})\nexport class VscrollRowDirective implements OnDestroy, OnChanges {\n  private row: HTMLElement;\n\n  private get layout() {\n    return this.port.layout;\n  }\n\n  private get settings() {\n    return this.port.context.settings;\n  }\n\n  private get container() {\n    return this.port.context.container;\n  }\n\n  @Input('q-grid-vscroll-row') index: number;\n\n  constructor(elementRef: ElementRef, private port: VscrollPortYDirective) {\n    this.row = elementRef.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['index']) {\n      if (this.port.getItemSize()) {\n        this.ngOnChanges = null;\n        return;\n      }\n\n      const { layout, settings, container, row } = this;\n      const { rowHeight } = settings;\n      this.ngOnChanges = (e: SimpleChanges) => {\n        if (e['index']) {\n          const change = e['index'];\n          const newIndex = change.currentValue;\n          const oldIndex = change.previousValue;\n          layout.removeItem(oldIndex);\n\n          const size = sizeFactory(rowHeight, container, row, newIndex);\n          layout.setItem(newIndex, size);\n        }\n      };\n\n      const firstChange = changes['index'];\n      const firstNewIndex = firstChange.currentValue;\n      const firstSize = sizeFactory(rowHeight, container, row, firstNewIndex);\n      layout.setItem(firstNewIndex, firstSize);\n    }\n  }\n\n  ngOnDestroy() {\n    this.port.layout.removeItem(this.index);\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { isNumber } from '@qgrid/core';\nimport { VscrollBox } from './vscroll.box';\nimport { VscrollContext } from './vscroll.context';\nimport { VscrollDirective } from './vscroll.directive';\nimport { VscrollLayout } from './vscroll.layout';\nimport { VscrollLink } from './vscroll.link';\nimport { VscrollPort } from './vscroll.port';\nimport { findPositionUsingItemSize, findPositionUsingOffsets, IVscrollPosition, recycleFactory } from './vscroll.position';\nimport { capitalize } from './vscroll.utility';\n\n@Directive({\n  selector: '[q-grid-vscroll-port-x]',\n})\nexport class VscrollPortXDirective implements VscrollPort, OnChanges {\n  private link: VscrollLink = null;\n\n  @Input('q-grid-vscroll-port-x') context: VscrollContext;\n\n  markup: { [key: string]: HTMLElement } = {};\n  layout: VscrollLayout = null;\n\n  constructor(\n    private elementRef: ElementRef,\n    private view: VscrollDirective,\n  ) {\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const contextChange = changes['context'];\n    if (contextChange && this.context) {\n      this.layout = new VscrollLayout(this);\n      this.link = new VscrollLink(this, this.view);\n      this.context.container.reset();\n    }\n  }\n\n  reset() {\n    this.view.resetX();\n  }\n\n  emit(f: () => void) {\n    const { settings } = this.context;\n\n    if (settings.emit) {\n      settings.emit(f);\n    } else {\n      f();\n    }\n  }\n\n  getPositionUsingItemSize(itemSize: number, box: VscrollBox, arm: number): IVscrollPosition {\n    const limitTop = box.scrollLeft - arm;\n    const limitBottom = box.scrollWidth - (box.portWidth + arm);\n    const value = Math.min(limitBottom, Math.max(0, limitTop));\n\n    return findPositionUsingItemSize(value, itemSize);\n  }\n\n  getPositionUsingOffsets(offsets: Array<number>, box: VscrollBox, arm: number): IVscrollPosition {\n    const limitTop = box.scrollLeft - arm;\n    const limitBottom = box.scrollHeight - (box.portWidth + arm);\n    const value = Math.min(limitBottom, Math.max(0, limitTop));\n\n    return findPositionUsingOffsets(value, offsets);\n  }\n\n  move(left: number, right: number) {\n    this.pad('left', left);\n    this.pad('right', right);\n  }\n\n  getItemSize(): number {\n    const columnWidth = this.context.settings.columnWidth as number;\n    return isNumber(columnWidth) ? columnWidth : 0;\n  }\n\n  getScrollSize(box: VscrollBox) {\n    return box.scrollWidth;\n  }\n\n  getSize(box: VscrollBox) {\n    return box.portWidth;\n  }\n\n  recycleFactory(items: Array<any>) {\n    const recycle = recycleFactory(items);\n    return (index: number, count: number) => {\n      const size = this.getItemSize();\n      if (size) {\n        return [];\n      }\n\n      return recycle(index, count);\n    };\n  }\n\n  hasChanges(newBox: VscrollBox, oldBox: VscrollBox) {\n    return !oldBox.portWidth || newBox.scrollWidth !== oldBox.scrollWidth;\n  }\n\n  private pad(pos: string, value: number) {\n    if (Object.prototype.hasOwnProperty.call(this.markup, pos)) {\n      const mark = this.markup[pos];\n      mark.style.width = value + 'px';\n    } else {\n      this.elementRef.nativeElement.style['padding' + capitalize(pos)] = value + 'px';\n    }\n  }\n}\n","import {\n  Directive,\n  OnInit,\n  OnDestroy,\n  ElementRef,\n  Input,\n  Optional,\n} from '@angular/core';\nimport { VscrollPortXDirective } from './vscroll-port-x.directive';\nimport { VscrollPortYDirective } from './vscroll-port-y.directive';\nimport { VscrollPort } from './vscroll.port';\n\n@Directive({\n  selector: '[q-grid-vscroll-mark]',\n})\nexport class VscrollMarkDirective implements OnInit, OnDestroy {\n  private ports: Array<VscrollPort> = [];\n\n  @Input('q-grid-vscroll-mark') key: string;\n\n  constructor(\n    private elementRef: ElementRef,\n    @Optional() portX: VscrollPortXDirective,\n    @Optional() portY: VscrollPortYDirective) {\n    if (portX) {\n      this.ports.push(portX);\n    }\n\n    if (portY) {\n      this.ports.push(portY);\n    }\n  }\n\n  ngOnInit() {\n    const element = this.elementRef.nativeElement;\n    const key = this.key;\n\n    this.ports.forEach(port => port.markup[key] = element);\n  }\n\n  ngOnDestroy() {\n    const key = this.key;\n\n    this.ports.forEach(port => delete port.markup[key]);\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { DomTr } from '../dom/dom';\nimport { GridLet } from '../grid/grid-let';\nimport { GridPlugin } from '../plugin/grid-plugin';\n\n@Directive({\n  selector: '[q-grid-core-tr]',\n})\nexport class TrCoreDirective implements DomTr, OnInit, OnDestroy {\n  @Input('q-grid-core-index') viewIndex: number;\n  @Input('q-grid-core-tr') model: any;\n  @Input('q-grid-core-source') source;\n\n  element: HTMLElement;\n\n  get index() {\n    return this.$view.scroll.y.container.position + this.viewIndex;\n  }\n\n  constructor(\n    public $view: GridLet,\n    private plugin: GridPlugin,\n    elementRef: ElementRef,\n  ) {\n    this.element = elementRef.nativeElement;\n  }\n\n  ngOnInit() {\n    this.plugin.table.box.bag[this.source].addRow(this);\n  }\n\n  ngOnDestroy() {\n    this.plugin.table.box.bag[this.source].deleteRow(this);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { bodyCellClassifier, ColumnModel, headCellClassifier } from '@qgrid/core';\n\n@Injectable()\nexport class CellClassService {\n  private bodyCache = new Map<ColumnModel, (x: HTMLElement) => void>();\n\n  toBody(element: HTMLElement, column: ColumnModel) {\n    let classify = this.bodyCache.get(column);\n    if (!classify) {\n      classify = bodyCellClassifier(column);\n      this.bodyCache.set(column, classify);\n    }\n\n    classify(element);\n  }\n\n  toHead(element: HTMLElement, column: ColumnModel) {\n    const classify = headCellClassifier(column);\n    classify(element);\n  }\n}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\nimport { ColumnView } from '@qgrid/core';\nimport { CellClassService } from '../cell/cell-class.service';\n\n@Directive({\n  selector: '[q-grid-core-td-align]',\n})\nexport class TdCoreAlignDirective implements OnInit {\n  @Input('q-grid-core-td-align') columnView: ColumnView;\n\n  constructor(\n    private elementRef: ElementRef,\n    private cellClass: CellClassService,\n  ) {\n  }\n\n  ngOnInit() {\n    this.cellClass.toBody(this.elementRef.nativeElement, this.columnView.model);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TemplateLink } from './template-link';\n\n@Injectable()\nexport class TemplateCacheService {\n  private cache: Map<string, TemplateLink> = new Map();\n\n  constructor() {\n  }\n\n  get(key: string): TemplateLink {\n    return this.cache.get(key);\n  }\n\n  put(key: string, value: TemplateLink) {\n    this.cache.set(key, value);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TemplateLink } from './template-link';\n\n@Injectable()\nexport class TemplateLinkService {\n  private cache: Map<string, TemplateLink> = new Map();\n\n  get(key: string): TemplateLink {\n    return this.cache.get(key);\n  }\n\n  put(key: string, value: TemplateLink) {\n    this.cache.set(key, value);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { isArray, isString } from '@qgrid/core';\nimport { TemplateCacheService } from './template-cache.service';\nimport { TemplateLink } from './template-link';\nimport { TemplateLinkService } from './template-link.service';\n\n@Injectable()\nexport class TemplateService {\n  constructor(\n\t\tprivate templateLink: TemplateLinkService,\n\t\tprivate templateCache: TemplateCacheService,\n  ) { }\n\n  find(keys: string | string[]): TemplateLink {\n    if (isString(keys)) {\n      const key = keys as string;\n      const link = this.templateCache.get(key) || this.templateLink.get(key);\n      return link || null;\n    }\n\n    if (isArray(keys)) {\n      return this.lookInCache(keys) || this.lookInLink(keys);\n    }\n  }\n\n  private lookInCache(keys) {\n    for (const key of keys) {\n      const link = this.templateCache.get(key);\n      if (link) {\n        return link;\n      }\n    }\n\n    return null;\n  }\n\n  private lookInLink(keys) {\n    for (const key of keys) {\n      const link = this.templateLink.get(key);\n      if (link) {\n        return link;\n      }\n    }\n\n    return null;\n  }\n}\n","import { Injectable, ViewContainerRef } from '@angular/core';\nimport { ColumnModel, GridError, noop } from '@qgrid/core';\nimport { TemplateService } from '../template/template.service';\n\nfunction canBuild(column) {\n  return column.type !== 'pad';\n}\n\nfunction buildId(source: string, column: ColumnModel, mode = 'view') {\n  const { key, type, itemType } = column as any;\n  return `${source}-${mode}-cell-${type}-of-${itemType}-the-${key}.tpl.html`;\n}\n\nfunction buildKeys(source: string, column: ColumnModel, mode = 'view') {\n  const { key, itemType } = column as any;\n  let { type } = column as any;\n\n  switch (mode) {\n    case 'view': {\n      const result = [\n        `${source}-cell-${type}-the-${key}.tpl.html`,\n        `${source}-cell-the-${key}.tpl.html`,\n        `${source}-cell-${type}.tpl.html`,\n        `${source}-cell.tpl.html`,\n        `${source}-cell-text.tpl.html`,\n      ];\n\n      if (itemType) {\n        result.splice(0, 0,\n          ...[`${source}-cell-${type}-of-${itemType}-the-${key}.tpl.html`, `${source}-cell-${type}-of-${itemType}.tpl.html`],\n        );\n      }\n\n      return result;\n    }\n    case 'change':\n    case 'edit': {\n      type = column.editor || type;\n      const result = [\n        `${mode}-cell-${type}-the-${key}.tpl.html`,\n        `${mode}-cell-the-${key}.tpl.html`,\n        `${mode}-cell-${type}.tpl.html`,\n        `${mode}-cell.tpl.html`,\n        `${mode}-cell-text.tpl.html`,\n      ];\n\n      if (itemType) {\n        result.splice(0, 0,\n          ...[`${mode}-cell-${type}-of-${itemType}-the-${key}.tpl.html`, `${mode}-cell-${type}-of-${itemType}.tpl.html`],\n        );\n      }\n\n      return result;\n    }\n    default:\n      throw new GridError('cell.service', `Invalid mode '${mode}'`);\n  }\n}\n\n@Injectable()\nexport class CellTemplateService {\n  private commits = new Map<string, (container: ViewContainerRef, context: any) => void>();\n\n  constructor(private templateService: TemplateService) { }\n\n  build(source: string, column: ColumnModel, mode: 'view' | 'edit' | 'change' = 'view') {\n    if (!canBuild(column)) {\n      return noop;\n    }\n\n    const id = buildId(source, column, mode);\n    let commit = this.commits.get(id);\n    if (commit) {\n      return commit;\n    }\n\n    const keys = buildKeys(source, column, mode);\n    const templateLink = this.templateService.find(keys);\n    if (!templateLink) {\n      return noop;\n    }\n\n    commit = (container: ViewContainerRef, context: any) => {\n      container.clear();\n      return container.createEmbeddedView(templateLink.template, context);\n    };\n\n    this.commits.set(id, commit);\n    return commit;\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChange,\n  SimpleChanges,\n  ViewContainerRef,\n} from '@angular/core';\nimport {\n  ColumnModel,\n  ColumnView,\n  GridError,\n  GRID_PREFIX,\n  noop,\n} from '@qgrid/core';\nimport { CellClassService } from '../cell/cell-class.service';\nimport { CellTemplateService } from '../cell/cell-template.service';\nimport { DomTd } from '../dom/dom';\nimport { GridLet } from '../grid/grid-let';\nimport { GridRoot } from '../grid/grid-root';\nimport { TrCoreDirective } from '../row/tr-core.directive';\n\n@Directive({\n  selector: '[q-grid-core-td]',\n})\nexport class TdCoreDirective implements DomTd, OnInit, OnDestroy, OnChanges {\n  @Input('q-grid-core-value') actualValue: any;\n  @Input('q-grid-core-label') actualLabel: any;\n\n  @Input('q-grid-core-td') columnView: ColumnView;\n\n  $implicit = this;\n\n  element: HTMLElement;\n  changes: SimpleChange;\n\n  get value() {\n    return this.actualValue;\n  }\n\n  set value(value) {\n    const { column, row, rowIndex, columnIndex } = this;\n    this.$view.body.render.setValue(row, column, value, rowIndex, columnIndex);\n  }\n\n  get label() {\n    return this.actualLabel;\n  }\n\n  set label(label) {\n    const { column, row, rowIndex, columnIndex } = this;\n    this.$view.body.render.setLabel(row, column, label, rowIndex, columnIndex);\n  }\n\n  get column(): ColumnModel {\n    return this.columnView.model;\n  }\n\n  get columnIndex() {\n    return this.columnView.columnIndex;\n  }\n\n  get row() {\n    return this.tr.model;\n  }\n\n  get rowIndex() {\n    return this.tr.index;\n  }\n\n  get dataRowIndex() {\n    const { model } = this.root;\n    const { rows } = model.data();\n    return rows.indexOf(this.row);\n  }\n\n  constructor(\n    public $view: GridLet,\n    private root: GridRoot,\n    private viewContainerRef: ViewContainerRef,\n    private cellTemplate: CellTemplateService,\n    private cellClass: CellClassService,\n    private tr: TrCoreDirective,\n    private cd: ChangeDetectorRef,\n    elementRef: ElementRef,\n  ) {\n    this.element = elementRef.nativeElement.parentNode;\n  }\n\n  ngOnInit() {\n    const { table } = this.root;\n    table.box.bag.body.addCell(this);\n\n    this.cellClass.toBody(this.element, this.column);\n\n    const link = this.cellTemplate.build('body', this.column, 'view');\n    link(this.viewContainerRef, this);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const { actualLabel } = changes;\n    if (actualLabel && !actualLabel.firstChange && actualLabel.currentValue !== actualLabel.previousValue) {\n      this.changes = actualLabel;\n      this.mode('change');\n    }\n  }\n\n  mode(value: 'view' | 'edit' | 'change') {\n    const link = this.cellTemplate.build('body', this.column, value);\n\n    switch (value) {\n      case 'view': {\n        this.element.classList.remove(`${GRID_PREFIX}-change`);\n        this.element.classList.remove(`${GRID_PREFIX}-edit`);\n\n        if (link !== noop) {\n          link(this.viewContainerRef, this);\n          this.cd.markForCheck();\n          this.cd.detectChanges();\n        }\n        break;\n      }\n      case 'edit': {\n        if (link === noop) {\n          throw new GridError(\n            'td-core.directive',\n            `Can't find template link for edit of ${this.column.key}`,\n          );\n        }\n\n        this.element.classList.add(`${GRID_PREFIX}-${value}`);\n        link(this.viewContainerRef, this);\n        this.cd.markForCheck();\n        this.cd.detectChanges();\n        break;\n      }\n      case 'change': {\n        if (link !== noop) {\n          this.element.classList.add(`${GRID_PREFIX}-${value}`);\n          link(this.viewContainerRef, this);\n          this.cd.markForCheck();\n          this.cd.detectChanges();\n        }\n        break;\n      }\n      default: {\n        throw new GridError('td-core.directive', `Invalid mode ${value}`);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    const { table } = this.root;\n    table.box.bag.body.deleteCell(this);\n  }\n}\n","import { ChangeDetectorRef, OnDestroy, Pipe, PipeTransform } from '@angular/core';\nimport {\n  Disposable,\n  IVscrollContext,\n  Log,\n  ObservableLike,\n  SubjectLike,\n} from '@qgrid/core';\n\n@Pipe({\n  name: 'qGridVscroll$',\n  pure: true,\n})\nexport class VscrollPipe implements OnDestroy, PipeTransform {\n  private disposable = new Disposable();\n\n  constructor(private cd: ChangeDetectorRef) {\n  }\n\n  transform(data: any[], context: IVscrollContext): ObservableLike<any[]> {\n    this.disposable.finalize();\n\n    if (!context) {\n      Log.warn('VscrollPipe', 'Context is not defined');\n      return new SubjectLike();\n    }\n\n    data = data || [];\n    const { container, settings } = context;\n    const items$ = new SubjectLike<any>();\n\n    container.update(data.length);\n\n    let cursor = container.position;\n    this.disposable.add(\n      container.draw$.subscribe(({ position }) => {\n        const { length } = data;\n        const { threshold } = settings;\n\n        container.update(length);\n\n        // We need to have a less number of virtual items on\n        // the bottom, as deferred loading is happen there should\n        // be a threshold place to draw several items below so we use cursor for the last\n        const first = position;\n        if (container.force || first !== cursor) {\n          const last = Math.min(first + threshold, length);\n          const wnd = new Array(last - first);\n\n          cursor = first;\n          container.force = false;\n\n          for (let i = first, j = 0; i < last; i++, j++) {\n            wnd[j] = data[i];\n          }\n\n          // TODO: remove that workaround\n          // async pipe doesn't trigger change detection,\n          // so we put subscription here to invoke detect changes\n          // after async pipe marks for check\n          const sub = items$.subscribe(() => {\n            this.cd.detectChanges();\n          });\n\n          try {\n            items$.next(wnd);\n          } finally {\n            sub.unsubscribe();\n          }\n        }\n      }),\n    );\n\n    return items$;\n  }\n\n  ngOnDestroy() {\n    this.disposable.finalize();\n  }\n}\n","<ng-container *ngTemplateOutlet=\"$view.scroll.mode === 'virtual' && pin === 'body' ? virtualRows : rows\">\n</ng-container>\n\n<ng-template #virtualRows>\n\t<tr q-grid-vscroll-mark=\"top\"\n\t\tclass=\"q-grid-scroll-mark\">\n\t</tr>\n\t<tr class=\"q-grid-align\">\n\t\t<td *ngFor=\"let $column of $view.body.columns($table.pin); trackBy: columnId\"\n\t\t\t[q-grid-core-td-align]=\"$column\">\n\t\t</td>\n\t</tr>\n\t<tr *ngFor=\"\n\t\tlet $row of $view.body.render.rows[pin] | qGridVscroll$: $view.scroll.y | async;\n\t\tindex as $vscrollIndex;\n\t\ttrackBy: $view.scroll.y.id\"\n\t\t\t[q-grid-core-tr]=\"$row\"\n\t\t\t[q-grid-core-index]=\"$vscrollIndex\"\n\t\t\t[q-grid-vscroll-row]=\"$vscrollIndex\"\n\t\t\tq-grid-core-source=\"body\">\n\t\t<td *ngFor=\"\n\t\t\tlet $column of $view.body.render.columns($row, $table.pin, mapToDataIndex($vscrollIndex));\n\t\t\tindex as $columnIndex;\n\t\t\ttrackBy: columnId\"\n\t\t\t\t[attr.rowspan]=\"$view.body.render.rowspan($row, $column, mapToDataIndex($vscrollIndex), $columnIndex)\"\n\t\t\t\t[attr.colspan]=\"$view.body.render.colspan($row, $column, mapToDataIndex($vscrollIndex), $columnIndex)\">\n\t\t\t\t<ng-container [q-grid-core-td]=\"$column\"\n\t\t\t\t\t[q-grid-core-label]=\"$view.body.render.getLabel($row, $column.model, mapToDataIndex($vscrollIndex), $columnIndex)\"\n\t\t\t\t\t[q-grid-core-value]=\"$view.body.render.getValue($row, $column.model, mapToDataIndex($vscrollIndex), $columnIndex)\">\n\t\t\t\t</ng-container>\n\t\t</td>\n\t</tr>\n\t<tr q-grid-vscroll-mark=\"bottom\"\n\t\tclass=\"q-grid-scroll-mark\">\n\t</tr>\n</ng-template>\n\n<ng-template #rows>\n\t<tr class=\"q-grid-align\">\n\t\t<td *ngFor=\"let $column of $view.body.columns($table.pin); trackBy: columnId\"\n\t\t\t[q-grid-core-td-align]=\"$column\">\n\t\t</td>\n\t</tr>\n\t<tr *ngFor=\"let $row of $view.body.render.rows[pin]; index as $rowIndex; trackBy: rowId\"\n\t\t[q-grid-core-tr]=\"$row\"\n\t\t[q-grid-core-index]=\"$rowIndex\"\n\t\tq-grid-core-source=\"body\">\n\t\t<td *ngFor=\"let $column of $view.body.render.columns($row, $table.pin, $rowIndex); index as $columnIndex; trackBy: columnId\"\n\t\t\t[attr.rowspan]=\"$view.body.render.rowspan($row, $column, $rowIndex, $columnIndex)\"\n\t\t\t[attr.colspan]=\"$view.body.render.colspan($row, $column, $rowIndex, $columnIndex)\">\n\t\t\t<ng-container [q-grid-core-td]=\"$column\"\n\t\t\t\t[q-grid-core-label]=\"$view.body.render.getLabel($row, $column.model, $rowIndex, $columnIndex)\"\n\t\t\t\t[q-grid-core-value]=\"$view.body.render.getValue($row, $column.model, $rowIndex, $columnIndex)\">\n\t\t\t</ng-container>\n\t\t</td>\n\t</tr>\n</ng-template>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  NgZone,\n  OnInit,\n} from '@angular/core';\nimport {\n  BodyHost,\n  ColumnView,\n  EventListener,\n  EventManager,\n  SelectionState,\n} from '@qgrid/core';\nimport { GridLet } from '../grid/grid-let';\nimport { GridModel } from '../grid/grid-model';\nimport { GridPlugin } from '../plugin/grid-plugin';\nimport { TableCoreService } from '../table/table-core.service';\n\n@Component({\n  selector: 'tbody[q-grid-core-body]', // eslint-disable-line @angular-eslint/component-selector\n  templateUrl: './body-core.component.html',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BodyCoreComponent implements OnInit {\n  @Input() pin = 'body';\n\n  // @deprecated\n  get selection(): SelectionState {\n    return this.model.selection();\n  }\n\n  get model(): GridModel {\n    return this.plugin.model;\n  }\n\n  constructor(\n    public $view: GridLet,\n    public $table: TableCoreService,\n    private elementRef: ElementRef,\n    private zone: NgZone,\n    private cd: ChangeDetectorRef,\n    private plugin: GridPlugin,\n  ) {\n  }\n\n  ngOnInit() {\n    const { model, disposable, observeReply, observe } = this.plugin;\n    const nativeElement = this.elementRef.nativeElement as HTMLElement;\n\n    const host = new BodyHost(this.plugin);\n\n    const listener = new EventListener(this.elementRef.nativeElement, new EventManager(this));\n    this.zone.runOutsideAngular(() => {\n      const scrollSettings = { passive: true };\n      disposable.add(\n        listener.on('scroll',\n          () => host.scroll({\n            scrollLeft: this.$table.pin === 'mid' ? nativeElement.scrollLeft : model.scroll().left,\n            scrollTop: nativeElement.scrollTop,\n          }),\n          scrollSettings,\n        ));\n\n      disposable.add(listener.on('wheel', e => host.wheel(e)));\n      disposable.add(listener.on('mouseleave', e => host.mouseLeave(e)));\n    });\n\n    observeReply(model.sceneChanged)\n      .subscribe(e => {\n        if (model.grid().interactionMode === 'detached') {\n          if (e.hasChanges('status')) {\n            switch (e.state.status) {\n              case 'stop':\n                this.cd.detach();\n                break;\n              case 'start':\n                this.cd.reattach();\n                break;\n            }\n          }\n        }\n      });\n\n    observe(model.sceneChanged)\n      .subscribe(e => {\n        if (e.hasChanges('status') && e.state.status === 'push') {\n          this.cd.markForCheck();\n        }\n      });\n  }\n\n  columnId(index: number, item: ColumnView) {\n    return item.model.key;\n  }\n\n  rowId(index: number) {\n    return index;\n  }\n\n  mapToDataIndex(viewIndex: number) {\n    return this.$view.scroll.y.container.position + viewIndex;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IVscrollSettings } from '@qgrid/core';\nimport { VscrollContext } from './vscroll.context';\n\n@Injectable()\nexport class VscrollService {\n  context(settings: Partial<IVscrollSettings> = {}) {\n    const context = new VscrollContext();\n    Object.assign(context.settings, settings);\n\n    return context;\n  }\n}\n","import {\n  Directive,\n  Input,\n  ElementRef,\n  OnDestroy,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { sizeFactory } from './vscroll.container';\nimport { VscrollPortYDirective } from './vscroll-port-y.directive';\n\n@Directive({\n  selector: '[q-grid-vscroll-column]',\n})\nexport class VscrollColumnDirective implements OnDestroy, OnChanges {\n  private column: HTMLElement;\n\n  private get layout() {\n    return this.port.layout;\n  }\n\n  private get settings() {\n    return this.port.context.settings;\n  }\n\n  private get container() {\n    return this.port.context.container;\n  }\n\n  @Input('q-grid-vscroll-column') index: number;\n\n  constructor(elementRef: ElementRef, private port: VscrollPortYDirective) {\n    this.column = elementRef.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['index']) {\n      if (this.port.getItemSize()) {\n        this.ngOnChanges = null;\n        return;\n      }\n\n      const { layout, settings, container, column } = this;\n      const { rowHeight } = settings;\n      this.ngOnChanges = (e: SimpleChanges) => {\n        if (e['index']) {\n          const change = e['index'];\n          const newIndex = change.currentValue;\n          const oldIndex = change.previousValue;\n          layout.removeItem(oldIndex);\n\n          const size = sizeFactory(rowHeight, container, column, newIndex);\n          layout.setItem(newIndex, size);\n        }\n      };\n\n      const firstChange = changes['index'];\n      const firstIndex = firstChange.currentValue;\n      const firstSize = sizeFactory(rowHeight, container, column, firstIndex);\n      layout.setItem(firstIndex, firstSize);\n    }\n  }\n\n  ngOnDestroy() {\n    this.port.layout.removeItem(this.index);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { VscrollService } from './vscroll.service';\nimport { VscrollColumnDirective } from './vscroll-column.directive';\nimport { VscrollRowDirective } from './vscroll-row.directive';\nimport { VscrollPipe } from './vscroll.pipe';\nimport { VscrollMarkDirective } from './vscroll-mark.directive';\nimport { VscrollPortXDirective } from './vscroll-port-x.directive';\nimport { VscrollPortYDirective } from './vscroll-port-y.directive';\nimport { VscrollDirective } from './vscroll.directive';\n\n@NgModule({\n  declarations: [\n    VscrollDirective,\n    VscrollColumnDirective,\n    VscrollRowDirective,\n    VscrollMarkDirective,\n    VscrollPortXDirective,\n    VscrollPortYDirective,\n    VscrollPipe,\n  ],\n  exports: [\n    VscrollDirective,\n    VscrollColumnDirective,\n    VscrollRowDirective,\n    VscrollMarkDirective,\n    VscrollPortXDirective,\n    VscrollPortYDirective,\n    VscrollPipe,\n  ],\n  providers: [\n    VscrollService,\n  ],\n})\nexport class VscrollModule {\n}\n","import { Injectable } from '@angular/core';\nimport { GridModel } from '../grid/grid-model';\n\n@Injectable()\nexport class StateAccessor {\n  private setters: Array<(model: GridModel) => void> = [];\n\n  setter<TState>(type: new () => TState): (state: Partial<TState>) => void {\n    return value => {\n      this.setters.push(model => {\n        const accessor = model.resolve(type);\n        accessor.state(value);\n      });\n    };\n  }\n\n  write(model: GridModel) {\n    for (const setter of this.setters) {\n      setter(model);\n    }\n\n    this.setters = [];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { identity } from '@qgrid/core';\n\n@Injectable()\nexport class TemplateHostService {\n  key: (x: string) => string = identity;\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n} from '@angular/core';\nimport {\n  Command,\n  RowDetails,\n  RowState,\n  RowStateMode,\n  RowStateUnit,\n  Td,\n} from '@qgrid/core';\nimport { GridPlugin } from '../plugin/grid-plugin';\nimport { StateAccessor } from '../state/state-accessor';\nimport { TemplateHostService } from '../template/template-host.service';\n\n// TODO: move it to plugins\n@Component({\n  selector: 'q-grid-row',\n  template: `<ng-content></ng-content>\n`,\n  providers: [\n    TemplateHostService,\n    GridPlugin,\n    StateAccessor,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RowComponent implements OnChanges, OnInit {\n  private rowAccessor = this.stateAccessor.setter(RowState);\n\n  private toggleStatus = new Command<any>({\n    execute: row => {\n      const { view } = this.plugin;\n      return view.rowDetails.toggleStatus.execute(row);\n    },\n    canExecute: row => {\n      if (row instanceof RowDetails) {\n        return false;\n      }\n\n      const { view } = this.plugin;\n      return view.rowDetails.toggleStatus.canExecute(row);\n    },\n  });\n\n  @Input() behavior: string[] = [];\n\n  @Input() set mode(mode: RowStateMode) { this.rowAccessor({ mode }); }\n  @Input() set unit(unit: RowStateUnit) { this.rowAccessor({ unit }); }\n  @Input() set canMove(canMove: boolean) { this.rowAccessor({ canMove }); }\n  @Input() set canResize(canResize: boolean) { this.rowAccessor({ canResize }); }\n  @Input() set minHeight(minHeight: number) { this.rowAccessor({ minHeight }); }\n  @Input() set height(height: RowState['height']) { this.rowAccessor({ height }); }\n\n  constructor(\n    private plugin: GridPlugin,\n    private stateAccessor: StateAccessor,\n    templateHost: TemplateHostService,\n  ) {\n    templateHost.key = source => `body-cell-row-${source}.tpl.html`;\n  }\n\n  ngOnInit() {\n    const { model, observe } = this.plugin;\n\n    if (this.behavior.indexOf('expandOnShortcut') >= 0) {\n      observe(model.keyboardChanged)\n        .subscribe(e => {\n          const { codes, status } = e.state;\n          if (status === 'down') {\n            switch (codes[0]) {\n              // TODO: replace it from row state shortcut property.\n              case 'enter':\n              case 'space': {\n                const { cell } = model.navigation();\n                if (cell) {\n                  const { row, column } = cell;\n                  if (column.type !== 'row-expand' && this.toggleStatus.canExecute(row)) {\n                    this.toggleStatus.execute(row);\n                  }\n                }\n                break;\n              }\n            }\n          }\n        });\n\n      if (this.behavior.indexOf('expandOnClick') >= 0) {\n        observe(model.mouseChanged)\n          .subscribe(e => {\n            const { code, status, target } = e.state;\n            if (code === 'left' && status === 'up') {\n              if (target && target.column.type !== 'row-expand') {\n                if (this.toggleStatus.canExecute(target.row)) {\n                  this.toggleStatus.execute(target.row);\n                }\n              }\n            }\n          });\n      }\n    }\n\n    if (this.behavior.indexOf('expandOnDblClick') >= 0) {\n      let firstClickTarget: Td | null = null;\n\n      observe(model.mouseChanged)\n        .subscribe(e => {\n          const { code, timestamp } = e.changes;\n          if (e.state.status === 'release' && code?.oldValue === 'left') {\n            const target = e.changes.target?.oldValue;\n            if (firstClickTarget === null) {\n              firstClickTarget = target || null;\n            } else {\n              const dblClickInterval = 300;\n              if (firstClickTarget === target && timestamp && timestamp.newValue - timestamp.oldValue <= dblClickInterval) {\n                if (target.column.type !== 'row-expand') {\n                  if (this.toggleStatus.canExecute(target.row)) {\n                    this.toggleStatus.execute(target.row);\n                  }\n                }\n              }\n\n              firstClickTarget = null;\n            }\n          }\n        });\n    }\n  }\n\n  ngOnChanges() {\n    const { model } = this.plugin;\n    this.stateAccessor.write(model);\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { DomTr } from '../dom/dom';\nimport { GridLet } from '../grid/grid-let';\nimport { GridPlugin } from '../plugin/grid-plugin';\n\n@Directive({\n  selector: '[q-grid-core-trh]',\n})\nexport class TrhCoreDirective implements DomTr, OnInit, OnDestroy {\n  @Input('q-grid-core-index') index: number;\n  @Input('q-grid-core-trh') model: any;\n  @Input('q-grid-core-source') source;\n\n  element: HTMLElement;\n\n  constructor(\n    public $view: GridLet,\n    private plugin: GridPlugin,\n    elementRef: ElementRef,\n  ) {\n    this.element = elementRef.nativeElement;\n  }\n\n  ngOnInit() {\n    this.plugin.table.box.bag[this.source].addRow(this);\n  }\n\n  ngOnDestroy() {\n    this.plugin.table.box.bag[this.source].deleteRow(this);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RowComponent } from './row.component';\nimport { TrCoreDirective } from './tr-core.directive';\nimport { TrhCoreDirective } from './trh-core.directive';\n\n@NgModule({\n  declarations: [\n    RowComponent,\n    TrCoreDirective,\n    TrhCoreDirective,\n  ],\n  exports: [\n    RowComponent,\n    TrCoreDirective,\n    TrhCoreDirective,\n  ],\n})\nexport class RowModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BodyCoreComponent } from './body-core.component';\nimport { TdCoreAlignDirective } from './td-core-align.directive';\nimport { TdCoreDirective } from './td-core.directive';\nimport { VscrollModule } from '../vscroll/vscroll.module';\nimport { RowModule } from '../row/row.module';\n\n@NgModule({\n  declarations: [\n    BodyCoreComponent,\n    TdCoreAlignDirective,\n    TdCoreDirective,\n  ],\n  imports: [\n    CommonModule,\n    VscrollModule,\n    RowModule,\n  ],\n  exports: [\n    BodyCoreComponent,\n  ],\n})\nexport class BodyModule {\n}\n","import { Injectable } from '@angular/core';\nimport { Event } from '@qgrid/core';\n\nexport interface ThemeNameChangeEventArg {\n\toldName: string;\n\tnewName: string;\n}\n\n@Injectable()\nexport class ThemeService {\n  private themeName = '';\n\n  changed = new Event<ThemeNameChangeEventArg>();\n  component: any;\n\n  get name() {\n    return this.themeName;\n  }\n\n  set name(value: string) {\n    if (value !== this.themeName) {\n      const oldName = this.themeName;\n      const newName = value;\n\n      this.changed.emit({ oldName, newName });\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, OnInit } from '@angular/core';\nimport { BoxHost, GRID_PREFIX } from '@qgrid/core';\nimport { GridPlugin } from '../plugin/grid-plugin';\nimport { ThemeService } from '../theme/theme.service';\n\n@Component({\n  selector: 'q-grid-box',\n  templateUrl: './box.component.html',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BoxComponent implements OnInit {\n  constructor(\n\t\tprivate elementRef: ElementRef,\n\t\tprivate theme: ThemeService,\n\t\tprivate plugin: GridPlugin,\n  ) {\n  }\n\n  ngOnInit() {\n    // tslint:disable-next-line:no-unused-expression\n    new BoxHost(this.elementRef.nativeElement, this.plugin);\n    this.initTheme();\n  }\n\n  initTheme() {\n    const { observeReply } = this.plugin;\n    const { nativeElement } = this.elementRef;\n\n    observeReply(this.theme.changed)\n      .subscribe(e => {\n        if (e) {\n          nativeElement.classList.remove(`${GRID_PREFIX}-theme-${e.oldName}`);\n        }\n\n        nativeElement.classList.add(`${GRID_PREFIX}-theme-${e.newName}`);\n      });\n  }\n}\n","<ng-content></ng-content>\n","import { NgModule } from '@angular/core';\nimport { BoxComponent } from './box.component';\n\n@NgModule({\n  declarations: [\n    BoxComponent,\n  ],\n  exports: [\n    BoxComponent,\n  ],\n})\nexport class BoxModule {\n}\n","<i #marker\n   *ngIf=\"canEditBatch\"\n   class=\"material-icons q-grid-edit-marker\"\n   (mousedown)=\"startBatchEdit()\">\n    signal_cellular_4_bar\n</i>\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  CellView,\n  EditService,\n  Fastdom,\n  jobLine,\n  NavigationState,\n  RowDetails,\n} from '@qgrid/core';\nimport { GridEventArg } from '../grid/grid-model';\nimport { GridPlugin } from '../plugin/grid-plugin';\n\n@Component({\n  selector: 'q-grid-cell-handler',\n  templateUrl: './cell-handler.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [GridPlugin],\n})\nexport class CellHandlerComponent implements OnInit, AfterViewInit {\n  private endBatchEdit: () => void;\n\n  @ViewChild('marker', { static: true }) marker: ElementRef;\n\n  canEditBatch = false;\n\n  constructor(\n    private elementRef: ElementRef,\n    private plugin: GridPlugin,\n    private cd: ChangeDetectorRef,\n  ) {\n    this.elementRef.nativeElement.style.display = 'none';\n  }\n\n  ngOnInit() {\n    const { model, observeReply } = this.plugin;\n    const updateHandler = this.updateHandlerFactory();\n\n    observeReply(model.navigationChanged)\n      .subscribe(e => updateHandler(e));\n\n    observeReply(model.editChanged)\n      .subscribe(e => {\n        if (e.hasChanges('method')) {\n          this.canEditBatch = e.state.method === 'batch';\n          this.cd.markForCheck();\n          this.cd.detectChanges();\n        }\n\n        if (e.hasChanges('status')) {\n          if (e.state.status === 'endBatch' && this.endBatchEdit) {\n            this.endBatchEdit();\n            this.endBatchEdit = null;\n          }\n        }\n      });\n  }\n\n  ngAfterViewInit() {\n    this.elementRef.nativeElement.style.display = '';\n  }\n\n  updateHandlerFactory() {\n    const { model, table } = this.plugin;\n    const element = this.elementRef.nativeElement;\n    const job = jobLine(150);\n\n    // When navigate first or when animation wasn't applied we need to omit\n    // next navigation event to make handler to correct position.\n    let doNotPassAnimation = false;\n    return (e: GridEventArg<NavigationState>) => {\n      if (e.hasChanges('cell')) {\n        const { cell } = e.state;\n\n        if (cell) {\n          const oldCell = e.changes.cell.oldValue || {} as CellView;\n          const newCell = e.changes.cell.newValue || {} as CellView;\n          const oldColumn = oldCell.column || {};\n          const newColumn = newCell.column || {};\n\n          // Do not apply animation for columns that have viewWidth assigned\n          // because it can be animated too.\n          const shouldAnimate =\n            !model.drag().isActive\n            && (oldColumn.key === newColumn.key || !(oldColumn.viewWidth || newColumn.viewWidth))\n            && !(oldCell.row instanceof RowDetails || newCell.row instanceof RowDetails);\n\n          const domCell = table.body.cell(cell.rowIndex, cell.columnIndex);\n          if (shouldAnimate) {\n            // It can be that the cell object was changed but indices are not.\n            doNotPassAnimation =\n              oldCell.rowIndex >= 0\n              && oldCell.columnIndex >= 0\n              && (newCell.rowIndex !== oldCell.rowIndex || newCell.columnIndex !== oldCell.columnIndex);\n\n            if (doNotPassAnimation) {\n              domCell.addClass('q-grid-animate');\n              element.classList.add('q-grid-active');\n\n              job(() => {\n                element.classList.remove('q-grid-active');\n                domCell.removeClass('q-grid-animate');\n              }).catch(() => {\n                Fastdom.mutate(() => {\n                  domCell.removeClass('q-grid-animate');\n                });\n              });\n            }\n          } else {\n            doNotPassAnimation = false;\n          }\n\n          Fastdom.measure(() => {\n            const target = domCell.element;\n            const scrollState = model.scroll();\n\n            const headHeight = table.view.height('head-mid');\n\n            const top = Math.max(headHeight, (target.offsetTop - scrollState.top));\n            const left = (target.offsetLeft - (cell.column.pin === 'mid' ? scrollState.left : 0));\n            const width = target.offsetWidth;\n            const height = target.offsetHeight;\n\n            Fastdom.mutate(() => {\n              element.style.top = top + 'px';\n              element.style.left = left + 'px';\n              element.style.width = width + 'px';\n              element.style.height = height + 'px';\n            });\n          });\n\n          doNotPassAnimation = true;\n        }\n      }\n\n    };\n  }\n\n  startBatchEdit() {\n    const { model } = this.plugin;\n\n    const { cell: startCell } = model.navigation();\n    if (startCell) {\n      const editService = new EditService(this.plugin);\n      this.endBatchEdit = editService.startBatch(startCell);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CellHandlerComponent } from './cell-handler.component';\n\n@NgModule({\n  declarations: [\n    CellHandlerComponent,\n  ],\n  exports: [\n    CellHandlerComponent,\n  ],\n  imports: [\n    CommonModule,\n  ],\n})\nexport class CellHandlerModule {\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  Input,\n  NgZone,\n  OnDestroy,\n} from '@angular/core';\nimport { ObservableLike, UnsubscribableLike } from '@qgrid/core';\n\n@Directive({\n  selector: '[q-grid-dirty-host]',\n})\nexport class DirtyHostDirective implements OnDestroy {\n  private subscription: UnsubscribableLike | null = null;\n\n  whoNeedsIt = 0;\n\n  @Input('q-grid-dirty-host') set trigger(value: ObservableLike<any>) {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = null;\n    }\n\n    if (value) {\n      this.subscription = value.subscribe(() => {\n        if (this.whoNeedsIt > 0) {\n          this.zone.run(() => {\n            this.cd.detectChanges();\n          });\n        }\n      });\n    }\n  }\n\n  constructor(\n    private zone: NgZone,\n    private cd: ChangeDetectorRef,\n  ) {\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = null;\n    }\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  forwardRef,\n  Host,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport { ObservableLike, UnsubscribableLike } from '@qgrid/core';\nimport { DirtyHostDirective } from './dirty-host.directive';\n\n@Directive({\n  selector: '[q-grid-dirty]',\n})\nexport class DirtyDirective implements OnDestroy {\n  private subscription: UnsubscribableLike | null = null;\n\n  @Input('q-grid-dirty') set trigger(value: ObservableLike<any>) {\n    // todo: trigger cd only for particular values\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = null;\n    }\n\n    if (value) {\n      this.subscription = value.subscribe(() => {\n        if (this.host) {\n          this.cd.markForCheck();\n        } else {\n          this.zone.run(() => {\n            this.cd.markForCheck();\n            this.cd.detectChanges();\n          });\n        }\n      });\n    }\n  }\n\n  constructor(\n    private zone: NgZone,\n    private cd: ChangeDetectorRef,\n    @Optional() @Host() @SkipSelf() private host: DirtyHostDirective,\n  ) {\n    if (this.host) {\n      this.host.whoNeedsIt++;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.host) {\n      this.host.whoNeedsIt--;\n    }\n\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = null;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { DirtyHostDirective } from './dirty-host.directive';\nimport { DirtyDirective } from './dirty.directive';\n\n@NgModule({\n  declarations: [\n    DirtyDirective,\n    DirtyHostDirective,\n  ],\n  exports: [\n    DirtyDirective,\n    DirtyHostDirective,\n  ],\n})\nexport class ChangeDetectorModule {\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ColumnListHost,\n  ColumnModel,\n  isUndefined,\n  Lazy,\n  parseFactory,\n} from '@qgrid/core';\nimport { GridPlugin } from '../plugin/grid-plugin';\n\n@Injectable()\nexport class ColumnListService {\n  private host = new Lazy(() => {\n    const canCopy = (key: string, source, target) =>\n      Object.prototype.hasOwnProperty.call(target, key) && !isUndefined(source[key]);\n\n    return new ColumnListHost(this.plugin.model, canCopy, parseFactory);\n  });\n\n  constructor(private plugin: GridPlugin) {\n  }\n\n  add(column: ColumnModel) {\n    this.host.instance.add(column);\n  }\n\n  copy(target, source) {\n    this.host.instance.copy(target, source);\n  }\n\n  generateKey(source) {\n    return this.host.instance.generateKey(source);\n  }\n\n  extract(key, type): ColumnModel {\n    return this.host.instance.extract(key, type);\n  }\n\n  register(column: ColumnModel) {\n    this.host.instance.register(column);\n  }\n\n  delete(key: string) {\n    this.host.instance.delete(key);\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges } from '@angular/core';\nimport { ColumnListState, ColumnListStateGeneration, ColumnListStateTypeDetection } from '@qgrid/core';\nimport { GridPlugin } from '../plugin/grid-plugin';\nimport { StateAccessor } from '../state/state-accessor';\nimport { ColumnListService } from './column-list.service';\n\n@Component({\n  selector: 'q-grid-columns',\n  template: `<ng-content></ng-content>\n`,\n  providers: [\n    ColumnListService,\n    GridPlugin,\n    StateAccessor,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ColumnListComponent implements OnChanges {\n  private columnListAccessor = this.stateAccessor.setter(ColumnListState);\n\n  @Input() set generation(generation: ColumnListStateGeneration) { this.columnListAccessor({ generation }); }\n  @Input() set typeDetection(typeDetection: ColumnListStateTypeDetection) { this.columnListAccessor({ typeDetection }); }\n\n  constructor(\n    private plugin: GridPlugin,\n    private stateAccessor: StateAccessor,\n  ) {\n  }\n\n  ngOnChanges() {\n    const { model } = this.plugin;\n    this.stateAccessor.write(model);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ColumnListComponent } from './column-list.component';\n\n@NgModule({\n  declarations: [\n    ColumnListComponent,\n  ],\n  exports: [\n    ColumnListComponent,\n  ],\n})\nexport class ColumnListModule {\n}\n","import { TemplateRef } from '@angular/core';\n\nexport class TemplateLink {\n  constructor(public template: TemplateRef<any>, public context: any) {\n  }\n}\n","import { Directive, Input, TemplateRef, OnInit } from '@angular/core';\nimport { TemplateCacheService } from '../template/template-cache.service';\nimport { TemplateLink } from '../template/template-link';\n\n@Directive({\n  selector: 'ng-template[qGridColumnBody]', // eslint-disable-line @angular-eslint/directive-selector\n})\n\nexport class ColumnBodyTemplateDirective implements OnInit {\n  @Input('qGridColumnBody') key = '';\n\n  constructor(\n    private templateCache: TemplateCacheService,\n    private templateRef: TemplateRef<any>,\n  ) {\n  }\n\n  ngOnInit() {\n    const link = new TemplateLink(this.templateRef, null);\n    this.templateCache.put(`body-cell-the-${this.key}.tpl.html`, link);\n  }\n}\n","import { Directive, Input, TemplateRef, OnInit } from '@angular/core';\nimport { TemplateCacheService } from '../template/template-cache.service';\nimport { TemplateLink } from '../template/template-link';\n\n@Directive({\n  selector: 'ng-template[qGridColumnEdit]', // eslint-disable-line @angular-eslint/directive-selector\n})\n\nexport class ColumnEditTemplateDirective implements OnInit {\n  @Input('qGridColumnEdit') key = '';\n\n  constructor(\n    private templateCache: TemplateCacheService,\n    private templateRef: TemplateRef<any>,\n  ) {\n  }\n\n  ngOnInit() {\n    const link = new TemplateLink(this.templateRef, null);\n    this.templateCache.put(`edit-cell-the-${this.key}.tpl.html`, link);\n  }\n}\n","import { Directive, Input, TemplateRef, OnInit } from '@angular/core';\nimport { TemplateCacheService } from '../template/template-cache.service';\nimport { TemplateLink } from '../template/template-link';\n\n@Directive({\n  selector: 'ng-template[qGridColumnFoot]', // eslint-disable-line @angular-eslint/directive-selector\n})\n\nexport class ColumnFootTemplateDirective implements OnInit {\n  @Input('qGridColumnFoot') key = '';\n\n  constructor(\n    private templateCache: TemplateCacheService,\n    private templateRef: TemplateRef<any>,\n  ) {\n  }\n\n  ngOnInit() {\n    const link = new TemplateLink(this.templateRef, null);\n    this.templateCache.put(`foot-cell-the-${this.key}.tpl.html`, link);\n  }\n}\n","import { Directive, Input, TemplateRef, OnInit } from '@angular/core';\nimport { TemplateCacheService } from '../template/template-cache.service';\nimport { TemplateLink } from '../template/template-link';\n\n@Directive({\n  selector: 'ng-template[qGridColumnHead]', // eslint-disable-line @angular-eslint/directive-selector\n})\n\nexport class ColumnHeadTemplateDirective implements OnInit {\n  @Input('qGridColumnHead') key = '';\n\n  constructor(\n    private templateCache: TemplateCacheService,\n    private templateRef: TemplateRef<any>,\n  ) {\n  }\n\n  ngOnInit() {\n    const link = new TemplateLink(this.templateRef, null);\n    this.templateCache.put(`head-cell-the-${this.key}.tpl.html`, link);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ColumnModel } from '@qgrid/core';\n\n@Injectable()\nexport class ColumnHostService {\n  column: ColumnModel;\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  SimpleChanges,\n  SkipSelf,\n} from '@angular/core';\nimport {\n  ColumnModel,\n  ColumnModelCategory,\n  ColumnModelPin,\n  ColumnModelType,\n  ColumnModelWidthMode,\n  guid,\n  isUndefined,\n} from '@qgrid/core';\nimport { ColumnListService } from '../column-list/column-list.service';\nimport { GridPlugin } from '../plugin/grid-plugin';\nimport { TemplateHostService } from '../template/template-host.service';\nimport { ColumnHostService } from './column-host.service';\n\n@Component({\n  selector: 'q-grid-column',\n  template: `<ng-content></ng-content>\n`,\n  providers: [\n    TemplateHostService,\n    ColumnHostService,\n    GridPlugin,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ColumnComponent implements OnInit, OnDestroy, OnChanges {\n  @Input() type: string | ColumnModelType;\n  @Input() key: string;\n  @Input() category: ColumnModelCategory;\n  @Input() class: string;\n  @Input() title: string;\n  @Input() description: string;\n  @Input() pin: ColumnModelPin;\n  @Input() aggregation: string;\n  @Input() aggregationOptions: any;\n  @Input() editor: string;\n  @Input() editorOptions: any;\n  @Input() format: string;\n  @Input() dateFormat: string;\n  @Input() timeFormat: string;\n  @Input() symbol: string;\n  @Input() code: string;\n\n  @Input() width: number | string;\n  @Input() widthMode: ColumnModelWidthMode;\n  @Input() minWidth: number | string;\n  @Input() maxWidth: number | string;\n  @Input() viewWidth: number | string;\n  @Input() offset: number | string;\n\n  @Input() canEdit: boolean;\n  @Input() canResize: boolean;\n  @Input() canSort: boolean;\n  @Input() canMove: boolean;\n  @Input() canFilter: boolean;\n  @Input() canHighlight: boolean;\n  @Input() canFocus: boolean;\n\n  @Input() isVisible: boolean;\n  @Input() isDefault: boolean;\n\n  @Input() index: number;\n\n  @Input() label: ((row: any, value?: any) => any) | any;\n  @Input() labelPath: string;\n\n  @Input() itemLabel: (row: any, value?: any) => any;\n  @Input() itemFormat: string;\n  @Input() itemType: string;\n\n  @Input() value: (row: any, value?: any) => any;\n  @Input() path: string;\n\n  @Input() compare: (x: any, y: any) => number;\n\n  @Input() trueValue: any;\n  @Input() falseValue: any;\n\n  @Input() maxLength: number;\n\n  @Input() startNumber: number;\n\n  constructor(\n    @SkipSelf() @Optional() private parentHost: ColumnHostService,\n    private selfHost: ColumnHostService,\n    private columnList: ColumnListService,\n    private templateHost: TemplateHostService,\n    private elementRef: ElementRef,\n    private plugin: GridPlugin,\n  ) {\n  }\n\n  ngOnInit() {\n    let withKey = !isUndefined(this.key);\n    let withType = !isUndefined(this.type);\n\n    // We want to update model when ngOntInit is triggered and not in afterViewInit\n    // so we apply dirty hack to understand if column is cohort or not.\n    const element = this.elementRef.nativeElement as HTMLElement;\n    if (element.children.length && element.children.item(0).tagName === 'Q-GRID-COLUMN') {\n      this.type = 'cohort';\n      if (!withKey) {\n        this.key = `$cohort-${this.title || guid()}`;\n      }\n\n      withKey = true;\n      withType = true;\n    }\n\n    if (!withKey) {\n      this.key = this.columnList.generateKey(this);\n    }\n\n    const column = this.columnList.extract(this.key, this.type);\n    this.columnList.copy(column, this);\n\n    this.templateHost.key = source => {\n      const parts = [source, 'cell'];\n\n      if (withType) {\n        parts.push(this.type);\n      }\n\n      if (withKey) {\n        parts.push(`the-${this.key}`);\n      }\n\n      return parts.join('-') + '.tpl.html';\n    };\n\n    if (withKey) {\n      if (this.parentHost) {\n        this.parentHost.column.children.push(column);\n      } else {\n        this.columnList.add(column);\n      }\n\n      this.selfHost.column = column;\n    } else {\n      const settings =\n        Object\n          .keys(this)\n          .filter(key => !isUndefined(this[key]) && Object.prototype.hasOwnProperty.call(column, key))\n          .reduce((memo, key) => {\n            memo[key] = column[key];\n            return memo;\n          }, {}) as ColumnModel;\n\n      this.columnList.register(settings);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const { column } = this.selfHost;\n    if (column && changes.isVisible) {\n      if (column.isVisible !== this.isVisible) {\n        column.isVisible = this.isVisible;\n\n        const { model } = this.plugin;\n        model.data({\n          columns: Array.from(model.data().columns),\n        }, {\n          source: 'column.component',\n        });\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    const { column } = this.selfHost;\n    if (column && column.source === 'template') {\n      this.columnList.delete(column.key);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ColumnComponent } from './column.component';\nimport { ColumnBodyTemplateDirective } from './column-body-template.directive';\nimport { ColumnEditTemplateDirective } from './column-edit-template.directive';\nimport { ColumnFootTemplateDirective } from './column-foot-template.directive';\nimport { ColumnHeadTemplateDirective } from './column-head-template.directive';\n@NgModule({\n  declarations: [\n    ColumnComponent,\n    ColumnBodyTemplateDirective,\n    ColumnEditTemplateDirective,\n    ColumnFootTemplateDirective,\n    ColumnHeadTemplateDirective,\n  ],\n  exports: [\n    ColumnComponent,\n    ColumnBodyTemplateDirective,\n    ColumnEditTemplateDirective,\n    ColumnFootTemplateDirective,\n    ColumnHeadTemplateDirective,\n  ],\n})\nexport class ColumnModule {\n}\n","import { Directive, ElementRef, Input, Optional } from '@angular/core';\nimport {\n  Command,\n  DragService,\n  EventListener,\n  EventManager,\n  GRID_PREFIX,\n  isFunction,\n} from '@qgrid/core';\nimport { GridPlugin } from '../plugin/grid-plugin';\n\n@Directive({\n  selector: '[q-grid-drag]',\n})\nexport class DragDirective {\n  @Input('q-grid-drag-data') data: any;\n  @Input('q-grid-drag-effect') effect: undefined | 'move';\n  @Input('q-grid-drag') drag: Command<any>;\n  @Input('q-grid-drop-area') area: string;\n\n  constructor(\n    @Optional() private plugin: GridPlugin,\n    private elementRef: ElementRef,\n  ) {\n    const element = elementRef.nativeElement;\n    const listener = new EventListener(element, new EventManager(this));\n    element.classList.add(`${GRID_PREFIX}-can-drag`);\n    element.setAttribute('draggable', true);\n\n    listener.on('dragstart', this.onStart);\n    listener.on('dragend', this.onEnd);\n  }\n\n  onStart(e: DragEvent) {\n    const transfer = e.dataTransfer;\n    const data = this.data;\n    const eventArg = { data };\n\n    if (this.drag.canExecute(eventArg) === false) {\n      e.preventDefault();\n      if (transfer) {\n        transfer.effectAllowed = 'none';\n      }\n\n      return false;\n    }\n\n    const result = this.drag.execute(eventArg);\n    DragService.element =\n      result && isFunction(result.getBoundingClientRect)\n        // tslint:disable-next-line: deprecation\n        ? result : (e.srcElement || e.target);\n\n    this.elementRef.nativeElement.classList.add(`${GRID_PREFIX}-drag`);\n\n    if (transfer) {\n      transfer.setData(DragService.mimeType, DragService.encode(data));\n      transfer.effectAllowed = this.effect || 'move';\n    }\n\n    DragService.data = data;\n    DragService.area = this.area;\n\n    const rect = DragService.element.getBoundingClientRect();\n    DragService.startPosition = {\n      x: e.clientX,\n      y: e.clientY,\n      rect,\n    };\n\n    if (this.plugin) {\n      const { model } = this.plugin;\n      model.drag({ isActive: true }, { source: 'drag.directive' });\n    }\n  }\n\n  onEnd() {\n    if (this.plugin) {\n      const { model } = this.plugin;\n      model.drag({ isActive: false }, { source: 'drag.directive' });\n    }\n\n    this.elementRef.nativeElement.classList.remove(`${GRID_PREFIX}-drag`);\n\n    DragService.data = null;\n    DragService.area = null;\n    DragService.element = null;\n    DragService.startPosition = null;\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  NgZone,\n  OnInit,\n  Optional,\n} from '@angular/core';\nimport {\n  Command,\n  DragService,\n  elementFromPoint,\n  EventListener,\n  EventManager,\n  GRID_PREFIX,\n  no,\n  parents,\n} from '@qgrid/core';\nimport { GridPlugin } from '../plugin/grid-plugin';\n\nexport interface DropEventArg {\n  path: HTMLElement[];\n  dragData: any;\n  dropData: any;\n  action: string; // 'over' | 'drop' | 'end';\n\n  inAreaY(element: HTMLElement): boolean;\n  inAreaX(element: HTMLElement): boolean;\n}\n\n@Directive({\n  selector: '[q-grid-drop]',\n})\nexport class DropDirective implements OnInit {\n  @Input('q-grid-drop-area') area: string;\n  @Input('q-grid-drop-data') dropData: any;\n  @Input('q-grid-drop') drop: Command<DropEventArg>;\n  @Input('q-grid-drag-over') dragOver: Command<DropEventArg>;\n  @Input('q-grid-drag-direction') dragDirection: 'x' | 'y' = 'y';\n\n  constructor(\n    @Optional() private plugin: GridPlugin,\n    private elementRef: ElementRef,\n    zone: NgZone,\n  ) {\n    const element = elementRef.nativeElement;\n    const listener = new EventListener(element, new EventManager(this));\n\n    element.classList.add(`${GRID_PREFIX}-can-drop`);\n    zone.runOutsideAngular(() => {\n      listener.on('dragenter', this.onEnter);\n      listener.on('dragover', this.onOver);\n      listener.on('dragleave', this.onLeave);\n    });\n\n    listener.on('drop', this.onDrop);\n  }\n\n  ngOnInit() {\n    if (this.plugin) {\n      const { model, observe } = this.plugin;\n      observe(model.dragChanged)\n        .subscribe(e => {\n          if (e.hasChanges('isActive')) {\n            if (!e.state.isActive) {\n              const eventArg = {\n                path: [],\n                dragData: DragService.data,\n                dropData: this.dropData,\n                action: 'end',\n                inAreaX: no,\n                inAreaY: no,\n              };\n\n              if (this.drop.canExecute(eventArg)) {\n                this.drop.execute(eventArg);\n              }\n            }\n          }\n        });\n    }\n  }\n\n  onDrop(e: DragEvent) {\n    e.stopPropagation();\n\n    this.elementRef.nativeElement.classList.remove(`${GRID_PREFIX}-dragover`);\n    const eventArg = {\n      path: (e as any).path,\n      dragData: DragService.data,\n      dropData: this.dropData,\n      action: 'drop',\n      inAreaX: this.inAreaFactory(e, 'x'),\n      inAreaY: this.inAreaFactory(e, 'y'),\n    };\n\n    if (this.drop.canExecute(eventArg)) {\n      this.drop.execute(eventArg);\n    }\n\n    return false;\n  }\n\n  onEnter(e: DragEvent) {\n    e.preventDefault();\n\n    this.elementRef.nativeElement.classList.add(`${GRID_PREFIX}-dragover`);\n    e.dataTransfer.dropEffect = 'move';\n    return false;\n  }\n\n  onOver(e: DragEvent) {\n    e.preventDefault();\n\n    if (this.plugin && this.plugin.model.scene().status !== 'stop') {\n      return false;\n    }\n\n    if (this.area !== DragService.area) {\n      e.dataTransfer.dropEffect = 'none';\n      return false;\n    }\n\n    const pos = this.getPosition(e);\n    const path = this.getPath(pos);\n    if (path.indexOf(DragService.element) >= 0) {\n      return false;\n    }\n\n    const eventArg = {\n      path,\n      dragData: DragService.data,\n      dropData: this.dropData,\n      action: 'over',\n      inAreaX: this.inAreaFactory(e, 'x'),\n      inAreaY: this.inAreaFactory(e, 'y'),\n    };\n\n    if (this.dragOver.canExecute(eventArg)) {\n      this.dragOver.execute(eventArg);\n      if (DragService.data !== eventArg.dragData) {\n        DragService.data = eventArg.dragData;\n      }\n\n      e.dataTransfer.dropEffect = 'move';\n    }\n\n    return false;\n  }\n\n  onLeave() {\n    this.elementRef.nativeElement.classList.remove(`${GRID_PREFIX}-dragover`);\n  }\n\n  private getPosition(e: DragEvent) {\n    const start = DragService.startPosition;\n    const src = start.rect;\n\n    const offsetX = start.x - (src.left + src.width / 2);\n    const offsetY = start.y - (src.top + src.height / 2);\n\n    const { clientX, clientY } = e;\n\n    const x = clientX - offsetX;\n    const y = clientY - offsetY;\n\n    return { x, y };\n  }\n\n  private getPath({ x, y }: { x: number; y: number }) {\n    // Document.elementsFromPoint is not working with tr?\n    // so we need to go through all parent.\n\n    const element = elementFromPoint(x, y);\n    const path = parents(element);\n    return path;\n  }\n\n  private inAreaFactory(e: DragEvent, direction: 'x' | 'y') {\n    const src = DragService.startPosition.rect;\n    const { x, y } = this.getPosition(e);\n\n    if (direction === 'y') {\n      return (element: HTMLElement) => {\n        const trg = element.getBoundingClientRect();\n        // we are on the top of target\n        if (src.top < trg.top) {\n          return trg.bottom > y && y > trg.bottom - src.height;\n        }\n\n        // we are on the bottom of target\n        return trg.top < y && y < trg.top + src.height;\n      };\n    }\n\n    return (element: HTMLElement) => {\n      const trg = element.getBoundingClientRect();\n\n      // we are on the left of target\n      if (src.left < trg.left) {\n        return trg.right > x && x > trg.right - src.width;\n      }\n\n      // we are on the right of target\n      return trg.left < x && x < trg.left + src.width;\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { DragDirective } from './drag.directive';\nimport { DropDirective } from './drop.directive';\n\n@NgModule({\n  declarations: [\n    DragDirective,\n    DropDirective,\n  ],\n  exports: [\n    DragDirective,\n    DropDirective,\n  ],\n})\nexport class DndModule {\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewContainerRef,\n} from '@angular/core';\nimport { ColumnModel, ColumnView, GridError } from '@qgrid/core';\nimport { CellClassService } from '../cell/cell-class.service';\nimport { CellTemplateService } from '../cell/cell-template.service';\nimport { DomTd } from '../dom/dom';\nimport { GridLet } from '../grid/grid-let';\nimport { GridPlugin } from '../plugin/grid-plugin';\nimport { TrhCoreDirective } from '../row/trh-core.directive';\n\n@Directive({\n  selector: '[q-grid-core-tf]',\n})\nexport class TfCoreDirective implements DomTd, OnInit, OnDestroy {\n  @Input('q-grid-core-tf') columnView: ColumnView;\n\n  $implicit = this;\n  element: HTMLElement = this.elementRef.nativeElement.parentNode;\n\n  get value() {\n    const column = this.column;\n    return this.$view.foot.value(column);\n  }\n\n  get label() {\n    return this.value;\n  }\n\n  get column(): ColumnModel {\n    return this.columnView.model;\n  }\n\n  get columnIndex() {\n    return this.columnView.columnIndex;\n  }\n\n  get row() {\n    return this.tr.model;\n  }\n\n  get rowIndex() {\n    return this.tr.index;\n  }\n\n  constructor(\n    public $view: GridLet,\n    private plugin: GridPlugin,\n    private cellTemplate: CellTemplateService,\n    private cellClass: CellClassService,\n    private viewContainerRef: ViewContainerRef,\n    private tr: TrhCoreDirective,\n    private elementRef: ElementRef,\n  ) {\n  }\n\n  ngOnInit() {\n    const { column, element } = this;\n    const { table } = this.plugin;\n\n    table.box.bag.foot.addCell(this);\n\n    this.cellClass.toBody(element, column);\n\n    const link = this.cellTemplate.build('foot', this.column);\n    link(this.viewContainerRef, this);\n  }\n\n  mode(value: string): void {\n    throw new GridError('tf-core.directive', `${value} mode is not supported`);\n  }\n\n  ngOnDestroy() {\n    const { table } = this.plugin;\n    table.box.bag.foot.deleteCell(this);\n  }\n}\n","<tr *ngFor=\"let $row of $view.foot.rows; trackBy: rowId; index as $rowIndex\"\n\t\t[q-grid-core-trh]=\"$row\"\n\t\t[q-grid-core-index]=\"$rowIndex\"\n\t\tq-grid-core-source=\"foot\">\n\t<td *ngFor=\"let $column of $view.foot.columns($row, $table.pin); trackBy: columnId; index as $columnIndex\"\n\t\t\t[attr.rowspan]=\"$column.rowspan\"\n\t\t\t[attr.colspan]=\"$column.colspan\">\n\t\t<ng-container [q-grid-core-tf]=\"$column\">\n\t\t</ng-container>\n\t</td>\n</tr>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { ColumnView } from '@qgrid/core';\nimport { GridLet } from '../grid/grid-let';\nimport { GridPlugin } from '../plugin/grid-plugin';\nimport { TableCoreService } from '../table/table-core.service';\n\n@Component({\n  selector: 'tfoot[q-grid-core-foot]', // eslint-disable-line @angular-eslint/component-selector\n  templateUrl: './foot-core.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [GridPlugin],\n})\nexport class FootCoreComponent implements OnInit {\n  constructor(\n\t\tpublic $view: GridLet,\n\t\tpublic $table: TableCoreService,\n\t\tprivate plugin: GridPlugin,\n\t\tprivate cd: ChangeDetectorRef,\n  ) {\n  }\n\n  ngOnInit() {\n    const { model, observe } = this.plugin;\n    observe(model.sceneChanged)\n      .subscribe(e => {\n        if (e.hasChanges('status') && e.state.status === 'push') {\n          this.cd.markForCheck();\n        }\n      });\n  }\n\n  columnId(index: number, item: ColumnView) {\n    return item.model.key;\n  }\n\n  rowId(index: number) {\n    return index;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FootCoreComponent } from './foot-core.component';\nimport { TfCoreDirective } from './tf-core.directive';\nimport { RowModule } from '../row/row.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    FootCoreComponent,\n    TfCoreDirective,\n  ],\n  exports: [\n    FootCoreComponent,\n    TfCoreDirective,\n  ],\n  imports: [\n    CommonModule,\n    RowModule,\n  ],\n})\nexport class FootModule {\n}\n","export class Layer {\n  constructor(private onDestroy: () => void) {\n  }\n\n  destroy() {\n    this.onDestroy();\n  }\n}\n","import { Injectable, ViewContainerRef } from '@angular/core';\nimport { TemplateService } from '../template/template.service';\nimport { Layer } from './layer';\n\n@Injectable()\nexport class LayerService {\n  private container: ViewContainerRef;\n  private layers = new Map<string, Layer>();\n\n  get count() {\n    return this.layers.size;\n  }\n\n  constructor(private templateService: TemplateService) {\n  }\n\n  init(container: ViewContainerRef) {\n    this.container = container;\n  }\n\n  create(name) {\n    if (this.layers.has(name)) {\n      return this.layers.get(name);\n    }\n\n    const { container, templateService } = this;\n    const link = templateService.find(`layer-${name}.tpl.html`);\n    if (link && container) {\n      const { nativeElement } = container.element;\n      nativeElement.parentElement.classList.add(`q-grid-layer-${name}`);\n      this.getHostElement()?.classList.add(`q-grid-${name}`);\n      container.createEmbeddedView(link.template, {});\n    }\n\n    const destroy = container\n      ? () => {\n        this.layers.delete(name);\n        const { nativeElement } = container.element;\n        nativeElement.parentElement.classList.add(`q-grid-layer-${name}`);\n        this.getHostElement()?.classList.remove(`q-grid-${name}`);\n        container.clear();\n      }\n      : () => this.layers.delete(name);\n\n    const layer = new Layer(destroy);\n    this.layers.set(name, layer);\n    return layer;\n  }\n\n  private getHostElement() {\n    const { nativeElement } = this.container.element;\n    for (let el = nativeElement; el; el = el.parentElement) {\n      if (el.tagName === 'Q-GRID') {\n        return el;\n      }\n    }\n    return null;\n  }\n}\n","import { Directive, ViewContainerRef } from '@angular/core';\nimport { LayerService } from './layer.service';\n\n@Directive({\n  selector: '[q-grid-core-layer]',\n})\nexport class LayerCoreDirective {\n  constructor(\n    layerService: LayerService,\n    viewContainerRef: ViewContainerRef,\n  ) {\n    layerService.init(viewContainerRef);\n  }\n}\n","import { Component, HostBinding, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'q-grid-core-layer',\n  templateUrl: './layer-core.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LayerCoreComponent {\n  @HostBinding('class') hostClass = 'q-grid-layer';\n}\n","<ng-container q-grid-core-layer></ng-container>\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  Optional,\n} from '@angular/core';\nimport { TableCoreService } from '../table/table-core.service';\nimport { GridPlugin } from '../plugin/grid-plugin';\n\n@Directive({\n  selector: '[q-grid-markup]',\n  providers: [GridPlugin],\n})\nexport class MarkupDirective implements OnInit {\n  @Input('q-grid-markup') name = '';\n\n  constructor(\n    private plugin: GridPlugin,\n    private elementRef: ElementRef,\n    @Optional() private table: TableCoreService,\n  ) { }\n\n  ngOnInit() {\n    const { table, disposable } = this.plugin;\n    table.box.markup[this.getName()] = this.elementRef.nativeElement;\n\n    disposable.add(() => delete table.box.markup[this.getName()]);\n  }\n\n  private getName() {\n    if (this.table && this.table.pin) {\n      return `${this.name}-${this.table.pin}`;\n    }\n\n    return this.name;\n  }\n}\n","/* eslint-disable @angular-eslint/no-conflicting-lifecycle */\n\nimport {\n  Directive,\n  DoCheck,\n  EmbeddedViewRef,\n  Input,\n  ViewContainerRef,\n  SimpleChanges,\n  OnChanges,\n} from '@angular/core';\nimport { TemplateService } from './template.service';\n\n@Directive({\n  selector: 'ng-container[key]', // eslint-disable-line @angular-eslint/directive-selector\n})\nexport class TemplateDirective implements DoCheck, OnChanges {\n  private viewRef: EmbeddedViewRef<any>;\n\n  @Input() key = '';\n  @Input() context: any = null;\n  @Input() check = false;\n\n  constructor(\n    private templateService: TemplateService,\n    private viewContainerRef: ViewContainerRef,\n  ) { }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const keyChange = changes['key'];\n    if (keyChange) {\n      if (this.viewRef) {\n        this.viewRef.destroy();\n        this.viewRef = null;\n      }\n    }\n  }\n\n  ngDoCheck() {\n    if (!this.viewRef) {\n      const link = this.templateService.find(this.key);\n      if (link) {\n        this.viewRef = this.viewContainerRef.createEmbeddedView(link.template, this.context);\n      }\n    }\n  }\n}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'q-grid-core-toolbar',\n  templateUrl: './toolbar-core.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ToolbarCoreComponent {\n\t@Input() position: 'top' | 'right' | 'bottom' | 'left';\n}\n","<ng-container key=\"toolbar-{{position}}.tpl.html\"></ng-container>\n","import { DOCUMENT } from '@angular/common';\nimport {\n  Directive,\n  ElementRef,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Optional,\n} from '@angular/core';\nimport { clone, EventListener, EventManager, GRID_PREFIX } from '@qgrid/core';\nimport { Grid } from '../grid/grid';\nimport { GridModel } from '../grid/grid-model';\nimport { GridPlugin } from '../plugin/grid-plugin';\n\n@Directive({\n  selector: '[q-grid-resize]',\n})\nexport class ResizeDirective implements OnInit, OnDestroy {\n  private element: HTMLElement;\n  private divider: HTMLElement;\n\n  private listener: {\n    divider: EventListener;\n    document: EventListener;\n  };\n\n  private context = {\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n  };\n\n  private get model(): GridModel {\n    return this.plugin.model;\n  }\n\n  @Input('q-grid-resize') key;\n  @Input('q-grid-resize-path') path;\n  @Input('q-grid-can-resize') canResize;\n  @Input('q-grid-resize-selector') selector;\n\n  constructor(\n    private zone: NgZone,\n    @Optional() private plugin: GridPlugin,\n    private qgrid: Grid,\n    @Inject(DOCUMENT) document: any,\n    elementRef: ElementRef,\n  ) {\n    this.element = elementRef.nativeElement;\n    this.divider = document.createElement('div');\n\n    this.listener = {\n      divider: new EventListener(\n        this.divider,\n        new EventManager(this),\n      ),\n\n      document: new EventListener(\n        document,\n        new EventManager(this),\n      ),\n    };\n  }\n\n  ngOnInit() {\n    const e = { data: this.key };\n    if (this.canResize(e)) {\n      this.zone.runOutsideAngular(() => {\n        this.listener.divider.on('mousedown', this.dragStart);\n      });\n\n      this.divider.classList.add(`${GRID_PREFIX}-resize-handler`);\n      this.element.appendChild(this.divider);\n    }\n  }\n\n  ngOnDestroy() {\n    this.listener.divider.off();\n    this.listener.document.off();\n  }\n\n  dragStart(e: DragEvent) {\n    e.preventDefault();\n\n    const context = this.context;\n\n    const host = this.select();\n    context.width = host.clientWidth;\n    context.height = host.clientHeight;\n    context.x = e.screenX;\n    context.y = e.screenY;\n\n    this.zone.runOutsideAngular(() => {\n      this.listener.document.on('mousemove', this.drag);\n      this.listener.document.on('mouseup', this.dragEnd);\n    });\n\n    const model = this.model;\n    model.drag({ isActive: true });\n  }\n\n  drag(e: MouseEvent) {\n    const { context, path, key } = this;\n    const { layout } = this.model;\n\n    const state = clone(layout()[path]);\n\n    state.set(key, {\n      width: context.width + e.screenX - context.x,\n      height: context.height + e.screenY - context.y,\n    });\n\n    layout({ [path]: state });\n  }\n\n  dragEnd() {\n    this.listener.document.off();\n\n    const model = this.model;\n    model.drag({ isActive: false });\n  }\n\n  private select(): HTMLElement {\n    if (this.selector === 'parent') {\n      return this.element.parentElement;\n    }\n\n    return this.element;\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewContainerRef,\n} from '@angular/core';\nimport { ColumnModel, ColumnView, FilterRowColumnModel, GridError } from '@qgrid/core';\nimport { CellClassService } from '../cell/cell-class.service';\nimport { CellTemplateService } from '../cell/cell-template.service';\nimport { DomTd } from '../dom/dom';\nimport { GridLet } from '../grid/grid-let';\nimport { GridPlugin } from '../plugin/grid-plugin';\nimport { TrhCoreDirective } from '../row/trh-core.directive';\n\n@Directive({\n  selector: '[q-grid-core-th]',\n})\nexport class ThCoreDirective implements DomTd, OnInit, OnDestroy {\n  @Input('q-grid-core-th') columnView: ColumnView;\n\n  $implicit = this;\n  element: HTMLElement;\n  value: any;\n  label: any;\n\n  get column(): ColumnModel {\n    return this.columnView.model;\n  }\n\n  get columnIndex() {\n    return this.columnView.columnIndex;\n  }\n\n  get row() {\n    return this.tr.model;\n  }\n\n  get rowIndex() {\n    return this.tr.index;\n  }\n\n  constructor(\n    public $view: GridLet,\n    private root: GridPlugin,\n    private viewContainerRef: ViewContainerRef,\n    private cellTemplate: CellTemplateService,\n    private cellClass: CellClassService,\n    private tr: TrhCoreDirective,\n    elementRef: ElementRef,\n  ) {\n    this.element = elementRef.nativeElement.parentNode;\n  }\n\n  ngOnInit() {\n    const { column, element } = this;\n    const { table } = this.root;\n\n    table.box.bag.head.addCell(this);\n\n    let targetColumn: ColumnModel = column;\n    let targetSource = 'head';\n\n    if (column.type === 'filter-row') {\n      targetSource = 'filter';\n      targetColumn = (column as FilterRowColumnModel).model;\n      this.element.classList.add('q-grid-filter-row');\n    }\n\n    this.cellClass.toHead(element, column);\n    this.cellClass.toBody(element, targetColumn);\n\n    const link = this.cellTemplate.build(targetSource, targetColumn, 'view');\n    link(this.viewContainerRef, this);\n  }\n\n  mode(value: string): void {\n    throw new GridError(\n      'th-core.directive',\n      `${value} mode is not supported`,\n    );\n  }\n\n  ngOnDestroy() {\n    const { table } = this.root;\n    table.box.bag.head.deleteCell(this);\n  }\n}\n","<tr *ngFor=\"let $row of $view.head.rows; trackBy: rowId; index as $rowIndex\"\n    [q-grid-core-trh]=\"$row\"\n    [q-grid-core-index]=\"$rowIndex\"\n    q-grid-core-source=\"head\">\n    <th *ngFor=\"let $column of $view.head.columns($row, $table.pin); trackBy: columnId; index as $columnIndex\"\n        [attr.rowspan]=\"$column.rowspan\"\n        [attr.colspan]=\"$column.colspan\"\n        [q-grid-drag]=\"$view.head.drag\"\n        [q-grid-drag-data]=\"$column.model.key\"\n        q-grid-drop-area=\"head\"\n        q-grid-resize-path=\"columns\"\n        [q-grid-resize]=\"$column.model.key\"\n        [q-grid-can-resize]=\"$view.head.resize.canExecute\">\n        <ng-container [q-grid-core-th]=\"$column\">\n        </ng-container>\n    </th>\n</tr>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  NgZone,\n  OnInit,\n} from '@angular/core';\nimport { ColumnView, EventListener, EventManager, HeadHost } from '@qgrid/core';\nimport { GridLet } from '../grid/grid-let';\nimport { GridPlugin } from '../plugin/grid-plugin';\nimport { TableCoreService } from '../table/table-core.service';\n\n@Component({\n  selector: 'thead[q-grid-core-head]', // eslint-disable-line @angular-eslint/component-selector\n  templateUrl: './head-core.component.html',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HeadCoreComponent implements OnInit {\n  constructor(\n\t\tpublic $view: GridLet,\n\t\tpublic $table: TableCoreService,\n\t\tprivate elementRef: ElementRef,\n\t\tprivate plugin: GridPlugin,\n\t\tprivate zone: NgZone,\n\t\tprivate cd: ChangeDetectorRef,\n  ) {\n  }\n\n  ngOnInit() {\n    const { disposable, model, observe } = this.plugin;\n\n    const element = this.elementRef.nativeElement;\n    const host = new HeadHost(this.plugin);\n\n    const listener = new EventListener(element, new EventManager(this));\n    this.zone.runOutsideAngular(() => {\n      disposable.add(listener.on('mousemove', e => host.mouseMove(e)));\n      disposable.add(listener.on('mouseleave', e => host.mouseLeave(e)));\n    });\n\n    observe(model.sceneChanged)\n      .subscribe(e => {\n        if (e.hasChanges('status') && e.state.status === 'push') {\n          this.cd.markForCheck();\n        }\n      });\n  }\n\n  columnId(index: number, item: ColumnView) {\n    return item.model.key;\n  }\n\n  rowId(index: number) {\n    return index;\n  }\n}\n","<table q-grid-markup=\"table\">\n\t<thead *ngIf=\"visibility.head\"\n\t\t\t\tq-grid-core-head\n\t\t\t\tq-grid-markup=\"head\"\n\t\t\t\tq-grid-animate=\"false\"\n\t\t\t\tq-grid-drop-area=\"head\"\n\t\t\t\t[q-grid-drop]=\"$any($view.head.drop)\"\n\t\t\t\tq-grid-drag-direction=\"x\"\n\t\t\t\t[q-grid-drag-over]=\"$any($view.head.drop)\">\n\t</thead>\n\t<tbody *ngIf=\"visibility.pin.top\"\n\t\t\t\tclass=\"q-grid-body-top\"\n\t\t\t\tpin=\"top\"\n\t\t\t\tq-grid-core-body\n\t\t\t\tq-grid-markup=\"body-top\"\n\t\t\t\tq-grid-animate=\"false\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t\tq-grid-drop-area=\"body\"\n\t\t\t\t[q-grid-drop]=\"$any($view.row.drop)\"\n\t\t\t\tq-grid-drag-direction=\"y\"\n\t\t\t\t[q-grid-drag-over]=\"$any($view.row.drop)\">\n\t</tbody>\n\t<tbody *ngIf=\"visibility.body\"\n\t\t\t\tq-grid-core-body\n\t\t\t\tq-grid-markup=\"body\"\n\t\t\t\tq-grid-animate=\"false\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t\tq-grid-drop-area=\"body\"\n\t\t\t\t[q-grid-drop]=\"$any($view.row.drop)\"\n\t\t\t\tq-grid-drag-direction=\"y\"\n\t\t\t\tq-grid-vscroll\n\t\t\t\t[q-grid-vscroll-port-y]=\"$any($view.scroll.y)\"\n\t\t\t\t[q-grid-drag-over]=\"$any($view.row.drop)\">\n\t</tbody>\n\t<tbody *ngIf=\"visibility.pin.bottom\"\n\t\t\t\tclass=\"q-grid-body-bottom\"\n\t\t\t\tpin=\"bottom\"\n\t\t\t\tq-grid-core-body\n\t\t\t\tq-grid-markup=\"body-bottom\"\n\t\t\t\tq-grid-animate=\"false\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t\tq-grid-drop-area=\"body\"\n\t\t\t\t[q-grid-drop]=\"$any($view.row.drop)\"\n\t\t\t\tq-grid-drag-direction=\"y\"\n\t\t\t\t[q-grid-drag-over]=\"$any($view.row.drop)\">\n\t</tbody>\n\t<tfoot *ngIf=\"visibility.foot\"\n\t\t\t\tq-grid-core-foot\n\t\t\t\tq-grid-markup=\"foot\"\n\t\t\t\tq-grid-animate=\"false\">\n\t</tfoot>\n</table>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { ColumnModelPin, VisibilityState } from '@qgrid/core';\nimport { GridLet } from '../grid/grid-let';\nimport { GridPlugin } from '../plugin/grid-plugin';\nimport { TableCoreService } from './table-core.service';\n\n@Component({\n  selector: 'q-grid-core-table',\n  templateUrl: './table-core.component.html',\n  providers: [TableCoreService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TableCoreComponent implements OnInit {\n  @Input() pin: ColumnModelPin = 'mid';\n\n  get visibility(): VisibilityState {\n    const { model } = this.plugin;\n    return model.visibility();\n  }\n\n  constructor(\n    public $view: GridLet,\n    private plugin: GridPlugin,\n    private tableHost: TableCoreService,\n    private cd: ChangeDetectorRef,\n  ) {\n  }\n\n  ngOnInit() {\n    const { model, observe } = this.plugin;\n\n    this.tableHost.pin = this.pin;\n\n    observe(model.visibilityChanged)\n      .subscribe(() => {\n        this.cd.markForCheck();\n        this.cd.detectChanges();\n      });\n  }\n}\n","<q-grid-core-table *ngIf=\"visibility.pin.left\"\n                   pin=\"left\"\n                   class=\"q-grid-table q-grid-table-left q-grid-layout-column\">\n</q-grid-core-table>\n\n<q-grid-core-table pin=\"mid\"\n                   class=\"q-grid-table q-grid-table-mid q-grid-layout-column q-grid-flex\">\n</q-grid-core-table>\n\n<q-grid-core-table *ngIf=\"visibility.pin.right\"\n                   pin=\"right\"\n                   class=\"q-grid-table q-grid-table-right q-grid-layout-column\">\n</q-grid-core-table>\n\n<q-grid-cell-handler class=\"q-grid-cell-handler\">\n</q-grid-cell-handler>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DoCheck,\n  ElementRef,\n  NgZone,\n  OnInit,\n} from '@angular/core';\nimport {\n  EventListener,\n  EventManager,\n  TableCommandManager,\n  ViewHost,\n  VisibilityState,\n} from '@qgrid/core';\nimport { CellClassService } from '../cell/cell-class.service';\nimport { CellTemplateService } from '../cell/cell-template.service';\nimport { Grid } from '../grid/grid';\nimport { GridLet } from '../grid/grid-let';\nimport { GridPlugin } from '../plugin/grid-plugin';\n\n@Component({\n  selector: 'q-grid-core-view',\n  templateUrl: './view-core.component.html',\n  providers: [\n    CellTemplateService,\n    CellClassService,\n    GridPlugin,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ViewCoreComponent implements OnInit, DoCheck {\n  private host: ViewHost;\n\n  get visibility(): VisibilityState {\n    const { model } = this.plugin;\n    return model.visibility();\n  }\n\n  constructor(\n\t\tprivate plugin: GridPlugin,\n\t\tprivate qgrid: Grid,\n\t\tprivate cd: ChangeDetectorRef,\n\t\tprivate zone: NgZone,\n\t\tprivate view: GridLet,\n\t\tprivate elementRef: ElementRef,\n  ) {\n    zone\n      .onStable\n      .subscribe(() => {\n        const { model, table } = this.plugin;\n\n        if (model) {\n          const { status } = model.scene();\n          if (status === 'push') {\n            table.invalidate();\n\n            model.scene({\n              status: 'stop',\n            }, {\n              source: 'view-core.component',\n              behavior: 'core',\n            });\n\n            if (this.host) {\n              this.host.invalidate();\n            }\n          }\n        }\n      });\n  }\n\n  ngDoCheck() {\n    if (this.host) {\n      const { model } = this.plugin;\n      if (model.scene().status === 'stop') {\n        this.host.invalidate();\n      }\n    }\n  }\n\n  ngOnInit() {\n    const {\n      model,\n      table,\n      observeReply,\n      observe,\n      view,\n      disposable,\n      service,\n    } = this.plugin;\n\n    // TODO: make it better\n    table.box.markup.view = this.elementRef.nativeElement;\n    const cmdManager = new TableCommandManager(f => f(), table);\n    this.view.init(this.plugin, cmdManager);\n\n    view.scroll.y.settings.emit = f => {\n      f();\n\n      this.cd.markForCheck();\n      this.cd.detectChanges();\n    };\n\n    this.host = new ViewHost(this.plugin);\n\n    observeReply(model.sceneChanged)\n      .subscribe(e => {\n        if (e.hasChanges('status') && e.state.status === 'pull') {\n          this.cd.markForCheck();\n\n          this.zone.run(() =>\n            model.scene({\n              status: 'push',\n            }, {\n              source: 'view-core.component',\n              behavior: 'core',\n            }),\n          );\n        }\n      });\n\n    observe(model.styleChanged)\n      .subscribe(() => this.host.invalidate());\n\n    observe(model.layoutChanged)\n      .subscribe(e => {\n        if (e.hasChanges('rows')) {\n          this.host.invalidate();\n        }\n      });\n\n    observeReply(model.editChanged)\n      .subscribe(e => {\n        if (e.hasChanges('status')) {\n          if (e.state.status === 'endBatch') {\n            service.invalidate({\n              source: 'view-core.component',\n              why: 'refresh',\n            });\n          }\n        }\n      });\n\n    const listener = new EventListener(this.elementRef.nativeElement, new EventManager(this));\n\n    this.zone.runOutsideAngular(() => {\n      disposable.add(listener.on('mousemove', e => this.host.mouseMove(e)));\n      disposable.add(listener.on('mouseenter', e => this.host.mouseEnter(e)));\n      disposable.add(listener.on('mouseleave', e => this.host.mouseLeave(e)));\n      disposable.add(listener.on('mouseup', e => this.host.mouseUp(e)));\n    });\n\n    disposable.add(\n      listener.on('mousedown', e => this.host.mouseDown(e)),\n    );\n\n    if (model.scroll().mode === 'virtual') {\n      const asVirtualBody = table.body as any;\n      if (asVirtualBody.requestInvalidate) {\n        asVirtualBody.requestInvalidate.on(() => this.host.invalidate());\n      }\n    }\n  }\n}\n","<ng-container *ngComponentOutlet=\"themeComponent\">\n</ng-container>\n\n<q-grid-box class=\"q-grid-box q-grid-layout-column\"\n\t\t\t\t\t\tq-grid-markup=\"box\">\n\n\t<q-grid-core-toolbar position=\"top\"\n\t\t\t\t\t\t\t\t\t\t\tclass=\"q-grid-toolbar q-grid-toolbar-top q-grid-flex-auto\"\n\t\t\t\t\t\t\t\t\t\t\t*ngIf=\"visibility.toolbar.top\">\n\t</q-grid-core-toolbar>\n\n\t<div class=\"q-grid-flex-100 q-grid-layout-row\"\n\t\t\t[ngClass]=\"{\n\t\t\t\t'q-grid-with-left-pin': visibility.pin.left,\n\t\t\t\t'q-grid-with-right-pin': visibility.pin.right,\n\t\t\t\t'q-grid-with-top-pin': visibility.pin.top,\n\t\t\t\t'q-grid-with-bottom-pin': visibility.pin.bottom\n\t\t\t}\">\n\t\t<q-grid-core-toolbar position=\"left\"\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"q-grid-toolbar q-grid-toolbar-left q-grid-flex-auto\"\n\t\t\t\t\t\t\t\t\t\t\t\t*ngIf=\"visibility.toolbar.left\">\n\t\t</q-grid-core-toolbar>\n\t\t<q-grid-core-view class=\"q-grid-view q-grid-layout-row q-grid-flex\"\n\t\t\t\t\t\t\t\t\t\t\tq-grid-markup=\"view\">\n\t\t</q-grid-core-view>\n\t\t<q-grid-core-toolbar position=\"right\"\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"q-grid-toolbar q-grid-toolbar-right q-grid-flex-auto\"\n\t\t\t\t\t\t\t\t\t\t\t\t*ngIf=\"visibility.toolbar.right\">\n\t\t</q-grid-core-toolbar>\n\t</div>\n\n\t<q-grid-core-toolbar position=\"bottom\"\n\t\t\t\t\t\t\t\t\t\t\tclass=\"q-grid-toolbar q-grid-toolbar-bottom q-grid-flex-auto\"\n\t\t\t\t\t\t\t\t\t\t\t*ngIf=\"visibility.toolbar.bottom\">\n\t</q-grid-core-toolbar>\n\n\t<q-grid-core-layer>\n\t</q-grid-core-layer>\n\n</q-grid-box>\n","import { DOCUMENT } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  ColumnModel,\n  Command,\n  DataState,\n  EditState,\n  EditStateMethod,\n  EditStateMode,\n  EventListener,\n  EventManager,\n  eventPath,\n  FilterState,\n  FilterStateUnit,\n  GridError,\n  GridHost,\n  GridState,\n  GridStateInteractionMode,\n  GroupState,\n  GroupStateMode,\n  GroupStateSummary,\n  PivotState,\n  ScrollState,\n  ScrollStateMode,\n  SelectionState,\n  SelectionStateArea,\n  SelectionStateMode,\n  SelectionStateUnit,\n  SortState,\n  SortStateMode,\n  StyleCellCallback,\n  StyleRowCallback,\n  StyleState,\n  tableFactory,\n  VisibilityState,\n} from '@qgrid/core';\nimport { LayerService } from '../layer/layer.service';\nimport { GridPlugin } from '../plugin/grid-plugin';\nimport { StateAccessor } from '../state/state-accessor';\nimport { TemplateCacheService } from '../template/template-cache.service';\nimport { TemplateLinkService } from '../template/template-link.service';\nimport { TemplateService } from '../template/template.service';\nimport { ThemeService } from '../theme/theme.service';\nimport { Grid } from './grid';\nimport { GridLet } from './grid-let';\nimport { GridModel } from './grid-model';\nimport { GridModelBuilder } from './grid-model.builder';\nimport { GridRoot } from './grid-root';\n\n@Component({\n  selector: 'q-grid',\n  providers: [\n    Grid,\n    GridPlugin,\n    GridRoot,\n    GridLet,\n    LayerService,\n    TemplateCacheService,\n    TemplateLinkService,\n    TemplateService,\n    StateAccessor,\n  ],\n  styleUrls: ['../../../../qgrid-styles/index.scss'],\n  templateUrl: './grid.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GridComponent implements OnInit, OnChanges {\n  private firstSetup = true;\n\n  private gridState = this.stateAccessor.setter(GridState);\n  private dataState = this.stateAccessor.setter(DataState);\n  private editState = this.stateAccessor.setter(EditState);\n  private filterState = this.stateAccessor.setter(FilterState);\n  private groupState = this.stateAccessor.setter(GroupState);\n  private pivotState = this.stateAccessor.setter(PivotState);\n  private selectionState = this.stateAccessor.setter(SelectionState);\n  private scrollState = this.stateAccessor.setter(ScrollState);\n  private sortState = this.stateAccessor.setter(SortState);\n  private styleState = this.stateAccessor.setter(StyleState);\n\n  themeComponent: any;\n\n  @Input() set model(value: GridModel) {\n    this.root.model = value;\n  }\n\n  get model(): GridModel {\n    return this.root.model;\n  }\n\n  // @deprecated\n  get visibility(): VisibilityState {\n    // TODO: get rid of that\n    const { model } = this.plugin;\n    return model.visibility();\n  }\n\n  @Input('id') set gridId(id: string) { this.gridState({ id }); }\n  @Input('header') set gridTitle(header: string) { this.gridState({ caption: header }); }\n  @Input('caption') set gridCaption(caption: string) { this.gridState({ caption }); }\n  @Input('interactionMode') set gridInteractionMode(interactionMode: GridStateInteractionMode) { this.gridState({ interactionMode }); }\n\n  @Input('columns') set dataColumns(columns: Array<ColumnModel>) { if (Array.isArray(columns)) { this.dataState({ columns }); } }\n  @Input('rows') set dataRows(rows: any[] | null) {\n    if (Array.isArray(rows)) {\n      this.dataState({ rows });\n    }\n  }\n\n  @Input() set editCancel(cancel: Command) { this.editState({ cancel }); }\n  @Input() set editCommit(commit: Command) { this.editState({ commit }); }\n  @Input() set editEnter(enter: Command) { this.editState({ enter }); }\n  @Input() set editMethod(method: EditStateMethod) { this.editState({ method }); }\n  @Input() set editMode(mode: EditStateMode) { this.editState({ mode }); }\n  @Input() set editReset(reset: Command) { this.editState({ reset }); }\n\n  @Input() set filterUnit(unit: FilterStateUnit) { this.filterState({ unit }); }\n\n  @Input() set groupBy(by: Array<string>) { this.groupState({ by }); }\n  @Input() set groupMode(mode: GroupStateMode) { this.groupState({ mode }); }\n  @Input() set groupSummary(summary: GroupStateSummary) { this.groupState({ summary }); }\n\n  @Input() set pivotBy(by: Array<string>) { this.pivotState({ by }); }\n\n  @Input('selection') set selectionItems(items: Array<any>) { this.selectionState({ items }); }\n  @Input() set selectionArea(area: SelectionStateArea) { this.selectionState({ area }); }\n  @Input() set selectionMode(mode: SelectionStateMode) { this.selectionState({ mode }); }\n  @Input() set selectionUnit(unit: SelectionStateUnit) { this.selectionState({ unit }); }\n\n  @Input() set scrollMode(mode: ScrollStateMode) { this.scrollState({ mode }); }\n\n  @Input() set sortBy(by: Array<string>) { this.sortState({ by }); }\n  @Input() set sortMode(mode: SortStateMode) { this.sortState({ mode }); }\n  @Input() set sortTrigger(trigger: Array<string>) { this.sortState({ trigger }); }\n\n  @Input() set styleCell(cell: StyleCellCallback | { [key: string]: StyleCellCallback }) { this.styleState({ cell }); }\n  @Input() set styleRow(row: StyleRowCallback) { this.styleState({ row }); }\n\n  constructor(\n    private root: GridRoot,\n    private plugin: GridPlugin,\n    private elementRef: ElementRef,\n    private zone: NgZone,\n    private layerService: LayerService,\n    private cd: ChangeDetectorRef,\n    private stateAccessor: StateAccessor,\n    private modelBuilder: GridModelBuilder,\n    @Inject(DOCUMENT) private document: any,\n    theme: ThemeService,\n  ) {\n    if (!theme.component) {\n      throw new GridError(\n        'grid.component',\n        'Ensure that grid theme module was included',\n      );\n    }\n\n    this.themeComponent = theme.component;\n  }\n\n  ngOnInit() {\n    if (this.firstSetup) {\n      this.setup();\n    }\n\n    const { model, disposable, observe } = this.plugin;\n    const { nativeElement } = this.elementRef;\n\n    if (nativeElement.classList.length) {\n      model.style({\n        classList: Array.from(nativeElement.classList),\n      }, {\n        source: 'grid.component',\n      });\n    }\n\n    const host = new GridHost(\n      nativeElement,\n      this.plugin,\n    );\n    const listener = new EventListener(nativeElement, new EventManager(this));\n    const docListener = new EventListener(this.document, new EventManager(this));\n\n    this.zone.runOutsideAngular(() => {\n      disposable.add(\n        docListener.on('focusin', () => host.invalidateActive()),\n      );\n\n      disposable.add(\n        docListener.on('mousedown', e => {\n          if (model.edit().status === 'edit') {\n            const path = eventPath(e);\n            const clickedOutside = path.every(x => x !== nativeElement && x.classList && !x.classList.contains('q-grid-editor-part'));\n            if (clickedOutside) {\n              model.edit({\n                status: 'view',\n              }, {\n                source: 'document.click',\n              });\n            }\n          }\n        }));\n\n\n      disposable.add(\n        listener.on('keyup', e => host.keyUp(e, 'grid')),\n      );\n    });\n\n    disposable.add(\n      listener.on('keydown', e => host.keyDown(e, 'grid')),\n    );\n\n\n    observe(model.visibilityChanged)\n      .subscribe(() => this.cd.detectChanges());\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.model || this.firstSetup) {\n      this.setup();\n    }\n\n    this.stateAccessor.write(this.model);\n  }\n\n  private setup() {\n    this.firstSetup = false;\n\n    const model = this.model || this.modelBuilder.build();\n    const table = tableFactory(model, name => this.layerService.create(name));\n\n    this.root.model = model;\n    this.root.table = table;\n  }\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { TemplateHostService } from '../template/template-host.service';\n\n@Component({\n  selector: 'q-grid-layer',\n  template: `<ng-content></ng-content>\n`,\n  providers: [TemplateHostService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LayerComponent {\n  constructor(templateHost: TemplateHostService) {\n    templateHost.key = source => `layer-${source}.tpl.html`;\n  }\n}\n","import { Directive, Input, OnInit, TemplateRef } from '@angular/core';\nimport { TemplateLinkService } from './template-link.service';\nimport { TemplateLink } from './template-link';\n\n@Directive({\n  selector: 'ng-template[key]', // eslint-disable-line @angular-eslint/directive-selector\n})\nexport class TemplateLinkDirective implements OnInit {\n  @Input() key = '';\n  @Input() context = {};\n\n  constructor(private templateLink: TemplateLinkService, private templateRef: TemplateRef<any>) {\n  }\n\n  ngOnInit() {\n    const link = new TemplateLink(this.templateRef, this.context);\n    this.templateLink.put(this.key, link);\n  }\n}\n","import {\n  Directive,\n  Input,\n  OnInit,\n  TemplateRef,\n  Optional,\n} from '@angular/core';\nimport { TemplateCacheService } from './template-cache.service';\nimport { TemplateHostService } from './template-host.service';\nimport { TemplateLink } from './template-link';\n\n@Directive({\n  selector: 'ng-template[for]', // eslint-disable-line @angular-eslint/directive-selector\n})\nexport class TemplateCacheDirective implements OnInit {\n  @Input('for') key = '';\n  @Input() context = {};\n\n  constructor(\n    private templateCache: TemplateCacheService,\n    private templateRef: TemplateRef<any>,\n    @Optional() private templateHost: TemplateHostService) {\n  }\n\n  ngOnInit() {\n    const link = new TemplateLink(this.templateRef, this.context);\n    if (this.templateHost) {\n      this.templateCache.put(this.templateHost.key(this.key), link);\n    } else {\n      this.templateCache.put(this.key, link);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { TemplateDirective } from './template.directive';\nimport { TemplateLinkDirective } from './template-link.directive';\nimport { TemplateCacheDirective } from './template-cache.directive';\n\n@NgModule({\n  declarations: [\n    TemplateDirective,\n    TemplateLinkDirective,\n    TemplateCacheDirective,\n  ],\n  exports: [\n    TemplateDirective,\n    TemplateLinkDirective,\n    TemplateCacheDirective,\n  ],\n})\nexport class TemplateModule {\n}\n","import { NgModule } from '@angular/core';\nimport { LayerCoreComponent } from './layer-core.component';\nimport { LayerCoreDirective } from './layer-core.directive';\nimport { LayerComponent } from './layer.component';\nimport { TemplateModule } from '../template/template.module';\n\n@NgModule({\n  declarations: [\n    LayerCoreComponent,\n    LayerCoreDirective,\n    LayerComponent,\n  ],\n  exports: [\n    LayerCoreComponent,\n    LayerCoreDirective,\n    LayerComponent,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class LayerModule {\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  NgZone,\n  OnInit,\n  Renderer2,\n} from '@angular/core';\nimport { isString, yes } from '@qgrid/core';\n\n@Directive({\n  selector: '[q-grid-stop-propagate]',\n})\nexport class StopPropagateDirective implements OnInit {\n  @Input('q-grid-stop-propagate') eventName: string | Array<string> = 'click';\n\n  // tslint:disable-next-line:no-input-rename\n  @Input('q-grid-stop-propagate-when') needStop = yes;\n\n  constructor(\n    private element: ElementRef,\n    private renderer: Renderer2,\n    private zone: NgZone) {\n  }\n\n  ngOnInit() {\n    let eventNames = this.eventName as Array<string>;\n    if (isString(this.eventName)) {\n      eventNames = [this.eventName as string];\n    }\n\n    this.zone.runOutsideAngular(() =>\n      eventNames.forEach(eventName =>\n        this.renderer.listen(\n          this.element.nativeElement,\n          eventName,\n          e => {\n            if (this.needStop()) {\n              e.stopPropagation();\n            }\n          }),\n      ),\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MarkupDirective } from './markup.directive';\nimport { StopPropagateDirective } from './stop-propagate.directive';\n\n@NgModule({\n  declarations: [\n    MarkupDirective,\n    StopPropagateDirective,\n  ],\n  exports: [\n    MarkupDirective,\n    StopPropagateDirective,\n  ],\n})\nexport class MarkupModule {\n}\n","import { NgModule } from '@angular/core';\nimport { ScrollService } from './scroll.service';\n\n@NgModule({\n  providers: [\n    ScrollService,\n  ],\n})\nexport class ScrollModule {\n}\n","import { NgModule } from '@angular/core';\nimport { ThemeService } from './theme.service';\n\n@NgModule({\n  providers: [\n    ThemeService,\n  ],\n})\nexport class ThemeModule {\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { TemplateHostService } from '../template/template-host.service';\n\n@Component({\n  selector: 'q-grid-toolbar',\n  template: `<ng-content></ng-content>\n`,\n  providers: [TemplateHostService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ToolbarComponent {\n  constructor(templateHost: TemplateHostService) {\n    templateHost.key = source => `toolbar-${source}.tpl.html`;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ToolbarComponent } from './toolbar.component';\nimport { ToolbarCoreComponent } from './toolbar-core.component';\nimport { TemplateModule } from '../template/template.module';\n\n@NgModule({\n  declarations: [\n    ToolbarComponent,\n    ToolbarCoreComponent,\n  ],\n  exports: [\n    ToolbarComponent,\n    ToolbarCoreComponent,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class ToolbarModule {\n}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\nimport { Fastdom } from '@qgrid/core';\n\n@Directive({\n  selector: '[q-grid-autosize]',\n})\nexport class AutoSizeDirective implements OnInit {\n  private actualText: string;\n  private host: HTMLElement;\n  private element: HTMLInputElement;\n\n  @Input('q-grid-autosize') selector;\n  @Input('q-grid-autosize-empty-width') emptyWidth = 75;\n\n  @Input('q-grid-autosize-value') set value(value: string) {\n    this.autoWidth(value);\n  }\n\n  constructor(element: ElementRef) {\n    this.host = element.nativeElement as HTMLInputElement;\n  }\n\n  ngOnInit() {\n    this.element = this.selector ? this.host.querySelector(this.selector) as HTMLInputElement : this.host as HTMLInputElement;\n  }\n\n  autoWidth(text) {\n    if (!text) {\n      this.actualText = text;\n      Fastdom.measure(() => {\n        Fastdom.mutate(() => {\n          this.host.style.width = `${this.emptyWidth}px`;\n        });\n      });\n      return;\n    }\n\n    if (!this.element) {\n      return;\n    }\n\n    if (this.actualText === text) {\n      return;\n    }\n\n    this.actualText = text;\n    Fastdom.measure(() => {\n      const width = `${this.calculateWidth(this.element, text)}px`;\n      Fastdom.mutate(() => this.host.style.width = width);\n    });\n  }\n\n  private calculateWidth(element: HTMLElement, text: string) {\n    let width = 0;\n    if (text) {\n      const document = element.ownerDocument;\n      const body = document.body;\n      const test = document.createElement('span');\n\n      test.innerText = text;\n      test.style.whiteSpace = 'pre';\n      test.style.visibility = 'hidden';\n      test.style.font = element.style.font;\n      test.style.fontFamily = element.style.fontFamily;\n      test.style.lineHeight = element.style.lineHeight;\n      test.style.border = element.style.border;\n      // borderBox ?\n\n      body.appendChild(test);\n      width = test.offsetWidth;\n      test.remove();\n    }\n\n    return width;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ResizeDirective } from './resize.directive';\nimport { AutoSizeDirective } from './autosize.directive';\n\n@NgModule({\n  declarations: [\n    ResizeDirective,\n    AutoSizeDirective,\n  ],\n  exports: [\n    ResizeDirective,\n    AutoSizeDirective,\n  ],\n})\nexport class ResizeModule {\n}\n","import { NgModule } from '@angular/core';\nimport { ThCoreDirective } from './th-core.directive';\nimport { HeadCoreComponent } from './head-core.component';\nimport { RowModule } from '../row/row.module';\nimport { CommonModule } from '@angular/common';\nimport { ResizeModule } from '../resize/resize.module';\nimport { DndModule } from '../dnd/dnd.module';\n\n@NgModule({\n  declarations: [\n    HeadCoreComponent,\n    ThCoreDirective,\n  ],\n  exports: [\n    HeadCoreComponent,\n    ThCoreDirective,\n  ],\n  imports: [\n    CommonModule,\n    RowModule,\n    ResizeModule,\n    DndModule,\n  ],\n})\nexport class HeadModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TableCoreComponent } from './table-core.component';\nimport { HeadModule } from '../head/head.module';\nimport { FootModule } from '../foot/foot.module';\nimport { BodyModule } from '../body/body.module';\nimport { MarkupModule } from '../markup/markup.module';\nimport { DndModule } from '../dnd/dnd.module';\nimport { VscrollModule } from '../vscroll/vscroll.module';\n\n@NgModule({\n  declarations: [\n    TableCoreComponent,\n  ],\n  exports: [\n    TableCoreComponent,\n  ],\n  imports: [\n    CommonModule,\n\n    HeadModule,\n    FootModule,\n    BodyModule,\n    MarkupModule,\n    DndModule,\n    VscrollModule,\n  ],\n})\nexport class TableModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ViewCoreComponent } from './view-core.component';\nimport { CellHandlerModule } from '../cell-handler/cell-handler.module';\nimport { TableModule } from '../table/table.module';\n\n@NgModule({\n  declarations: [\n    ViewCoreComponent,\n  ],\n  exports: [\n    ViewCoreComponent,\n  ],\n  imports: [\n    CommonModule,\n    CellHandlerModule,\n    TableModule,\n  ],\n})\nexport class ViewModule {\n}\n","import { CommonModule, CurrencyPipe, DatePipe, DecimalPipe } from '@angular/common';\nimport { NgModule, NgZone } from '@angular/core';\nimport { Fastdom, FormatService } from '@qgrid/core';\nimport { BoxModule } from '../box/box.module';\nimport { LayerModule } from '../layer/layer.module';\nimport { MarkupModule } from '../markup/markup.module';\nimport { ScrollModule } from '../scroll/scroll.module';\nimport { TemplateModule } from '../template/template.module';\nimport { ThemeModule } from '../theme/theme.module';\nimport { ToolbarModule } from '../toolbar/toolbar.module';\nimport { ViewModule } from '../view/view.module';\nimport { Grid } from './grid';\nimport { GridModelBuilder } from './grid-model.builder';\nimport { GridComponent } from './grid.component';\n\n@NgModule({\n  declarations: [\n    GridComponent,\n  ],\n  exports: [\n    GridComponent,\n  ],\n  imports: [\n    CommonModule,\n\n    BoxModule,\n    LayerModule,\n    MarkupModule,\n    ScrollModule,\n    TemplateModule,\n    ThemeModule,\n    ToolbarModule,\n    ViewModule,\n  ],\n  providers: [\n    DatePipe,\n    DecimalPipe,\n    CurrencyPipe,\n    GridModelBuilder,\n    Grid,\n  ],\n})\nexport class GridModule {\n  constructor(\n    zone: NgZone,\n    datePipe: DatePipe,\n    numberPipe: DecimalPipe,\n    currencyPipe: CurrencyPipe,\n  ) {\n    FormatService.date = (x, format) => datePipe.transform(x, format);\n    FormatService.number = (x, format) => numberPipe.transform(x, format);\n    FormatService.currency = (x, format) => currencyPipe.transform(x, format);\n\n    Fastdom.invoke = task => zone.runOutsideAngular<any>(task);\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["labelService","i1.GridModelBuilder","i1.Grid","i2.ScrollService","DisposableCore","i1.GridLet","i2.GridRoot","i3.Grid","i1.VscrollDirective","i1.VscrollPortYDirective","i1.VscrollPortXDirective","i2.VscrollPortYDirective","i2.GridPlugin","i1.CellClassService","i1.TemplateLinkService","i2.TemplateCacheService","i1.TemplateService","i3.CellTemplateService","i4.CellClassService","i5.TrCoreDirective","Disposable","Pipe","i2.TableCoreService","i3.GridPlugin","_c0","i1.GridPlugin","i2.StateAccessor","i3.TemplateHostService","i1.ThemeService","i1.DirtyHostDirective","i1.TemplateCacheService","i1.ColumnHostService","i2.ColumnListService","i4.GridPlugin","i5.TrhCoreDirective","i1.LayerService","i3.TableCoreService","i2.Grid","i3.GridLet","i6.ThemeService","i1.TemplateHostService","i2.TemplateHostService","i1"],"mappings":"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"}},"fesm2015":{"code":"import * as valueService from '@qgrid/core';\nimport { Disposable as Disposable$1, ModelBuilder, noop, identity, Pipe, PipeUnit, Command, Action, Node, RowDetailsStatus, GridService, Defer, isFunction, isNumber, GridError, viewFactory, Lazy, ObservableEvent, ObservableReplyEvent, bodyCellClassifier, headCellClassifier, isString, isArray, GRID_PREFIX, Log, SubjectLike, BodyHost, EventListener, EventManager, RowState, RowDetails, Event, BoxHost, jobLine, Fastdom, EditService, isUndefined, ColumnListHost, parseFactory, ColumnListState, guid, DragService, no, elementFromPoint, parents, clone, HeadHost, TableCommandManager, ViewHost, GridState, DataState, EditState, FilterState, GroupState, PivotState, SelectionState, ScrollState, SortState, StyleState, GridHost, eventPath, tableFactory, yes, FormatService } from '@qgrid/core';\nexport { Bag as DomBag, Box as DomBox, Cell as DomCell, Data as DomData, Row as DomRow, Table as DomTable, View as DomView, GridError, GridService } from '@qgrid/core';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Directive, Input, Optional, Pipe as Pipe$1, Component, ChangeDetectionStrategy, NgModule, ViewChild, Host, SkipSelf, HostBinding, Inject, ViewEncapsulation } from '@angular/core';\nimport * as i4 from '@angular/common';\nimport { CommonModule, DOCUMENT, DatePipe, DecimalPipe, CurrencyPipe } from '@angular/common';\n\nclass Disposable {\r\n    constructor() {\r\n        this.disposable = new Disposable$1();\r\n    }\r\n    add(resource) {\r\n        this.disposable.add(resource);\r\n    }\r\n    remove(resource) {\r\n        return this.disposable.remove(resource);\r\n    }\r\n    finalize() {\r\n        this.disposable.finalize();\r\n    }\r\n    ngOnDestroy() {\r\n        this.finalize();\r\n    }\r\n}\r\nDisposable.ɵfac = function Disposable_Factory(t) { return new (t || Disposable)(); };\r\nDisposable.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: Disposable, factory: Disposable.ɵfac });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Disposable, [{\r\n            type: Injectable\r\n        }], null, null);\r\n})();\n\nclass GridModelBuilder {\r\n    constructor() {\r\n        this.builder = new ModelBuilder();\r\n    }\r\n    register(key, ctor) {\r\n        return this.builder.register(key, ctor);\r\n    }\r\n    build() {\r\n        return this.builder.build();\r\n    }\r\n}\r\nGridModelBuilder.ɵfac = function GridModelBuilder_Factory(t) { return new (t || GridModelBuilder)(); };\r\nGridModelBuilder.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: GridModelBuilder, factory: GridModelBuilder.ɵfac });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridModelBuilder, [{\r\n            type: Injectable\r\n        }], null, null);\r\n})();\n\nclass Grid {\r\n    constructor(modelBuilder) {\r\n        this.modelBuilder = modelBuilder;\r\n    }\r\n    get noop() {\r\n        return noop;\r\n    }\r\n    get identity() {\r\n        return identity;\r\n    }\r\n    get pipe() {\r\n        return Pipe;\r\n    }\r\n    get pipeUnit() {\r\n        return PipeUnit;\r\n    }\r\n    get Command() {\r\n        return Command;\r\n    }\r\n    get Action() {\r\n        return Action;\r\n    }\r\n    get Node() {\r\n        return Node;\r\n    }\r\n    get RowDetailsStatus() {\r\n        return RowDetailsStatus;\r\n    }\r\n    get valueFactory() {\r\n        return valueService.getValueFactory;\r\n    }\r\n    get labelFactory() {\r\n        return valueService.getLabelFactory;\r\n    }\r\n    model() {\r\n        return this.modelBuilder.build();\r\n    }\r\n    service(model) {\r\n        return new GridService(model);\r\n    }\r\n}\r\nGrid.ɵfac = function Grid_Factory(t) { return new (t || Grid)(i0.ɵɵinject(GridModelBuilder)); };\r\nGrid.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: Grid, factory: Grid.ɵfac });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Grid, [{\r\n            type: Injectable\r\n        }], function () { return [{ type: GridModelBuilder }]; }, null);\r\n})();\n\nconst rAF = window.requestAnimationFrame;\r\nclass VscrollContainer {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        this.lastPage = 0;\r\n        this.force = false;\r\n        this.count = 0;\r\n        this.position = 0;\r\n        this.reset$ = new EventEmitter();\r\n        this.update$ = new EventEmitter();\r\n        this.draw$ = new EventEmitter();\r\n    }\r\n    get currentPage() {\r\n        const threshold = this.settings.threshold;\r\n        const position = this.position;\r\n        return Math.ceil((position + threshold) / threshold) - 1;\r\n    }\r\n    tick(f) {\r\n        rAF(f);\r\n    }\r\n    read(f) {\r\n        f();\r\n    }\r\n    write(f) {\r\n        f();\r\n    }\r\n    apply(f, emit) {\r\n        emit(f);\r\n    }\r\n    update(count) {\r\n        if (this.count !== count) {\r\n            this.count = count;\r\n            this.update$.emit(count);\r\n        }\r\n        const { lastPage, currentPage } = this;\r\n        if (currentPage > lastPage) {\r\n            this.fetchPage(currentPage);\r\n        }\r\n    }\r\n    fetchPage(page) {\r\n        const { settings, lastPage } = this;\r\n        const { threshold } = settings;\r\n        this.lastPage = page;\r\n        const deferred = new Defer();\r\n        deferred.promise.then(count => {\r\n            this.force = true;\r\n            if (count !== this.count) {\r\n                this.update(count);\r\n            }\r\n        });\r\n        if (page === 0) {\r\n            settings.fetch(0, threshold, deferred);\r\n        }\r\n        else {\r\n            const skip = (lastPage + 1) * threshold;\r\n            if (this.count < skip) {\r\n                deferred.resolve(this.count);\r\n            }\r\n            else {\r\n                const take = (page - lastPage) * threshold;\r\n                settings.fetch(skip, take, deferred);\r\n            }\r\n        }\r\n    }\r\n    reset() {\r\n        this.force = false;\r\n        this.position = 0;\r\n        this.count = 0;\r\n        this.lastPage = 0;\r\n        this.reset$.emit({\r\n            handled: false,\r\n            source: 'container',\r\n        });\r\n    }\r\n}\r\nfunction sizeFactory(size, container, element, index) {\r\n    if (isFunction(size)) {\r\n        return () => size(element, container.position + index);\r\n    }\r\n    if (isNumber(size)) {\r\n        return () => size;\r\n    }\r\n    throw new GridError('vscroll.utility', `Invalid size ${size}`);\r\n}\n\nclass VscrollSettings {\r\n    constructor(getCount) {\r\n        this.getCount = getCount;\r\n        this.threshold = 64;\r\n        this.placeholderHeight = 0;\r\n        this.placeholderWidth = 0;\r\n        this.resetTriggers = ['resize'];\r\n    }\r\n    fetch(skip, take, d) {\r\n        d.resolve(this.getCount());\r\n    }\r\n    rowHeight(element) {\r\n        let height = element.offsetHeight;\r\n        const style = getComputedStyle(element);\r\n        height += Number.parseInt(style.marginTop, 10) + Number.parseInt(style.marginBottom, 10);\r\n        return height;\r\n    }\r\n    columnWidth(element) {\r\n        let width = element.offsetWidth;\r\n        const style = getComputedStyle(element);\r\n        width += Number.parseInt(style.marginLeft, 10) + Number.parseInt(style.marginRight, 10);\r\n        return width;\r\n    }\r\n}\n\nclass VscrollContext {\r\n    constructor(settings) {\r\n        this.settings = new VscrollSettings(() => this.container.count);\r\n        if (settings) {\r\n            Object.assign(this.settings, settings);\r\n        }\r\n        this.container = new VscrollContainer(this.settings);\r\n    }\r\n    id(index) {\r\n        return index;\r\n    }\r\n}\n\nclass ScrollService {\r\n    factory(settings) {\r\n        return new VscrollContext(settings);\r\n    }\r\n}\r\nScrollService.ɵfac = function ScrollService_Factory(t) { return new (t || ScrollService)(); };\r\nScrollService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ScrollService, factory: ScrollService.ɵfac });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScrollService, [{\r\n            type: Injectable\r\n        }], null, null);\r\n})();\n\nclass GridLet {\r\n    constructor(qgrid, scrollService) {\r\n        this.qgrid = qgrid;\r\n        this.scrollService = scrollService;\r\n    }\r\n    init(plugin, commandManager) {\r\n        const selectors = {\r\n            th: 'q-grid-core-th',\r\n            tr: 'q-grid-core-tr',\r\n        };\r\n        const injectLetServicesTo = viewFactory(plugin, commandManager, this.scrollService, selectors);\r\n        injectLetServicesTo(this);\r\n    }\r\n}\r\nGridLet.ɵfac = function GridLet_Factory(t) { return new (t || GridLet)(i0.ɵɵinject(Grid), i0.ɵɵinject(ScrollService)); };\r\nGridLet.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: GridLet, factory: GridLet.ɵfac });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridLet, [{\r\n            type: Injectable\r\n        }], function () { return [{ type: Grid }, { type: ScrollService }]; }, null);\r\n})();\n\nclass GridRoot {\r\n}\r\nGridRoot.ɵfac = function GridRoot_Factory(t) { return new (t || GridRoot)(); };\r\nGridRoot.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: GridRoot, factory: GridRoot.ɵfac });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridRoot, [{\r\n            type: Injectable\r\n        }], null, null);\r\n})();\n\nclass GridPlugin {\r\n    constructor($view, $root, qgrid) {\r\n        this.$view = $view;\r\n        this.$root = $root;\r\n        this.qgrid = qgrid;\r\n        this.serviceLazy = new Lazy(() => this.qgrid.service(this.$root.model));\r\n        this.disposable = new Disposable();\r\n        this.observe = (event) => new ObservableEvent(event, this.disposable);\r\n        this.observeReply = (event) => new ObservableReplyEvent(event, this.disposable);\r\n    }\r\n    get model() {\r\n        const { model } = this.$root;\r\n        return model;\r\n    }\r\n    get view() {\r\n        return this.$view;\r\n    }\r\n    get table() {\r\n        const { table } = this.$root;\r\n        return table;\r\n    }\r\n    get service() {\r\n        return this.serviceLazy.instance;\r\n    }\r\n    ngOnDestroy() {\r\n        this.disposable.finalize();\r\n    }\r\n}\r\nGridPlugin.ɵfac = function GridPlugin_Factory(t) { return new (t || GridPlugin)(i0.ɵɵinject(GridLet), i0.ɵɵinject(GridRoot), i0.ɵɵinject(Grid)); };\r\nGridPlugin.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: GridPlugin, factory: GridPlugin.ɵfac });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridPlugin, [{\r\n            type: Injectable\r\n        }], function () { return [{ type: GridLet }, { type: GridRoot }, { type: Grid }]; }, null);\r\n})();\n\nclass TableCoreService {\r\n}\r\nTableCoreService.ɵfac = function TableCoreService_Factory(t) { return new (t || TableCoreService)(); };\r\nTableCoreService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: TableCoreService, factory: TableCoreService.ɵfac });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TableCoreService, [{\r\n            type: Injectable\r\n        }], null, null);\r\n})();\n\nfunction findIndexAt(items, value) {\r\n    const length = items.length;\r\n    let min = 0;\r\n    let max = length - 1;\r\n    while (min <= max) {\r\n        const mid = (min + max) >> 1;\r\n        const k = items[mid];\r\n        if (k === value) {\r\n            return mid;\r\n        }\r\n        else if (k < value) {\r\n            min = mid + 1;\r\n        }\r\n        else {\r\n            max = mid - 1;\r\n        }\r\n    }\r\n    return min;\r\n}\r\nfunction findPositionUsingItemSize(value, itemSize) {\r\n    const index = Math.max(0, Math.round(value / itemSize));\r\n    return {\r\n        index,\r\n        offset: itemSize * index,\r\n        lastOffset: 0,\r\n        value,\r\n        pad: 0,\r\n    };\r\n}\r\nfunction findPositionUsingOffsets(value, offsets) {\r\n    const index = findIndexAt(offsets, value);\r\n    const { length } = offsets;\r\n    if (index > 0) {\r\n        return {\r\n            index,\r\n            offset: offsets[index - 1],\r\n            lastOffset: offsets[length - 1],\r\n            value,\r\n            pad: 0,\r\n        };\r\n    }\r\n    return {\r\n        index: 0,\r\n        offset: 0,\r\n        lastOffset: 0,\r\n        value,\r\n        pad: 0,\r\n    };\r\n}\r\nfunction recycleFactory(items) {\r\n    const offsets = new Array();\r\n    return (index, count) => {\r\n        let cursor = offsets.length;\r\n        const threshold = items.length;\r\n        const diff = Math.min(count, threshold + index) - cursor;\r\n        for (let i = threshold - diff; i < threshold; i++) {\r\n            const getSize = items[i];\r\n            const size = getSize();\r\n            if (cursor === 0) {\r\n                offsets[cursor] = size;\r\n            }\r\n            else {\r\n                offsets[cursor] = offsets[cursor - 1] + size;\r\n            }\r\n            cursor++;\r\n        }\r\n        return offsets;\r\n    };\r\n}\n\nconst UNSET_ARM = Number.MAX_SAFE_INTEGER;\r\nfunction empty() {\r\n    return 0;\r\n}\r\nclass VscrollLayout {\r\n    constructor(port) {\r\n        this.port = port;\r\n        this.items = [];\r\n        this.minArm = UNSET_ARM;\r\n        this.position = findPositionUsingOffsets(0, []);\r\n        this.getOffsets = recycleFactory(this.items);\r\n    }\r\n    get container() {\r\n        return this.port.context.container;\r\n    }\r\n    get settings() {\r\n        return this.port.context.settings;\r\n    }\r\n    recycle(count, box, force) {\r\n        const { port } = this;\r\n        const itemSize = port.getItemSize();\r\n        if (itemSize) {\r\n            return this.recycleItemSize(count, box, force, itemSize);\r\n        }\r\n        return this.recycleOffsets(count, box, force);\r\n    }\r\n    invalidate(position) {\r\n        const { offset } = position;\r\n        const pad1 = Math.max(0, offset);\r\n        const pad2 = Math.max(0, position.pad - pad1);\r\n        this.port.move(pad1, pad2);\r\n        return position.index;\r\n    }\r\n    reset() {\r\n        this.minArm = UNSET_ARM;\r\n        this.getOffsets = this.port.recycleFactory(this.items);\r\n        this.position = findPositionUsingOffsets(0, []);\r\n        return this.invalidate(this.position);\r\n    }\r\n    setItem(index, item) {\r\n        const { items } = this;\r\n        items[index] = item;\r\n        while (--index >= 0) {\r\n            if (items[index]) {\r\n                break;\r\n            }\r\n            items[index] = empty;\r\n        }\r\n    }\r\n    removeItem(index) {\r\n        const { items } = this;\r\n        const last = items.length - 1;\r\n        if (index === last) {\r\n            items.pop();\r\n            while (--index >= 0) {\r\n                const item = items[index];\r\n                if (item !== empty) {\r\n                    break;\r\n                }\r\n                items.pop();\r\n            }\r\n        }\r\n        else {\r\n            items[index] = empty;\r\n        }\r\n    }\r\n    recycleOffsets(count, box, force) {\r\n        const { position, port } = this;\r\n        const { threshold } = this.settings;\r\n        const offsets = this.getOffsets(position.index, count);\r\n        const arm = this.getArmUsingOffsets(offsets, box, position.index);\r\n        this.minArm = Math.min(this.minArm, arm);\r\n        const newPosition = port.getPositionUsingOffsets(offsets, box, this.minArm);\r\n        if (force || position.index !== newPosition.index) {\r\n            const last = Math.min(offsets.length - 1, newPosition.index + threshold - 1);\r\n            const first = newPosition.index - 1;\r\n            const viewSize = (offsets[last] || 0) - (offsets[first] || 0);\r\n            const scrollSize = offsets[offsets.length - 1] || 0;\r\n            const padSize = scrollSize - viewSize;\r\n            newPosition.pad = padSize;\r\n            return this.position = newPosition;\r\n        }\r\n        return null;\r\n    }\r\n    recycleItemSize(count, box, force, itemSize) {\r\n        const { position, port } = this;\r\n        const arm = this.getArmUsingItemSize(itemSize, box);\r\n        const newPosition = port.getPositionUsingItemSize(itemSize, box, arm);\r\n        if (force || position.index !== newPosition.index) {\r\n            const { threshold } = this.settings;\r\n            const remain = Math.max(0, newPosition.index + threshold - this.container.count);\r\n            newPosition.pad = Math.max(0, itemSize * (count + remain - threshold));\r\n            return this.position = newPosition;\r\n        }\r\n        return null;\r\n    }\r\n    getArmUsingItemSize(itemSize, box) {\r\n        const { threshold } = this.settings;\r\n        const portSize = this.port.getSize(box);\r\n        const viewSize = threshold * itemSize;\r\n        return Math.max(0, (viewSize - portSize) / 2);\r\n    }\r\n    getArmUsingOffsets(offsets, box, index) {\r\n        if (offsets.length) {\r\n            const { threshold } = this.settings;\r\n            const portSize = this.port.getSize(box);\r\n            const last = Math.min(offsets.length, index + threshold) - 1;\r\n            const first = (last + 1) - threshold;\r\n            const viewSize = offsets[last] - offsets[first];\r\n            return Math.max(0, (viewSize - portSize) / 2);\r\n        }\r\n        return UNSET_ARM;\r\n    }\r\n}\n\nclass VscrollBox {\r\n    constructor() {\r\n        this.scrollWidth = 0;\r\n        this.scrollHeight = 0;\r\n        this.scrollTop = 0;\r\n        this.scrollLeft = 0;\r\n        this.portWidth = 0;\r\n        this.portHeight = 0;\r\n    }\r\n}\n\nclass VscrollLink {\r\n    constructor(port, view) {\r\n        this.port = port;\r\n        this.view = view;\r\n        this.box = new VscrollBox();\r\n        this.ticking = false;\r\n        const { layout } = port;\r\n        const { settings, container } = this;\r\n        if (settings.placeholderHeight > 0 || settings.placeholderWidth > 0) {\r\n            const width = settings.placeholderWidth || (isNumber(settings.columnWidth) && settings.columnWidth);\r\n            const height = settings.placeholderHeight || (isNumber(settings.rowHeight) && settings.rowHeight);\r\n            view.drawPlaceholder(width, height);\r\n        }\r\n        view.scroll.subscribe(() => this.update(false));\r\n        view.reset.subscribe(e => {\r\n            if (e.handled) {\r\n                return;\r\n            }\r\n            e.handled = settings.resetTriggers.indexOf(e.source) < 0;\r\n            container.reset$.emit(e);\r\n        });\r\n        container.reset$.subscribe(e => {\r\n            if (e.handled) {\r\n                return;\r\n            }\r\n            container.position = layout.reset();\r\n            port.reset();\r\n            container.fetchPage(0);\r\n        });\r\n        container.update$.subscribe(() => this.update(true));\r\n    }\r\n    get settings() {\r\n        return this.port.context.settings;\r\n    }\r\n    get container() {\r\n        return this.port.context.container;\r\n    }\r\n    tick(force) {\r\n        this.ticking = false;\r\n        const { port, container, box } = this;\r\n        const count = container.count;\r\n        const position = port.layout.recycle(count, box, force);\r\n        if (position) {\r\n            const draw = () => {\r\n                container.position = port.layout.invalidate(position);\r\n                container.draw$.emit({\r\n                    position: container.position,\r\n                });\r\n            };\r\n            const emit = f => port.emit(f);\r\n            container.apply(draw, emit);\r\n        }\r\n    }\r\n    update(force) {\r\n        const { container, port, box } = this;\r\n        const { element } = this.view;\r\n        this.container.read(() => {\r\n            const newBox = {\r\n                scrollWidth: element.scrollWidth,\r\n                scrollHeight: element.scrollHeight,\r\n                scrollTop: element.scrollTop,\r\n                scrollLeft: element.scrollLeft,\r\n                portWidth: element.clientWidth,\r\n                portHeight: element.clientHeight,\r\n            };\r\n            if (force || port.hasChanges(newBox, box)) {\r\n                this.box = newBox;\r\n                if (container.count && !this.ticking) {\r\n                    this.ticking = true;\r\n                    container.tick(() => this.tick(force));\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\n\nfunction capitalize(text) {\r\n    return text[0].toUpperCase() + text.slice(1);\r\n}\r\nfunction placeholderBitmap(width, height) {\r\n    const minWidth = Math.max(width, 1);\r\n    const minHeight = Math.max(height, 1);\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = Math.max(width * 2, 1);\r\n    canvas.height = Math.max(height * 2, 1);\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.04)';\r\n    ctx.fillRect(0, 0, minWidth, minHeight);\r\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.08)';\r\n    ctx.fillRect(width, height, minWidth, minHeight);\r\n    return canvas.toDataURL();\r\n}\n\nclass VscrollDirective {\r\n    constructor(elementRef, zone, renderer) {\r\n        this.elementRef = elementRef;\r\n        this.scroll = new EventEmitter();\r\n        this.reset = new EventEmitter();\r\n        zone.runOutsideAngular(() => {\r\n            elementRef\r\n                .nativeElement\r\n                .addEventListener('scroll', () => this.scroll.emit(), { passive: true });\r\n            renderer.listen(window, 'resize', () => {\r\n                const e = { handled: false, source: 'resize' };\r\n                this.reset.emit(e);\r\n            });\r\n        });\r\n    }\r\n    get element() {\r\n        return this.elementRef.nativeElement;\r\n    }\r\n    drawPlaceholder(width, height) {\r\n        const box = this.elementRef.nativeElement;\r\n        const style = box.style;\r\n        const placeholder = placeholderBitmap(width || box.clientWidth, height || box.clientHeight);\r\n        style.backgroundImage = 'url(' + placeholder + ')';\r\n        style.backgroundRepeat = 'repeat';\r\n    }\r\n    resetX() {\r\n        this.elementRef.nativeElement.scrollLeft = 0;\r\n    }\r\n    resetY() {\r\n        this.elementRef.nativeElement.scrollTop = 0;\r\n    }\r\n}\r\nVscrollDirective.ɵfac = function VscrollDirective_Factory(t) { return new (t || VscrollDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.Renderer2)); };\r\nVscrollDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: VscrollDirective, selectors: [[\"\", \"q-grid-vscroll\", \"\"]] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VscrollDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-vscroll]',\r\n                }]\r\n        }], function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.Renderer2 }]; }, null);\r\n})();\n\nclass VscrollPortYDirective {\r\n    constructor(elementRef, view) {\r\n        this.elementRef = elementRef;\r\n        this.view = view;\r\n        this.link = null;\r\n        this.layout = null;\r\n        this.markup = {};\r\n    }\r\n    ngOnChanges(changes) {\r\n        const contextChange = changes['context'];\r\n        if (contextChange && this.context) {\r\n            this.layout = new VscrollLayout(this);\r\n            this.link = new VscrollLink(this, this.view);\r\n            this.context.container.reset();\r\n        }\r\n    }\r\n    reset() {\r\n        this.view.resetY();\r\n    }\r\n    emit(f) {\r\n        const { settings } = this.context;\r\n        if (settings.emit) {\r\n            settings.emit(f);\r\n        }\r\n        else {\r\n            f();\r\n        }\r\n    }\r\n    getPositionUsingItemSize(itemSize, box, arm) {\r\n        const limitTop = box.scrollTop - arm;\r\n        const limitBottom = box.scrollHeight - (box.portHeight + arm);\r\n        const value = Math.min(limitBottom, Math.max(0, limitTop));\r\n        return findPositionUsingItemSize(value, itemSize);\r\n    }\r\n    getPositionUsingOffsets(offsets, box, arm) {\r\n        const limitTop = box.scrollTop - arm;\r\n        const limitBottom = box.scrollHeight - (box.portHeight + arm);\r\n        const value = Math.min(limitBottom, Math.max(0, limitTop));\r\n        return findPositionUsingOffsets(value, offsets);\r\n    }\r\n    move(top, bottom) {\r\n        this.pad('top', top);\r\n        this.pad('bottom', bottom);\r\n    }\r\n    getItemSize() {\r\n        const rowHeight = this.context.settings.rowHeight;\r\n        return isNumber(rowHeight) ? rowHeight : 0;\r\n    }\r\n    getScrollSize(box) {\r\n        return box.scrollHeight;\r\n    }\r\n    getSize(box) {\r\n        return box.portHeight;\r\n    }\r\n    recycleFactory(items) {\r\n        const recycle = recycleFactory(items);\r\n        return (index, count) => {\r\n            const size = this.getItemSize();\r\n            if (size) {\r\n                return [];\r\n            }\r\n            return recycle(index, count);\r\n        };\r\n    }\r\n    hasChanges(newBox, oldBox) {\r\n        return !oldBox.portHeight || newBox.scrollTop !== oldBox.scrollTop;\r\n    }\r\n    pad(pos, value) {\r\n        if (Object.prototype.hasOwnProperty.call(this.markup, pos)) {\r\n            const mark = this.markup[pos];\r\n            mark.style.height = value + 'px';\r\n        }\r\n        else {\r\n            this.elementRef.nativeElement.style['padding' + capitalize(pos)] = value + 'px';\r\n        }\r\n    }\r\n}\r\nVscrollPortYDirective.ɵfac = function VscrollPortYDirective_Factory(t) { return new (t || VscrollPortYDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(VscrollDirective)); };\r\nVscrollPortYDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: VscrollPortYDirective, selectors: [[\"\", \"q-grid-vscroll-port-y\", \"\"]], inputs: { context: [\"q-grid-vscroll-port-y\", \"context\"] }, features: [i0.ɵɵNgOnChangesFeature] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VscrollPortYDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-vscroll-port-y]',\r\n                }]\r\n        }], function () { return [{ type: i0.ElementRef }, { type: VscrollDirective }]; }, { context: [{\r\n                type: Input,\r\n                args: ['q-grid-vscroll-port-y']\r\n            }] });\r\n})();\n\nclass VscrollRowDirective {\r\n    constructor(elementRef, port) {\r\n        this.port = port;\r\n        this.row = elementRef.nativeElement;\r\n    }\r\n    get layout() {\r\n        return this.port.layout;\r\n    }\r\n    get settings() {\r\n        return this.port.context.settings;\r\n    }\r\n    get container() {\r\n        return this.port.context.container;\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes['index']) {\r\n            if (this.port.getItemSize()) {\r\n                this.ngOnChanges = null;\r\n                return;\r\n            }\r\n            const { layout, settings, container, row } = this;\r\n            const { rowHeight } = settings;\r\n            this.ngOnChanges = (e) => {\r\n                if (e['index']) {\r\n                    const change = e['index'];\r\n                    const newIndex = change.currentValue;\r\n                    const oldIndex = change.previousValue;\r\n                    layout.removeItem(oldIndex);\r\n                    const size = sizeFactory(rowHeight, container, row, newIndex);\r\n                    layout.setItem(newIndex, size);\r\n                }\r\n            };\r\n            const firstChange = changes['index'];\r\n            const firstNewIndex = firstChange.currentValue;\r\n            const firstSize = sizeFactory(rowHeight, container, row, firstNewIndex);\r\n            layout.setItem(firstNewIndex, firstSize);\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.port.layout.removeItem(this.index);\r\n    }\r\n}\r\nVscrollRowDirective.ɵfac = function VscrollRowDirective_Factory(t) { return new (t || VscrollRowDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(VscrollPortYDirective)); };\r\nVscrollRowDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: VscrollRowDirective, selectors: [[\"\", \"q-grid-vscroll-row\", \"\"]], inputs: { index: [\"q-grid-vscroll-row\", \"index\"] }, features: [i0.ɵɵNgOnChangesFeature] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VscrollRowDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-vscroll-row]',\r\n                }]\r\n        }], function () { return [{ type: i0.ElementRef }, { type: VscrollPortYDirective }]; }, { index: [{\r\n                type: Input,\r\n                args: ['q-grid-vscroll-row']\r\n            }] });\r\n})();\n\nclass VscrollPortXDirective {\r\n    constructor(elementRef, view) {\r\n        this.elementRef = elementRef;\r\n        this.view = view;\r\n        this.link = null;\r\n        this.markup = {};\r\n        this.layout = null;\r\n    }\r\n    ngOnChanges(changes) {\r\n        const contextChange = changes['context'];\r\n        if (contextChange && this.context) {\r\n            this.layout = new VscrollLayout(this);\r\n            this.link = new VscrollLink(this, this.view);\r\n            this.context.container.reset();\r\n        }\r\n    }\r\n    reset() {\r\n        this.view.resetX();\r\n    }\r\n    emit(f) {\r\n        const { settings } = this.context;\r\n        if (settings.emit) {\r\n            settings.emit(f);\r\n        }\r\n        else {\r\n            f();\r\n        }\r\n    }\r\n    getPositionUsingItemSize(itemSize, box, arm) {\r\n        const limitTop = box.scrollLeft - arm;\r\n        const limitBottom = box.scrollWidth - (box.portWidth + arm);\r\n        const value = Math.min(limitBottom, Math.max(0, limitTop));\r\n        return findPositionUsingItemSize(value, itemSize);\r\n    }\r\n    getPositionUsingOffsets(offsets, box, arm) {\r\n        const limitTop = box.scrollLeft - arm;\r\n        const limitBottom = box.scrollHeight - (box.portWidth + arm);\r\n        const value = Math.min(limitBottom, Math.max(0, limitTop));\r\n        return findPositionUsingOffsets(value, offsets);\r\n    }\r\n    move(left, right) {\r\n        this.pad('left', left);\r\n        this.pad('right', right);\r\n    }\r\n    getItemSize() {\r\n        const columnWidth = this.context.settings.columnWidth;\r\n        return isNumber(columnWidth) ? columnWidth : 0;\r\n    }\r\n    getScrollSize(box) {\r\n        return box.scrollWidth;\r\n    }\r\n    getSize(box) {\r\n        return box.portWidth;\r\n    }\r\n    recycleFactory(items) {\r\n        const recycle = recycleFactory(items);\r\n        return (index, count) => {\r\n            const size = this.getItemSize();\r\n            if (size) {\r\n                return [];\r\n            }\r\n            return recycle(index, count);\r\n        };\r\n    }\r\n    hasChanges(newBox, oldBox) {\r\n        return !oldBox.portWidth || newBox.scrollWidth !== oldBox.scrollWidth;\r\n    }\r\n    pad(pos, value) {\r\n        if (Object.prototype.hasOwnProperty.call(this.markup, pos)) {\r\n            const mark = this.markup[pos];\r\n            mark.style.width = value + 'px';\r\n        }\r\n        else {\r\n            this.elementRef.nativeElement.style['padding' + capitalize(pos)] = value + 'px';\r\n        }\r\n    }\r\n}\r\nVscrollPortXDirective.ɵfac = function VscrollPortXDirective_Factory(t) { return new (t || VscrollPortXDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(VscrollDirective)); };\r\nVscrollPortXDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: VscrollPortXDirective, selectors: [[\"\", \"q-grid-vscroll-port-x\", \"\"]], inputs: { context: [\"q-grid-vscroll-port-x\", \"context\"] }, features: [i0.ɵɵNgOnChangesFeature] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VscrollPortXDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-vscroll-port-x]',\r\n                }]\r\n        }], function () { return [{ type: i0.ElementRef }, { type: VscrollDirective }]; }, { context: [{\r\n                type: Input,\r\n                args: ['q-grid-vscroll-port-x']\r\n            }] });\r\n})();\n\nclass VscrollMarkDirective {\r\n    constructor(elementRef, portX, portY) {\r\n        this.elementRef = elementRef;\r\n        this.ports = [];\r\n        if (portX) {\r\n            this.ports.push(portX);\r\n        }\r\n        if (portY) {\r\n            this.ports.push(portY);\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        const element = this.elementRef.nativeElement;\r\n        const key = this.key;\r\n        this.ports.forEach(port => port.markup[key] = element);\r\n    }\r\n    ngOnDestroy() {\r\n        const key = this.key;\r\n        this.ports.forEach(port => delete port.markup[key]);\r\n    }\r\n}\r\nVscrollMarkDirective.ɵfac = function VscrollMarkDirective_Factory(t) { return new (t || VscrollMarkDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(VscrollPortXDirective, 8), i0.ɵɵdirectiveInject(VscrollPortYDirective, 8)); };\r\nVscrollMarkDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: VscrollMarkDirective, selectors: [[\"\", \"q-grid-vscroll-mark\", \"\"]], inputs: { key: [\"q-grid-vscroll-mark\", \"key\"] } });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VscrollMarkDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-vscroll-mark]',\r\n                }]\r\n        }], function () {\r\n        return [{ type: i0.ElementRef }, { type: VscrollPortXDirective, decorators: [{\r\n                        type: Optional\r\n                    }] }, { type: VscrollPortYDirective, decorators: [{\r\n                        type: Optional\r\n                    }] }];\r\n    }, { key: [{\r\n                type: Input,\r\n                args: ['q-grid-vscroll-mark']\r\n            }] });\r\n})();\n\nclass TrCoreDirective {\r\n    constructor($view, plugin, elementRef) {\r\n        this.$view = $view;\r\n        this.plugin = plugin;\r\n        this.element = elementRef.nativeElement;\r\n    }\r\n    get index() {\r\n        return this.$view.scroll.y.container.position + this.viewIndex;\r\n    }\r\n    ngOnInit() {\r\n        this.plugin.table.box.bag[this.source].addRow(this);\r\n    }\r\n    ngOnDestroy() {\r\n        this.plugin.table.box.bag[this.source].deleteRow(this);\r\n    }\r\n}\r\nTrCoreDirective.ɵfac = function TrCoreDirective_Factory(t) { return new (t || TrCoreDirective)(i0.ɵɵdirectiveInject(GridLet), i0.ɵɵdirectiveInject(GridPlugin), i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nTrCoreDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: TrCoreDirective, selectors: [[\"\", \"q-grid-core-tr\", \"\"]], inputs: { viewIndex: [\"q-grid-core-index\", \"viewIndex\"], model: [\"q-grid-core-tr\", \"model\"], source: [\"q-grid-core-source\", \"source\"] } });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TrCoreDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-core-tr]',\r\n                }]\r\n        }], function () { return [{ type: GridLet }, { type: GridPlugin }, { type: i0.ElementRef }]; }, { viewIndex: [{\r\n                type: Input,\r\n                args: ['q-grid-core-index']\r\n            }], model: [{\r\n                type: Input,\r\n                args: ['q-grid-core-tr']\r\n            }], source: [{\r\n                type: Input,\r\n                args: ['q-grid-core-source']\r\n            }] });\r\n})();\n\nclass CellClassService {\r\n    constructor() {\r\n        this.bodyCache = new Map();\r\n    }\r\n    toBody(element, column) {\r\n        let classify = this.bodyCache.get(column);\r\n        if (!classify) {\r\n            classify = bodyCellClassifier(column);\r\n            this.bodyCache.set(column, classify);\r\n        }\r\n        classify(element);\r\n    }\r\n    toHead(element, column) {\r\n        const classify = headCellClassifier(column);\r\n        classify(element);\r\n    }\r\n}\r\nCellClassService.ɵfac = function CellClassService_Factory(t) { return new (t || CellClassService)(); };\r\nCellClassService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: CellClassService, factory: CellClassService.ɵfac });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellClassService, [{\r\n            type: Injectable\r\n        }], null, null);\r\n})();\n\nclass TdCoreAlignDirective {\r\n    constructor(elementRef, cellClass) {\r\n        this.elementRef = elementRef;\r\n        this.cellClass = cellClass;\r\n    }\r\n    ngOnInit() {\r\n        this.cellClass.toBody(this.elementRef.nativeElement, this.columnView.model);\r\n    }\r\n}\r\nTdCoreAlignDirective.ɵfac = function TdCoreAlignDirective_Factory(t) { return new (t || TdCoreAlignDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(CellClassService)); };\r\nTdCoreAlignDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: TdCoreAlignDirective, selectors: [[\"\", \"q-grid-core-td-align\", \"\"]], inputs: { columnView: [\"q-grid-core-td-align\", \"columnView\"] } });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TdCoreAlignDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-core-td-align]',\r\n                }]\r\n        }], function () { return [{ type: i0.ElementRef }, { type: CellClassService }]; }, { columnView: [{\r\n                type: Input,\r\n                args: ['q-grid-core-td-align']\r\n            }] });\r\n})();\n\nclass TemplateLinkService {\r\n    constructor() {\r\n        this.cache = new Map();\r\n    }\r\n    get(key) {\r\n        return this.cache.get(key);\r\n    }\r\n    put(key, value) {\r\n        this.cache.set(key, value);\r\n    }\r\n}\r\nTemplateLinkService.ɵfac = function TemplateLinkService_Factory(t) { return new (t || TemplateLinkService)(); };\r\nTemplateLinkService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: TemplateLinkService, factory: TemplateLinkService.ɵfac });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TemplateLinkService, [{\r\n            type: Injectable\r\n        }], null, null);\r\n})();\n\nclass TemplateCacheService {\r\n    constructor() {\r\n        this.cache = new Map();\r\n    }\r\n    get(key) {\r\n        return this.cache.get(key);\r\n    }\r\n    put(key, value) {\r\n        this.cache.set(key, value);\r\n    }\r\n}\r\nTemplateCacheService.ɵfac = function TemplateCacheService_Factory(t) { return new (t || TemplateCacheService)(); };\r\nTemplateCacheService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: TemplateCacheService, factory: TemplateCacheService.ɵfac });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TemplateCacheService, [{\r\n            type: Injectable\r\n        }], function () { return []; }, null);\r\n})();\n\nclass TemplateService {\r\n    constructor(templateLink, templateCache) {\r\n        this.templateLink = templateLink;\r\n        this.templateCache = templateCache;\r\n    }\r\n    find(keys) {\r\n        if (isString(keys)) {\r\n            const key = keys;\r\n            const link = this.templateCache.get(key) || this.templateLink.get(key);\r\n            return link || null;\r\n        }\r\n        if (isArray(keys)) {\r\n            return this.lookInCache(keys) || this.lookInLink(keys);\r\n        }\r\n    }\r\n    lookInCache(keys) {\r\n        for (const key of keys) {\r\n            const link = this.templateCache.get(key);\r\n            if (link) {\r\n                return link;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    lookInLink(keys) {\r\n        for (const key of keys) {\r\n            const link = this.templateLink.get(key);\r\n            if (link) {\r\n                return link;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\r\nTemplateService.ɵfac = function TemplateService_Factory(t) { return new (t || TemplateService)(i0.ɵɵinject(TemplateLinkService), i0.ɵɵinject(TemplateCacheService)); };\r\nTemplateService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: TemplateService, factory: TemplateService.ɵfac });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TemplateService, [{\r\n            type: Injectable\r\n        }], function () { return [{ type: TemplateLinkService }, { type: TemplateCacheService }]; }, null);\r\n})();\n\nfunction canBuild(column) {\r\n    return column.type !== 'pad';\r\n}\r\nfunction buildId(source, column, mode = 'view') {\r\n    const { key, type, itemType } = column;\r\n    return `${source}-${mode}-cell-${type}-of-${itemType}-the-${key}.tpl.html`;\r\n}\r\nfunction buildKeys(source, column, mode = 'view') {\r\n    const { key, itemType } = column;\r\n    let { type } = column;\r\n    switch (mode) {\r\n        case 'view': {\r\n            const result = [\r\n                `${source}-cell-${type}-the-${key}.tpl.html`,\r\n                `${source}-cell-the-${key}.tpl.html`,\r\n                `${source}-cell-${type}.tpl.html`,\r\n                `${source}-cell.tpl.html`,\r\n                `${source}-cell-text.tpl.html`,\r\n            ];\r\n            if (itemType) {\r\n                result.splice(0, 0, ...[`${source}-cell-${type}-of-${itemType}-the-${key}.tpl.html`, `${source}-cell-${type}-of-${itemType}.tpl.html`]);\r\n            }\r\n            return result;\r\n        }\r\n        case 'change':\r\n        case 'edit': {\r\n            type = column.editor || type;\r\n            const result = [\r\n                `${mode}-cell-${type}-the-${key}.tpl.html`,\r\n                `${mode}-cell-the-${key}.tpl.html`,\r\n                `${mode}-cell-${type}.tpl.html`,\r\n                `${mode}-cell.tpl.html`,\r\n                `${mode}-cell-text.tpl.html`,\r\n            ];\r\n            if (itemType) {\r\n                result.splice(0, 0, ...[`${mode}-cell-${type}-of-${itemType}-the-${key}.tpl.html`, `${mode}-cell-${type}-of-${itemType}.tpl.html`]);\r\n            }\r\n            return result;\r\n        }\r\n        default:\r\n            throw new GridError('cell.service', `Invalid mode '${mode}'`);\r\n    }\r\n}\r\nclass CellTemplateService {\r\n    constructor(templateService) {\r\n        this.templateService = templateService;\r\n        this.commits = new Map();\r\n    }\r\n    build(source, column, mode = 'view') {\r\n        if (!canBuild(column)) {\r\n            return noop;\r\n        }\r\n        const id = buildId(source, column, mode);\r\n        let commit = this.commits.get(id);\r\n        if (commit) {\r\n            return commit;\r\n        }\r\n        const keys = buildKeys(source, column, mode);\r\n        const templateLink = this.templateService.find(keys);\r\n        if (!templateLink) {\r\n            return noop;\r\n        }\r\n        commit = (container, context) => {\r\n            container.clear();\r\n            return container.createEmbeddedView(templateLink.template, context);\r\n        };\r\n        this.commits.set(id, commit);\r\n        return commit;\r\n    }\r\n}\r\nCellTemplateService.ɵfac = function CellTemplateService_Factory(t) { return new (t || CellTemplateService)(i0.ɵɵinject(TemplateService)); };\r\nCellTemplateService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: CellTemplateService, factory: CellTemplateService.ɵfac });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellTemplateService, [{\r\n            type: Injectable\r\n        }], function () { return [{ type: TemplateService }]; }, null);\r\n})();\n\nclass TdCoreDirective {\r\n    constructor($view, root, viewContainerRef, cellTemplate, cellClass, tr, cd, elementRef) {\r\n        this.$view = $view;\r\n        this.root = root;\r\n        this.viewContainerRef = viewContainerRef;\r\n        this.cellTemplate = cellTemplate;\r\n        this.cellClass = cellClass;\r\n        this.tr = tr;\r\n        this.cd = cd;\r\n        this.$implicit = this;\r\n        this.element = elementRef.nativeElement.parentNode;\r\n    }\r\n    get value() {\r\n        return this.actualValue;\r\n    }\r\n    set value(value) {\r\n        const { column, row, rowIndex, columnIndex } = this;\r\n        this.$view.body.render.setValue(row, column, value, rowIndex, columnIndex);\r\n    }\r\n    get label() {\r\n        return this.actualLabel;\r\n    }\r\n    set label(label) {\r\n        const { column, row, rowIndex, columnIndex } = this;\r\n        this.$view.body.render.setLabel(row, column, label, rowIndex, columnIndex);\r\n    }\r\n    get column() {\r\n        return this.columnView.model;\r\n    }\r\n    get columnIndex() {\r\n        return this.columnView.columnIndex;\r\n    }\r\n    get row() {\r\n        return this.tr.model;\r\n    }\r\n    get rowIndex() {\r\n        return this.tr.index;\r\n    }\r\n    get dataRowIndex() {\r\n        const { model } = this.root;\r\n        const { rows } = model.data();\r\n        return rows.indexOf(this.row);\r\n    }\r\n    ngOnInit() {\r\n        const { table } = this.root;\r\n        table.box.bag.body.addCell(this);\r\n        this.cellClass.toBody(this.element, this.column);\r\n        const link = this.cellTemplate.build('body', this.column, 'view');\r\n        link(this.viewContainerRef, this);\r\n    }\r\n    ngOnChanges(changes) {\r\n        const { actualLabel } = changes;\r\n        if (actualLabel && !actualLabel.firstChange && actualLabel.currentValue !== actualLabel.previousValue) {\r\n            this.changes = actualLabel;\r\n            this.mode('change');\r\n        }\r\n    }\r\n    mode(value) {\r\n        const link = this.cellTemplate.build('body', this.column, value);\r\n        switch (value) {\r\n            case 'view': {\r\n                this.element.classList.remove(`${GRID_PREFIX}-change`);\r\n                this.element.classList.remove(`${GRID_PREFIX}-edit`);\r\n                if (link !== noop) {\r\n                    link(this.viewContainerRef, this);\r\n                    this.cd.markForCheck();\r\n                    this.cd.detectChanges();\r\n                }\r\n                break;\r\n            }\r\n            case 'edit': {\r\n                if (link === noop) {\r\n                    throw new GridError('td-core.directive', `Can't find template link for edit of ${this.column.key}`);\r\n                }\r\n                this.element.classList.add(`${GRID_PREFIX}-${value}`);\r\n                link(this.viewContainerRef, this);\r\n                this.cd.markForCheck();\r\n                this.cd.detectChanges();\r\n                break;\r\n            }\r\n            case 'change': {\r\n                if (link !== noop) {\r\n                    this.element.classList.add(`${GRID_PREFIX}-${value}`);\r\n                    link(this.viewContainerRef, this);\r\n                    this.cd.markForCheck();\r\n                    this.cd.detectChanges();\r\n                }\r\n                break;\r\n            }\r\n            default: {\r\n                throw new GridError('td-core.directive', `Invalid mode ${value}`);\r\n            }\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        const { table } = this.root;\r\n        table.box.bag.body.deleteCell(this);\r\n    }\r\n}\r\nTdCoreDirective.ɵfac = function TdCoreDirective_Factory(t) { return new (t || TdCoreDirective)(i0.ɵɵdirectiveInject(GridLet), i0.ɵɵdirectiveInject(GridRoot), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(CellTemplateService), i0.ɵɵdirectiveInject(CellClassService), i0.ɵɵdirectiveInject(TrCoreDirective), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nTdCoreDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: TdCoreDirective, selectors: [[\"\", \"q-grid-core-td\", \"\"]], inputs: { actualValue: [\"q-grid-core-value\", \"actualValue\"], actualLabel: [\"q-grid-core-label\", \"actualLabel\"], columnView: [\"q-grid-core-td\", \"columnView\"] }, features: [i0.ɵɵNgOnChangesFeature] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TdCoreDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-core-td]',\r\n                }]\r\n        }], function () { return [{ type: GridLet }, { type: GridRoot }, { type: i0.ViewContainerRef }, { type: CellTemplateService }, { type: CellClassService }, { type: TrCoreDirective }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }]; }, { actualValue: [{\r\n                type: Input,\r\n                args: ['q-grid-core-value']\r\n            }], actualLabel: [{\r\n                type: Input,\r\n                args: ['q-grid-core-label']\r\n            }], columnView: [{\r\n                type: Input,\r\n                args: ['q-grid-core-td']\r\n            }] });\r\n})();\n\nclass VscrollPipe {\r\n    constructor(cd) {\r\n        this.cd = cd;\r\n        this.disposable = new Disposable$1();\r\n    }\r\n    transform(data, context) {\r\n        this.disposable.finalize();\r\n        if (!context) {\r\n            Log.warn('VscrollPipe', 'Context is not defined');\r\n            return new SubjectLike();\r\n        }\r\n        data = data || [];\r\n        const { container, settings } = context;\r\n        const items$ = new SubjectLike();\r\n        container.update(data.length);\r\n        let cursor = container.position;\r\n        this.disposable.add(container.draw$.subscribe(({ position }) => {\r\n            const { length } = data;\r\n            const { threshold } = settings;\r\n            container.update(length);\r\n            // We need to have a less number of virtual items on\r\n            // the bottom, as deferred loading is happen there should\r\n            // be a threshold place to draw several items below so we use cursor for the last\r\n            const first = position;\r\n            if (container.force || first !== cursor) {\r\n                const last = Math.min(first + threshold, length);\r\n                const wnd = new Array(last - first);\r\n                cursor = first;\r\n                container.force = false;\r\n                for (let i = first, j = 0; i < last; i++, j++) {\r\n                    wnd[j] = data[i];\r\n                }\r\n                // TODO: remove that workaround\r\n                // async pipe doesn't trigger change detection,\r\n                // so we put subscription here to invoke detect changes\r\n                // after async pipe marks for check\r\n                const sub = items$.subscribe(() => {\r\n                    this.cd.detectChanges();\r\n                });\r\n                try {\r\n                    items$.next(wnd);\r\n                }\r\n                finally {\r\n                    sub.unsubscribe();\r\n                }\r\n            }\r\n        }));\r\n        return items$;\r\n    }\r\n    ngOnDestroy() {\r\n        this.disposable.finalize();\r\n    }\r\n}\r\nVscrollPipe.ɵfac = function VscrollPipe_Factory(t) { return new (t || VscrollPipe)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef, 16)); };\r\nVscrollPipe.ɵpipe = /*@__PURE__*/ i0.ɵɵdefinePipe({ name: \"qGridVscroll$\", type: VscrollPipe, pure: true });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VscrollPipe, [{\r\n            type: Pipe$1,\r\n            args: [{\r\n                    name: 'qGridVscroll$',\r\n                    pure: true,\r\n                }]\r\n        }], function () { return [{ type: i0.ChangeDetectorRef }]; }, null);\r\n})();\n\nconst _c0$a = [\"q-grid-core-body\", \"\"];\r\nfunction BodyCoreComponent_ng_container_0_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementContainer(0);\r\n    }\r\n}\r\nfunction BodyCoreComponent_ng_template_1_td_2_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelement(0, \"td\", 8);\r\n    }\r\n    if (rf & 2) {\r\n        const $column_r7 = ctx.$implicit;\r\n        i0.ɵɵproperty(\"q-grid-core-td-align\", $column_r7);\r\n    }\r\n}\r\nfunction BodyCoreComponent_ng_template_1_tr_3_td_1_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"td\");\r\n        i0.ɵɵelementContainer(1, 11);\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const $column_r11 = ctx.$implicit;\r\n        const $columnIndex_r12 = ctx.index;\r\n        const ctx_r13 = i0.ɵɵnextContext();\r\n        const $row_r8 = ctx_r13.$implicit;\r\n        const $vscrollIndex_r9 = ctx_r13.index;\r\n        const ctx_r10 = i0.ɵɵnextContext(2);\r\n        i0.ɵɵattribute(\"rowspan\", ctx_r10.$view.body.render.rowspan($row_r8, $column_r11, ctx_r10.mapToDataIndex($vscrollIndex_r9), $columnIndex_r12))(\"colspan\", ctx_r10.$view.body.render.colspan($row_r8, $column_r11, ctx_r10.mapToDataIndex($vscrollIndex_r9), $columnIndex_r12));\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"q-grid-core-td\", $column_r11)(\"q-grid-core-label\", ctx_r10.$view.body.render.getLabel($row_r8, $column_r11.model, ctx_r10.mapToDataIndex($vscrollIndex_r9), $columnIndex_r12))(\"q-grid-core-value\", ctx_r10.$view.body.render.getValue($row_r8, $column_r11.model, ctx_r10.mapToDataIndex($vscrollIndex_r9), $columnIndex_r12));\r\n    }\r\n}\r\nfunction BodyCoreComponent_ng_template_1_tr_3_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"tr\", 9);\r\n        i0.ɵɵtemplate(1, BodyCoreComponent_ng_template_1_tr_3_td_1_Template, 2, 5, \"td\", 10);\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const $row_r8 = ctx.$implicit;\r\n        const $vscrollIndex_r9 = ctx.index;\r\n        const ctx_r6 = i0.ɵɵnextContext(2);\r\n        i0.ɵɵproperty(\"q-grid-core-tr\", $row_r8)(\"q-grid-core-index\", $vscrollIndex_r9)(\"q-grid-vscroll-row\", $vscrollIndex_r9);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngForOf\", ctx_r6.$view.body.render.columns($row_r8, ctx_r6.$table.pin, ctx_r6.mapToDataIndex($vscrollIndex_r9)))(\"ngForTrackBy\", ctx_r6.columnId);\r\n    }\r\n}\r\nfunction BodyCoreComponent_ng_template_1_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelement(0, \"tr\", 3);\r\n        i0.ɵɵelementStart(1, \"tr\", 4);\r\n        i0.ɵɵtemplate(2, BodyCoreComponent_ng_template_1_td_2_Template, 1, 1, \"td\", 5);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵtemplate(3, BodyCoreComponent_ng_template_1_tr_3_Template, 2, 5, \"tr\", 6);\r\n        i0.ɵɵpipe(4, \"async\");\r\n        i0.ɵɵpipe(5, \"qGridVscroll$\");\r\n        i0.ɵɵelement(6, \"tr\", 7);\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r2 = i0.ɵɵnextContext();\r\n        i0.ɵɵadvance(2);\r\n        i0.ɵɵproperty(\"ngForOf\", ctx_r2.$view.body.columns(ctx_r2.$table.pin))(\"ngForTrackBy\", ctx_r2.columnId);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(4, 4, i0.ɵɵpipeBind2(5, 6, ctx_r2.$view.body.render.rows[ctx_r2.pin], ctx_r2.$view.scroll.y)))(\"ngForTrackBy\", ctx_r2.$view.scroll.y.id);\r\n    }\r\n}\r\nfunction BodyCoreComponent_ng_template_3_td_1_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelement(0, \"td\", 8);\r\n    }\r\n    if (rf & 2) {\r\n        const $column_r16 = ctx.$implicit;\r\n        i0.ɵɵproperty(\"q-grid-core-td-align\", $column_r16);\r\n    }\r\n}\r\nfunction BodyCoreComponent_ng_template_3_tr_2_td_1_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"td\");\r\n        i0.ɵɵelementContainer(1, 11);\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const $column_r20 = ctx.$implicit;\r\n        const $columnIndex_r21 = ctx.index;\r\n        const ctx_r22 = i0.ɵɵnextContext();\r\n        const $row_r17 = ctx_r22.$implicit;\r\n        const $rowIndex_r18 = ctx_r22.index;\r\n        const ctx_r19 = i0.ɵɵnextContext(2);\r\n        i0.ɵɵattribute(\"rowspan\", ctx_r19.$view.body.render.rowspan($row_r17, $column_r20, $rowIndex_r18, $columnIndex_r21))(\"colspan\", ctx_r19.$view.body.render.colspan($row_r17, $column_r20, $rowIndex_r18, $columnIndex_r21));\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"q-grid-core-td\", $column_r20)(\"q-grid-core-label\", ctx_r19.$view.body.render.getLabel($row_r17, $column_r20.model, $rowIndex_r18, $columnIndex_r21))(\"q-grid-core-value\", ctx_r19.$view.body.render.getValue($row_r17, $column_r20.model, $rowIndex_r18, $columnIndex_r21));\r\n    }\r\n}\r\nfunction BodyCoreComponent_ng_template_3_tr_2_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"tr\", 13);\r\n        i0.ɵɵtemplate(1, BodyCoreComponent_ng_template_3_tr_2_td_1_Template, 2, 5, \"td\", 10);\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const $row_r17 = ctx.$implicit;\r\n        const $rowIndex_r18 = ctx.index;\r\n        const ctx_r15 = i0.ɵɵnextContext(2);\r\n        i0.ɵɵproperty(\"q-grid-core-tr\", $row_r17)(\"q-grid-core-index\", $rowIndex_r18);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngForOf\", ctx_r15.$view.body.render.columns($row_r17, ctx_r15.$table.pin, $rowIndex_r18))(\"ngForTrackBy\", ctx_r15.columnId);\r\n    }\r\n}\r\nfunction BodyCoreComponent_ng_template_3_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"tr\", 4);\r\n        i0.ɵɵtemplate(1, BodyCoreComponent_ng_template_3_td_1_Template, 1, 1, \"td\", 5);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵtemplate(2, BodyCoreComponent_ng_template_3_tr_2_Template, 2, 4, \"tr\", 12);\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r4 = i0.ɵɵnextContext();\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngForOf\", ctx_r4.$view.body.columns(ctx_r4.$table.pin))(\"ngForTrackBy\", ctx_r4.columnId);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngForOf\", ctx_r4.$view.body.render.rows[ctx_r4.pin])(\"ngForTrackBy\", ctx_r4.rowId);\r\n    }\r\n}\r\nclass BodyCoreComponent {\r\n    constructor($view, $table, elementRef, zone, cd, plugin) {\r\n        this.$view = $view;\r\n        this.$table = $table;\r\n        this.elementRef = elementRef;\r\n        this.zone = zone;\r\n        this.cd = cd;\r\n        this.plugin = plugin;\r\n        this.pin = 'body';\r\n    }\r\n    // @deprecated\r\n    get selection() {\r\n        return this.model.selection();\r\n    }\r\n    get model() {\r\n        return this.plugin.model;\r\n    }\r\n    ngOnInit() {\r\n        const { model, disposable, observeReply, observe } = this.plugin;\r\n        const nativeElement = this.elementRef.nativeElement;\r\n        const host = new BodyHost(this.plugin);\r\n        const listener = new EventListener(this.elementRef.nativeElement, new EventManager(this));\r\n        this.zone.runOutsideAngular(() => {\r\n            const scrollSettings = { passive: true };\r\n            disposable.add(listener.on('scroll', () => host.scroll({\r\n                scrollLeft: this.$table.pin === 'mid' ? nativeElement.scrollLeft : model.scroll().left,\r\n                scrollTop: nativeElement.scrollTop,\r\n            }), scrollSettings));\r\n            disposable.add(listener.on('wheel', e => host.wheel(e)));\r\n            disposable.add(listener.on('mouseleave', e => host.mouseLeave(e)));\r\n        });\r\n        observeReply(model.sceneChanged)\r\n            .subscribe(e => {\r\n            if (model.grid().interactionMode === 'detached') {\r\n                if (e.hasChanges('status')) {\r\n                    switch (e.state.status) {\r\n                        case 'stop':\r\n                            this.cd.detach();\r\n                            break;\r\n                        case 'start':\r\n                            this.cd.reattach();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        observe(model.sceneChanged)\r\n            .subscribe(e => {\r\n            if (e.hasChanges('status') && e.state.status === 'push') {\r\n                this.cd.markForCheck();\r\n            }\r\n        });\r\n    }\r\n    columnId(index, item) {\r\n        return item.model.key;\r\n    }\r\n    rowId(index) {\r\n        return index;\r\n    }\r\n    mapToDataIndex(viewIndex) {\r\n        return this.$view.scroll.y.container.position + viewIndex;\r\n    }\r\n}\r\nBodyCoreComponent.ɵfac = function BodyCoreComponent_Factory(t) { return new (t || BodyCoreComponent)(i0.ɵɵdirectiveInject(GridLet), i0.ɵɵdirectiveInject(TableCoreService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(GridPlugin)); };\r\nBodyCoreComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: BodyCoreComponent, selectors: [[\"tbody\", \"q-grid-core-body\", \"\"]], inputs: { pin: \"pin\" }, features: [i0.ɵɵProvidersFeature([GridPlugin])], attrs: _c0$a, decls: 5, vars: 1, consts: [[4, \"ngTemplateOutlet\"], [\"virtualRows\", \"\"], [\"rows\", \"\"], [\"q-grid-vscroll-mark\", \"top\", 1, \"q-grid-scroll-mark\"], [1, \"q-grid-align\"], [3, \"q-grid-core-td-align\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"q-grid-core-source\", \"body\", 3, \"q-grid-core-tr\", \"q-grid-core-index\", \"q-grid-vscroll-row\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"q-grid-vscroll-mark\", \"bottom\", 1, \"q-grid-scroll-mark\"], [3, \"q-grid-core-td-align\"], [\"q-grid-core-source\", \"body\", 3, \"q-grid-core-tr\", \"q-grid-core-index\", \"q-grid-vscroll-row\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"q-grid-core-td\", \"q-grid-core-label\", \"q-grid-core-value\"], [\"q-grid-core-source\", \"body\", 3, \"q-grid-core-tr\", \"q-grid-core-index\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"q-grid-core-source\", \"body\", 3, \"q-grid-core-tr\", \"q-grid-core-index\"]], template: function BodyCoreComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵtemplate(0, BodyCoreComponent_ng_container_0_Template, 1, 0, \"ng-container\", 0);\r\n            i0.ɵɵtemplate(1, BodyCoreComponent_ng_template_1_Template, 7, 9, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\r\n            i0.ɵɵtemplate(3, BodyCoreComponent_ng_template_3_Template, 3, 4, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\r\n        }\r\n        if (rf & 2) {\r\n            const _r1 = i0.ɵɵreference(2);\r\n            const _r3 = i0.ɵɵreference(4);\r\n            i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.$view.scroll.mode === \"virtual\" && ctx.pin === \"body\" ? _r1 : _r3);\r\n        }\r\n    }, dependencies: [i4.NgForOf, i4.NgTemplateOutlet, VscrollRowDirective, VscrollMarkDirective, TrCoreDirective, TdCoreAlignDirective, TdCoreDirective, i4.AsyncPipe, VscrollPipe], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BodyCoreComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'tbody[q-grid-core-body]', providers: [GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container *ngTemplateOutlet=\\\"$view.scroll.mode === 'virtual' && pin === 'body' ? virtualRows : rows\\\">\\n</ng-container>\\n\\n<ng-template #virtualRows>\\n\\t<tr q-grid-vscroll-mark=\\\"top\\\"\\n\\t\\tclass=\\\"q-grid-scroll-mark\\\">\\n\\t</tr>\\n\\t<tr class=\\\"q-grid-align\\\">\\n\\t\\t<td *ngFor=\\\"let $column of $view.body.columns($table.pin); trackBy: columnId\\\"\\n\\t\\t\\t[q-grid-core-td-align]=\\\"$column\\\">\\n\\t\\t</td>\\n\\t</tr>\\n\\t<tr *ngFor=\\\"\\n\\t\\tlet $row of $view.body.render.rows[pin] | qGridVscroll$: $view.scroll.y | async;\\n\\t\\tindex as $vscrollIndex;\\n\\t\\ttrackBy: $view.scroll.y.id\\\"\\n\\t\\t\\t[q-grid-core-tr]=\\\"$row\\\"\\n\\t\\t\\t[q-grid-core-index]=\\\"$vscrollIndex\\\"\\n\\t\\t\\t[q-grid-vscroll-row]=\\\"$vscrollIndex\\\"\\n\\t\\t\\tq-grid-core-source=\\\"body\\\">\\n\\t\\t<td *ngFor=\\\"\\n\\t\\t\\tlet $column of $view.body.render.columns($row, $table.pin, mapToDataIndex($vscrollIndex));\\n\\t\\t\\tindex as $columnIndex;\\n\\t\\t\\ttrackBy: columnId\\\"\\n\\t\\t\\t\\t[attr.rowspan]=\\\"$view.body.render.rowspan($row, $column, mapToDataIndex($vscrollIndex), $columnIndex)\\\"\\n\\t\\t\\t\\t[attr.colspan]=\\\"$view.body.render.colspan($row, $column, mapToDataIndex($vscrollIndex), $columnIndex)\\\">\\n\\t\\t\\t\\t<ng-container [q-grid-core-td]=\\\"$column\\\"\\n\\t\\t\\t\\t\\t[q-grid-core-label]=\\\"$view.body.render.getLabel($row, $column.model, mapToDataIndex($vscrollIndex), $columnIndex)\\\"\\n\\t\\t\\t\\t\\t[q-grid-core-value]=\\\"$view.body.render.getValue($row, $column.model, mapToDataIndex($vscrollIndex), $columnIndex)\\\">\\n\\t\\t\\t\\t</ng-container>\\n\\t\\t</td>\\n\\t</tr>\\n\\t<tr q-grid-vscroll-mark=\\\"bottom\\\"\\n\\t\\tclass=\\\"q-grid-scroll-mark\\\">\\n\\t</tr>\\n</ng-template>\\n\\n<ng-template #rows>\\n\\t<tr class=\\\"q-grid-align\\\">\\n\\t\\t<td *ngFor=\\\"let $column of $view.body.columns($table.pin); trackBy: columnId\\\"\\n\\t\\t\\t[q-grid-core-td-align]=\\\"$column\\\">\\n\\t\\t</td>\\n\\t</tr>\\n\\t<tr *ngFor=\\\"let $row of $view.body.render.rows[pin]; index as $rowIndex; trackBy: rowId\\\"\\n\\t\\t[q-grid-core-tr]=\\\"$row\\\"\\n\\t\\t[q-grid-core-index]=\\\"$rowIndex\\\"\\n\\t\\tq-grid-core-source=\\\"body\\\">\\n\\t\\t<td *ngFor=\\\"let $column of $view.body.render.columns($row, $table.pin, $rowIndex); index as $columnIndex; trackBy: columnId\\\"\\n\\t\\t\\t[attr.rowspan]=\\\"$view.body.render.rowspan($row, $column, $rowIndex, $columnIndex)\\\"\\n\\t\\t\\t[attr.colspan]=\\\"$view.body.render.colspan($row, $column, $rowIndex, $columnIndex)\\\">\\n\\t\\t\\t<ng-container [q-grid-core-td]=\\\"$column\\\"\\n\\t\\t\\t\\t[q-grid-core-label]=\\\"$view.body.render.getLabel($row, $column.model, $rowIndex, $columnIndex)\\\"\\n\\t\\t\\t\\t[q-grid-core-value]=\\\"$view.body.render.getValue($row, $column.model, $rowIndex, $columnIndex)\\\">\\n\\t\\t\\t</ng-container>\\n\\t\\t</td>\\n\\t</tr>\\n</ng-template>\\n\" }]\r\n        }], function () { return [{ type: GridLet }, { type: TableCoreService }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: GridPlugin }]; }, { pin: [{\r\n                type: Input\r\n            }] });\r\n})();\n\nclass VscrollService {\r\n    context(settings = {}) {\r\n        const context = new VscrollContext();\r\n        Object.assign(context.settings, settings);\r\n        return context;\r\n    }\r\n}\r\nVscrollService.ɵfac = function VscrollService_Factory(t) { return new (t || VscrollService)(); };\r\nVscrollService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: VscrollService, factory: VscrollService.ɵfac });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VscrollService, [{\r\n            type: Injectable\r\n        }], null, null);\r\n})();\n\nclass VscrollColumnDirective {\r\n    constructor(elementRef, port) {\r\n        this.port = port;\r\n        this.column = elementRef.nativeElement;\r\n    }\r\n    get layout() {\r\n        return this.port.layout;\r\n    }\r\n    get settings() {\r\n        return this.port.context.settings;\r\n    }\r\n    get container() {\r\n        return this.port.context.container;\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes['index']) {\r\n            if (this.port.getItemSize()) {\r\n                this.ngOnChanges = null;\r\n                return;\r\n            }\r\n            const { layout, settings, container, column } = this;\r\n            const { rowHeight } = settings;\r\n            this.ngOnChanges = (e) => {\r\n                if (e['index']) {\r\n                    const change = e['index'];\r\n                    const newIndex = change.currentValue;\r\n                    const oldIndex = change.previousValue;\r\n                    layout.removeItem(oldIndex);\r\n                    const size = sizeFactory(rowHeight, container, column, newIndex);\r\n                    layout.setItem(newIndex, size);\r\n                }\r\n            };\r\n            const firstChange = changes['index'];\r\n            const firstIndex = firstChange.currentValue;\r\n            const firstSize = sizeFactory(rowHeight, container, column, firstIndex);\r\n            layout.setItem(firstIndex, firstSize);\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.port.layout.removeItem(this.index);\r\n    }\r\n}\r\nVscrollColumnDirective.ɵfac = function VscrollColumnDirective_Factory(t) { return new (t || VscrollColumnDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(VscrollPortYDirective)); };\r\nVscrollColumnDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: VscrollColumnDirective, selectors: [[\"\", \"q-grid-vscroll-column\", \"\"]], inputs: { index: [\"q-grid-vscroll-column\", \"index\"] }, features: [i0.ɵɵNgOnChangesFeature] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VscrollColumnDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-vscroll-column]',\r\n                }]\r\n        }], function () { return [{ type: i0.ElementRef }, { type: VscrollPortYDirective }]; }, { index: [{\r\n                type: Input,\r\n                args: ['q-grid-vscroll-column']\r\n            }] });\r\n})();\n\nclass VscrollModule {\r\n}\r\nVscrollModule.ɵfac = function VscrollModule_Factory(t) { return new (t || VscrollModule)(); };\r\nVscrollModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: VscrollModule });\r\nVscrollModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ providers: [\r\n        VscrollService,\r\n    ] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VscrollModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        VscrollDirective,\r\n                        VscrollColumnDirective,\r\n                        VscrollRowDirective,\r\n                        VscrollMarkDirective,\r\n                        VscrollPortXDirective,\r\n                        VscrollPortYDirective,\r\n                        VscrollPipe,\r\n                    ],\r\n                    exports: [\r\n                        VscrollDirective,\r\n                        VscrollColumnDirective,\r\n                        VscrollRowDirective,\r\n                        VscrollMarkDirective,\r\n                        VscrollPortXDirective,\r\n                        VscrollPortYDirective,\r\n                        VscrollPipe,\r\n                    ],\r\n                    providers: [\r\n                        VscrollService,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(VscrollModule, { declarations: [VscrollDirective,\r\n            VscrollColumnDirective,\r\n            VscrollRowDirective,\r\n            VscrollMarkDirective,\r\n            VscrollPortXDirective,\r\n            VscrollPortYDirective,\r\n            VscrollPipe], exports: [VscrollDirective,\r\n            VscrollColumnDirective,\r\n            VscrollRowDirective,\r\n            VscrollMarkDirective,\r\n            VscrollPortXDirective,\r\n            VscrollPortYDirective,\r\n            VscrollPipe] });\r\n})();\n\nclass StateAccessor {\r\n    constructor() {\r\n        this.setters = [];\r\n    }\r\n    setter(type) {\r\n        return value => {\r\n            this.setters.push(model => {\r\n                const accessor = model.resolve(type);\r\n                accessor.state(value);\r\n            });\r\n        };\r\n    }\r\n    write(model) {\r\n        for (const setter of this.setters) {\r\n            setter(model);\r\n        }\r\n        this.setters = [];\r\n    }\r\n}\r\nStateAccessor.ɵfac = function StateAccessor_Factory(t) { return new (t || StateAccessor)(); };\r\nStateAccessor.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: StateAccessor, factory: StateAccessor.ɵfac });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StateAccessor, [{\r\n            type: Injectable\r\n        }], null, null);\r\n})();\n\nclass TemplateHostService {\r\n    constructor() {\r\n        this.key = identity;\r\n    }\r\n}\r\nTemplateHostService.ɵfac = function TemplateHostService_Factory(t) { return new (t || TemplateHostService)(); };\r\nTemplateHostService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: TemplateHostService, factory: TemplateHostService.ɵfac });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TemplateHostService, [{\r\n            type: Injectable\r\n        }], null, null);\r\n})();\n\nconst _c0$9 = [\"*\"];\r\n// TODO: move it to plugins\r\nclass RowComponent {\r\n    constructor(plugin, stateAccessor, templateHost) {\r\n        this.plugin = plugin;\r\n        this.stateAccessor = stateAccessor;\r\n        this.rowAccessor = this.stateAccessor.setter(RowState);\r\n        this.toggleStatus = new Command({\r\n            execute: row => {\r\n                const { view } = this.plugin;\r\n                return view.rowDetails.toggleStatus.execute(row);\r\n            },\r\n            canExecute: row => {\r\n                if (row instanceof RowDetails) {\r\n                    return false;\r\n                }\r\n                const { view } = this.plugin;\r\n                return view.rowDetails.toggleStatus.canExecute(row);\r\n            },\r\n        });\r\n        this.behavior = [];\r\n        templateHost.key = source => `body-cell-row-${source}.tpl.html`;\r\n    }\r\n    set mode(mode) { this.rowAccessor({ mode }); }\r\n    set unit(unit) { this.rowAccessor({ unit }); }\r\n    set canMove(canMove) { this.rowAccessor({ canMove }); }\r\n    set canResize(canResize) { this.rowAccessor({ canResize }); }\r\n    set minHeight(minHeight) { this.rowAccessor({ minHeight }); }\r\n    set height(height) { this.rowAccessor({ height }); }\r\n    ngOnInit() {\r\n        const { model, observe } = this.plugin;\r\n        if (this.behavior.indexOf('expandOnShortcut') >= 0) {\r\n            observe(model.keyboardChanged)\r\n                .subscribe(e => {\r\n                const { codes, status } = e.state;\r\n                if (status === 'down') {\r\n                    switch (codes[0]) {\r\n                        // TODO: replace it from row state shortcut property.\r\n                        case 'enter':\r\n                        case 'space': {\r\n                            const { cell } = model.navigation();\r\n                            if (cell) {\r\n                                const { row, column } = cell;\r\n                                if (column.type !== 'row-expand' && this.toggleStatus.canExecute(row)) {\r\n                                    this.toggleStatus.execute(row);\r\n                                }\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            if (this.behavior.indexOf('expandOnClick') >= 0) {\r\n                observe(model.mouseChanged)\r\n                    .subscribe(e => {\r\n                    const { code, status, target } = e.state;\r\n                    if (code === 'left' && status === 'up') {\r\n                        if (target && target.column.type !== 'row-expand') {\r\n                            if (this.toggleStatus.canExecute(target.row)) {\r\n                                this.toggleStatus.execute(target.row);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        if (this.behavior.indexOf('expandOnDblClick') >= 0) {\r\n            let firstClickTarget = null;\r\n            observe(model.mouseChanged)\r\n                .subscribe(e => {\r\n                var _a;\r\n                const { code, timestamp } = e.changes;\r\n                if (e.state.status === 'release' && (code === null || code === void 0 ? void 0 : code.oldValue) === 'left') {\r\n                    const target = (_a = e.changes.target) === null || _a === void 0 ? void 0 : _a.oldValue;\r\n                    if (firstClickTarget === null) {\r\n                        firstClickTarget = target || null;\r\n                    }\r\n                    else {\r\n                        const dblClickInterval = 300;\r\n                        if (firstClickTarget === target && timestamp && timestamp.newValue - timestamp.oldValue <= dblClickInterval) {\r\n                            if (target.column.type !== 'row-expand') {\r\n                                if (this.toggleStatus.canExecute(target.row)) {\r\n                                    this.toggleStatus.execute(target.row);\r\n                                }\r\n                            }\r\n                        }\r\n                        firstClickTarget = null;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    ngOnChanges() {\r\n        const { model } = this.plugin;\r\n        this.stateAccessor.write(model);\r\n    }\r\n}\r\nRowComponent.ɵfac = function RowComponent_Factory(t) { return new (t || RowComponent)(i0.ɵɵdirectiveInject(GridPlugin), i0.ɵɵdirectiveInject(StateAccessor), i0.ɵɵdirectiveInject(TemplateHostService)); };\r\nRowComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: RowComponent, selectors: [[\"q-grid-row\"]], inputs: { behavior: \"behavior\", mode: \"mode\", unit: \"unit\", canMove: \"canMove\", canResize: \"canResize\", minHeight: \"minHeight\", height: \"height\" }, features: [i0.ɵɵProvidersFeature([\r\n            TemplateHostService,\r\n            GridPlugin,\r\n            StateAccessor,\r\n        ]), i0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0$9, decls: 1, vars: 0, template: function RowComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵprojectionDef();\r\n            i0.ɵɵprojection(0);\r\n        }\r\n    }, encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RowComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'q-grid-row',\r\n                    template: `<ng-content></ng-content>\n`,\r\n                    providers: [\r\n                        TemplateHostService,\r\n                        GridPlugin,\r\n                        StateAccessor,\r\n                    ],\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                }]\r\n        }], function () { return [{ type: GridPlugin }, { type: StateAccessor }, { type: TemplateHostService }]; }, { behavior: [{\r\n                type: Input\r\n            }], mode: [{\r\n                type: Input\r\n            }], unit: [{\r\n                type: Input\r\n            }], canMove: [{\r\n                type: Input\r\n            }], canResize: [{\r\n                type: Input\r\n            }], minHeight: [{\r\n                type: Input\r\n            }], height: [{\r\n                type: Input\r\n            }] });\r\n})();\n\nclass TrhCoreDirective {\r\n    constructor($view, plugin, elementRef) {\r\n        this.$view = $view;\r\n        this.plugin = plugin;\r\n        this.element = elementRef.nativeElement;\r\n    }\r\n    ngOnInit() {\r\n        this.plugin.table.box.bag[this.source].addRow(this);\r\n    }\r\n    ngOnDestroy() {\r\n        this.plugin.table.box.bag[this.source].deleteRow(this);\r\n    }\r\n}\r\nTrhCoreDirective.ɵfac = function TrhCoreDirective_Factory(t) { return new (t || TrhCoreDirective)(i0.ɵɵdirectiveInject(GridLet), i0.ɵɵdirectiveInject(GridPlugin), i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nTrhCoreDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: TrhCoreDirective, selectors: [[\"\", \"q-grid-core-trh\", \"\"]], inputs: { index: [\"q-grid-core-index\", \"index\"], model: [\"q-grid-core-trh\", \"model\"], source: [\"q-grid-core-source\", \"source\"] } });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TrhCoreDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-core-trh]',\r\n                }]\r\n        }], function () { return [{ type: GridLet }, { type: GridPlugin }, { type: i0.ElementRef }]; }, { index: [{\r\n                type: Input,\r\n                args: ['q-grid-core-index']\r\n            }], model: [{\r\n                type: Input,\r\n                args: ['q-grid-core-trh']\r\n            }], source: [{\r\n                type: Input,\r\n                args: ['q-grid-core-source']\r\n            }] });\r\n})();\n\nclass RowModule {\r\n}\r\nRowModule.ɵfac = function RowModule_Factory(t) { return new (t || RowModule)(); };\r\nRowModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: RowModule });\r\nRowModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RowModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        RowComponent,\r\n                        TrCoreDirective,\r\n                        TrhCoreDirective,\r\n                    ],\r\n                    exports: [\r\n                        RowComponent,\r\n                        TrCoreDirective,\r\n                        TrhCoreDirective,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(RowModule, { declarations: [RowComponent,\r\n            TrCoreDirective,\r\n            TrhCoreDirective], exports: [RowComponent,\r\n            TrCoreDirective,\r\n            TrhCoreDirective] });\r\n})();\n\nclass BodyModule {\r\n}\r\nBodyModule.ɵfac = function BodyModule_Factory(t) { return new (t || BodyModule)(); };\r\nBodyModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: BodyModule });\r\nBodyModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\r\n        VscrollModule,\r\n        RowModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BodyModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        BodyCoreComponent,\r\n                        TdCoreAlignDirective,\r\n                        TdCoreDirective,\r\n                    ],\r\n                    imports: [\r\n                        CommonModule,\r\n                        VscrollModule,\r\n                        RowModule,\r\n                    ],\r\n                    exports: [\r\n                        BodyCoreComponent,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(BodyModule, { declarations: [BodyCoreComponent,\r\n            TdCoreAlignDirective,\r\n            TdCoreDirective], imports: [CommonModule,\r\n            VscrollModule,\r\n            RowModule], exports: [BodyCoreComponent] });\r\n})();\n\nclass ThemeService {\r\n    constructor() {\r\n        this.themeName = '';\r\n        this.changed = new Event();\r\n    }\r\n    get name() {\r\n        return this.themeName;\r\n    }\r\n    set name(value) {\r\n        if (value !== this.themeName) {\r\n            const oldName = this.themeName;\r\n            const newName = value;\r\n            this.changed.emit({ oldName, newName });\r\n        }\r\n    }\r\n}\r\nThemeService.ɵfac = function ThemeService_Factory(t) { return new (t || ThemeService)(); };\r\nThemeService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ThemeService, factory: ThemeService.ɵfac });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThemeService, [{\r\n            type: Injectable\r\n        }], null, null);\r\n})();\n\nconst _c0$8 = [\"*\"];\r\nclass BoxComponent {\r\n    constructor(elementRef, theme, plugin) {\r\n        this.elementRef = elementRef;\r\n        this.theme = theme;\r\n        this.plugin = plugin;\r\n    }\r\n    ngOnInit() {\r\n        // tslint:disable-next-line:no-unused-expression\r\n        new BoxHost(this.elementRef.nativeElement, this.plugin);\r\n        this.initTheme();\r\n    }\r\n    initTheme() {\r\n        const { observeReply } = this.plugin;\r\n        const { nativeElement } = this.elementRef;\r\n        observeReply(this.theme.changed)\r\n            .subscribe(e => {\r\n            if (e) {\r\n                nativeElement.classList.remove(`${GRID_PREFIX}-theme-${e.oldName}`);\r\n            }\r\n            nativeElement.classList.add(`${GRID_PREFIX}-theme-${e.newName}`);\r\n        });\r\n    }\r\n}\r\nBoxComponent.ɵfac = function BoxComponent_Factory(t) { return new (t || BoxComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(ThemeService), i0.ɵɵdirectiveInject(GridPlugin)); };\r\nBoxComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: BoxComponent, selectors: [[\"q-grid-box\"]], features: [i0.ɵɵProvidersFeature([GridPlugin])], ngContentSelectors: _c0$8, decls: 1, vars: 0, template: function BoxComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵprojectionDef();\r\n            i0.ɵɵprojection(0);\r\n        }\r\n    }, encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BoxComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-box', providers: [GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-content></ng-content>\\n\" }]\r\n        }], function () { return [{ type: i0.ElementRef }, { type: ThemeService }, { type: GridPlugin }]; }, null);\r\n})();\n\nclass BoxModule {\r\n}\r\nBoxModule.ɵfac = function BoxModule_Factory(t) { return new (t || BoxModule)(); };\r\nBoxModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: BoxModule });\r\nBoxModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BoxModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        BoxComponent,\r\n                    ],\r\n                    exports: [\r\n                        BoxComponent,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(BoxModule, { declarations: [BoxComponent], exports: [BoxComponent] }); })();\n\nconst _c0$7 = [\"marker\"];\r\nfunction CellHandlerComponent_i_0_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r3 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"i\", 1, 2);\r\n        i0.ɵɵlistener(\"mousedown\", function CellHandlerComponent_i_0_Template_i_mousedown_0_listener() { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2.startBatchEdit()); });\r\n        i0.ɵɵtext(2, \" signal_cellular_4_bar\\n\");\r\n        i0.ɵɵelementEnd();\r\n    }\r\n}\r\nclass CellHandlerComponent {\r\n    constructor(elementRef, plugin, cd) {\r\n        this.elementRef = elementRef;\r\n        this.plugin = plugin;\r\n        this.cd = cd;\r\n        this.canEditBatch = false;\r\n        this.elementRef.nativeElement.style.display = 'none';\r\n    }\r\n    ngOnInit() {\r\n        const { model, observeReply } = this.plugin;\r\n        const updateHandler = this.updateHandlerFactory();\r\n        observeReply(model.navigationChanged)\r\n            .subscribe(e => updateHandler(e));\r\n        observeReply(model.editChanged)\r\n            .subscribe(e => {\r\n            if (e.hasChanges('method')) {\r\n                this.canEditBatch = e.state.method === 'batch';\r\n                this.cd.markForCheck();\r\n                this.cd.detectChanges();\r\n            }\r\n            if (e.hasChanges('status')) {\r\n                if (e.state.status === 'endBatch' && this.endBatchEdit) {\r\n                    this.endBatchEdit();\r\n                    this.endBatchEdit = null;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    ngAfterViewInit() {\r\n        this.elementRef.nativeElement.style.display = '';\r\n    }\r\n    updateHandlerFactory() {\r\n        const { model, table } = this.plugin;\r\n        const element = this.elementRef.nativeElement;\r\n        const job = jobLine(150);\r\n        // When navigate first or when animation wasn't applied we need to omit\r\n        // next navigation event to make handler to correct position.\r\n        let doNotPassAnimation = false;\r\n        return (e) => {\r\n            if (e.hasChanges('cell')) {\r\n                const { cell } = e.state;\r\n                if (cell) {\r\n                    const oldCell = e.changes.cell.oldValue || {};\r\n                    const newCell = e.changes.cell.newValue || {};\r\n                    const oldColumn = oldCell.column || {};\r\n                    const newColumn = newCell.column || {};\r\n                    // Do not apply animation for columns that have viewWidth assigned\r\n                    // because it can be animated too.\r\n                    const shouldAnimate = !model.drag().isActive\r\n                        && (oldColumn.key === newColumn.key || !(oldColumn.viewWidth || newColumn.viewWidth))\r\n                        && !(oldCell.row instanceof RowDetails || newCell.row instanceof RowDetails);\r\n                    const domCell = table.body.cell(cell.rowIndex, cell.columnIndex);\r\n                    if (shouldAnimate) {\r\n                        // It can be that the cell object was changed but indices are not.\r\n                        doNotPassAnimation =\r\n                            oldCell.rowIndex >= 0\r\n                                && oldCell.columnIndex >= 0\r\n                                && (newCell.rowIndex !== oldCell.rowIndex || newCell.columnIndex !== oldCell.columnIndex);\r\n                        if (doNotPassAnimation) {\r\n                            domCell.addClass('q-grid-animate');\r\n                            element.classList.add('q-grid-active');\r\n                            job(() => {\r\n                                element.classList.remove('q-grid-active');\r\n                                domCell.removeClass('q-grid-animate');\r\n                            }).catch(() => {\r\n                                Fastdom.mutate(() => {\r\n                                    domCell.removeClass('q-grid-animate');\r\n                                });\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        doNotPassAnimation = false;\r\n                    }\r\n                    Fastdom.measure(() => {\r\n                        const target = domCell.element;\r\n                        const scrollState = model.scroll();\r\n                        const headHeight = table.view.height('head-mid');\r\n                        const top = Math.max(headHeight, (target.offsetTop - scrollState.top));\r\n                        const left = (target.offsetLeft - (cell.column.pin === 'mid' ? scrollState.left : 0));\r\n                        const width = target.offsetWidth;\r\n                        const height = target.offsetHeight;\r\n                        Fastdom.mutate(() => {\r\n                            element.style.top = top + 'px';\r\n                            element.style.left = left + 'px';\r\n                            element.style.width = width + 'px';\r\n                            element.style.height = height + 'px';\r\n                        });\r\n                    });\r\n                    doNotPassAnimation = true;\r\n                }\r\n            }\r\n        };\r\n    }\r\n    startBatchEdit() {\r\n        const { model } = this.plugin;\r\n        const { cell: startCell } = model.navigation();\r\n        if (startCell) {\r\n            const editService = new EditService(this.plugin);\r\n            this.endBatchEdit = editService.startBatch(startCell);\r\n        }\r\n    }\r\n}\r\nCellHandlerComponent.ɵfac = function CellHandlerComponent_Factory(t) { return new (t || CellHandlerComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(GridPlugin), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };\r\nCellHandlerComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CellHandlerComponent, selectors: [[\"q-grid-cell-handler\"]], viewQuery: function CellHandlerComponent_Query(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵviewQuery(_c0$7, 7);\r\n        }\r\n        if (rf & 2) {\r\n            let _t;\r\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.marker = _t.first);\r\n        }\r\n    }, features: [i0.ɵɵProvidersFeature([GridPlugin])], decls: 1, vars: 1, consts: [[\"class\", \"material-icons q-grid-edit-marker\", 3, \"mousedown\", 4, \"ngIf\"], [1, \"material-icons\", \"q-grid-edit-marker\", 3, \"mousedown\"], [\"marker\", \"\"]], template: function CellHandlerComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵtemplate(0, CellHandlerComponent_i_0_Template, 3, 0, \"i\", 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"ngIf\", ctx.canEditBatch);\r\n        }\r\n    }, dependencies: [i4.NgIf], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellHandlerComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-cell-handler', changeDetection: ChangeDetectionStrategy.OnPush, providers: [GridPlugin], template: \"<i #marker\\n   *ngIf=\\\"canEditBatch\\\"\\n   class=\\\"material-icons q-grid-edit-marker\\\"\\n   (mousedown)=\\\"startBatchEdit()\\\">\\n    signal_cellular_4_bar\\n</i>\\n\" }]\r\n        }], function () { return [{ type: i0.ElementRef }, { type: GridPlugin }, { type: i0.ChangeDetectorRef }]; }, { marker: [{\r\n                type: ViewChild,\r\n                args: ['marker', { static: true }]\r\n            }] });\r\n})();\n\nclass CellHandlerModule {\r\n}\r\nCellHandlerModule.ɵfac = function CellHandlerModule_Factory(t) { return new (t || CellHandlerModule)(); };\r\nCellHandlerModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: CellHandlerModule });\r\nCellHandlerModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellHandlerModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        CellHandlerComponent,\r\n                    ],\r\n                    exports: [\r\n                        CellHandlerComponent,\r\n                    ],\r\n                    imports: [\r\n                        CommonModule,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(CellHandlerModule, { declarations: [CellHandlerComponent], imports: [CommonModule], exports: [CellHandlerComponent] }); })();\n\nclass DirtyHostDirective {\r\n    constructor(zone, cd) {\r\n        this.zone = zone;\r\n        this.cd = cd;\r\n        this.subscription = null;\r\n        this.whoNeedsIt = 0;\r\n    }\r\n    set trigger(value) {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n            this.subscription = null;\r\n        }\r\n        if (value) {\r\n            this.subscription = value.subscribe(() => {\r\n                if (this.whoNeedsIt > 0) {\r\n                    this.zone.run(() => {\r\n                        this.cd.detectChanges();\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n            this.subscription = null;\r\n        }\r\n    }\r\n}\r\nDirtyHostDirective.ɵfac = function DirtyHostDirective_Factory(t) { return new (t || DirtyHostDirective)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };\r\nDirtyHostDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: DirtyHostDirective, selectors: [[\"\", \"q-grid-dirty-host\", \"\"]], inputs: { trigger: [\"q-grid-dirty-host\", \"trigger\"] } });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DirtyHostDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-dirty-host]',\r\n                }]\r\n        }], function () { return [{ type: i0.NgZone }, { type: i0.ChangeDetectorRef }]; }, { trigger: [{\r\n                type: Input,\r\n                args: ['q-grid-dirty-host']\r\n            }] });\r\n})();\n\nclass DirtyDirective {\r\n    constructor(zone, cd, host) {\r\n        this.zone = zone;\r\n        this.cd = cd;\r\n        this.host = host;\r\n        this.subscription = null;\r\n        if (this.host) {\r\n            this.host.whoNeedsIt++;\r\n        }\r\n    }\r\n    set trigger(value) {\r\n        // todo: trigger cd only for particular values\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n            this.subscription = null;\r\n        }\r\n        if (value) {\r\n            this.subscription = value.subscribe(() => {\r\n                if (this.host) {\r\n                    this.cd.markForCheck();\r\n                }\r\n                else {\r\n                    this.zone.run(() => {\r\n                        this.cd.markForCheck();\r\n                        this.cd.detectChanges();\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.host) {\r\n            this.host.whoNeedsIt--;\r\n        }\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n            this.subscription = null;\r\n        }\r\n    }\r\n}\r\nDirtyDirective.ɵfac = function DirtyDirective_Factory(t) { return new (t || DirtyDirective)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(DirtyHostDirective, 13)); };\r\nDirtyDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: DirtyDirective, selectors: [[\"\", \"q-grid-dirty\", \"\"]], inputs: { trigger: [\"q-grid-dirty\", \"trigger\"] } });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DirtyDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-dirty]',\r\n                }]\r\n        }], function () {\r\n        return [{ type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: DirtyHostDirective, decorators: [{\r\n                        type: Optional\r\n                    }, {\r\n                        type: Host\r\n                    }, {\r\n                        type: SkipSelf\r\n                    }] }];\r\n    }, { trigger: [{\r\n                type: Input,\r\n                args: ['q-grid-dirty']\r\n            }] });\r\n})();\n\nclass ChangeDetectorModule {\r\n}\r\nChangeDetectorModule.ɵfac = function ChangeDetectorModule_Factory(t) { return new (t || ChangeDetectorModule)(); };\r\nChangeDetectorModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ChangeDetectorModule });\r\nChangeDetectorModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChangeDetectorModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        DirtyDirective,\r\n                        DirtyHostDirective,\r\n                    ],\r\n                    exports: [\r\n                        DirtyDirective,\r\n                        DirtyHostDirective,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ChangeDetectorModule, { declarations: [DirtyDirective,\r\n            DirtyHostDirective], exports: [DirtyDirective,\r\n            DirtyHostDirective] });\r\n})();\n\nclass ColumnListService {\r\n    constructor(plugin) {\r\n        this.plugin = plugin;\r\n        this.host = new Lazy(() => {\r\n            const canCopy = (key, source, target) => Object.prototype.hasOwnProperty.call(target, key) && !isUndefined(source[key]);\r\n            return new ColumnListHost(this.plugin.model, canCopy, parseFactory);\r\n        });\r\n    }\r\n    add(column) {\r\n        this.host.instance.add(column);\r\n    }\r\n    copy(target, source) {\r\n        this.host.instance.copy(target, source);\r\n    }\r\n    generateKey(source) {\r\n        return this.host.instance.generateKey(source);\r\n    }\r\n    extract(key, type) {\r\n        return this.host.instance.extract(key, type);\r\n    }\r\n    register(column) {\r\n        this.host.instance.register(column);\r\n    }\r\n    delete(key) {\r\n        this.host.instance.delete(key);\r\n    }\r\n}\r\nColumnListService.ɵfac = function ColumnListService_Factory(t) { return new (t || ColumnListService)(i0.ɵɵinject(GridPlugin)); };\r\nColumnListService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ColumnListService, factory: ColumnListService.ɵfac });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnListService, [{\r\n            type: Injectable\r\n        }], function () { return [{ type: GridPlugin }]; }, null);\r\n})();\n\nconst _c0$6 = [\"*\"];\r\nclass ColumnListComponent {\r\n    constructor(plugin, stateAccessor) {\r\n        this.plugin = plugin;\r\n        this.stateAccessor = stateAccessor;\r\n        this.columnListAccessor = this.stateAccessor.setter(ColumnListState);\r\n    }\r\n    set generation(generation) { this.columnListAccessor({ generation }); }\r\n    set typeDetection(typeDetection) { this.columnListAccessor({ typeDetection }); }\r\n    ngOnChanges() {\r\n        const { model } = this.plugin;\r\n        this.stateAccessor.write(model);\r\n    }\r\n}\r\nColumnListComponent.ɵfac = function ColumnListComponent_Factory(t) { return new (t || ColumnListComponent)(i0.ɵɵdirectiveInject(GridPlugin), i0.ɵɵdirectiveInject(StateAccessor)); };\r\nColumnListComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ColumnListComponent, selectors: [[\"q-grid-columns\"]], inputs: { generation: \"generation\", typeDetection: \"typeDetection\" }, features: [i0.ɵɵProvidersFeature([\r\n            ColumnListService,\r\n            GridPlugin,\r\n            StateAccessor,\r\n        ]), i0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0$6, decls: 1, vars: 0, template: function ColumnListComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵprojectionDef();\r\n            i0.ɵɵprojection(0);\r\n        }\r\n    }, encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnListComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'q-grid-columns',\r\n                    template: `<ng-content></ng-content>\n`,\r\n                    providers: [\r\n                        ColumnListService,\r\n                        GridPlugin,\r\n                        StateAccessor,\r\n                    ],\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                }]\r\n        }], function () { return [{ type: GridPlugin }, { type: StateAccessor }]; }, { generation: [{\r\n                type: Input\r\n            }], typeDetection: [{\r\n                type: Input\r\n            }] });\r\n})();\n\nclass ColumnListModule {\r\n}\r\nColumnListModule.ɵfac = function ColumnListModule_Factory(t) { return new (t || ColumnListModule)(); };\r\nColumnListModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ColumnListModule });\r\nColumnListModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnListModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        ColumnListComponent,\r\n                    ],\r\n                    exports: [\r\n                        ColumnListComponent,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ColumnListModule, { declarations: [ColumnListComponent], exports: [ColumnListComponent] }); })();\n\nclass TemplateLink {\r\n    constructor(template, context) {\r\n        this.template = template;\r\n        this.context = context;\r\n    }\r\n}\n\nclass ColumnBodyTemplateDirective {\r\n    constructor(templateCache, templateRef) {\r\n        this.templateCache = templateCache;\r\n        this.templateRef = templateRef;\r\n        this.key = '';\r\n    }\r\n    ngOnInit() {\r\n        const link = new TemplateLink(this.templateRef, null);\r\n        this.templateCache.put(`body-cell-the-${this.key}.tpl.html`, link);\r\n    }\r\n}\r\nColumnBodyTemplateDirective.ɵfac = function ColumnBodyTemplateDirective_Factory(t) { return new (t || ColumnBodyTemplateDirective)(i0.ɵɵdirectiveInject(TemplateCacheService), i0.ɵɵdirectiveInject(i0.TemplateRef)); };\r\nColumnBodyTemplateDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: ColumnBodyTemplateDirective, selectors: [[\"ng-template\", \"qGridColumnBody\", \"\"]], inputs: { key: [\"qGridColumnBody\", \"key\"] } });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnBodyTemplateDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: 'ng-template[qGridColumnBody]', // eslint-disable-line @angular-eslint/directive-selector\r\n                }]\r\n        }], function () { return [{ type: TemplateCacheService }, { type: i0.TemplateRef }]; }, { key: [{\r\n                type: Input,\r\n                args: ['qGridColumnBody']\r\n            }] });\r\n})();\n\nclass ColumnEditTemplateDirective {\r\n    constructor(templateCache, templateRef) {\r\n        this.templateCache = templateCache;\r\n        this.templateRef = templateRef;\r\n        this.key = '';\r\n    }\r\n    ngOnInit() {\r\n        const link = new TemplateLink(this.templateRef, null);\r\n        this.templateCache.put(`edit-cell-the-${this.key}.tpl.html`, link);\r\n    }\r\n}\r\nColumnEditTemplateDirective.ɵfac = function ColumnEditTemplateDirective_Factory(t) { return new (t || ColumnEditTemplateDirective)(i0.ɵɵdirectiveInject(TemplateCacheService), i0.ɵɵdirectiveInject(i0.TemplateRef)); };\r\nColumnEditTemplateDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: ColumnEditTemplateDirective, selectors: [[\"ng-template\", \"qGridColumnEdit\", \"\"]], inputs: { key: [\"qGridColumnEdit\", \"key\"] } });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnEditTemplateDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: 'ng-template[qGridColumnEdit]', // eslint-disable-line @angular-eslint/directive-selector\r\n                }]\r\n        }], function () { return [{ type: TemplateCacheService }, { type: i0.TemplateRef }]; }, { key: [{\r\n                type: Input,\r\n                args: ['qGridColumnEdit']\r\n            }] });\r\n})();\n\nclass ColumnFootTemplateDirective {\r\n    constructor(templateCache, templateRef) {\r\n        this.templateCache = templateCache;\r\n        this.templateRef = templateRef;\r\n        this.key = '';\r\n    }\r\n    ngOnInit() {\r\n        const link = new TemplateLink(this.templateRef, null);\r\n        this.templateCache.put(`foot-cell-the-${this.key}.tpl.html`, link);\r\n    }\r\n}\r\nColumnFootTemplateDirective.ɵfac = function ColumnFootTemplateDirective_Factory(t) { return new (t || ColumnFootTemplateDirective)(i0.ɵɵdirectiveInject(TemplateCacheService), i0.ɵɵdirectiveInject(i0.TemplateRef)); };\r\nColumnFootTemplateDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: ColumnFootTemplateDirective, selectors: [[\"ng-template\", \"qGridColumnFoot\", \"\"]], inputs: { key: [\"qGridColumnFoot\", \"key\"] } });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnFootTemplateDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: 'ng-template[qGridColumnFoot]', // eslint-disable-line @angular-eslint/directive-selector\r\n                }]\r\n        }], function () { return [{ type: TemplateCacheService }, { type: i0.TemplateRef }]; }, { key: [{\r\n                type: Input,\r\n                args: ['qGridColumnFoot']\r\n            }] });\r\n})();\n\nclass ColumnHeadTemplateDirective {\r\n    constructor(templateCache, templateRef) {\r\n        this.templateCache = templateCache;\r\n        this.templateRef = templateRef;\r\n        this.key = '';\r\n    }\r\n    ngOnInit() {\r\n        const link = new TemplateLink(this.templateRef, null);\r\n        this.templateCache.put(`head-cell-the-${this.key}.tpl.html`, link);\r\n    }\r\n}\r\nColumnHeadTemplateDirective.ɵfac = function ColumnHeadTemplateDirective_Factory(t) { return new (t || ColumnHeadTemplateDirective)(i0.ɵɵdirectiveInject(TemplateCacheService), i0.ɵɵdirectiveInject(i0.TemplateRef)); };\r\nColumnHeadTemplateDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: ColumnHeadTemplateDirective, selectors: [[\"ng-template\", \"qGridColumnHead\", \"\"]], inputs: { key: [\"qGridColumnHead\", \"key\"] } });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnHeadTemplateDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: 'ng-template[qGridColumnHead]', // eslint-disable-line @angular-eslint/directive-selector\r\n                }]\r\n        }], function () { return [{ type: TemplateCacheService }, { type: i0.TemplateRef }]; }, { key: [{\r\n                type: Input,\r\n                args: ['qGridColumnHead']\r\n            }] });\r\n})();\n\nclass ColumnHostService {\r\n}\r\nColumnHostService.ɵfac = function ColumnHostService_Factory(t) { return new (t || ColumnHostService)(); };\r\nColumnHostService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ColumnHostService, factory: ColumnHostService.ɵfac });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnHostService, [{\r\n            type: Injectable\r\n        }], null, null);\r\n})();\n\nconst _c0$5 = [\"*\"];\r\nclass ColumnComponent {\r\n    constructor(parentHost, selfHost, columnList, templateHost, elementRef, plugin) {\r\n        this.parentHost = parentHost;\r\n        this.selfHost = selfHost;\r\n        this.columnList = columnList;\r\n        this.templateHost = templateHost;\r\n        this.elementRef = elementRef;\r\n        this.plugin = plugin;\r\n    }\r\n    ngOnInit() {\r\n        let withKey = !isUndefined(this.key);\r\n        let withType = !isUndefined(this.type);\r\n        // We want to update model when ngOntInit is triggered and not in afterViewInit\r\n        // so we apply dirty hack to understand if column is cohort or not.\r\n        const element = this.elementRef.nativeElement;\r\n        if (element.children.length && element.children.item(0).tagName === 'Q-GRID-COLUMN') {\r\n            this.type = 'cohort';\r\n            if (!withKey) {\r\n                this.key = `$cohort-${this.title || guid()}`;\r\n            }\r\n            withKey = true;\r\n            withType = true;\r\n        }\r\n        if (!withKey) {\r\n            this.key = this.columnList.generateKey(this);\r\n        }\r\n        const column = this.columnList.extract(this.key, this.type);\r\n        this.columnList.copy(column, this);\r\n        this.templateHost.key = source => {\r\n            const parts = [source, 'cell'];\r\n            if (withType) {\r\n                parts.push(this.type);\r\n            }\r\n            if (withKey) {\r\n                parts.push(`the-${this.key}`);\r\n            }\r\n            return parts.join('-') + '.tpl.html';\r\n        };\r\n        if (withKey) {\r\n            if (this.parentHost) {\r\n                this.parentHost.column.children.push(column);\r\n            }\r\n            else {\r\n                this.columnList.add(column);\r\n            }\r\n            this.selfHost.column = column;\r\n        }\r\n        else {\r\n            const settings = Object\r\n                .keys(this)\r\n                .filter(key => !isUndefined(this[key]) && Object.prototype.hasOwnProperty.call(column, key))\r\n                .reduce((memo, key) => {\r\n                memo[key] = column[key];\r\n                return memo;\r\n            }, {});\r\n            this.columnList.register(settings);\r\n        }\r\n    }\r\n    ngOnChanges(changes) {\r\n        const { column } = this.selfHost;\r\n        if (column && changes.isVisible) {\r\n            if (column.isVisible !== this.isVisible) {\r\n                column.isVisible = this.isVisible;\r\n                const { model } = this.plugin;\r\n                model.data({\r\n                    columns: Array.from(model.data().columns),\r\n                }, {\r\n                    source: 'column.component',\r\n                });\r\n            }\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        const { column } = this.selfHost;\r\n        if (column && column.source === 'template') {\r\n            this.columnList.delete(column.key);\r\n        }\r\n    }\r\n}\r\nColumnComponent.ɵfac = function ColumnComponent_Factory(t) { return new (t || ColumnComponent)(i0.ɵɵdirectiveInject(ColumnHostService, 12), i0.ɵɵdirectiveInject(ColumnHostService), i0.ɵɵdirectiveInject(ColumnListService), i0.ɵɵdirectiveInject(TemplateHostService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(GridPlugin)); };\r\nColumnComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ColumnComponent, selectors: [[\"q-grid-column\"]], inputs: { type: \"type\", key: \"key\", category: \"category\", class: \"class\", title: \"title\", description: \"description\", pin: \"pin\", aggregation: \"aggregation\", aggregationOptions: \"aggregationOptions\", editor: \"editor\", editorOptions: \"editorOptions\", format: \"format\", dateFormat: \"dateFormat\", timeFormat: \"timeFormat\", symbol: \"symbol\", code: \"code\", width: \"width\", widthMode: \"widthMode\", minWidth: \"minWidth\", maxWidth: \"maxWidth\", viewWidth: \"viewWidth\", offset: \"offset\", canEdit: \"canEdit\", canResize: \"canResize\", canSort: \"canSort\", canMove: \"canMove\", canFilter: \"canFilter\", canHighlight: \"canHighlight\", canFocus: \"canFocus\", isVisible: \"isVisible\", isDefault: \"isDefault\", index: \"index\", label: \"label\", labelPath: \"labelPath\", itemLabel: \"itemLabel\", itemFormat: \"itemFormat\", itemType: \"itemType\", value: \"value\", path: \"path\", compare: \"compare\", trueValue: \"trueValue\", falseValue: \"falseValue\", maxLength: \"maxLength\", startNumber: \"startNumber\" }, features: [i0.ɵɵProvidersFeature([\r\n            TemplateHostService,\r\n            ColumnHostService,\r\n            GridPlugin,\r\n        ]), i0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0$5, decls: 1, vars: 0, template: function ColumnComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵprojectionDef();\r\n            i0.ɵɵprojection(0);\r\n        }\r\n    }, encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'q-grid-column',\r\n                    template: `<ng-content></ng-content>\n`,\r\n                    providers: [\r\n                        TemplateHostService,\r\n                        ColumnHostService,\r\n                        GridPlugin,\r\n                    ],\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                }]\r\n        }], function () {\r\n        return [{ type: ColumnHostService, decorators: [{\r\n                        type: SkipSelf\r\n                    }, {\r\n                        type: Optional\r\n                    }] }, { type: ColumnHostService }, { type: ColumnListService }, { type: TemplateHostService }, { type: i0.ElementRef }, { type: GridPlugin }];\r\n    }, { type: [{\r\n                type: Input\r\n            }], key: [{\r\n                type: Input\r\n            }], category: [{\r\n                type: Input\r\n            }], class: [{\r\n                type: Input\r\n            }], title: [{\r\n                type: Input\r\n            }], description: [{\r\n                type: Input\r\n            }], pin: [{\r\n                type: Input\r\n            }], aggregation: [{\r\n                type: Input\r\n            }], aggregationOptions: [{\r\n                type: Input\r\n            }], editor: [{\r\n                type: Input\r\n            }], editorOptions: [{\r\n                type: Input\r\n            }], format: [{\r\n                type: Input\r\n            }], dateFormat: [{\r\n                type: Input\r\n            }], timeFormat: [{\r\n                type: Input\r\n            }], symbol: [{\r\n                type: Input\r\n            }], code: [{\r\n                type: Input\r\n            }], width: [{\r\n                type: Input\r\n            }], widthMode: [{\r\n                type: Input\r\n            }], minWidth: [{\r\n                type: Input\r\n            }], maxWidth: [{\r\n                type: Input\r\n            }], viewWidth: [{\r\n                type: Input\r\n            }], offset: [{\r\n                type: Input\r\n            }], canEdit: [{\r\n                type: Input\r\n            }], canResize: [{\r\n                type: Input\r\n            }], canSort: [{\r\n                type: Input\r\n            }], canMove: [{\r\n                type: Input\r\n            }], canFilter: [{\r\n                type: Input\r\n            }], canHighlight: [{\r\n                type: Input\r\n            }], canFocus: [{\r\n                type: Input\r\n            }], isVisible: [{\r\n                type: Input\r\n            }], isDefault: [{\r\n                type: Input\r\n            }], index: [{\r\n                type: Input\r\n            }], label: [{\r\n                type: Input\r\n            }], labelPath: [{\r\n                type: Input\r\n            }], itemLabel: [{\r\n                type: Input\r\n            }], itemFormat: [{\r\n                type: Input\r\n            }], itemType: [{\r\n                type: Input\r\n            }], value: [{\r\n                type: Input\r\n            }], path: [{\r\n                type: Input\r\n            }], compare: [{\r\n                type: Input\r\n            }], trueValue: [{\r\n                type: Input\r\n            }], falseValue: [{\r\n                type: Input\r\n            }], maxLength: [{\r\n                type: Input\r\n            }], startNumber: [{\r\n                type: Input\r\n            }] });\r\n})();\n\nclass ColumnModule {\r\n}\r\nColumnModule.ɵfac = function ColumnModule_Factory(t) { return new (t || ColumnModule)(); };\r\nColumnModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ColumnModule });\r\nColumnModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        ColumnComponent,\r\n                        ColumnBodyTemplateDirective,\r\n                        ColumnEditTemplateDirective,\r\n                        ColumnFootTemplateDirective,\r\n                        ColumnHeadTemplateDirective,\r\n                    ],\r\n                    exports: [\r\n                        ColumnComponent,\r\n                        ColumnBodyTemplateDirective,\r\n                        ColumnEditTemplateDirective,\r\n                        ColumnFootTemplateDirective,\r\n                        ColumnHeadTemplateDirective,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ColumnModule, { declarations: [ColumnComponent,\r\n            ColumnBodyTemplateDirective,\r\n            ColumnEditTemplateDirective,\r\n            ColumnFootTemplateDirective,\r\n            ColumnHeadTemplateDirective], exports: [ColumnComponent,\r\n            ColumnBodyTemplateDirective,\r\n            ColumnEditTemplateDirective,\r\n            ColumnFootTemplateDirective,\r\n            ColumnHeadTemplateDirective] });\r\n})();\n\nclass DragDirective {\r\n    constructor(plugin, elementRef) {\r\n        this.plugin = plugin;\r\n        this.elementRef = elementRef;\r\n        const element = elementRef.nativeElement;\r\n        const listener = new EventListener(element, new EventManager(this));\r\n        element.classList.add(`${GRID_PREFIX}-can-drag`);\r\n        element.setAttribute('draggable', true);\r\n        listener.on('dragstart', this.onStart);\r\n        listener.on('dragend', this.onEnd);\r\n    }\r\n    onStart(e) {\r\n        const transfer = e.dataTransfer;\r\n        const data = this.data;\r\n        const eventArg = { data };\r\n        if (this.drag.canExecute(eventArg) === false) {\r\n            e.preventDefault();\r\n            if (transfer) {\r\n                transfer.effectAllowed = 'none';\r\n            }\r\n            return false;\r\n        }\r\n        const result = this.drag.execute(eventArg);\r\n        DragService.element =\r\n            result && isFunction(result.getBoundingClientRect)\r\n                // tslint:disable-next-line: deprecation\r\n                ? result : (e.srcElement || e.target);\r\n        this.elementRef.nativeElement.classList.add(`${GRID_PREFIX}-drag`);\r\n        if (transfer) {\r\n            transfer.setData(DragService.mimeType, DragService.encode(data));\r\n            transfer.effectAllowed = this.effect || 'move';\r\n        }\r\n        DragService.data = data;\r\n        DragService.area = this.area;\r\n        const rect = DragService.element.getBoundingClientRect();\r\n        DragService.startPosition = {\r\n            x: e.clientX,\r\n            y: e.clientY,\r\n            rect,\r\n        };\r\n        if (this.plugin) {\r\n            const { model } = this.plugin;\r\n            model.drag({ isActive: true }, { source: 'drag.directive' });\r\n        }\r\n    }\r\n    onEnd() {\r\n        if (this.plugin) {\r\n            const { model } = this.plugin;\r\n            model.drag({ isActive: false }, { source: 'drag.directive' });\r\n        }\r\n        this.elementRef.nativeElement.classList.remove(`${GRID_PREFIX}-drag`);\r\n        DragService.data = null;\r\n        DragService.area = null;\r\n        DragService.element = null;\r\n        DragService.startPosition = null;\r\n    }\r\n}\r\nDragDirective.ɵfac = function DragDirective_Factory(t) { return new (t || DragDirective)(i0.ɵɵdirectiveInject(GridPlugin, 8), i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nDragDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: DragDirective, selectors: [[\"\", \"q-grid-drag\", \"\"]], inputs: { data: [\"q-grid-drag-data\", \"data\"], effect: [\"q-grid-drag-effect\", \"effect\"], drag: [\"q-grid-drag\", \"drag\"], area: [\"q-grid-drop-area\", \"area\"] } });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DragDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-drag]',\r\n                }]\r\n        }], function () {\r\n        return [{ type: GridPlugin, decorators: [{\r\n                        type: Optional\r\n                    }] }, { type: i0.ElementRef }];\r\n    }, { data: [{\r\n                type: Input,\r\n                args: ['q-grid-drag-data']\r\n            }], effect: [{\r\n                type: Input,\r\n                args: ['q-grid-drag-effect']\r\n            }], drag: [{\r\n                type: Input,\r\n                args: ['q-grid-drag']\r\n            }], area: [{\r\n                type: Input,\r\n                args: ['q-grid-drop-area']\r\n            }] });\r\n})();\n\nclass DropDirective {\r\n    constructor(plugin, elementRef, zone) {\r\n        this.plugin = plugin;\r\n        this.elementRef = elementRef;\r\n        this.dragDirection = 'y';\r\n        const element = elementRef.nativeElement;\r\n        const listener = new EventListener(element, new EventManager(this));\r\n        element.classList.add(`${GRID_PREFIX}-can-drop`);\r\n        zone.runOutsideAngular(() => {\r\n            listener.on('dragenter', this.onEnter);\r\n            listener.on('dragover', this.onOver);\r\n            listener.on('dragleave', this.onLeave);\r\n        });\r\n        listener.on('drop', this.onDrop);\r\n    }\r\n    ngOnInit() {\r\n        if (this.plugin) {\r\n            const { model, observe } = this.plugin;\r\n            observe(model.dragChanged)\r\n                .subscribe(e => {\r\n                if (e.hasChanges('isActive')) {\r\n                    if (!e.state.isActive) {\r\n                        const eventArg = {\r\n                            path: [],\r\n                            dragData: DragService.data,\r\n                            dropData: this.dropData,\r\n                            action: 'end',\r\n                            inAreaX: no,\r\n                            inAreaY: no,\r\n                        };\r\n                        if (this.drop.canExecute(eventArg)) {\r\n                            this.drop.execute(eventArg);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    onDrop(e) {\r\n        e.stopPropagation();\r\n        this.elementRef.nativeElement.classList.remove(`${GRID_PREFIX}-dragover`);\r\n        const eventArg = {\r\n            path: e.path,\r\n            dragData: DragService.data,\r\n            dropData: this.dropData,\r\n            action: 'drop',\r\n            inAreaX: this.inAreaFactory(e, 'x'),\r\n            inAreaY: this.inAreaFactory(e, 'y'),\r\n        };\r\n        if (this.drop.canExecute(eventArg)) {\r\n            this.drop.execute(eventArg);\r\n        }\r\n        return false;\r\n    }\r\n    onEnter(e) {\r\n        e.preventDefault();\r\n        this.elementRef.nativeElement.classList.add(`${GRID_PREFIX}-dragover`);\r\n        e.dataTransfer.dropEffect = 'move';\r\n        return false;\r\n    }\r\n    onOver(e) {\r\n        e.preventDefault();\r\n        if (this.plugin && this.plugin.model.scene().status !== 'stop') {\r\n            return false;\r\n        }\r\n        if (this.area !== DragService.area) {\r\n            e.dataTransfer.dropEffect = 'none';\r\n            return false;\r\n        }\r\n        const pos = this.getPosition(e);\r\n        const path = this.getPath(pos);\r\n        if (path.indexOf(DragService.element) >= 0) {\r\n            return false;\r\n        }\r\n        const eventArg = {\r\n            path,\r\n            dragData: DragService.data,\r\n            dropData: this.dropData,\r\n            action: 'over',\r\n            inAreaX: this.inAreaFactory(e, 'x'),\r\n            inAreaY: this.inAreaFactory(e, 'y'),\r\n        };\r\n        if (this.dragOver.canExecute(eventArg)) {\r\n            this.dragOver.execute(eventArg);\r\n            if (DragService.data !== eventArg.dragData) {\r\n                DragService.data = eventArg.dragData;\r\n            }\r\n            e.dataTransfer.dropEffect = 'move';\r\n        }\r\n        return false;\r\n    }\r\n    onLeave() {\r\n        this.elementRef.nativeElement.classList.remove(`${GRID_PREFIX}-dragover`);\r\n    }\r\n    getPosition(e) {\r\n        const start = DragService.startPosition;\r\n        const src = start.rect;\r\n        const offsetX = start.x - (src.left + src.width / 2);\r\n        const offsetY = start.y - (src.top + src.height / 2);\r\n        const { clientX, clientY } = e;\r\n        const x = clientX - offsetX;\r\n        const y = clientY - offsetY;\r\n        return { x, y };\r\n    }\r\n    getPath({ x, y }) {\r\n        // Document.elementsFromPoint is not working with tr?\r\n        // so we need to go through all parent.\r\n        const element = elementFromPoint(x, y);\r\n        const path = parents(element);\r\n        return path;\r\n    }\r\n    inAreaFactory(e, direction) {\r\n        const src = DragService.startPosition.rect;\r\n        const { x, y } = this.getPosition(e);\r\n        if (direction === 'y') {\r\n            return (element) => {\r\n                const trg = element.getBoundingClientRect();\r\n                // we are on the top of target\r\n                if (src.top < trg.top) {\r\n                    return trg.bottom > y && y > trg.bottom - src.height;\r\n                }\r\n                // we are on the bottom of target\r\n                return trg.top < y && y < trg.top + src.height;\r\n            };\r\n        }\r\n        return (element) => {\r\n            const trg = element.getBoundingClientRect();\r\n            // we are on the left of target\r\n            if (src.left < trg.left) {\r\n                return trg.right > x && x > trg.right - src.width;\r\n            }\r\n            // we are on the right of target\r\n            return trg.left < x && x < trg.left + src.width;\r\n        };\r\n    }\r\n}\r\nDropDirective.ɵfac = function DropDirective_Factory(t) { return new (t || DropDirective)(i0.ɵɵdirectiveInject(GridPlugin, 8), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone)); };\r\nDropDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: DropDirective, selectors: [[\"\", \"q-grid-drop\", \"\"]], inputs: { area: [\"q-grid-drop-area\", \"area\"], dropData: [\"q-grid-drop-data\", \"dropData\"], drop: [\"q-grid-drop\", \"drop\"], dragOver: [\"q-grid-drag-over\", \"dragOver\"], dragDirection: [\"q-grid-drag-direction\", \"dragDirection\"] } });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-drop]',\r\n                }]\r\n        }], function () {\r\n        return [{ type: GridPlugin, decorators: [{\r\n                        type: Optional\r\n                    }] }, { type: i0.ElementRef }, { type: i0.NgZone }];\r\n    }, { area: [{\r\n                type: Input,\r\n                args: ['q-grid-drop-area']\r\n            }], dropData: [{\r\n                type: Input,\r\n                args: ['q-grid-drop-data']\r\n            }], drop: [{\r\n                type: Input,\r\n                args: ['q-grid-drop']\r\n            }], dragOver: [{\r\n                type: Input,\r\n                args: ['q-grid-drag-over']\r\n            }], dragDirection: [{\r\n                type: Input,\r\n                args: ['q-grid-drag-direction']\r\n            }] });\r\n})();\n\nclass DndModule {\r\n}\r\nDndModule.ɵfac = function DndModule_Factory(t) { return new (t || DndModule)(); };\r\nDndModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: DndModule });\r\nDndModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DndModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        DragDirective,\r\n                        DropDirective,\r\n                    ],\r\n                    exports: [\r\n                        DragDirective,\r\n                        DropDirective,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(DndModule, { declarations: [DragDirective,\r\n            DropDirective], exports: [DragDirective,\r\n            DropDirective] });\r\n})();\n\nclass TfCoreDirective {\r\n    constructor($view, plugin, cellTemplate, cellClass, viewContainerRef, tr, elementRef) {\r\n        this.$view = $view;\r\n        this.plugin = plugin;\r\n        this.cellTemplate = cellTemplate;\r\n        this.cellClass = cellClass;\r\n        this.viewContainerRef = viewContainerRef;\r\n        this.tr = tr;\r\n        this.elementRef = elementRef;\r\n        this.$implicit = this;\r\n        this.element = this.elementRef.nativeElement.parentNode;\r\n    }\r\n    get value() {\r\n        const column = this.column;\r\n        return this.$view.foot.value(column);\r\n    }\r\n    get label() {\r\n        return this.value;\r\n    }\r\n    get column() {\r\n        return this.columnView.model;\r\n    }\r\n    get columnIndex() {\r\n        return this.columnView.columnIndex;\r\n    }\r\n    get row() {\r\n        return this.tr.model;\r\n    }\r\n    get rowIndex() {\r\n        return this.tr.index;\r\n    }\r\n    ngOnInit() {\r\n        const { column, element } = this;\r\n        const { table } = this.plugin;\r\n        table.box.bag.foot.addCell(this);\r\n        this.cellClass.toBody(element, column);\r\n        const link = this.cellTemplate.build('foot', this.column);\r\n        link(this.viewContainerRef, this);\r\n    }\r\n    mode(value) {\r\n        throw new GridError('tf-core.directive', `${value} mode is not supported`);\r\n    }\r\n    ngOnDestroy() {\r\n        const { table } = this.plugin;\r\n        table.box.bag.foot.deleteCell(this);\r\n    }\r\n}\r\nTfCoreDirective.ɵfac = function TfCoreDirective_Factory(t) { return new (t || TfCoreDirective)(i0.ɵɵdirectiveInject(GridLet), i0.ɵɵdirectiveInject(GridPlugin), i0.ɵɵdirectiveInject(CellTemplateService), i0.ɵɵdirectiveInject(CellClassService), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(TrhCoreDirective), i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nTfCoreDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: TfCoreDirective, selectors: [[\"\", \"q-grid-core-tf\", \"\"]], inputs: { columnView: [\"q-grid-core-tf\", \"columnView\"] } });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TfCoreDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-core-tf]',\r\n                }]\r\n        }], function () { return [{ type: GridLet }, { type: GridPlugin }, { type: CellTemplateService }, { type: CellClassService }, { type: i0.ViewContainerRef }, { type: TrhCoreDirective }, { type: i0.ElementRef }]; }, { columnView: [{\r\n                type: Input,\r\n                args: ['q-grid-core-tf']\r\n            }] });\r\n})();\n\nconst _c0$4 = [\"q-grid-core-foot\", \"\"];\r\nfunction FootCoreComponent_tr_0_td_1_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"td\");\r\n        i0.ɵɵelementContainer(1, 3);\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const $column_r4 = ctx.$implicit;\r\n        i0.ɵɵattribute(\"rowspan\", $column_r4.rowspan)(\"colspan\", $column_r4.colspan);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"q-grid-core-tf\", $column_r4);\r\n    }\r\n}\r\nfunction FootCoreComponent_tr_0_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"tr\", 1);\r\n        i0.ɵɵtemplate(1, FootCoreComponent_tr_0_td_1_Template, 2, 3, \"td\", 2);\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const $row_r1 = ctx.$implicit;\r\n        const $rowIndex_r2 = ctx.index;\r\n        const ctx_r0 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"q-grid-core-trh\", $row_r1)(\"q-grid-core-index\", $rowIndex_r2);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngForOf\", ctx_r0.$view.foot.columns($row_r1, ctx_r0.$table.pin))(\"ngForTrackBy\", ctx_r0.columnId);\r\n    }\r\n}\r\nclass FootCoreComponent {\r\n    constructor($view, $table, plugin, cd) {\r\n        this.$view = $view;\r\n        this.$table = $table;\r\n        this.plugin = plugin;\r\n        this.cd = cd;\r\n    }\r\n    ngOnInit() {\r\n        const { model, observe } = this.plugin;\r\n        observe(model.sceneChanged)\r\n            .subscribe(e => {\r\n            if (e.hasChanges('status') && e.state.status === 'push') {\r\n                this.cd.markForCheck();\r\n            }\r\n        });\r\n    }\r\n    columnId(index, item) {\r\n        return item.model.key;\r\n    }\r\n    rowId(index) {\r\n        return index;\r\n    }\r\n}\r\nFootCoreComponent.ɵfac = function FootCoreComponent_Factory(t) { return new (t || FootCoreComponent)(i0.ɵɵdirectiveInject(GridLet), i0.ɵɵdirectiveInject(TableCoreService), i0.ɵɵdirectiveInject(GridPlugin), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };\r\nFootCoreComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: FootCoreComponent, selectors: [[\"tfoot\", \"q-grid-core-foot\", \"\"]], features: [i0.ɵɵProvidersFeature([GridPlugin])], attrs: _c0$4, decls: 1, vars: 2, consts: [[\"q-grid-core-source\", \"foot\", 3, \"q-grid-core-trh\", \"q-grid-core-index\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"q-grid-core-source\", \"foot\", 3, \"q-grid-core-trh\", \"q-grid-core-index\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"q-grid-core-tf\"]], template: function FootCoreComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵtemplate(0, FootCoreComponent_tr_0_Template, 2, 4, \"tr\", 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"ngForOf\", ctx.$view.foot.rows)(\"ngForTrackBy\", ctx.rowId);\r\n        }\r\n    }, dependencies: [i4.NgForOf, TrhCoreDirective, TfCoreDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FootCoreComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'tfoot[q-grid-core-foot]', changeDetection: ChangeDetectionStrategy.OnPush, providers: [GridPlugin], template: \"<tr *ngFor=\\\"let $row of $view.foot.rows; trackBy: rowId; index as $rowIndex\\\"\\n\\t\\t[q-grid-core-trh]=\\\"$row\\\"\\n\\t\\t[q-grid-core-index]=\\\"$rowIndex\\\"\\n\\t\\tq-grid-core-source=\\\"foot\\\">\\n\\t<td *ngFor=\\\"let $column of $view.foot.columns($row, $table.pin); trackBy: columnId; index as $columnIndex\\\"\\n\\t\\t\\t[attr.rowspan]=\\\"$column.rowspan\\\"\\n\\t\\t\\t[attr.colspan]=\\\"$column.colspan\\\">\\n\\t\\t<ng-container [q-grid-core-tf]=\\\"$column\\\">\\n\\t\\t</ng-container>\\n\\t</td>\\n</tr>\\n\" }]\r\n        }], function () { return [{ type: GridLet }, { type: TableCoreService }, { type: GridPlugin }, { type: i0.ChangeDetectorRef }]; }, null);\r\n})();\n\nclass FootModule {\r\n}\r\nFootModule.ɵfac = function FootModule_Factory(t) { return new (t || FootModule)(); };\r\nFootModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: FootModule });\r\nFootModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\r\n        RowModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FootModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        FootCoreComponent,\r\n                        TfCoreDirective,\r\n                    ],\r\n                    exports: [\r\n                        FootCoreComponent,\r\n                        TfCoreDirective,\r\n                    ],\r\n                    imports: [\r\n                        CommonModule,\r\n                        RowModule,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(FootModule, { declarations: [FootCoreComponent,\r\n            TfCoreDirective], imports: [CommonModule,\r\n            RowModule], exports: [FootCoreComponent,\r\n            TfCoreDirective] });\r\n})();\n\nclass Layer {\r\n    constructor(onDestroy) {\r\n        this.onDestroy = onDestroy;\r\n    }\r\n    destroy() {\r\n        this.onDestroy();\r\n    }\r\n}\n\nclass LayerService {\r\n    constructor(templateService) {\r\n        this.templateService = templateService;\r\n        this.layers = new Map();\r\n    }\r\n    get count() {\r\n        return this.layers.size;\r\n    }\r\n    init(container) {\r\n        this.container = container;\r\n    }\r\n    create(name) {\r\n        var _a;\r\n        if (this.layers.has(name)) {\r\n            return this.layers.get(name);\r\n        }\r\n        const { container, templateService } = this;\r\n        const link = templateService.find(`layer-${name}.tpl.html`);\r\n        if (link && container) {\r\n            const { nativeElement } = container.element;\r\n            nativeElement.parentElement.classList.add(`q-grid-layer-${name}`);\r\n            (_a = this.getHostElement()) === null || _a === void 0 ? void 0 : _a.classList.add(`q-grid-${name}`);\r\n            container.createEmbeddedView(link.template, {});\r\n        }\r\n        const destroy = container\r\n            ? () => {\r\n                var _a;\r\n                this.layers.delete(name);\r\n                const { nativeElement } = container.element;\r\n                nativeElement.parentElement.classList.add(`q-grid-layer-${name}`);\r\n                (_a = this.getHostElement()) === null || _a === void 0 ? void 0 : _a.classList.remove(`q-grid-${name}`);\r\n                container.clear();\r\n            }\r\n            : () => this.layers.delete(name);\r\n        const layer = new Layer(destroy);\r\n        this.layers.set(name, layer);\r\n        return layer;\r\n    }\r\n    getHostElement() {\r\n        const { nativeElement } = this.container.element;\r\n        for (let el = nativeElement; el; el = el.parentElement) {\r\n            if (el.tagName === 'Q-GRID') {\r\n                return el;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\r\nLayerService.ɵfac = function LayerService_Factory(t) { return new (t || LayerService)(i0.ɵɵinject(TemplateService)); };\r\nLayerService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: LayerService, factory: LayerService.ɵfac });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LayerService, [{\r\n            type: Injectable\r\n        }], function () { return [{ type: TemplateService }]; }, null);\r\n})();\n\nclass LayerCoreDirective {\r\n    constructor(layerService, viewContainerRef) {\r\n        layerService.init(viewContainerRef);\r\n    }\r\n}\r\nLayerCoreDirective.ɵfac = function LayerCoreDirective_Factory(t) { return new (t || LayerCoreDirective)(i0.ɵɵdirectiveInject(LayerService), i0.ɵɵdirectiveInject(i0.ViewContainerRef)); };\r\nLayerCoreDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: LayerCoreDirective, selectors: [[\"\", \"q-grid-core-layer\", \"\"]] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LayerCoreDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-core-layer]',\r\n                }]\r\n        }], function () { return [{ type: LayerService }, { type: i0.ViewContainerRef }]; }, null);\r\n})();\n\nclass LayerCoreComponent {\r\n    constructor() {\r\n        this.hostClass = 'q-grid-layer';\r\n    }\r\n}\r\nLayerCoreComponent.ɵfac = function LayerCoreComponent_Factory(t) { return new (t || LayerCoreComponent)(); };\r\nLayerCoreComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: LayerCoreComponent, selectors: [[\"q-grid-core-layer\"]], hostVars: 2, hostBindings: function LayerCoreComponent_HostBindings(rf, ctx) {\r\n        if (rf & 2) {\r\n            i0.ɵɵclassMap(ctx.hostClass);\r\n        }\r\n    }, decls: 1, vars: 0, consts: [[\"q-grid-core-layer\", \"\"]], template: function LayerCoreComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementContainer(0, 0);\r\n        }\r\n    }, dependencies: [LayerCoreDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LayerCoreComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-core-layer', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container q-grid-core-layer></ng-container>\\n\" }]\r\n        }], null, { hostClass: [{\r\n                type: HostBinding,\r\n                args: ['class']\r\n            }] });\r\n})();\n\nclass MarkupDirective {\r\n    constructor(plugin, elementRef, table) {\r\n        this.plugin = plugin;\r\n        this.elementRef = elementRef;\r\n        this.table = table;\r\n        this.name = '';\r\n    }\r\n    ngOnInit() {\r\n        const { table, disposable } = this.plugin;\r\n        table.box.markup[this.getName()] = this.elementRef.nativeElement;\r\n        disposable.add(() => delete table.box.markup[this.getName()]);\r\n    }\r\n    getName() {\r\n        if (this.table && this.table.pin) {\r\n            return `${this.name}-${this.table.pin}`;\r\n        }\r\n        return this.name;\r\n    }\r\n}\r\nMarkupDirective.ɵfac = function MarkupDirective_Factory(t) { return new (t || MarkupDirective)(i0.ɵɵdirectiveInject(GridPlugin), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(TableCoreService, 8)); };\r\nMarkupDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: MarkupDirective, selectors: [[\"\", \"q-grid-markup\", \"\"]], inputs: { name: [\"q-grid-markup\", \"name\"] }, features: [i0.ɵɵProvidersFeature([GridPlugin])] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MarkupDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-markup]',\r\n                    providers: [GridPlugin],\r\n                }]\r\n        }], function () {\r\n        return [{ type: GridPlugin }, { type: i0.ElementRef }, { type: TableCoreService, decorators: [{\r\n                        type: Optional\r\n                    }] }];\r\n    }, { name: [{\r\n                type: Input,\r\n                args: ['q-grid-markup']\r\n            }] });\r\n})();\n\n/* eslint-disable @angular-eslint/no-conflicting-lifecycle */\r\nclass TemplateDirective {\r\n    constructor(templateService, viewContainerRef) {\r\n        this.templateService = templateService;\r\n        this.viewContainerRef = viewContainerRef;\r\n        this.key = '';\r\n        this.context = null;\r\n        this.check = false;\r\n    }\r\n    ngOnChanges(changes) {\r\n        const keyChange = changes['key'];\r\n        if (keyChange) {\r\n            if (this.viewRef) {\r\n                this.viewRef.destroy();\r\n                this.viewRef = null;\r\n            }\r\n        }\r\n    }\r\n    ngDoCheck() {\r\n        if (!this.viewRef) {\r\n            const link = this.templateService.find(this.key);\r\n            if (link) {\r\n                this.viewRef = this.viewContainerRef.createEmbeddedView(link.template, this.context);\r\n            }\r\n        }\r\n    }\r\n}\r\nTemplateDirective.ɵfac = function TemplateDirective_Factory(t) { return new (t || TemplateDirective)(i0.ɵɵdirectiveInject(TemplateService), i0.ɵɵdirectiveInject(i0.ViewContainerRef)); };\r\nTemplateDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: TemplateDirective, selectors: [[\"ng-container\", \"key\", \"\"]], inputs: { key: \"key\", context: \"context\", check: \"check\" }, features: [i0.ɵɵNgOnChangesFeature] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TemplateDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: 'ng-container[key]', // eslint-disable-line @angular-eslint/directive-selector\r\n                }]\r\n        }], function () { return [{ type: TemplateService }, { type: i0.ViewContainerRef }]; }, { key: [{\r\n                type: Input\r\n            }], context: [{\r\n                type: Input\r\n            }], check: [{\r\n                type: Input\r\n            }] });\r\n})();\n\nclass ToolbarCoreComponent {\r\n}\r\nToolbarCoreComponent.ɵfac = function ToolbarCoreComponent_Factory(t) { return new (t || ToolbarCoreComponent)(); };\r\nToolbarCoreComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ToolbarCoreComponent, selectors: [[\"q-grid-core-toolbar\"]], inputs: { position: \"position\" }, decls: 1, vars: 1, consts: [[3, \"key\"]], template: function ToolbarCoreComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementContainer(0, 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵpropertyInterpolate1(\"key\", \"toolbar-\", ctx.position, \".tpl.html\");\r\n        }\r\n    }, dependencies: [TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToolbarCoreComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-core-toolbar', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"toolbar-{{position}}.tpl.html\\\"></ng-container>\\n\" }]\r\n        }], null, { position: [{\r\n                type: Input\r\n            }] });\r\n})();\n\nclass ResizeDirective {\r\n    constructor(zone, plugin, qgrid, document, elementRef) {\r\n        this.zone = zone;\r\n        this.plugin = plugin;\r\n        this.qgrid = qgrid;\r\n        this.context = {\r\n            x: 0,\r\n            y: 0,\r\n            height: 0,\r\n            width: 0,\r\n        };\r\n        this.element = elementRef.nativeElement;\r\n        this.divider = document.createElement('div');\r\n        this.listener = {\r\n            divider: new EventListener(this.divider, new EventManager(this)),\r\n            document: new EventListener(document, new EventManager(this)),\r\n        };\r\n    }\r\n    get model() {\r\n        return this.plugin.model;\r\n    }\r\n    ngOnInit() {\r\n        const e = { data: this.key };\r\n        if (this.canResize(e)) {\r\n            this.zone.runOutsideAngular(() => {\r\n                this.listener.divider.on('mousedown', this.dragStart);\r\n            });\r\n            this.divider.classList.add(`${GRID_PREFIX}-resize-handler`);\r\n            this.element.appendChild(this.divider);\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.listener.divider.off();\r\n        this.listener.document.off();\r\n    }\r\n    dragStart(e) {\r\n        e.preventDefault();\r\n        const context = this.context;\r\n        const host = this.select();\r\n        context.width = host.clientWidth;\r\n        context.height = host.clientHeight;\r\n        context.x = e.screenX;\r\n        context.y = e.screenY;\r\n        this.zone.runOutsideAngular(() => {\r\n            this.listener.document.on('mousemove', this.drag);\r\n            this.listener.document.on('mouseup', this.dragEnd);\r\n        });\r\n        const model = this.model;\r\n        model.drag({ isActive: true });\r\n    }\r\n    drag(e) {\r\n        const { context, path, key } = this;\r\n        const { layout } = this.model;\r\n        const state = clone(layout()[path]);\r\n        state.set(key, {\r\n            width: context.width + e.screenX - context.x,\r\n            height: context.height + e.screenY - context.y,\r\n        });\r\n        layout({ [path]: state });\r\n    }\r\n    dragEnd() {\r\n        this.listener.document.off();\r\n        const model = this.model;\r\n        model.drag({ isActive: false });\r\n    }\r\n    select() {\r\n        if (this.selector === 'parent') {\r\n            return this.element.parentElement;\r\n        }\r\n        return this.element;\r\n    }\r\n}\r\nResizeDirective.ɵfac = function ResizeDirective_Factory(t) { return new (t || ResizeDirective)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(GridPlugin, 8), i0.ɵɵdirectiveInject(Grid), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nResizeDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: ResizeDirective, selectors: [[\"\", \"q-grid-resize\", \"\"]], inputs: { key: [\"q-grid-resize\", \"key\"], path: [\"q-grid-resize-path\", \"path\"], canResize: [\"q-grid-can-resize\", \"canResize\"], selector: [\"q-grid-resize-selector\", \"selector\"] } });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ResizeDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-resize]',\r\n                }]\r\n        }], function () {\r\n        return [{ type: i0.NgZone }, { type: GridPlugin, decorators: [{\r\n                        type: Optional\r\n                    }] }, { type: Grid }, { type: undefined, decorators: [{\r\n                        type: Inject,\r\n                        args: [DOCUMENT]\r\n                    }] }, { type: i0.ElementRef }];\r\n    }, { key: [{\r\n                type: Input,\r\n                args: ['q-grid-resize']\r\n            }], path: [{\r\n                type: Input,\r\n                args: ['q-grid-resize-path']\r\n            }], canResize: [{\r\n                type: Input,\r\n                args: ['q-grid-can-resize']\r\n            }], selector: [{\r\n                type: Input,\r\n                args: ['q-grid-resize-selector']\r\n            }] });\r\n})();\n\nclass ThCoreDirective {\r\n    constructor($view, root, viewContainerRef, cellTemplate, cellClass, tr, elementRef) {\r\n        this.$view = $view;\r\n        this.root = root;\r\n        this.viewContainerRef = viewContainerRef;\r\n        this.cellTemplate = cellTemplate;\r\n        this.cellClass = cellClass;\r\n        this.tr = tr;\r\n        this.$implicit = this;\r\n        this.element = elementRef.nativeElement.parentNode;\r\n    }\r\n    get column() {\r\n        return this.columnView.model;\r\n    }\r\n    get columnIndex() {\r\n        return this.columnView.columnIndex;\r\n    }\r\n    get row() {\r\n        return this.tr.model;\r\n    }\r\n    get rowIndex() {\r\n        return this.tr.index;\r\n    }\r\n    ngOnInit() {\r\n        const { column, element } = this;\r\n        const { table } = this.root;\r\n        table.box.bag.head.addCell(this);\r\n        let targetColumn = column;\r\n        let targetSource = 'head';\r\n        if (column.type === 'filter-row') {\r\n            targetSource = 'filter';\r\n            targetColumn = column.model;\r\n            this.element.classList.add('q-grid-filter-row');\r\n        }\r\n        this.cellClass.toHead(element, column);\r\n        this.cellClass.toBody(element, targetColumn);\r\n        const link = this.cellTemplate.build(targetSource, targetColumn, 'view');\r\n        link(this.viewContainerRef, this);\r\n    }\r\n    mode(value) {\r\n        throw new GridError('th-core.directive', `${value} mode is not supported`);\r\n    }\r\n    ngOnDestroy() {\r\n        const { table } = this.root;\r\n        table.box.bag.head.deleteCell(this);\r\n    }\r\n}\r\nThCoreDirective.ɵfac = function ThCoreDirective_Factory(t) { return new (t || ThCoreDirective)(i0.ɵɵdirectiveInject(GridLet), i0.ɵɵdirectiveInject(GridPlugin), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(CellTemplateService), i0.ɵɵdirectiveInject(CellClassService), i0.ɵɵdirectiveInject(TrhCoreDirective), i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nThCoreDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: ThCoreDirective, selectors: [[\"\", \"q-grid-core-th\", \"\"]], inputs: { columnView: [\"q-grid-core-th\", \"columnView\"] } });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThCoreDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-core-th]',\r\n                }]\r\n        }], function () { return [{ type: GridLet }, { type: GridPlugin }, { type: i0.ViewContainerRef }, { type: CellTemplateService }, { type: CellClassService }, { type: TrhCoreDirective }, { type: i0.ElementRef }]; }, { columnView: [{\r\n                type: Input,\r\n                args: ['q-grid-core-th']\r\n            }] });\r\n})();\n\nconst _c0$3 = [\"q-grid-core-head\", \"\"];\r\nfunction HeadCoreComponent_tr_0_th_1_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"th\", 3);\r\n        i0.ɵɵelementContainer(1, 4);\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const $column_r4 = ctx.$implicit;\r\n        const ctx_r3 = i0.ɵɵnextContext(2);\r\n        i0.ɵɵproperty(\"q-grid-drag\", ctx_r3.$view.head.drag)(\"q-grid-drag-data\", $column_r4.model.key)(\"q-grid-resize\", $column_r4.model.key)(\"q-grid-can-resize\", ctx_r3.$view.head.resize.canExecute);\r\n        i0.ɵɵattribute(\"rowspan\", $column_r4.rowspan)(\"colspan\", $column_r4.colspan);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"q-grid-core-th\", $column_r4);\r\n    }\r\n}\r\nfunction HeadCoreComponent_tr_0_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"tr\", 1);\r\n        i0.ɵɵtemplate(1, HeadCoreComponent_tr_0_th_1_Template, 2, 7, \"th\", 2);\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const $row_r1 = ctx.$implicit;\r\n        const $rowIndex_r2 = ctx.index;\r\n        const ctx_r0 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"q-grid-core-trh\", $row_r1)(\"q-grid-core-index\", $rowIndex_r2);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngForOf\", ctx_r0.$view.head.columns($row_r1, ctx_r0.$table.pin))(\"ngForTrackBy\", ctx_r0.columnId);\r\n    }\r\n}\r\nclass HeadCoreComponent {\r\n    constructor($view, $table, elementRef, plugin, zone, cd) {\r\n        this.$view = $view;\r\n        this.$table = $table;\r\n        this.elementRef = elementRef;\r\n        this.plugin = plugin;\r\n        this.zone = zone;\r\n        this.cd = cd;\r\n    }\r\n    ngOnInit() {\r\n        const { disposable, model, observe } = this.plugin;\r\n        const element = this.elementRef.nativeElement;\r\n        const host = new HeadHost(this.plugin);\r\n        const listener = new EventListener(element, new EventManager(this));\r\n        this.zone.runOutsideAngular(() => {\r\n            disposable.add(listener.on('mousemove', e => host.mouseMove(e)));\r\n            disposable.add(listener.on('mouseleave', e => host.mouseLeave(e)));\r\n        });\r\n        observe(model.sceneChanged)\r\n            .subscribe(e => {\r\n            if (e.hasChanges('status') && e.state.status === 'push') {\r\n                this.cd.markForCheck();\r\n            }\r\n        });\r\n    }\r\n    columnId(index, item) {\r\n        return item.model.key;\r\n    }\r\n    rowId(index) {\r\n        return index;\r\n    }\r\n}\r\nHeadCoreComponent.ɵfac = function HeadCoreComponent_Factory(t) { return new (t || HeadCoreComponent)(i0.ɵɵdirectiveInject(GridLet), i0.ɵɵdirectiveInject(TableCoreService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(GridPlugin), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };\r\nHeadCoreComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: HeadCoreComponent, selectors: [[\"thead\", \"q-grid-core-head\", \"\"]], features: [i0.ɵɵProvidersFeature([GridPlugin])], attrs: _c0$3, decls: 1, vars: 2, consts: [[\"q-grid-core-source\", \"head\", 3, \"q-grid-core-trh\", \"q-grid-core-index\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"q-grid-core-source\", \"head\", 3, \"q-grid-core-trh\", \"q-grid-core-index\"], [\"q-grid-drop-area\", \"head\", \"q-grid-resize-path\", \"columns\", 3, \"q-grid-drag\", \"q-grid-drag-data\", \"q-grid-resize\", \"q-grid-can-resize\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"q-grid-drop-area\", \"head\", \"q-grid-resize-path\", \"columns\", 3, \"q-grid-drag\", \"q-grid-drag-data\", \"q-grid-resize\", \"q-grid-can-resize\"], [3, \"q-grid-core-th\"]], template: function HeadCoreComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵtemplate(0, HeadCoreComponent_tr_0_Template, 2, 4, \"tr\", 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"ngForOf\", ctx.$view.head.rows)(\"ngForTrackBy\", ctx.rowId);\r\n        }\r\n    }, dependencies: [i4.NgForOf, TrhCoreDirective, ResizeDirective, DragDirective, ThCoreDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HeadCoreComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'thead[q-grid-core-head]', providers: [GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<tr *ngFor=\\\"let $row of $view.head.rows; trackBy: rowId; index as $rowIndex\\\"\\n    [q-grid-core-trh]=\\\"$row\\\"\\n    [q-grid-core-index]=\\\"$rowIndex\\\"\\n    q-grid-core-source=\\\"head\\\">\\n    <th *ngFor=\\\"let $column of $view.head.columns($row, $table.pin); trackBy: columnId; index as $columnIndex\\\"\\n        [attr.rowspan]=\\\"$column.rowspan\\\"\\n        [attr.colspan]=\\\"$column.colspan\\\"\\n        [q-grid-drag]=\\\"$view.head.drag\\\"\\n        [q-grid-drag-data]=\\\"$column.model.key\\\"\\n        q-grid-drop-area=\\\"head\\\"\\n        q-grid-resize-path=\\\"columns\\\"\\n        [q-grid-resize]=\\\"$column.model.key\\\"\\n        [q-grid-can-resize]=\\\"$view.head.resize.canExecute\\\">\\n        <ng-container [q-grid-core-th]=\\\"$column\\\">\\n        </ng-container>\\n    </th>\\n</tr>\\n\" }]\r\n        }], function () { return [{ type: GridLet }, { type: TableCoreService }, { type: i0.ElementRef }, { type: GridPlugin }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }]; }, null);\r\n})();\n\nfunction TableCoreComponent_thead_1_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelement(0, \"thead\", 6);\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r0 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"q-grid-drop\", ctx_r0.$view.head.drop)(\"q-grid-drag-over\", ctx_r0.$view.head.drop);\r\n    }\r\n}\r\nfunction TableCoreComponent_tbody_2_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelement(0, \"tbody\", 7);\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r1 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"q-grid-drop\", ctx_r1.$view.row.drop)(\"q-grid-drag-over\", ctx_r1.$view.row.drop);\r\n    }\r\n}\r\nfunction TableCoreComponent_tbody_3_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelement(0, \"tbody\", 8);\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r2 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"q-grid-drop\", ctx_r2.$view.row.drop)(\"q-grid-vscroll-port-y\", ctx_r2.$view.scroll.y)(\"q-grid-drag-over\", ctx_r2.$view.row.drop);\r\n    }\r\n}\r\nfunction TableCoreComponent_tbody_4_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelement(0, \"tbody\", 9);\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r3 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"q-grid-drop\", ctx_r3.$view.row.drop)(\"q-grid-drag-over\", ctx_r3.$view.row.drop);\r\n    }\r\n}\r\nfunction TableCoreComponent_tfoot_5_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelement(0, \"tfoot\", 10);\r\n    }\r\n}\r\nclass TableCoreComponent {\r\n    constructor($view, plugin, tableHost, cd) {\r\n        this.$view = $view;\r\n        this.plugin = plugin;\r\n        this.tableHost = tableHost;\r\n        this.cd = cd;\r\n        this.pin = 'mid';\r\n    }\r\n    get visibility() {\r\n        const { model } = this.plugin;\r\n        return model.visibility();\r\n    }\r\n    ngOnInit() {\r\n        const { model, observe } = this.plugin;\r\n        this.tableHost.pin = this.pin;\r\n        observe(model.visibilityChanged)\r\n            .subscribe(() => {\r\n            this.cd.markForCheck();\r\n            this.cd.detectChanges();\r\n        });\r\n    }\r\n}\r\nTableCoreComponent.ɵfac = function TableCoreComponent_Factory(t) { return new (t || TableCoreComponent)(i0.ɵɵdirectiveInject(GridLet), i0.ɵɵdirectiveInject(GridPlugin), i0.ɵɵdirectiveInject(TableCoreService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };\r\nTableCoreComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TableCoreComponent, selectors: [[\"q-grid-core-table\"]], inputs: { pin: \"pin\" }, features: [i0.ɵɵProvidersFeature([TableCoreService])], decls: 6, vars: 5, consts: [[\"q-grid-markup\", \"table\"], [\"q-grid-core-head\", \"\", \"q-grid-markup\", \"head\", \"q-grid-animate\", \"false\", \"q-grid-drop-area\", \"head\", \"q-grid-drag-direction\", \"x\", 3, \"q-grid-drop\", \"q-grid-drag-over\", 4, \"ngIf\"], [\"class\", \"q-grid-body-top\", \"pin\", \"top\", \"q-grid-core-body\", \"\", \"q-grid-markup\", \"body-top\", \"q-grid-animate\", \"false\", \"tabindex\", \"0\", \"q-grid-drop-area\", \"body\", \"q-grid-drag-direction\", \"y\", 3, \"q-grid-drop\", \"q-grid-drag-over\", 4, \"ngIf\"], [\"q-grid-core-body\", \"\", \"q-grid-markup\", \"body\", \"q-grid-animate\", \"false\", \"tabindex\", \"0\", \"q-grid-drop-area\", \"body\", \"q-grid-drag-direction\", \"y\", \"q-grid-vscroll\", \"\", 3, \"q-grid-drop\", \"q-grid-vscroll-port-y\", \"q-grid-drag-over\", 4, \"ngIf\"], [\"class\", \"q-grid-body-bottom\", \"pin\", \"bottom\", \"q-grid-core-body\", \"\", \"q-grid-markup\", \"body-bottom\", \"q-grid-animate\", \"false\", \"tabindex\", \"0\", \"q-grid-drop-area\", \"body\", \"q-grid-drag-direction\", \"y\", 3, \"q-grid-drop\", \"q-grid-drag-over\", 4, \"ngIf\"], [\"q-grid-core-foot\", \"\", \"q-grid-markup\", \"foot\", \"q-grid-animate\", \"false\", 4, \"ngIf\"], [\"q-grid-core-head\", \"\", \"q-grid-markup\", \"head\", \"q-grid-animate\", \"false\", \"q-grid-drop-area\", \"head\", \"q-grid-drag-direction\", \"x\", 3, \"q-grid-drop\", \"q-grid-drag-over\"], [\"pin\", \"top\", \"q-grid-core-body\", \"\", \"q-grid-markup\", \"body-top\", \"q-grid-animate\", \"false\", \"tabindex\", \"0\", \"q-grid-drop-area\", \"body\", \"q-grid-drag-direction\", \"y\", 1, \"q-grid-body-top\", 3, \"q-grid-drop\", \"q-grid-drag-over\"], [\"q-grid-core-body\", \"\", \"q-grid-markup\", \"body\", \"q-grid-animate\", \"false\", \"tabindex\", \"0\", \"q-grid-drop-area\", \"body\", \"q-grid-drag-direction\", \"y\", \"q-grid-vscroll\", \"\", 3, \"q-grid-drop\", \"q-grid-vscroll-port-y\", \"q-grid-drag-over\"], [\"pin\", \"bottom\", \"q-grid-core-body\", \"\", \"q-grid-markup\", \"body-bottom\", \"q-grid-animate\", \"false\", \"tabindex\", \"0\", \"q-grid-drop-area\", \"body\", \"q-grid-drag-direction\", \"y\", 1, \"q-grid-body-bottom\", 3, \"q-grid-drop\", \"q-grid-drag-over\"], [\"q-grid-core-foot\", \"\", \"q-grid-markup\", \"foot\", \"q-grid-animate\", \"false\"]], template: function TableCoreComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementStart(0, \"table\", 0);\r\n            i0.ɵɵtemplate(1, TableCoreComponent_thead_1_Template, 1, 2, \"thead\", 1);\r\n            i0.ɵɵtemplate(2, TableCoreComponent_tbody_2_Template, 1, 2, \"tbody\", 2);\r\n            i0.ɵɵtemplate(3, TableCoreComponent_tbody_3_Template, 1, 3, \"tbody\", 3);\r\n            i0.ɵɵtemplate(4, TableCoreComponent_tbody_4_Template, 1, 2, \"tbody\", 4);\r\n            i0.ɵɵtemplate(5, TableCoreComponent_tfoot_5_Template, 1, 0, \"tfoot\", 5);\r\n            i0.ɵɵelementEnd();\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngIf\", ctx.visibility.head);\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngIf\", ctx.visibility.pin.top);\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngIf\", ctx.visibility.body);\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngIf\", ctx.visibility.pin.bottom);\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngIf\", ctx.visibility.foot);\r\n        }\r\n    }, dependencies: [i4.NgIf, HeadCoreComponent, FootCoreComponent, BodyCoreComponent, MarkupDirective, DropDirective, VscrollDirective, VscrollPortYDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TableCoreComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-core-table', providers: [TableCoreService], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<table q-grid-markup=\\\"table\\\">\\n\\t<thead *ngIf=\\\"visibility.head\\\"\\n\\t\\t\\t\\tq-grid-core-head\\n\\t\\t\\t\\tq-grid-markup=\\\"head\\\"\\n\\t\\t\\t\\tq-grid-animate=\\\"false\\\"\\n\\t\\t\\t\\tq-grid-drop-area=\\\"head\\\"\\n\\t\\t\\t\\t[q-grid-drop]=\\\"$any($view.head.drop)\\\"\\n\\t\\t\\t\\tq-grid-drag-direction=\\\"x\\\"\\n\\t\\t\\t\\t[q-grid-drag-over]=\\\"$any($view.head.drop)\\\">\\n\\t</thead>\\n\\t<tbody *ngIf=\\\"visibility.pin.top\\\"\\n\\t\\t\\t\\tclass=\\\"q-grid-body-top\\\"\\n\\t\\t\\t\\tpin=\\\"top\\\"\\n\\t\\t\\t\\tq-grid-core-body\\n\\t\\t\\t\\tq-grid-markup=\\\"body-top\\\"\\n\\t\\t\\t\\tq-grid-animate=\\\"false\\\"\\n\\t\\t\\t\\ttabindex=\\\"0\\\"\\n\\t\\t\\t\\tq-grid-drop-area=\\\"body\\\"\\n\\t\\t\\t\\t[q-grid-drop]=\\\"$any($view.row.drop)\\\"\\n\\t\\t\\t\\tq-grid-drag-direction=\\\"y\\\"\\n\\t\\t\\t\\t[q-grid-drag-over]=\\\"$any($view.row.drop)\\\">\\n\\t</tbody>\\n\\t<tbody *ngIf=\\\"visibility.body\\\"\\n\\t\\t\\t\\tq-grid-core-body\\n\\t\\t\\t\\tq-grid-markup=\\\"body\\\"\\n\\t\\t\\t\\tq-grid-animate=\\\"false\\\"\\n\\t\\t\\t\\ttabindex=\\\"0\\\"\\n\\t\\t\\t\\tq-grid-drop-area=\\\"body\\\"\\n\\t\\t\\t\\t[q-grid-drop]=\\\"$any($view.row.drop)\\\"\\n\\t\\t\\t\\tq-grid-drag-direction=\\\"y\\\"\\n\\t\\t\\t\\tq-grid-vscroll\\n\\t\\t\\t\\t[q-grid-vscroll-port-y]=\\\"$any($view.scroll.y)\\\"\\n\\t\\t\\t\\t[q-grid-drag-over]=\\\"$any($view.row.drop)\\\">\\n\\t</tbody>\\n\\t<tbody *ngIf=\\\"visibility.pin.bottom\\\"\\n\\t\\t\\t\\tclass=\\\"q-grid-body-bottom\\\"\\n\\t\\t\\t\\tpin=\\\"bottom\\\"\\n\\t\\t\\t\\tq-grid-core-body\\n\\t\\t\\t\\tq-grid-markup=\\\"body-bottom\\\"\\n\\t\\t\\t\\tq-grid-animate=\\\"false\\\"\\n\\t\\t\\t\\ttabindex=\\\"0\\\"\\n\\t\\t\\t\\tq-grid-drop-area=\\\"body\\\"\\n\\t\\t\\t\\t[q-grid-drop]=\\\"$any($view.row.drop)\\\"\\n\\t\\t\\t\\tq-grid-drag-direction=\\\"y\\\"\\n\\t\\t\\t\\t[q-grid-drag-over]=\\\"$any($view.row.drop)\\\">\\n\\t</tbody>\\n\\t<tfoot *ngIf=\\\"visibility.foot\\\"\\n\\t\\t\\t\\tq-grid-core-foot\\n\\t\\t\\t\\tq-grid-markup=\\\"foot\\\"\\n\\t\\t\\t\\tq-grid-animate=\\\"false\\\">\\n\\t</tfoot>\\n</table>\\n\" }]\r\n        }], function () { return [{ type: GridLet }, { type: GridPlugin }, { type: TableCoreService }, { type: i0.ChangeDetectorRef }]; }, { pin: [{\r\n                type: Input\r\n            }] });\r\n})();\n\nfunction ViewCoreComponent_q_grid_core_table_0_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelement(0, \"q-grid-core-table\", 4);\r\n    }\r\n}\r\nfunction ViewCoreComponent_q_grid_core_table_2_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelement(0, \"q-grid-core-table\", 5);\r\n    }\r\n}\r\nclass ViewCoreComponent {\r\n    constructor(plugin, qgrid, cd, zone, view, elementRef) {\r\n        this.plugin = plugin;\r\n        this.qgrid = qgrid;\r\n        this.cd = cd;\r\n        this.zone = zone;\r\n        this.view = view;\r\n        this.elementRef = elementRef;\r\n        zone\r\n            .onStable\r\n            .subscribe(() => {\r\n            const { model, table } = this.plugin;\r\n            if (model) {\r\n                const { status } = model.scene();\r\n                if (status === 'push') {\r\n                    table.invalidate();\r\n                    model.scene({\r\n                        status: 'stop',\r\n                    }, {\r\n                        source: 'view-core.component',\r\n                        behavior: 'core',\r\n                    });\r\n                    if (this.host) {\r\n                        this.host.invalidate();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    get visibility() {\r\n        const { model } = this.plugin;\r\n        return model.visibility();\r\n    }\r\n    ngDoCheck() {\r\n        if (this.host) {\r\n            const { model } = this.plugin;\r\n            if (model.scene().status === 'stop') {\r\n                this.host.invalidate();\r\n            }\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        const { model, table, observeReply, observe, view, disposable, service, } = this.plugin;\r\n        // TODO: make it better\r\n        table.box.markup.view = this.elementRef.nativeElement;\r\n        const cmdManager = new TableCommandManager(f => f(), table);\r\n        this.view.init(this.plugin, cmdManager);\r\n        view.scroll.y.settings.emit = f => {\r\n            f();\r\n            this.cd.markForCheck();\r\n            this.cd.detectChanges();\r\n        };\r\n        this.host = new ViewHost(this.plugin);\r\n        observeReply(model.sceneChanged)\r\n            .subscribe(e => {\r\n            if (e.hasChanges('status') && e.state.status === 'pull') {\r\n                this.cd.markForCheck();\r\n                this.zone.run(() => model.scene({\r\n                    status: 'push',\r\n                }, {\r\n                    source: 'view-core.component',\r\n                    behavior: 'core',\r\n                }));\r\n            }\r\n        });\r\n        observe(model.styleChanged)\r\n            .subscribe(() => this.host.invalidate());\r\n        observe(model.layoutChanged)\r\n            .subscribe(e => {\r\n            if (e.hasChanges('rows')) {\r\n                this.host.invalidate();\r\n            }\r\n        });\r\n        observeReply(model.editChanged)\r\n            .subscribe(e => {\r\n            if (e.hasChanges('status')) {\r\n                if (e.state.status === 'endBatch') {\r\n                    service.invalidate({\r\n                        source: 'view-core.component',\r\n                        why: 'refresh',\r\n                    });\r\n                }\r\n            }\r\n        });\r\n        const listener = new EventListener(this.elementRef.nativeElement, new EventManager(this));\r\n        this.zone.runOutsideAngular(() => {\r\n            disposable.add(listener.on('mousemove', e => this.host.mouseMove(e)));\r\n            disposable.add(listener.on('mouseenter', e => this.host.mouseEnter(e)));\r\n            disposable.add(listener.on('mouseleave', e => this.host.mouseLeave(e)));\r\n            disposable.add(listener.on('mouseup', e => this.host.mouseUp(e)));\r\n        });\r\n        disposable.add(listener.on('mousedown', e => this.host.mouseDown(e)));\r\n        if (model.scroll().mode === 'virtual') {\r\n            const asVirtualBody = table.body;\r\n            if (asVirtualBody.requestInvalidate) {\r\n                asVirtualBody.requestInvalidate.on(() => this.host.invalidate());\r\n            }\r\n        }\r\n    }\r\n}\r\nViewCoreComponent.ɵfac = function ViewCoreComponent_Factory(t) { return new (t || ViewCoreComponent)(i0.ɵɵdirectiveInject(GridPlugin), i0.ɵɵdirectiveInject(Grid), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(GridLet), i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nViewCoreComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ViewCoreComponent, selectors: [[\"q-grid-core-view\"]], features: [i0.ɵɵProvidersFeature([\r\n            CellTemplateService,\r\n            CellClassService,\r\n            GridPlugin,\r\n        ])], decls: 4, vars: 2, consts: [[\"pin\", \"left\", \"class\", \"q-grid-table q-grid-table-left q-grid-layout-column\", 4, \"ngIf\"], [\"pin\", \"mid\", 1, \"q-grid-table\", \"q-grid-table-mid\", \"q-grid-layout-column\", \"q-grid-flex\"], [\"pin\", \"right\", \"class\", \"q-grid-table q-grid-table-right q-grid-layout-column\", 4, \"ngIf\"], [1, \"q-grid-cell-handler\"], [\"pin\", \"left\", 1, \"q-grid-table\", \"q-grid-table-left\", \"q-grid-layout-column\"], [\"pin\", \"right\", 1, \"q-grid-table\", \"q-grid-table-right\", \"q-grid-layout-column\"]], template: function ViewCoreComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵtemplate(0, ViewCoreComponent_q_grid_core_table_0_Template, 1, 0, \"q-grid-core-table\", 0);\r\n            i0.ɵɵelement(1, \"q-grid-core-table\", 1);\r\n            i0.ɵɵtemplate(2, ViewCoreComponent_q_grid_core_table_2_Template, 1, 0, \"q-grid-core-table\", 2);\r\n            i0.ɵɵelement(3, \"q-grid-cell-handler\", 3);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"ngIf\", ctx.visibility.pin.left);\r\n            i0.ɵɵadvance(2);\r\n            i0.ɵɵproperty(\"ngIf\", ctx.visibility.pin.right);\r\n        }\r\n    }, dependencies: [i4.NgIf, CellHandlerComponent, TableCoreComponent], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ViewCoreComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-core-view', providers: [\r\n                        CellTemplateService,\r\n                        CellClassService,\r\n                        GridPlugin,\r\n                    ], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<q-grid-core-table *ngIf=\\\"visibility.pin.left\\\"\\n                   pin=\\\"left\\\"\\n                   class=\\\"q-grid-table q-grid-table-left q-grid-layout-column\\\">\\n</q-grid-core-table>\\n\\n<q-grid-core-table pin=\\\"mid\\\"\\n                   class=\\\"q-grid-table q-grid-table-mid q-grid-layout-column q-grid-flex\\\">\\n</q-grid-core-table>\\n\\n<q-grid-core-table *ngIf=\\\"visibility.pin.right\\\"\\n                   pin=\\\"right\\\"\\n                   class=\\\"q-grid-table q-grid-table-right q-grid-layout-column\\\">\\n</q-grid-core-table>\\n\\n<q-grid-cell-handler class=\\\"q-grid-cell-handler\\\">\\n</q-grid-cell-handler>\\n\" }]\r\n        }], function () { return [{ type: GridPlugin }, { type: Grid }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: GridLet }, { type: i0.ElementRef }]; }, null);\r\n})();\n\nfunction GridComponent_ng_container_0_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementContainer(0);\r\n    }\r\n}\r\nfunction GridComponent_q_grid_core_toolbar_2_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelement(0, \"q-grid-core-toolbar\", 8);\r\n    }\r\n}\r\nfunction GridComponent_q_grid_core_toolbar_4_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelement(0, \"q-grid-core-toolbar\", 9);\r\n    }\r\n}\r\nfunction GridComponent_q_grid_core_toolbar_6_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelement(0, \"q-grid-core-toolbar\", 10);\r\n    }\r\n}\r\nfunction GridComponent_q_grid_core_toolbar_7_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelement(0, \"q-grid-core-toolbar\", 11);\r\n    }\r\n}\r\nconst _c0$2 = function (a0, a1, a2, a3) { return { \"q-grid-with-left-pin\": a0, \"q-grid-with-right-pin\": a1, \"q-grid-with-top-pin\": a2, \"q-grid-with-bottom-pin\": a3 }; };\r\nclass GridComponent {\r\n    constructor(root, plugin, elementRef, zone, layerService, cd, stateAccessor, modelBuilder, document, theme) {\r\n        this.root = root;\r\n        this.plugin = plugin;\r\n        this.elementRef = elementRef;\r\n        this.zone = zone;\r\n        this.layerService = layerService;\r\n        this.cd = cd;\r\n        this.stateAccessor = stateAccessor;\r\n        this.modelBuilder = modelBuilder;\r\n        this.document = document;\r\n        this.firstSetup = true;\r\n        this.gridState = this.stateAccessor.setter(GridState);\r\n        this.dataState = this.stateAccessor.setter(DataState);\r\n        this.editState = this.stateAccessor.setter(EditState);\r\n        this.filterState = this.stateAccessor.setter(FilterState);\r\n        this.groupState = this.stateAccessor.setter(GroupState);\r\n        this.pivotState = this.stateAccessor.setter(PivotState);\r\n        this.selectionState = this.stateAccessor.setter(SelectionState);\r\n        this.scrollState = this.stateAccessor.setter(ScrollState);\r\n        this.sortState = this.stateAccessor.setter(SortState);\r\n        this.styleState = this.stateAccessor.setter(StyleState);\r\n        if (!theme.component) {\r\n            throw new GridError('grid.component', 'Ensure that grid theme module was included');\r\n        }\r\n        this.themeComponent = theme.component;\r\n    }\r\n    set model(value) {\r\n        this.root.model = value;\r\n    }\r\n    get model() {\r\n        return this.root.model;\r\n    }\r\n    // @deprecated\r\n    get visibility() {\r\n        // TODO: get rid of that\r\n        const { model } = this.plugin;\r\n        return model.visibility();\r\n    }\r\n    set gridId(id) { this.gridState({ id }); }\r\n    set gridTitle(header) { this.gridState({ caption: header }); }\r\n    set gridCaption(caption) { this.gridState({ caption }); }\r\n    set gridInteractionMode(interactionMode) { this.gridState({ interactionMode }); }\r\n    set dataColumns(columns) {\r\n        if (Array.isArray(columns)) {\r\n            this.dataState({ columns });\r\n        }\r\n    }\r\n    set dataRows(rows) {\r\n        if (Array.isArray(rows)) {\r\n            this.dataState({ rows });\r\n        }\r\n    }\r\n    set editCancel(cancel) { this.editState({ cancel }); }\r\n    set editCommit(commit) { this.editState({ commit }); }\r\n    set editEnter(enter) { this.editState({ enter }); }\r\n    set editMethod(method) { this.editState({ method }); }\r\n    set editMode(mode) { this.editState({ mode }); }\r\n    set editReset(reset) { this.editState({ reset }); }\r\n    set filterUnit(unit) { this.filterState({ unit }); }\r\n    set groupBy(by) { this.groupState({ by }); }\r\n    set groupMode(mode) { this.groupState({ mode }); }\r\n    set groupSummary(summary) { this.groupState({ summary }); }\r\n    set pivotBy(by) { this.pivotState({ by }); }\r\n    set selectionItems(items) { this.selectionState({ items }); }\r\n    set selectionArea(area) { this.selectionState({ area }); }\r\n    set selectionMode(mode) { this.selectionState({ mode }); }\r\n    set selectionUnit(unit) { this.selectionState({ unit }); }\r\n    set scrollMode(mode) { this.scrollState({ mode }); }\r\n    set sortBy(by) { this.sortState({ by }); }\r\n    set sortMode(mode) { this.sortState({ mode }); }\r\n    set sortTrigger(trigger) { this.sortState({ trigger }); }\r\n    set styleCell(cell) { this.styleState({ cell }); }\r\n    set styleRow(row) { this.styleState({ row }); }\r\n    ngOnInit() {\r\n        if (this.firstSetup) {\r\n            this.setup();\r\n        }\r\n        const { model, disposable, observe } = this.plugin;\r\n        const { nativeElement } = this.elementRef;\r\n        if (nativeElement.classList.length) {\r\n            model.style({\r\n                classList: Array.from(nativeElement.classList),\r\n            }, {\r\n                source: 'grid.component',\r\n            });\r\n        }\r\n        const host = new GridHost(nativeElement, this.plugin);\r\n        const listener = new EventListener(nativeElement, new EventManager(this));\r\n        const docListener = new EventListener(this.document, new EventManager(this));\r\n        this.zone.runOutsideAngular(() => {\r\n            disposable.add(docListener.on('focusin', () => host.invalidateActive()));\r\n            disposable.add(docListener.on('mousedown', e => {\r\n                if (model.edit().status === 'edit') {\r\n                    const path = eventPath(e);\r\n                    const clickedOutside = path.every(x => x !== nativeElement && x.classList && !x.classList.contains('q-grid-editor-part'));\r\n                    if (clickedOutside) {\r\n                        model.edit({\r\n                            status: 'view',\r\n                        }, {\r\n                            source: 'document.click',\r\n                        });\r\n                    }\r\n                }\r\n            }));\r\n            disposable.add(listener.on('keyup', e => host.keyUp(e, 'grid')));\r\n        });\r\n        disposable.add(listener.on('keydown', e => host.keyDown(e, 'grid')));\r\n        observe(model.visibilityChanged)\r\n            .subscribe(() => this.cd.detectChanges());\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes.model || this.firstSetup) {\r\n            this.setup();\r\n        }\r\n        this.stateAccessor.write(this.model);\r\n    }\r\n    setup() {\r\n        this.firstSetup = false;\r\n        const model = this.model || this.modelBuilder.build();\r\n        const table = tableFactory(model, name => this.layerService.create(name));\r\n        this.root.model = model;\r\n        this.root.table = table;\r\n    }\r\n}\r\nGridComponent.ɵfac = function GridComponent_Factory(t) { return new (t || GridComponent)(i0.ɵɵdirectiveInject(GridRoot), i0.ɵɵdirectiveInject(GridPlugin), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(LayerService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(StateAccessor), i0.ɵɵdirectiveInject(GridModelBuilder), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(ThemeService)); };\r\nGridComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: GridComponent, selectors: [[\"q-grid\"]], inputs: { model: \"model\", gridId: [\"id\", \"gridId\"], gridTitle: [\"header\", \"gridTitle\"], gridCaption: [\"caption\", \"gridCaption\"], gridInteractionMode: [\"interactionMode\", \"gridInteractionMode\"], dataColumns: [\"columns\", \"dataColumns\"], dataRows: [\"rows\", \"dataRows\"], editCancel: \"editCancel\", editCommit: \"editCommit\", editEnter: \"editEnter\", editMethod: \"editMethod\", editMode: \"editMode\", editReset: \"editReset\", filterUnit: \"filterUnit\", groupBy: \"groupBy\", groupMode: \"groupMode\", groupSummary: \"groupSummary\", pivotBy: \"pivotBy\", selectionItems: [\"selection\", \"selectionItems\"], selectionArea: \"selectionArea\", selectionMode: \"selectionMode\", selectionUnit: \"selectionUnit\", scrollMode: \"scrollMode\", sortBy: \"sortBy\", sortMode: \"sortMode\", sortTrigger: \"sortTrigger\", styleCell: \"styleCell\", styleRow: \"styleRow\" }, features: [i0.ɵɵProvidersFeature([\r\n            Grid,\r\n            GridPlugin,\r\n            GridRoot,\r\n            GridLet,\r\n            LayerService,\r\n            TemplateCacheService,\r\n            TemplateLinkService,\r\n            TemplateService,\r\n            StateAccessor,\r\n        ]), i0.ɵɵNgOnChangesFeature], decls: 9, vars: 11, consts: [[4, \"ngComponentOutlet\"], [\"q-grid-markup\", \"box\", 1, \"q-grid-box\", \"q-grid-layout-column\"], [\"position\", \"top\", \"class\", \"q-grid-toolbar q-grid-toolbar-top q-grid-flex-auto\", 4, \"ngIf\"], [1, \"q-grid-flex-100\", \"q-grid-layout-row\", 3, \"ngClass\"], [\"position\", \"left\", \"class\", \"q-grid-toolbar q-grid-toolbar-left q-grid-flex-auto\", 4, \"ngIf\"], [\"q-grid-markup\", \"view\", 1, \"q-grid-view\", \"q-grid-layout-row\", \"q-grid-flex\"], [\"position\", \"right\", \"class\", \"q-grid-toolbar q-grid-toolbar-right q-grid-flex-auto\", 4, \"ngIf\"], [\"position\", \"bottom\", \"class\", \"q-grid-toolbar q-grid-toolbar-bottom q-grid-flex-auto\", 4, \"ngIf\"], [\"position\", \"top\", 1, \"q-grid-toolbar\", \"q-grid-toolbar-top\", \"q-grid-flex-auto\"], [\"position\", \"left\", 1, \"q-grid-toolbar\", \"q-grid-toolbar-left\", \"q-grid-flex-auto\"], [\"position\", \"right\", 1, \"q-grid-toolbar\", \"q-grid-toolbar-right\", \"q-grid-flex-auto\"], [\"position\", \"bottom\", 1, \"q-grid-toolbar\", \"q-grid-toolbar-bottom\", \"q-grid-flex-auto\"]], template: function GridComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵtemplate(0, GridComponent_ng_container_0_Template, 1, 0, \"ng-container\", 0);\r\n            i0.ɵɵelementStart(1, \"q-grid-box\", 1);\r\n            i0.ɵɵtemplate(2, GridComponent_q_grid_core_toolbar_2_Template, 1, 0, \"q-grid-core-toolbar\", 2);\r\n            i0.ɵɵelementStart(3, \"div\", 3);\r\n            i0.ɵɵtemplate(4, GridComponent_q_grid_core_toolbar_4_Template, 1, 0, \"q-grid-core-toolbar\", 4);\r\n            i0.ɵɵelement(5, \"q-grid-core-view\", 5);\r\n            i0.ɵɵtemplate(6, GridComponent_q_grid_core_toolbar_6_Template, 1, 0, \"q-grid-core-toolbar\", 6);\r\n            i0.ɵɵelementEnd();\r\n            i0.ɵɵtemplate(7, GridComponent_q_grid_core_toolbar_7_Template, 1, 0, \"q-grid-core-toolbar\", 7);\r\n            i0.ɵɵelement(8, \"q-grid-core-layer\");\r\n            i0.ɵɵelementEnd();\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"ngComponentOutlet\", ctx.themeComponent);\r\n            i0.ɵɵadvance(2);\r\n            i0.ɵɵproperty(\"ngIf\", ctx.visibility.toolbar.top);\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction4(6, _c0$2, ctx.visibility.pin.left, ctx.visibility.pin.right, ctx.visibility.pin.top, ctx.visibility.pin.bottom));\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngIf\", ctx.visibility.toolbar.left);\r\n            i0.ɵɵadvance(2);\r\n            i0.ɵɵproperty(\"ngIf\", ctx.visibility.toolbar.right);\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngIf\", ctx.visibility.toolbar.bottom);\r\n        }\r\n    }, dependencies: [i4.NgClass, i4.NgComponentOutlet, i4.NgIf, BoxComponent, LayerCoreComponent, MarkupDirective, ToolbarCoreComponent, ViewCoreComponent], styles: [\".q-grid-flex-auto{flex:1 1 auto;box-sizing:border-box}.q-grid-flex-none{flex:0 0 auto;box-sizing:border-box}.q-grid-flex{flex:1;box-sizing:border-box}.q-grid-flex-100{flex:1 1 100%;max-width:100%;max-height:100%;box-sizing:border-box}.q-grid-layout-row>.q-grid-flex-100{flex:1 1 100%;max-width:100%;max-height:100%;box-sizing:border-box}.q-grid-layout-column>.q-grid-flex-100{flex:1 1 100%;max-width:100%;max-height:100%;box-sizing:border-box}.q-grid-layout-row>.q-grid-flex{min-width:0}.q-grid-layout-column>.q-grid-flex{min-height:0}.q-grid-layout-column,.q-grid-layout-row{display:flex;box-sizing:border-box}.q-grid-layout-column{flex-direction:column}.q-grid-layout-row{flex-direction:row;min-height:0}.q-grid-layout-align-center-center{justify-content:center;align-items:center;align-content:center;max-width:100%}.q-grid-layout-align-center-center>*{max-width:100%;box-sizing:border-box}.q-grid-layout-align-start-center{justify-content:flex-start;align-items:center;align-content:center;max-width:100%}.q-grid-layout-align-start-center>*{max-width:100%;box-sizing:border-box}.q-grid-layout-align-end-center{justify-content:flex-end;align-items:center;align-content:center;max-width:100%}.q-grid-layout-align-end-center>*{max-width:100%;box-sizing:border-box}q-grid{display:block}.q-grid tbody tr.q-grid-scroll-mark{height:0;border:none}.q-grid ::-webkit-scrollbar{width:8px;height:8px}.q-grid ::-webkit-scrollbar-thumb{height:15px;background-color:#c8c8c8;box-shadow:inset 1px 1px #0000001a,inset 0 -1px #00000012}.q-grid ::-webkit-scrollbar-button{width:0;height:0;display:none}.q-grid ::-webkit-scrollbar-corner{background-color:transparent}.q-grid ::-webkit-scrollbar-track,.q-grid ::-webkit-scrollbar-track-piece{background-color:#f8f8f8}.q-grid.q-grid-box{height:100%;min-height:100%;max-height:100%;transform:translateZ(0);position:relative;font-family:roboto,Helvetica Neue,sans-serif}.q-grid td,.q-grid th{width:150px;min-width:150px;max-width:150px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;-ms-box-sizing:border-box;user-select:none;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;vertical-align:middle;text-align:left;position:relative}.q-grid td.q-grid-pivot,.q-grid th.q-grid-pivot{text-align:center}.q-grid td.q-grid-pad,.q-grid th.q-grid-pad{width:100%;min-width:100%;max-width:100%;padding:0 0 0 1px!important;margin:0!important}.q-grid td.q-grid-row-indicator,.q-grid th.q-grid-row-indicator{width:24px;min-width:24px;max-width:24px}.q-grid td.q-grid-row-expand,.q-grid td.q-grid-row-options,.q-grid th.q-grid-row-expand,.q-grid th.q-grid-row-options{width:48px;min-width:48px;max-width:48px}.q-grid td.q-grid-row-number,.q-grid td.q-grid-select,.q-grid th.q-grid-row-number,.q-grid th.q-grid-select{width:56px;min-width:56px;max-width:56px}.q-grid td.q-grid-image,.q-grid td.q-grid-pivot,.q-grid td.q-grid-bool,.q-grid th.q-grid-image,.q-grid th.q-grid-pivot,.q-grid th.q-grid-bool{width:80px;min-width:80px;max-width:80px}.q-grid td.q-grid-password,.q-grid td.q-grid-number,.q-grid td.q-grid-currency,.q-grid td.q-grid-id,.q-grid th.q-grid-password,.q-grid th.q-grid-number,.q-grid th.q-grid-currency,.q-grid th.q-grid-id{width:100px;min-width:100px;max-width:100px}.q-grid td.q-grid-date,.q-grid th.q-grid-date{width:120px;min-width:120px;max-width:120px}.q-grid td.q-grid-datetime,.q-grid th.q-grid-datetime{width:180px;min-width:180px;max-width:180px}.q-grid td.q-grid-group,.q-grid td.q-grid-email,.q-grid th.q-grid-group,.q-grid th.q-grid-email{width:200px;min-width:200px;max-width:200px}.q-grid td.q-grid-array,.q-grid th.q-grid-array{width:250px;min-width:250px;max-width:250px}.q-grid td.q-grid-the-\\\\$alt\\\\.number,.q-grid th.q-grid-the-\\\\$alt\\\\.number{width:48px;min-width:48px;max-width:48px}.q-grid td.q-grid-select,.q-grid td.q-grid-row-options,.q-grid td.q-grid-row-indicator,.q-grid td.q-grid-array,.q-grid td.q-grid-image,.q-grid td.q-grid-row-expand,.q-grid td.q-grid-pad,.q-grid th.q-grid-select,.q-grid th.q-grid-row-options,.q-grid th.q-grid-row-indicator,.q-grid th.q-grid-array,.q-grid th.q-grid-image,.q-grid th.q-grid-row-expand,.q-grid th.q-grid-pad{text-overflow:initial}.q-grid td.q-grid-has-view-width,.q-grid th.q-grid-has-view-width{transition:min-width .3s,width .3s,max-width .3s}.q-grid td.q-grid-can-select-text,.q-grid th.q-grid-can-select-text{user-select:auto;-moz-user-select:auto;-webkit-user-select:auto;-ms-user-select:auto}.q-grid td.q-grid-fit-head,.q-grid th.q-grid-fit-head{width:auto;max-width:none;min-width:auto}.q-grid tbody td.q-grid-number,.q-grid tbody td.q-grid-currency,.q-grid tfoot td.q-grid-number,.q-grid tfoot td.q-grid-currency{text-align:right}.q-grid tbody td.q-grid-id,.q-grid tfoot td.q-grid-id{text-align:left}.q-grid tbody td.q-grid-bool,.q-grid tbody td.q-grid-password,.q-grid tbody td.q-grid-select,.q-grid tfoot td.q-grid-bool,.q-grid tfoot td.q-grid-password,.q-grid tfoot td.q-grid-select{text-align:center}.q-grid tbody td.q-grid-dropdown select,.q-grid tfoot td.q-grid-dropdown select{width:100%}.q-grid tbody td.q-grid-row-options,.q-grid tfoot td.q-grid-row-options{cursor:pointer}.q-grid tbody tr:not(.q-grid-highlighted) td:not(.q-grid-highlighted).q-grid-row-number,.q-grid tfoot tr:not(.q-grid-highlighted) td:not(.q-grid-highlighted).q-grid-row-number{background:#f5f5f5}.q-grid-can-drag{user-select:none;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;-khtml-user-drag:element;-webkit-user-drag:element}.q-grid.q-grid-box.q-grid-drag tr,.q-grid.q-grid-box.q-grid-drag td,.q-grid.q-grid-box.q-grid-drag th{transition:none!important;background-color:inherit!important;outline:none!important}.q-grid.q-grid-box.q-grid-drag th .q-grid-icon,.q-grid.q-grid-box.q-grid-drag th .q-grid-resize-handler{visibility:hidden}.q-grid.q-grid-box .q-grid-row-indicator .q-grid-can-drag{cursor:move;opacity:.4}.q-grid.q-grid-box .q-grid-row-indicator .q-grid-can-drag .q-grid-icon{min-width:16px;width:16px;min-height:16px;height:16px;font-size:16px;line-height:16px;vertical-align:middle}.q-grid tr.q-grid-drag,.q-grid td.q-grid-drag,.q-grid th.q-grid-drag{opacity:.5}.q-grid .q-grid-layer{position:absolute;inset:0;pointer-events:none;z-index:3}.q-grid .q-grid-layer>*{pointer-events:all}.q-grid .q-grid-live-row{border:none!important}.q-grid .q-grid-table-mid .q-grid-live-row{background-color:#fff!important;z-index:2;position:relative;display:inline-table!important;opacity:1!important}.q-grid .q-grid-table-mid .q-grid-live-row:before,.q-grid .q-grid-table-mid .q-grid-live-row:after{content:\\\"\\\";position:absolute;width:100%;height:.7px;background-color:#e0e0e0;left:0}.q-grid .q-grid-table-mid .q-grid-live-row:before{top:0}.q-grid .q-grid-table-mid .q-grid-live-row:after{bottom:0}.q-grid .q-grid-live-cell{display:block;margin:0 -10px;border-radius:5px}@keyframes textBackroundColor{0%{background-color:transparent}to{background-color:transparent}}.q-grid .q-grid-live-cell span{display:inline-block;padding:0 5px;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.q-grid .q-grid-live-cell span:first-child{padding-left:10px}.q-grid .q-grid-live-cell span:last-child{padding-right:10px}.q-grid .q-grid-live-cell-diff{font-weight:700}.q-grid .q-grid-live-cell-up{color:green;background-color:transparent}.q-grid .q-grid-live-cell-down{color:red;background-color:transparent}.q-grid .q-grid-live-cell-text .q-grid-live-cell-prev{text-decoration:line-through}.q-grid .q-grid-live-cell-text .q-grid-live-cell-container{animation:textBackroundColor 3s}.q-grid .q-grid-live-cell-currency .q-grid-live-cell-prev{display:none}.q-grid th>.q-grid-resize-handler{position:absolute;top:20%;bottom:20%;right:0;height:60%;width:4px;z-index:2;background:transparent;border-right:1px solid #e0e0e0;cursor:col-resize;opacity:0}.q-grid th.q-grid-highlighted .q-grid-resize-handler,.q-grid th.q-grid-highlighted-prev .q-grid-resize-handler{opacity:1}.q-grid td>.q-grid-can-drag>.q-grid-resize-handler{position:absolute;height:2px;width:100%;bottom:0;left:0;cursor:row-resize;z-index:2;pointer-events:all}.q-grid td q-grid-resize{border-right:2px solid #000}.q-grid .q-grid-table tbody,.q-grid .q-grid-table thead,.q-grid .q-grid-table tfoot{border-collapse:collapse;border-spacing:0}.q-grid .q-grid-table table{border-spacing:0;overflow:hidden;table-layout:fixed;display:flex;flex-flow:column;height:100%;width:100%;outline:none}.q-grid .q-grid-table table thead,.q-grid .q-grid-table table tfoot{flex:0 0 auto;width:calc(100% - 8px);overflow:hidden}.q-grid .q-grid-table table tbody{flex:1 1 auto;display:block;overflow:scroll;scrollbar-color:#c8c8c8 #f8f8f8;scrollbar-width:thin;outline:none;overflow-anchor:none}.q-grid .q-grid-table table tbody.q-grid-body-top{flex:none;overflow-x:hidden}.q-grid .q-grid-table table tbody.q-grid-body-bottom{flex:none}.q-grid .q-grid-table table tbody tr{width:100%;display:table-row;table-layout:fixed}.q-grid .q-grid-table table tbody tr.q-grid-align{height:0!important;border:0}.q-grid .q-grid-table table tbody tr.q-grid-align:last-child{display:initial}.q-grid .q-grid-table.q-grid-table-left thead,.q-grid .q-grid-table.q-grid-table-left tfoot{width:100%}.q-grid .q-grid-with-right-pin>.q-grid-view>.q-grid-table.q-grid-table-mid>table>thead,.q-grid .q-grid-with-right-pin>.q-grid-view>.q-grid-table.q-grid-table-mid>table>tfoot{width:100%}.q-grid .q-grid-toolbar{position:relative}.q-grid .q-grid-toolbar-left,.q-grid .q-grid-toolbar-right{max-width:250px;overflow:auto}.q-grid .q-grid-toolbar-top,.q-grid .q-grid-toolbar-bottom{overflow:hidden}.q-grid .q-grid-toolbar-top{height:56px;min-height:56px;max-height:56px}.q-grid .q-grid-toolbar-top>div{height:100%}.q-grid .q-grid-toolbar-bottom{height:50px;min-height:50px;max-height:50px}.q-grid .q-grid-view{position:relative;overflow:hidden}.q-grid .q-grid-view.q-grid-select-range thead td,.q-grid .q-grid-view.q-grid-select-range thead th,.q-grid .q-grid-view.q-grid-select-range tfoot td,.q-grid .q-grid-view.q-grid-select-range tfoot th,.q-grid .q-grid-view.q-grid-select-range tbody td,.q-grid .q-grid-view.q-grid-select-range tbody th{user-select:none;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;cursor:default}.q-grid .q-grid-view>.q-grid-table-left>table>tbody{overflow-y:hidden}.q-grid .q-grid-with-right-pin>.q-grid-view .q-grid-table thead th:first-child{border-left:none}.q-grid .q-grid-with-right-pin>.q-grid-view>.q-grid-table-mid>table>tbody{overflow-y:hidden}.q-grid .q-grid-with-bottom-pin>.q-grid-view>.q-grid-table-mid>table>tbody:not(.q-grid-body-bottom){overflow-x:hidden}.q-grid td.q-grid-sorted{background-color:#f5f5f5}.q-grid .q-grid-select-row tr:not(.q-grid-highlighted) td:not(.q-grid-highlighted).q-grid-selected,.q-grid .q-grid-select-column tr:not(.q-grid-highlighted) td:not(.q-grid-highlighted).q-grid-selected,.q-grid .q-grid-select-mix tr:not(.q-grid-highlighted) td:not(.q-grid-highlighted).q-grid-selected,.q-grid .q-grid-select-range tr:not(.q-grid-highlighted) td:not(.q-grid-highlighted).q-grid-selected{background-color:#f5f5f5}.q-grid td.q-grid-focused{outline:2px solid rgba(63,81,181,.05);outline-offset:-2px}.q-grid td.q-grid-focused.q-grid-animate{outline:none}.q-grid .q-grid-edit-marker{width:10px;height:10px;user-select:none;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;display:block;position:absolute;pointer-events:all;cursor:move;bottom:3px;right:3px;font-size:14px;color:#c8c8c8;opacity:.2}.q-grid .q-grid-view.q-grid-active td.q-grid-focused{outline-color:#3f51b540}.q-grid .q-grid-view.q-grid-active .q-grid-edit-marker{opacity:1}.q-grid .q-grid-cell-handler{display:block;position:absolute;outline:none;pointer-events:none;outline-offset:-2px;transition:width .15s,height .15s,top .15s,left .15s}.q-grid .q-grid-cell-handler.q-grid-active{outline:2px solid rgba(63,81,181,.25)}.q-grid tr.q-grid-highlighted,.q-grid td.q-grid-highlighted,.q-grid tr.q-grid-highlighted td.q-grid-sorted,.q-grid tr.q-grid-highlighted td.q-grid-selected,.q-grid tr.q-grid-highlighted td.q-grid-focused{background-color:#eee}.q-grid-highlight-part{background-color:#ff0;color:#000}\\n\"], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid', providers: [\r\n                        Grid,\r\n                        GridPlugin,\r\n                        GridRoot,\r\n                        GridLet,\r\n                        LayerService,\r\n                        TemplateCacheService,\r\n                        TemplateLinkService,\r\n                        TemplateService,\r\n                        StateAccessor,\r\n                    ], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container *ngComponentOutlet=\\\"themeComponent\\\">\\n</ng-container>\\n\\n<q-grid-box class=\\\"q-grid-box q-grid-layout-column\\\"\\n\\t\\t\\t\\t\\t\\tq-grid-markup=\\\"box\\\">\\n\\n\\t<q-grid-core-toolbar position=\\\"top\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"q-grid-toolbar q-grid-toolbar-top q-grid-flex-auto\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t*ngIf=\\\"visibility.toolbar.top\\\">\\n\\t</q-grid-core-toolbar>\\n\\n\\t<div class=\\\"q-grid-flex-100 q-grid-layout-row\\\"\\n\\t\\t\\t[ngClass]=\\\"{\\n\\t\\t\\t\\t'q-grid-with-left-pin': visibility.pin.left,\\n\\t\\t\\t\\t'q-grid-with-right-pin': visibility.pin.right,\\n\\t\\t\\t\\t'q-grid-with-top-pin': visibility.pin.top,\\n\\t\\t\\t\\t'q-grid-with-bottom-pin': visibility.pin.bottom\\n\\t\\t\\t}\\\">\\n\\t\\t<q-grid-core-toolbar position=\\\"left\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"q-grid-toolbar q-grid-toolbar-left q-grid-flex-auto\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t*ngIf=\\\"visibility.toolbar.left\\\">\\n\\t\\t</q-grid-core-toolbar>\\n\\t\\t<q-grid-core-view class=\\\"q-grid-view q-grid-layout-row q-grid-flex\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tq-grid-markup=\\\"view\\\">\\n\\t\\t</q-grid-core-view>\\n\\t\\t<q-grid-core-toolbar position=\\\"right\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"q-grid-toolbar q-grid-toolbar-right q-grid-flex-auto\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t*ngIf=\\\"visibility.toolbar.right\\\">\\n\\t\\t</q-grid-core-toolbar>\\n\\t</div>\\n\\n\\t<q-grid-core-toolbar position=\\\"bottom\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"q-grid-toolbar q-grid-toolbar-bottom q-grid-flex-auto\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t*ngIf=\\\"visibility.toolbar.bottom\\\">\\n\\t</q-grid-core-toolbar>\\n\\n\\t<q-grid-core-layer>\\n\\t</q-grid-core-layer>\\n\\n</q-grid-box>\\n\", styles: [\".q-grid-flex-auto{flex:1 1 auto;box-sizing:border-box}.q-grid-flex-none{flex:0 0 auto;box-sizing:border-box}.q-grid-flex{flex:1;box-sizing:border-box}.q-grid-flex-100{flex:1 1 100%;max-width:100%;max-height:100%;box-sizing:border-box}.q-grid-layout-row>.q-grid-flex-100{flex:1 1 100%;max-width:100%;max-height:100%;box-sizing:border-box}.q-grid-layout-column>.q-grid-flex-100{flex:1 1 100%;max-width:100%;max-height:100%;box-sizing:border-box}.q-grid-layout-row>.q-grid-flex{min-width:0}.q-grid-layout-column>.q-grid-flex{min-height:0}.q-grid-layout-column,.q-grid-layout-row{display:flex;box-sizing:border-box}.q-grid-layout-column{flex-direction:column}.q-grid-layout-row{flex-direction:row;min-height:0}.q-grid-layout-align-center-center{justify-content:center;align-items:center;align-content:center;max-width:100%}.q-grid-layout-align-center-center>*{max-width:100%;box-sizing:border-box}.q-grid-layout-align-start-center{justify-content:flex-start;align-items:center;align-content:center;max-width:100%}.q-grid-layout-align-start-center>*{max-width:100%;box-sizing:border-box}.q-grid-layout-align-end-center{justify-content:flex-end;align-items:center;align-content:center;max-width:100%}.q-grid-layout-align-end-center>*{max-width:100%;box-sizing:border-box}q-grid{display:block}.q-grid tbody tr.q-grid-scroll-mark{height:0;border:none}.q-grid ::-webkit-scrollbar{width:8px;height:8px}.q-grid ::-webkit-scrollbar-thumb{height:15px;background-color:#c8c8c8;box-shadow:inset 1px 1px #0000001a,inset 0 -1px #00000012}.q-grid ::-webkit-scrollbar-button{width:0;height:0;display:none}.q-grid ::-webkit-scrollbar-corner{background-color:transparent}.q-grid ::-webkit-scrollbar-track,.q-grid ::-webkit-scrollbar-track-piece{background-color:#f8f8f8}.q-grid.q-grid-box{height:100%;min-height:100%;max-height:100%;transform:translateZ(0);position:relative;font-family:roboto,Helvetica Neue,sans-serif}.q-grid td,.q-grid th{width:150px;min-width:150px;max-width:150px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;-ms-box-sizing:border-box;user-select:none;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;vertical-align:middle;text-align:left;position:relative}.q-grid td.q-grid-pivot,.q-grid th.q-grid-pivot{text-align:center}.q-grid td.q-grid-pad,.q-grid th.q-grid-pad{width:100%;min-width:100%;max-width:100%;padding:0 0 0 1px!important;margin:0!important}.q-grid td.q-grid-row-indicator,.q-grid th.q-grid-row-indicator{width:24px;min-width:24px;max-width:24px}.q-grid td.q-grid-row-expand,.q-grid td.q-grid-row-options,.q-grid th.q-grid-row-expand,.q-grid th.q-grid-row-options{width:48px;min-width:48px;max-width:48px}.q-grid td.q-grid-row-number,.q-grid td.q-grid-select,.q-grid th.q-grid-row-number,.q-grid th.q-grid-select{width:56px;min-width:56px;max-width:56px}.q-grid td.q-grid-image,.q-grid td.q-grid-pivot,.q-grid td.q-grid-bool,.q-grid th.q-grid-image,.q-grid th.q-grid-pivot,.q-grid th.q-grid-bool{width:80px;min-width:80px;max-width:80px}.q-grid td.q-grid-password,.q-grid td.q-grid-number,.q-grid td.q-grid-currency,.q-grid td.q-grid-id,.q-grid th.q-grid-password,.q-grid th.q-grid-number,.q-grid th.q-grid-currency,.q-grid th.q-grid-id{width:100px;min-width:100px;max-width:100px}.q-grid td.q-grid-date,.q-grid th.q-grid-date{width:120px;min-width:120px;max-width:120px}.q-grid td.q-grid-datetime,.q-grid th.q-grid-datetime{width:180px;min-width:180px;max-width:180px}.q-grid td.q-grid-group,.q-grid td.q-grid-email,.q-grid th.q-grid-group,.q-grid th.q-grid-email{width:200px;min-width:200px;max-width:200px}.q-grid td.q-grid-array,.q-grid th.q-grid-array{width:250px;min-width:250px;max-width:250px}.q-grid td.q-grid-the-\\\\$alt\\\\.number,.q-grid th.q-grid-the-\\\\$alt\\\\.number{width:48px;min-width:48px;max-width:48px}.q-grid td.q-grid-select,.q-grid td.q-grid-row-options,.q-grid td.q-grid-row-indicator,.q-grid td.q-grid-array,.q-grid td.q-grid-image,.q-grid td.q-grid-row-expand,.q-grid td.q-grid-pad,.q-grid th.q-grid-select,.q-grid th.q-grid-row-options,.q-grid th.q-grid-row-indicator,.q-grid th.q-grid-array,.q-grid th.q-grid-image,.q-grid th.q-grid-row-expand,.q-grid th.q-grid-pad{text-overflow:initial}.q-grid td.q-grid-has-view-width,.q-grid th.q-grid-has-view-width{transition:min-width .3s,width .3s,max-width .3s}.q-grid td.q-grid-can-select-text,.q-grid th.q-grid-can-select-text{user-select:auto;-moz-user-select:auto;-webkit-user-select:auto;-ms-user-select:auto}.q-grid td.q-grid-fit-head,.q-grid th.q-grid-fit-head{width:auto;max-width:none;min-width:auto}.q-grid tbody td.q-grid-number,.q-grid tbody td.q-grid-currency,.q-grid tfoot td.q-grid-number,.q-grid tfoot td.q-grid-currency{text-align:right}.q-grid tbody td.q-grid-id,.q-grid tfoot td.q-grid-id{text-align:left}.q-grid tbody td.q-grid-bool,.q-grid tbody td.q-grid-password,.q-grid tbody td.q-grid-select,.q-grid tfoot td.q-grid-bool,.q-grid tfoot td.q-grid-password,.q-grid tfoot td.q-grid-select{text-align:center}.q-grid tbody td.q-grid-dropdown select,.q-grid tfoot td.q-grid-dropdown select{width:100%}.q-grid tbody td.q-grid-row-options,.q-grid tfoot td.q-grid-row-options{cursor:pointer}.q-grid tbody tr:not(.q-grid-highlighted) td:not(.q-grid-highlighted).q-grid-row-number,.q-grid tfoot tr:not(.q-grid-highlighted) td:not(.q-grid-highlighted).q-grid-row-number{background:#f5f5f5}.q-grid-can-drag{user-select:none;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;-khtml-user-drag:element;-webkit-user-drag:element}.q-grid.q-grid-box.q-grid-drag tr,.q-grid.q-grid-box.q-grid-drag td,.q-grid.q-grid-box.q-grid-drag th{transition:none!important;background-color:inherit!important;outline:none!important}.q-grid.q-grid-box.q-grid-drag th .q-grid-icon,.q-grid.q-grid-box.q-grid-drag th .q-grid-resize-handler{visibility:hidden}.q-grid.q-grid-box .q-grid-row-indicator .q-grid-can-drag{cursor:move;opacity:.4}.q-grid.q-grid-box .q-grid-row-indicator .q-grid-can-drag .q-grid-icon{min-width:16px;width:16px;min-height:16px;height:16px;font-size:16px;line-height:16px;vertical-align:middle}.q-grid tr.q-grid-drag,.q-grid td.q-grid-drag,.q-grid th.q-grid-drag{opacity:.5}.q-grid .q-grid-layer{position:absolute;inset:0;pointer-events:none;z-index:3}.q-grid .q-grid-layer>*{pointer-events:all}.q-grid .q-grid-live-row{border:none!important}.q-grid .q-grid-table-mid .q-grid-live-row{background-color:#fff!important;z-index:2;position:relative;display:inline-table!important;opacity:1!important}.q-grid .q-grid-table-mid .q-grid-live-row:before,.q-grid .q-grid-table-mid .q-grid-live-row:after{content:\\\"\\\";position:absolute;width:100%;height:.7px;background-color:#e0e0e0;left:0}.q-grid .q-grid-table-mid .q-grid-live-row:before{top:0}.q-grid .q-grid-table-mid .q-grid-live-row:after{bottom:0}.q-grid .q-grid-live-cell{display:block;margin:0 -10px;border-radius:5px}@keyframes textBackroundColor{0%{background-color:transparent}to{background-color:transparent}}.q-grid .q-grid-live-cell span{display:inline-block;padding:0 5px;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.q-grid .q-grid-live-cell span:first-child{padding-left:10px}.q-grid .q-grid-live-cell span:last-child{padding-right:10px}.q-grid .q-grid-live-cell-diff{font-weight:700}.q-grid .q-grid-live-cell-up{color:green;background-color:transparent}.q-grid .q-grid-live-cell-down{color:red;background-color:transparent}.q-grid .q-grid-live-cell-text .q-grid-live-cell-prev{text-decoration:line-through}.q-grid .q-grid-live-cell-text .q-grid-live-cell-container{animation:textBackroundColor 3s}.q-grid .q-grid-live-cell-currency .q-grid-live-cell-prev{display:none}.q-grid th>.q-grid-resize-handler{position:absolute;top:20%;bottom:20%;right:0;height:60%;width:4px;z-index:2;background:transparent;border-right:1px solid #e0e0e0;cursor:col-resize;opacity:0}.q-grid th.q-grid-highlighted .q-grid-resize-handler,.q-grid th.q-grid-highlighted-prev .q-grid-resize-handler{opacity:1}.q-grid td>.q-grid-can-drag>.q-grid-resize-handler{position:absolute;height:2px;width:100%;bottom:0;left:0;cursor:row-resize;z-index:2;pointer-events:all}.q-grid td q-grid-resize{border-right:2px solid #000}.q-grid .q-grid-table tbody,.q-grid .q-grid-table thead,.q-grid .q-grid-table tfoot{border-collapse:collapse;border-spacing:0}.q-grid .q-grid-table table{border-spacing:0;overflow:hidden;table-layout:fixed;display:flex;flex-flow:column;height:100%;width:100%;outline:none}.q-grid .q-grid-table table thead,.q-grid .q-grid-table table tfoot{flex:0 0 auto;width:calc(100% - 8px);overflow:hidden}.q-grid .q-grid-table table tbody{flex:1 1 auto;display:block;overflow:scroll;scrollbar-color:#c8c8c8 #f8f8f8;scrollbar-width:thin;outline:none;overflow-anchor:none}.q-grid .q-grid-table table tbody.q-grid-body-top{flex:none;overflow-x:hidden}.q-grid .q-grid-table table tbody.q-grid-body-bottom{flex:none}.q-grid .q-grid-table table tbody tr{width:100%;display:table-row;table-layout:fixed}.q-grid .q-grid-table table tbody tr.q-grid-align{height:0!important;border:0}.q-grid .q-grid-table table tbody tr.q-grid-align:last-child{display:initial}.q-grid .q-grid-table.q-grid-table-left thead,.q-grid .q-grid-table.q-grid-table-left tfoot{width:100%}.q-grid .q-grid-with-right-pin>.q-grid-view>.q-grid-table.q-grid-table-mid>table>thead,.q-grid .q-grid-with-right-pin>.q-grid-view>.q-grid-table.q-grid-table-mid>table>tfoot{width:100%}.q-grid .q-grid-toolbar{position:relative}.q-grid .q-grid-toolbar-left,.q-grid .q-grid-toolbar-right{max-width:250px;overflow:auto}.q-grid .q-grid-toolbar-top,.q-grid .q-grid-toolbar-bottom{overflow:hidden}.q-grid .q-grid-toolbar-top{height:56px;min-height:56px;max-height:56px}.q-grid .q-grid-toolbar-top>div{height:100%}.q-grid .q-grid-toolbar-bottom{height:50px;min-height:50px;max-height:50px}.q-grid .q-grid-view{position:relative;overflow:hidden}.q-grid .q-grid-view.q-grid-select-range thead td,.q-grid .q-grid-view.q-grid-select-range thead th,.q-grid .q-grid-view.q-grid-select-range tfoot td,.q-grid .q-grid-view.q-grid-select-range tfoot th,.q-grid .q-grid-view.q-grid-select-range tbody td,.q-grid .q-grid-view.q-grid-select-range tbody th{user-select:none;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;cursor:default}.q-grid .q-grid-view>.q-grid-table-left>table>tbody{overflow-y:hidden}.q-grid .q-grid-with-right-pin>.q-grid-view .q-grid-table thead th:first-child{border-left:none}.q-grid .q-grid-with-right-pin>.q-grid-view>.q-grid-table-mid>table>tbody{overflow-y:hidden}.q-grid .q-grid-with-bottom-pin>.q-grid-view>.q-grid-table-mid>table>tbody:not(.q-grid-body-bottom){overflow-x:hidden}.q-grid td.q-grid-sorted{background-color:#f5f5f5}.q-grid .q-grid-select-row tr:not(.q-grid-highlighted) td:not(.q-grid-highlighted).q-grid-selected,.q-grid .q-grid-select-column tr:not(.q-grid-highlighted) td:not(.q-grid-highlighted).q-grid-selected,.q-grid .q-grid-select-mix tr:not(.q-grid-highlighted) td:not(.q-grid-highlighted).q-grid-selected,.q-grid .q-grid-select-range tr:not(.q-grid-highlighted) td:not(.q-grid-highlighted).q-grid-selected{background-color:#f5f5f5}.q-grid td.q-grid-focused{outline:2px solid rgba(63,81,181,.05);outline-offset:-2px}.q-grid td.q-grid-focused.q-grid-animate{outline:none}.q-grid .q-grid-edit-marker{width:10px;height:10px;user-select:none;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;display:block;position:absolute;pointer-events:all;cursor:move;bottom:3px;right:3px;font-size:14px;color:#c8c8c8;opacity:.2}.q-grid .q-grid-view.q-grid-active td.q-grid-focused{outline-color:#3f51b540}.q-grid .q-grid-view.q-grid-active .q-grid-edit-marker{opacity:1}.q-grid .q-grid-cell-handler{display:block;position:absolute;outline:none;pointer-events:none;outline-offset:-2px;transition:width .15s,height .15s,top .15s,left .15s}.q-grid .q-grid-cell-handler.q-grid-active{outline:2px solid rgba(63,81,181,.25)}.q-grid tr.q-grid-highlighted,.q-grid td.q-grid-highlighted,.q-grid tr.q-grid-highlighted td.q-grid-sorted,.q-grid tr.q-grid-highlighted td.q-grid-selected,.q-grid tr.q-grid-highlighted td.q-grid-focused{background-color:#eee}.q-grid-highlight-part{background-color:#ff0;color:#000}\\n\"] }]\r\n        }], function () {\r\n        return [{ type: GridRoot }, { type: GridPlugin }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: LayerService }, { type: i0.ChangeDetectorRef }, { type: StateAccessor }, { type: GridModelBuilder }, { type: undefined, decorators: [{\r\n                        type: Inject,\r\n                        args: [DOCUMENT]\r\n                    }] }, { type: ThemeService }];\r\n    }, { model: [{\r\n                type: Input\r\n            }], gridId: [{\r\n                type: Input,\r\n                args: ['id']\r\n            }], gridTitle: [{\r\n                type: Input,\r\n                args: ['header']\r\n            }], gridCaption: [{\r\n                type: Input,\r\n                args: ['caption']\r\n            }], gridInteractionMode: [{\r\n                type: Input,\r\n                args: ['interactionMode']\r\n            }], dataColumns: [{\r\n                type: Input,\r\n                args: ['columns']\r\n            }], dataRows: [{\r\n                type: Input,\r\n                args: ['rows']\r\n            }], editCancel: [{\r\n                type: Input\r\n            }], editCommit: [{\r\n                type: Input\r\n            }], editEnter: [{\r\n                type: Input\r\n            }], editMethod: [{\r\n                type: Input\r\n            }], editMode: [{\r\n                type: Input\r\n            }], editReset: [{\r\n                type: Input\r\n            }], filterUnit: [{\r\n                type: Input\r\n            }], groupBy: [{\r\n                type: Input\r\n            }], groupMode: [{\r\n                type: Input\r\n            }], groupSummary: [{\r\n                type: Input\r\n            }], pivotBy: [{\r\n                type: Input\r\n            }], selectionItems: [{\r\n                type: Input,\r\n                args: ['selection']\r\n            }], selectionArea: [{\r\n                type: Input\r\n            }], selectionMode: [{\r\n                type: Input\r\n            }], selectionUnit: [{\r\n                type: Input\r\n            }], scrollMode: [{\r\n                type: Input\r\n            }], sortBy: [{\r\n                type: Input\r\n            }], sortMode: [{\r\n                type: Input\r\n            }], sortTrigger: [{\r\n                type: Input\r\n            }], styleCell: [{\r\n                type: Input\r\n            }], styleRow: [{\r\n                type: Input\r\n            }] });\r\n})();\n\nconst _c0$1 = [\"*\"];\r\nclass LayerComponent {\r\n    constructor(templateHost) {\r\n        templateHost.key = source => `layer-${source}.tpl.html`;\r\n    }\r\n}\r\nLayerComponent.ɵfac = function LayerComponent_Factory(t) { return new (t || LayerComponent)(i0.ɵɵdirectiveInject(TemplateHostService)); };\r\nLayerComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: LayerComponent, selectors: [[\"q-grid-layer\"]], features: [i0.ɵɵProvidersFeature([TemplateHostService])], ngContentSelectors: _c0$1, decls: 1, vars: 0, template: function LayerComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵprojectionDef();\r\n            i0.ɵɵprojection(0);\r\n        }\r\n    }, encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LayerComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'q-grid-layer',\r\n                    template: `<ng-content></ng-content>\n`,\r\n                    providers: [TemplateHostService],\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                }]\r\n        }], function () { return [{ type: TemplateHostService }]; }, null);\r\n})();\n\nclass TemplateLinkDirective {\r\n    constructor(templateLink, templateRef) {\r\n        this.templateLink = templateLink;\r\n        this.templateRef = templateRef;\r\n        this.key = '';\r\n        this.context = {};\r\n    }\r\n    ngOnInit() {\r\n        const link = new TemplateLink(this.templateRef, this.context);\r\n        this.templateLink.put(this.key, link);\r\n    }\r\n}\r\nTemplateLinkDirective.ɵfac = function TemplateLinkDirective_Factory(t) { return new (t || TemplateLinkDirective)(i0.ɵɵdirectiveInject(TemplateLinkService), i0.ɵɵdirectiveInject(i0.TemplateRef)); };\r\nTemplateLinkDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: TemplateLinkDirective, selectors: [[\"ng-template\", \"key\", \"\"]], inputs: { key: \"key\", context: \"context\" } });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TemplateLinkDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: 'ng-template[key]', // eslint-disable-line @angular-eslint/directive-selector\r\n                }]\r\n        }], function () { return [{ type: TemplateLinkService }, { type: i0.TemplateRef }]; }, { key: [{\r\n                type: Input\r\n            }], context: [{\r\n                type: Input\r\n            }] });\r\n})();\n\nclass TemplateCacheDirective {\r\n    constructor(templateCache, templateRef, templateHost) {\r\n        this.templateCache = templateCache;\r\n        this.templateRef = templateRef;\r\n        this.templateHost = templateHost;\r\n        this.key = '';\r\n        this.context = {};\r\n    }\r\n    ngOnInit() {\r\n        const link = new TemplateLink(this.templateRef, this.context);\r\n        if (this.templateHost) {\r\n            this.templateCache.put(this.templateHost.key(this.key), link);\r\n        }\r\n        else {\r\n            this.templateCache.put(this.key, link);\r\n        }\r\n    }\r\n}\r\nTemplateCacheDirective.ɵfac = function TemplateCacheDirective_Factory(t) { return new (t || TemplateCacheDirective)(i0.ɵɵdirectiveInject(TemplateCacheService), i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(TemplateHostService, 8)); };\r\nTemplateCacheDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: TemplateCacheDirective, selectors: [[\"ng-template\", \"for\", \"\"]], inputs: { key: [\"for\", \"key\"], context: \"context\" } });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TemplateCacheDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: 'ng-template[for]', // eslint-disable-line @angular-eslint/directive-selector\r\n                }]\r\n        }], function () {\r\n        return [{ type: TemplateCacheService }, { type: i0.TemplateRef }, { type: TemplateHostService, decorators: [{\r\n                        type: Optional\r\n                    }] }];\r\n    }, { key: [{\r\n                type: Input,\r\n                args: ['for']\r\n            }], context: [{\r\n                type: Input\r\n            }] });\r\n})();\n\nclass TemplateModule {\r\n}\r\nTemplateModule.ɵfac = function TemplateModule_Factory(t) { return new (t || TemplateModule)(); };\r\nTemplateModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: TemplateModule });\r\nTemplateModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TemplateModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        TemplateDirective,\r\n                        TemplateLinkDirective,\r\n                        TemplateCacheDirective,\r\n                    ],\r\n                    exports: [\r\n                        TemplateDirective,\r\n                        TemplateLinkDirective,\r\n                        TemplateCacheDirective,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(TemplateModule, { declarations: [TemplateDirective,\r\n            TemplateLinkDirective,\r\n            TemplateCacheDirective], exports: [TemplateDirective,\r\n            TemplateLinkDirective,\r\n            TemplateCacheDirective] });\r\n})();\n\nclass LayerModule {\r\n}\r\nLayerModule.ɵfac = function LayerModule_Factory(t) { return new (t || LayerModule)(); };\r\nLayerModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: LayerModule });\r\nLayerModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LayerModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        LayerCoreComponent,\r\n                        LayerCoreDirective,\r\n                        LayerComponent,\r\n                    ],\r\n                    exports: [\r\n                        LayerCoreComponent,\r\n                        LayerCoreDirective,\r\n                        LayerComponent,\r\n                    ],\r\n                    imports: [\r\n                        TemplateModule,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(LayerModule, { declarations: [LayerCoreComponent,\r\n            LayerCoreDirective,\r\n            LayerComponent], imports: [TemplateModule], exports: [LayerCoreComponent,\r\n            LayerCoreDirective,\r\n            LayerComponent] });\r\n})();\n\nclass StopPropagateDirective {\r\n    constructor(element, renderer, zone) {\r\n        this.element = element;\r\n        this.renderer = renderer;\r\n        this.zone = zone;\r\n        this.eventName = 'click';\r\n        // tslint:disable-next-line:no-input-rename\r\n        this.needStop = yes;\r\n    }\r\n    ngOnInit() {\r\n        let eventNames = this.eventName;\r\n        if (isString(this.eventName)) {\r\n            eventNames = [this.eventName];\r\n        }\r\n        this.zone.runOutsideAngular(() => eventNames.forEach(eventName => this.renderer.listen(this.element.nativeElement, eventName, e => {\r\n            if (this.needStop()) {\r\n                e.stopPropagation();\r\n            }\r\n        })));\r\n    }\r\n}\r\nStopPropagateDirective.ɵfac = function StopPropagateDirective_Factory(t) { return new (t || StopPropagateDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone)); };\r\nStopPropagateDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: StopPropagateDirective, selectors: [[\"\", \"q-grid-stop-propagate\", \"\"]], inputs: { eventName: [\"q-grid-stop-propagate\", \"eventName\"], needStop: [\"q-grid-stop-propagate-when\", \"needStop\"] } });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StopPropagateDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-stop-propagate]',\r\n                }]\r\n        }], function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.NgZone }]; }, { eventName: [{\r\n                type: Input,\r\n                args: ['q-grid-stop-propagate']\r\n            }], needStop: [{\r\n                type: Input,\r\n                args: ['q-grid-stop-propagate-when']\r\n            }] });\r\n})();\n\nclass MarkupModule {\r\n}\r\nMarkupModule.ɵfac = function MarkupModule_Factory(t) { return new (t || MarkupModule)(); };\r\nMarkupModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: MarkupModule });\r\nMarkupModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MarkupModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        MarkupDirective,\r\n                        StopPropagateDirective,\r\n                    ],\r\n                    exports: [\r\n                        MarkupDirective,\r\n                        StopPropagateDirective,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(MarkupModule, { declarations: [MarkupDirective,\r\n            StopPropagateDirective], exports: [MarkupDirective,\r\n            StopPropagateDirective] });\r\n})();\n\nclass ScrollModule {\r\n}\r\nScrollModule.ɵfac = function ScrollModule_Factory(t) { return new (t || ScrollModule)(); };\r\nScrollModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ScrollModule });\r\nScrollModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ providers: [\r\n        ScrollService,\r\n    ] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScrollModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    providers: [\r\n                        ScrollService,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\n\nclass ThemeModule {\r\n}\r\nThemeModule.ɵfac = function ThemeModule_Factory(t) { return new (t || ThemeModule)(); };\r\nThemeModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ThemeModule });\r\nThemeModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ providers: [\r\n        ThemeService,\r\n    ] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThemeModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    providers: [\r\n                        ThemeService,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\n\nconst _c0 = [\"*\"];\r\nclass ToolbarComponent {\r\n    constructor(templateHost) {\r\n        templateHost.key = source => `toolbar-${source}.tpl.html`;\r\n    }\r\n}\r\nToolbarComponent.ɵfac = function ToolbarComponent_Factory(t) { return new (t || ToolbarComponent)(i0.ɵɵdirectiveInject(TemplateHostService)); };\r\nToolbarComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ToolbarComponent, selectors: [[\"q-grid-toolbar\"]], features: [i0.ɵɵProvidersFeature([TemplateHostService])], ngContentSelectors: _c0, decls: 1, vars: 0, template: function ToolbarComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵprojectionDef();\r\n            i0.ɵɵprojection(0);\r\n        }\r\n    }, encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToolbarComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'q-grid-toolbar',\r\n                    template: `<ng-content></ng-content>\n`,\r\n                    providers: [TemplateHostService],\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                }]\r\n        }], function () { return [{ type: TemplateHostService }]; }, null);\r\n})();\n\nclass ToolbarModule {\r\n}\r\nToolbarModule.ɵfac = function ToolbarModule_Factory(t) { return new (t || ToolbarModule)(); };\r\nToolbarModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ToolbarModule });\r\nToolbarModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToolbarModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        ToolbarComponent,\r\n                        ToolbarCoreComponent,\r\n                    ],\r\n                    exports: [\r\n                        ToolbarComponent,\r\n                        ToolbarCoreComponent,\r\n                    ],\r\n                    imports: [\r\n                        TemplateModule,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ToolbarModule, { declarations: [ToolbarComponent,\r\n            ToolbarCoreComponent], imports: [TemplateModule], exports: [ToolbarComponent,\r\n            ToolbarCoreComponent] });\r\n})();\n\nclass AutoSizeDirective {\r\n    constructor(element) {\r\n        this.emptyWidth = 75;\r\n        this.host = element.nativeElement;\r\n    }\r\n    set value(value) {\r\n        this.autoWidth(value);\r\n    }\r\n    ngOnInit() {\r\n        this.element = this.selector ? this.host.querySelector(this.selector) : this.host;\r\n    }\r\n    autoWidth(text) {\r\n        if (!text) {\r\n            this.actualText = text;\r\n            Fastdom.measure(() => {\r\n                Fastdom.mutate(() => {\r\n                    this.host.style.width = `${this.emptyWidth}px`;\r\n                });\r\n            });\r\n            return;\r\n        }\r\n        if (!this.element) {\r\n            return;\r\n        }\r\n        if (this.actualText === text) {\r\n            return;\r\n        }\r\n        this.actualText = text;\r\n        Fastdom.measure(() => {\r\n            const width = `${this.calculateWidth(this.element, text)}px`;\r\n            Fastdom.mutate(() => this.host.style.width = width);\r\n        });\r\n    }\r\n    calculateWidth(element, text) {\r\n        let width = 0;\r\n        if (text) {\r\n            const document = element.ownerDocument;\r\n            const body = document.body;\r\n            const test = document.createElement('span');\r\n            test.innerText = text;\r\n            test.style.whiteSpace = 'pre';\r\n            test.style.visibility = 'hidden';\r\n            test.style.font = element.style.font;\r\n            test.style.fontFamily = element.style.fontFamily;\r\n            test.style.lineHeight = element.style.lineHeight;\r\n            test.style.border = element.style.border;\r\n            // borderBox ?\r\n            body.appendChild(test);\r\n            width = test.offsetWidth;\r\n            test.remove();\r\n        }\r\n        return width;\r\n    }\r\n}\r\nAutoSizeDirective.ɵfac = function AutoSizeDirective_Factory(t) { return new (t || AutoSizeDirective)(i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nAutoSizeDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: AutoSizeDirective, selectors: [[\"\", \"q-grid-autosize\", \"\"]], inputs: { selector: [\"q-grid-autosize\", \"selector\"], emptyWidth: [\"q-grid-autosize-empty-width\", \"emptyWidth\"], value: [\"q-grid-autosize-value\", \"value\"] } });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AutoSizeDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-autosize]',\r\n                }]\r\n        }], function () { return [{ type: i0.ElementRef }]; }, { selector: [{\r\n                type: Input,\r\n                args: ['q-grid-autosize']\r\n            }], emptyWidth: [{\r\n                type: Input,\r\n                args: ['q-grid-autosize-empty-width']\r\n            }], value: [{\r\n                type: Input,\r\n                args: ['q-grid-autosize-value']\r\n            }] });\r\n})();\n\nclass ResizeModule {\r\n}\r\nResizeModule.ɵfac = function ResizeModule_Factory(t) { return new (t || ResizeModule)(); };\r\nResizeModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ResizeModule });\r\nResizeModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ResizeModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        ResizeDirective,\r\n                        AutoSizeDirective,\r\n                    ],\r\n                    exports: [\r\n                        ResizeDirective,\r\n                        AutoSizeDirective,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ResizeModule, { declarations: [ResizeDirective,\r\n            AutoSizeDirective], exports: [ResizeDirective,\r\n            AutoSizeDirective] });\r\n})();\n\nclass HeadModule {\r\n}\r\nHeadModule.ɵfac = function HeadModule_Factory(t) { return new (t || HeadModule)(); };\r\nHeadModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: HeadModule });\r\nHeadModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\r\n        RowModule,\r\n        ResizeModule,\r\n        DndModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HeadModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        HeadCoreComponent,\r\n                        ThCoreDirective,\r\n                    ],\r\n                    exports: [\r\n                        HeadCoreComponent,\r\n                        ThCoreDirective,\r\n                    ],\r\n                    imports: [\r\n                        CommonModule,\r\n                        RowModule,\r\n                        ResizeModule,\r\n                        DndModule,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(HeadModule, { declarations: [HeadCoreComponent,\r\n            ThCoreDirective], imports: [CommonModule,\r\n            RowModule,\r\n            ResizeModule,\r\n            DndModule], exports: [HeadCoreComponent,\r\n            ThCoreDirective] });\r\n})();\n\nclass TableModule {\r\n}\r\nTableModule.ɵfac = function TableModule_Factory(t) { return new (t || TableModule)(); };\r\nTableModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: TableModule });\r\nTableModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\r\n        HeadModule,\r\n        FootModule,\r\n        BodyModule,\r\n        MarkupModule,\r\n        DndModule,\r\n        VscrollModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TableModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        TableCoreComponent,\r\n                    ],\r\n                    exports: [\r\n                        TableCoreComponent,\r\n                    ],\r\n                    imports: [\r\n                        CommonModule,\r\n                        HeadModule,\r\n                        FootModule,\r\n                        BodyModule,\r\n                        MarkupModule,\r\n                        DndModule,\r\n                        VscrollModule,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(TableModule, { declarations: [TableCoreComponent], imports: [CommonModule,\r\n            HeadModule,\r\n            FootModule,\r\n            BodyModule,\r\n            MarkupModule,\r\n            DndModule,\r\n            VscrollModule], exports: [TableCoreComponent] });\r\n})();\n\nclass ViewModule {\r\n}\r\nViewModule.ɵfac = function ViewModule_Factory(t) { return new (t || ViewModule)(); };\r\nViewModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ViewModule });\r\nViewModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\r\n        CellHandlerModule,\r\n        TableModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ViewModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        ViewCoreComponent,\r\n                    ],\r\n                    exports: [\r\n                        ViewCoreComponent,\r\n                    ],\r\n                    imports: [\r\n                        CommonModule,\r\n                        CellHandlerModule,\r\n                        TableModule,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ViewModule, { declarations: [ViewCoreComponent], imports: [CommonModule,\r\n            CellHandlerModule,\r\n            TableModule], exports: [ViewCoreComponent] });\r\n})();\n\nclass GridModule {\r\n    constructor(zone, datePipe, numberPipe, currencyPipe) {\r\n        FormatService.date = (x, format) => datePipe.transform(x, format);\r\n        FormatService.number = (x, format) => numberPipe.transform(x, format);\r\n        FormatService.currency = (x, format) => currencyPipe.transform(x, format);\r\n        Fastdom.invoke = task => zone.runOutsideAngular(task);\r\n    }\r\n}\r\nGridModule.ɵfac = function GridModule_Factory(t) { return new (t || GridModule)(i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i4.DatePipe), i0.ɵɵinject(i4.DecimalPipe), i0.ɵɵinject(i4.CurrencyPipe)); };\r\nGridModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: GridModule });\r\nGridModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ providers: [\r\n        DatePipe,\r\n        DecimalPipe,\r\n        CurrencyPipe,\r\n        GridModelBuilder,\r\n        Grid,\r\n    ], imports: [CommonModule,\r\n        BoxModule,\r\n        LayerModule,\r\n        MarkupModule,\r\n        ScrollModule,\r\n        TemplateModule,\r\n        ThemeModule,\r\n        ToolbarModule,\r\n        ViewModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        GridComponent,\r\n                    ],\r\n                    exports: [\r\n                        GridComponent,\r\n                    ],\r\n                    imports: [\r\n                        CommonModule,\r\n                        BoxModule,\r\n                        LayerModule,\r\n                        MarkupModule,\r\n                        ScrollModule,\r\n                        TemplateModule,\r\n                        ThemeModule,\r\n                        ToolbarModule,\r\n                        ViewModule,\r\n                    ],\r\n                    providers: [\r\n                        DatePipe,\r\n                        DecimalPipe,\r\n                        CurrencyPipe,\r\n                        GridModelBuilder,\r\n                        Grid,\r\n                    ],\r\n                }]\r\n        }], function () { return [{ type: i0.NgZone }, { type: i4.DatePipe }, { type: i4.DecimalPipe }, { type: i4.CurrencyPipe }]; }, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(GridModule, { declarations: [GridComponent], imports: [CommonModule,\r\n            BoxModule,\r\n            LayerModule,\r\n            MarkupModule,\r\n            ScrollModule,\r\n            TemplateModule,\r\n            ThemeModule,\r\n            ToolbarModule,\r\n            ViewModule], exports: [GridComponent] });\r\n})();\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { AutoSizeDirective, BodyCoreComponent, BodyModule, BoxComponent, BoxModule, CellHandlerComponent, CellHandlerModule, CellTemplateService, ChangeDetectorModule, ColumnBodyTemplateDirective, ColumnComponent, ColumnEditTemplateDirective, ColumnFootTemplateDirective, ColumnHeadTemplateDirective, ColumnHostService, ColumnListComponent, ColumnListModule, ColumnListService, ColumnModule, DirtyDirective, DirtyHostDirective, Disposable, DndModule, DragDirective, DropDirective, FootCoreComponent, FootModule, Grid, GridComponent, GridLet, GridModelBuilder, GridModule, GridPlugin, GridRoot, HeadCoreComponent, HeadModule, LayerComponent, LayerCoreComponent, LayerCoreDirective, LayerModule, LayerService, MarkupDirective, MarkupModule, ResizeDirective, ResizeModule, RowComponent, RowModule, ScrollModule, ScrollService, StateAccessor, StopPropagateDirective, TableCoreComponent, TableCoreService, TableModule, TdCoreAlignDirective, TdCoreDirective, TemplateCacheDirective, TemplateCacheService, TemplateDirective, TemplateHostService, TemplateLinkDirective, TemplateLinkService, TemplateModule, TemplateService, TfCoreDirective, ThCoreDirective, ThemeModule, ThemeService, ToolbarComponent, ToolbarCoreComponent, ToolbarModule, TrCoreDirective, TrhCoreDirective, ViewCoreComponent, ViewModule, VscrollColumnDirective, VscrollContext, VscrollDirective, VscrollMarkDirective, VscrollModule, VscrollPipe, VscrollPortXDirective, VscrollPortYDirective, VscrollRowDirective, VscrollService };\n//# sourceMappingURL=qgrid-ngx.mjs.map\n","map":{"version":3,"file":"qgrid-ngx.mjs","sources":["../../src/lib/infrastructure/disposable.ts","../../src/lib/grid/grid-model.builder.ts","../../src/lib/grid/grid.ts","../../src/lib/vscroll/vscroll.container.ts","../../src/lib/vscroll/vscroll.settings.ts","../../src/lib/vscroll/vscroll.context.ts","../../src/lib/scroll/scroll.service.ts","../../src/lib/grid/grid-let.ts","../../src/lib/grid/grid-root.ts","../../src/lib/plugin/grid-plugin.ts","../../src/lib/table/table-core.service.ts","../../src/lib/vscroll/vscroll.position.ts","../../src/lib/vscroll/vscroll.layout.ts","../../src/lib/vscroll/vscroll.box.ts","../../src/lib/vscroll/vscroll.link.ts","../../src/lib/vscroll/vscroll.utility.ts","../../src/lib/vscroll/vscroll.directive.ts","../../src/lib/vscroll/vscroll-port-y.directive.ts","../../src/lib/vscroll/vscroll-row.directive.ts","../../src/lib/vscroll/vscroll-port-x.directive.ts","../../src/lib/vscroll/vscroll-mark.directive.ts","../../src/lib/row/tr-core.directive.ts","../../src/lib/cell/cell-class.service.ts","../../src/lib/body/td-core-align.directive.ts","../../src/lib/template/template-link.service.ts","../../src/lib/template/template-cache.service.ts","../../src/lib/template/template.service.ts","../../src/lib/cell/cell-template.service.ts","../../src/lib/body/td-core.directive.ts","../../src/lib/vscroll/vscroll.pipe.ts","../../src/lib/body/body-core.component.html","../../src/lib/body/body-core.component.ts","../../src/lib/vscroll/vscroll.service.ts","../../src/lib/vscroll/vscroll-column.directive.ts","../../src/lib/vscroll/vscroll.module.ts","../../src/lib/state/state-accessor.ts","../../src/lib/template/template-host.service.ts","../../src/lib/row/row.component.ts","../../src/lib/row/trh-core.directive.ts","../../src/lib/row/row.module.ts","../../src/lib/body/body.module.ts","../../src/lib/theme/theme.service.ts","../../src/lib/box/box.component.ts","../../src/lib/box/box.component.html","../../src/lib/box/box.module.ts","../../src/lib/cell-handler/cell-handler.component.html","../../src/lib/cell-handler/cell-handler.component.ts","../../src/lib/cell-handler/cell-handler.module.ts","../../src/lib/change-detector/dirty-host.directive.ts","../../src/lib/change-detector/dirty.directive.ts","../../src/lib/change-detector/change-detector.module.ts","../../src/lib/column-list/column-list.service.ts","../../src/lib/column-list/column-list.component.ts","../../src/lib/column-list/column-list.module.ts","../../src/lib/template/template-link.ts","../../src/lib/column/column-body-template.directive.ts","../../src/lib/column/column-edit-template.directive.ts","../../src/lib/column/column-foot-template.directive.ts","../../src/lib/column/column-head-template.directive.ts","../../src/lib/column/column-host.service.ts","../../src/lib/column/column.component.ts","../../src/lib/column/column.module.ts","../../src/lib/dnd/drag.directive.ts","../../src/lib/dnd/drop.directive.ts","../../src/lib/dnd/dnd.module.ts","../../src/lib/foot/tf-core.directive.ts","../../src/lib/foot/foot-core.component.html","../../src/lib/foot/foot-core.component.ts","../../src/lib/foot/foot.module.ts","../../src/lib/layer/layer.ts","../../src/lib/layer/layer.service.ts","../../src/lib/layer/layer-core.directive.ts","../../src/lib/layer/layer-core.component.ts","../../src/lib/layer/layer-core.component.html","../../src/lib/markup/markup.directive.ts","../../src/lib/template/template.directive.ts","../../src/lib/toolbar/toolbar-core.component.ts","../../src/lib/toolbar/toolbar-core.component.html","../../src/lib/resize/resize.directive.ts","../../src/lib/head/th-core.directive.ts","../../src/lib/head/head-core.component.html","../../src/lib/head/head-core.component.ts","../../src/lib/table/table-core.component.html","../../src/lib/table/table-core.component.ts","../../src/lib/view/view-core.component.html","../../src/lib/view/view-core.component.ts","../../src/lib/grid/grid.component.html","../../src/lib/grid/grid.component.ts","../../src/lib/layer/layer.component.ts","../../src/lib/template/template-link.directive.ts","../../src/lib/template/template-cache.directive.ts","../../src/lib/template/template.module.ts","../../src/lib/layer/layer.module.ts","../../src/lib/markup/stop-propagate.directive.ts","../../src/lib/markup/markup.module.ts","../../src/lib/scroll/scroll.module.ts","../../src/lib/theme/theme.module.ts","../../src/lib/toolbar/toolbar.component.ts","../../src/lib/toolbar/toolbar.module.ts","../../src/lib/resize/autosize.directive.ts","../../src/lib/resize/resize.module.ts","../../src/lib/head/head.module.ts","../../src/lib/table/table.module.ts","../../src/lib/view/view.module.ts","../../src/lib/grid/grid.module.ts","../../src/qgrid-ngx.ts"],"sourcesContent":["import { Injectable, OnDestroy } from '@angular/core';\nimport { Disposable as DisposableCore, DisposableResource } from '@qgrid/core';\n\n@Injectable()\nexport class Disposable implements OnDestroy {\n  private disposable = new DisposableCore();\n\n  add(resource: DisposableResource) {\n    this.disposable.add(resource);\n  }\n\n  remove(resource: DisposableResource): boolean {\n    return this.disposable.remove(resource);\n  }\n\n  finalize() {\n    this.disposable.finalize();\n  }\n\n  ngOnDestroy() {\n    this.finalize();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ModelBuilder } from '@qgrid/core';\nimport { GridModel } from './grid-model';\n\n@Injectable()\nexport class GridModelBuilder {\n  private builder = new ModelBuilder();\n\n  register<T>(key: string, ctor: T) {\n    return this.builder.register(key, ctor);\n  }\n\n  build(): GridModel {\n    return this.builder.build();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as labelService from '@qgrid/core';\nimport * as valueService from '@qgrid/core';\nimport {\n  Action,\n  Command,\n  GridService,\n  identity,\n  Node,\n  noop,\n  Pipe,\n  PipeUnit,\n  RowDetailsStatus,\n} from '@qgrid/core';\nimport { GridModelBuilder } from '../grid/grid-model.builder';\nimport { GridModel } from './grid-model';\n\nexport { GridService } from '@qgrid/core';\n\n@Injectable()\nexport class Grid {\n\n  get noop() {\n    return noop;\n  }\n\n  get identity() {\n    return identity;\n  }\n\n  get pipe() {\n    return Pipe;\n  }\n\n  get pipeUnit() {\n    return PipeUnit;\n  }\n\n  get Command() {\n    return Command;\n  }\n\n  get Action() {\n    return Action;\n  }\n\n  get Node() {\n    return Node;\n  }\n\n  get RowDetailsStatus() {\n    return RowDetailsStatus;\n  }\n\n  get valueFactory() {\n    return valueService.getValueFactory;\n  }\n\n  get labelFactory() {\n    return labelService.getLabelFactory;\n  }\n\n  constructor(private modelBuilder: GridModelBuilder) {\n  }\n\n  model(): GridModel {\n    return this.modelBuilder.build();\n  }\n\n  service(model: GridModel): GridService {\n    return new GridService(model);\n  }\n}\n","import { EventEmitter } from '@angular/core';\nimport {\n  Defer,\n  GridError,\n  isFunction,\n  isNumber,\n  IVscrollContainer,\n  IVscrollSettings,\n} from '@qgrid/core';\n\nexport const rAF = window.requestAnimationFrame;\n\nexport class VscrollContainer implements IVscrollContainer {\n  private lastPage = 0;\n\n  force = false;\n  count = 0;\n  position = 0;\n\n  reset$ = new EventEmitter<{ handled: boolean; source: string }>();\n  update$ = new EventEmitter<number>();\n  draw$ = new EventEmitter<{ position: number }>();\n\n  get currentPage() {\n    const threshold = this.settings.threshold;\n    const position = this.position;\n    return Math.ceil((position + threshold) / threshold) - 1;\n  }\n\n  constructor(\n\t\tprivate settings: IVscrollSettings,\n  ) {\n  }\n\n  tick(f: () => void) {\n    rAF(f);\n  }\n\n  read(f: () => void) {\n    f();\n  }\n\n  write(f: () => void) {\n    f();\n  }\n\n  apply(f: () => void, emit: (x: () => void) => void) {\n    emit(f);\n  }\n\n  update(count: number) {\n    if (this.count !== count) {\n      this.count = count;\n      this.update$.emit(count);\n    }\n\n    const { lastPage, currentPage } = this;\n    if (currentPage > lastPage) {\n      this.fetchPage(currentPage);\n    }\n  }\n\n  fetchPage(page: number) {\n    const { settings, lastPage } = this;\n    const { threshold } = settings;\n\n    this.lastPage = page;\n\n    const deferred = new Defer<number>();\n\n    deferred.promise.then(count => {\n      this.force = true;\n\n      if (count !== this.count) {\n        this.update(count);\n      }\n    });\n\n    if (page === 0) {\n      settings.fetch(0, threshold, deferred);\n    } else {\n      const skip = (lastPage + 1) * threshold;\n      if (this.count < skip) {\n        deferred.resolve(this.count);\n      } else {\n        const take = (page - lastPage) * threshold;\n        settings.fetch(skip, take, deferred);\n      }\n    }\n  }\n\n  reset() {\n    this.force = false;\n    this.position = 0;\n    this.count = 0;\n    this.lastPage = 0;\n\n    this.reset$.emit({\n      handled: false,\n      source: 'container',\n    });\n  }\n}\n\nexport type VscrollSize = (element: HTMLElement, index: number) => number;\n\nexport function sizeFactory(\n  size: number | VscrollSize,\n  container: VscrollContainer,\n  element: HTMLElement,\n  index: number,\n): () => number {\n  if (isFunction(size)) {\n    return () => (size as VscrollSize)(element, container.position + index);\n  }\n\n  if (isNumber(size)) {\n    return () => size as number;\n  }\n\n  throw new GridError('vscroll.utility', `Invalid size ${size}`);\n}\n","import { IVscrollSettings } from '@qgrid/core';\n\nexport class VscrollSettings implements IVscrollSettings {\n  threshold = 64;\n  placeholderHeight = 0;\n  placeholderWidth = 0;\n  resetTriggers = ['resize'];\n  emit: (f: () => void) => void;\n\n  constructor(private getCount: () => number) {\n  }\n\n  fetch(skip: number, take: number, d: { resolve: (count: number) => void; reject: () => void }) {\n    d.resolve(this.getCount());\n  }\n\n  rowHeight(element: HTMLElement) {\n    let height = element.offsetHeight;\n    const style = getComputedStyle(element);\n\n    height += Number.parseInt(style.marginTop, 10) + Number.parseInt(style.marginBottom, 10);\n    return height;\n  }\n\n  columnWidth(element: HTMLElement) {\n    let width = element.offsetWidth;\n    const style = getComputedStyle(element);\n\n    width += Number.parseInt(style.marginLeft, 10) + Number.parseInt(style.marginRight, 10);\n    return width;\n  }\n}\n","import { IVscrollContext, IVscrollSettings } from '@qgrid/core';\nimport { VscrollContainer } from './vscroll.container';\nimport { VscrollSettings } from './vscroll.settings';\n\nexport class VscrollContext implements IVscrollContext {\n  settings: IVscrollSettings;\n  container: VscrollContainer;\n\n  constructor(settings?: Partial<IVscrollSettings>) {\n    this.settings = new VscrollSettings(() => this.container.count);\n    if (settings) {\n      Object.assign(this.settings, settings);\n    }\n\n    this.container = new VscrollContainer(this.settings);\n  }\n\n  id(index: number) {\n    return index;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IVscrollContext, IVscrollSettings } from '@qgrid/core';\nimport { VscrollContext } from '../vscroll/vscroll.context';\n\n@Injectable()\nexport class ScrollService {\n  factory(settings: IVscrollSettings): IVscrollContext {\n    return new VscrollContext(settings);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  BodyLet,\n  ClipboardLet,\n  CommandManager,\n  EditLet,\n  FilterLet,\n  FootLet,\n  GroupLet,\n  HeadLet,\n  HighlightLet,\n  LayoutLet,\n  NavigationLet,\n  PaginationLet,\n  RowDetailsLet,\n  RowLet,\n  ScrollLet,\n  SelectionLet,\n  SortLet,\n  StyleLet,\n  viewFactory,\n} from '@qgrid/core';\nimport { GridPlugin } from '../plugin/grid-plugin';\nimport { ScrollService } from '../scroll/scroll.service';\nimport { Grid } from './grid';\n\n@Injectable()\nexport class GridLet {\n  body: BodyLet;\n  edit: EditLet;\n  filter: FilterLet;\n  foot: FootLet;\n  group: GroupLet;\n  head: HeadLet;\n  highlight: HighlightLet;\n  layout: LayoutLet;\n  nav: NavigationLet;\n  pagination: PaginationLet;\n  row: RowLet;\n  rowDetails: RowDetailsLet;\n  scroll: ScrollLet;\n  selection: SelectionLet;\n  sort: SortLet;\n  style: StyleLet;\n  clipboard: ClipboardLet;\n\n  constructor(\n\t\tprivate qgrid: Grid,\n\t\tprivate scrollService: ScrollService,\n  ) { }\n\n  init(plugin: GridPlugin, commandManager: CommandManager) {\n    const selectors = {\n      th: 'q-grid-core-th',\n      tr: 'q-grid-core-tr',\n    };\n\n    const injectLetServicesTo = viewFactory(\n      plugin,\n      commandManager,\n      this.scrollService,\n      selectors,\n    );\n\n    injectLetServicesTo(this);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DomTable } from '../dom/dom';\nimport { GridModel } from '../grid/grid-model';\n\n@Injectable()\nexport class GridRoot {\n  model: GridModel;\n  table: DomTable;\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport {\n  Event,\n  GridLet,\n  Lazy,\n  ObservableEvent,\n  ObservableLike,\n  ObservableReplyEvent,\n} from '@qgrid/core';\nimport { DomTable } from '../dom/dom';\nimport { Grid, GridService } from '../grid/grid';\nimport { GridLet as NgxGridLet } from '../grid/grid-let';\nimport { GridModel } from '../grid/grid-model';\nimport { GridRoot } from '../grid/grid-root';\nimport { Disposable } from '../infrastructure/disposable';\n\n@Injectable()\nexport class GridPlugin implements OnDestroy {\n  private serviceLazy = new Lazy(() => this.qgrid.service(this.$root.model));\n\n  readonly disposable = new Disposable();\n\n  get model(): GridModel {\n    const { model } = this.$root;\n    return model;\n  }\n\n  get view(): GridLet {\n    return this.$view;\n  }\n\n  get table(): DomTable {\n    const { table } = this.$root;\n    return table;\n  }\n\n  get service(): GridService {\n    return this.serviceLazy.instance;\n  }\n\n  constructor(\n\t\tprivate $view: NgxGridLet,\n\t\tprivate $root: GridRoot,\n\t\tprivate qgrid: Grid,\n  ) {\n  }\n\n  readonly observe = <TState>(event: Event<TState>): ObservableLike<TState> => new ObservableEvent(event, this.disposable);\n\n  readonly observeReply = <TState>(event: Event<TState>): ObservableLike<TState> => new ObservableReplyEvent(event, this.disposable);\n\n  ngOnDestroy() {\n    this.disposable.finalize();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ColumnModelPin } from '@qgrid/core';\n\n@Injectable()\nexport class TableCoreService {\n  pin: ColumnModelPin;\n}\n","function findIndexAt(items: Array<number>, value: number) {\n  const length = items.length;\n  let min = 0;\n  let max = length - 1;\n  while (min <= max) {\n    const mid = (min + max) >> 1;\n    const k = items[mid];\n    if (k === value) {\n      return mid;\n    } else if (k < value) {\n      min = mid + 1;\n    } else {\n      max = mid - 1;\n    }\n  }\n\n  return min;\n}\n\nexport interface IVscrollPosition {\n\tindex: number;\n\toffset: number;\n\tlastOffset: number;\n\tvalue: number;\n\tpad: number;\n}\n\nexport function findPositionUsingItemSize(value: number, itemSize: number) {\n  const index = Math.max(0, Math.round(value / itemSize));\n  return {\n    index,\n    offset: itemSize * index,\n    lastOffset: 0,\n    value,\n    pad: 0,\n  };\n}\n\nexport function findPositionUsingOffsets(value: number, offsets: Array<number>): IVscrollPosition {\n  const index = findIndexAt(offsets, value);\n  const { length } = offsets;\n  if (index > 0) {\n    return {\n      index,\n      offset: offsets[index - 1],\n      lastOffset: offsets[length - 1],\n      value,\n      pad: 0,\n    };\n  }\n\n  return {\n    index: 0,\n    offset: 0,\n    lastOffset: 0,\n    value,\n    pad: 0,\n  };\n}\n\nexport function recycleFactory(items: Array<() => number>) {\n  const offsets = new Array<number>();\n  return (index: number, count: number) => {\n    let cursor = offsets.length;\n    const threshold = items.length;\n    const diff = Math.min(count, threshold + index) - cursor;\n\n    for (let i = threshold - diff; i < threshold; i++) {\n      const getSize = items[i];\n      const size = getSize();\n      if (cursor === 0) {\n        offsets[cursor] = size;\n      } else {\n        offsets[cursor] = offsets[cursor - 1] + size;\n      }\n\n      cursor++;\n    }\n\n    return offsets;\n  };\n}\n","import { findPositionUsingOffsets, IVscrollPosition, recycleFactory } from './vscroll.position';\nimport { VscrollBox } from './vscroll.box';\nimport { VscrollPort } from './vscroll.port';\n\nconst UNSET_ARM = Number.MAX_SAFE_INTEGER;\n\nfunction empty() {\n  return 0;\n}\n\nexport class VscrollLayout {\n  private items = [];\n  private minArm = UNSET_ARM;\n  private position = findPositionUsingOffsets(0, []);\n  private getOffsets = recycleFactory(this.items);\n\n  private get container() {\n    return this.port.context.container;\n  }\n\n  private get settings() {\n    return this.port.context.settings;\n  }\n\n  constructor(private port: VscrollPort) {\n  }\n\n  recycle(count: number, box: VscrollBox, force: boolean): IVscrollPosition | null {\n    const { port } = this;\n    const itemSize = port.getItemSize();\n    if (itemSize) {\n      return this.recycleItemSize(count, box, force, itemSize);\n    }\n\n    return this.recycleOffsets(count, box, force);\n  }\n\n  invalidate(position: IVscrollPosition): number {\n    const { offset } = position;\n    const pad1 = Math.max(0, offset);\n    const pad2 = Math.max(0, position.pad - pad1);\n\n    this.port.move(pad1, pad2);\n    return position.index;\n  }\n\n  reset() {\n    this.minArm = UNSET_ARM;\n    this.getOffsets = this.port.recycleFactory(this.items);\n    this.position = findPositionUsingOffsets(0, []);\n    return this.invalidate(this.position);\n  }\n\n  setItem(index: number, item: () => number) {\n    const { items } = this;\n    items[index] = item;\n    while (--index >= 0) {\n      if (items[index]) {\n        break;\n      }\n\n      items[index] = empty;\n    }\n  }\n\n  removeItem(index: number) {\n    const { items } = this;\n    const last = items.length - 1;\n    if (index === last) {\n      items.pop();\n      while (--index >= 0) {\n        const item = items[index];\n        if (item !== empty) {\n          break;\n        }\n\n        items.pop();\n      }\n    } else {\n      items[index] = empty;\n    }\n  }\n\n  private recycleOffsets(count: number, box: VscrollBox, force: boolean) {\n    const { position, port } = this;\n    const { threshold } = this.settings;\n    const offsets = this.getOffsets(position.index, count);\n    const arm = this.getArmUsingOffsets(offsets, box, position.index);\n\n    this.minArm = Math.min(this.minArm, arm);\n\n    const newPosition = port.getPositionUsingOffsets(offsets, box, this.minArm);\n    if (force || position.index !== newPosition.index) {\n      const last = Math.min(offsets.length - 1, newPosition.index + threshold - 1);\n      const first = newPosition.index - 1;\n      const viewSize = (offsets[last] || 0) - (offsets[first] || 0);\n      const scrollSize = offsets[offsets.length - 1] || 0;\n      const padSize = scrollSize - viewSize;\n      newPosition.pad = padSize;\n      return this.position = newPosition;\n    }\n\n    return null;\n  }\n\n  private recycleItemSize(count: number, box: VscrollBox, force: boolean, itemSize: number) {\n    const { position, port } = this;\n    const arm = this.getArmUsingItemSize(itemSize, box);\n    const newPosition = port.getPositionUsingItemSize(itemSize, box, arm);\n\n    if (force || position.index !== newPosition.index) {\n      const { threshold } = this.settings;\n      const remain = Math.max(0, newPosition.index + threshold - this.container.count);\n      newPosition.pad = Math.max(0, itemSize * (count + remain - threshold));\n      return this.position = newPosition;\n    }\n\n    return null;\n  }\n\n  private getArmUsingItemSize(itemSize: number, box: VscrollBox) {\n    const { threshold } = this.settings;\n    const portSize = this.port.getSize(box);\n    const viewSize = threshold * itemSize;\n    return Math.max(0, (viewSize - portSize) / 2);\n  }\n\n  private getArmUsingOffsets(offsets: Array<number>, box: VscrollBox, index: number) {\n    if (offsets.length) {\n      const { threshold } = this.settings;\n      const portSize = this.port.getSize(box);\n      const last = Math.min(offsets.length, index + threshold) - 1;\n      const first = (last + 1) - threshold;\n      const viewSize = offsets[last] - offsets[first];\n      return Math.max(0, (viewSize - portSize) / 2);\n    }\n\n    return UNSET_ARM;\n  }\n}\n","export class VscrollBox {\n  scrollWidth = 0;\n  scrollHeight = 0;\n  scrollTop = 0;\n  scrollLeft = 0;\n  portWidth = 0;\n  portHeight = 0;\n}\n","import { isNumber } from '@qgrid/core';\nimport { VscrollBox } from './vscroll.box';\nimport { VscrollDirective } from './vscroll.directive';\nimport { VscrollPort } from './vscroll.port';\n\nexport class VscrollLink {\n  private box = new VscrollBox();\n  private ticking = false;\n\n  private get settings() {\n    return this.port.context.settings;\n  }\n\n  private get container() {\n    return this.port.context.container;\n  }\n\n  constructor(\n\t\tprivate port: VscrollPort,\n\t\tprivate view: VscrollDirective,\n  ) {\n    const { layout } = port;\n    const { settings, container } = this;\n\n    if (settings.placeholderHeight > 0 || settings.placeholderWidth > 0) {\n      const width = settings.placeholderWidth || (isNumber(settings.columnWidth) && settings.columnWidth as number);\n      const height = settings.placeholderHeight || (isNumber(settings.rowHeight) && settings.rowHeight as number);\n      view.drawPlaceholder(width, height);\n    }\n\n    view.scroll.subscribe(() => this.update(false));\n\n    view.reset.subscribe(e => {\n      if (e.handled) {\n        return;\n      }\n\n      e.handled = settings.resetTriggers.indexOf(e.source) < 0;\n      container.reset$.emit(e);\n    });\n\n    container.reset$.subscribe(e => {\n      if (e.handled) {\n        return;\n      }\n\n      container.position = layout.reset();\n      port.reset();\n\n      container.fetchPage(0);\n    });\n\n    container.update$.subscribe(() => this.update(true));\n  }\n\n  tick(force: boolean) {\n    this.ticking = false;\n\n    const { port, container, box } = this;\n    const count = container.count;\n    const position = port.layout.recycle(count, box, force);\n    if (position) {\n      const draw = () => {\n        container.position = port.layout.invalidate(position);\n        container.draw$.emit({\n          position: container.position,\n        });\n      };\n\n      const emit = f => port.emit(f);\n      container.apply(draw, emit);\n    }\n  }\n\n  update(force: boolean) {\n    const { container, port, box } = this;\n    const { element } = this.view;\n\n    this.container.read(() => {\n      const newBox = {\n        scrollWidth: element.scrollWidth,\n        scrollHeight: element.scrollHeight,\n        scrollTop: element.scrollTop,\n        scrollLeft: element.scrollLeft,\n        portWidth: element.clientWidth,\n        portHeight: element.clientHeight,\n      };\n\n      if (force || port.hasChanges(newBox, box)) {\n        this.box = newBox;\n        if (container.count && !this.ticking) {\n          this.ticking = true;\n          container.tick(() => this.tick(force));\n        }\n      }\n    });\n  }\n}\n","export function capitalize(text: string) {\n  return text[0].toUpperCase() + text.slice(1);\n}\n\nexport function placeholderBitmap(width: number, height: number) {\n  const minWidth = Math.max(width, 1);\n  const minHeight = Math.max(height, 1);\n  const canvas = document.createElement('canvas');\n  canvas.width = Math.max(width * 2, 1);\n  canvas.height = Math.max(height * 2, 1);\n\n  const ctx = canvas.getContext('2d');\n  ctx.fillStyle = 'rgba(0, 0, 0, 0.04)';\n  ctx.fillRect(0, 0, minWidth, minHeight);\n  ctx.fillStyle = 'rgba(0, 0, 0, 0.08)';\n  ctx.fillRect(width, height, minWidth, minHeight);\n\n  return canvas.toDataURL();\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  NgZone,\n  Renderer2,\n} from '@angular/core';\nimport { placeholderBitmap } from './vscroll.utility';\n\n@Directive({\n  selector: '[q-grid-vscroll]',\n})\nexport class VscrollDirective {\n  scroll = new EventEmitter();\n  reset = new EventEmitter<{ handled: boolean; source: string }>();\n\n  get element() {\n    return this.elementRef.nativeElement;\n  }\n\n  constructor(private elementRef: ElementRef, zone: NgZone, renderer: Renderer2) {\n    zone.runOutsideAngular(() => {\n      elementRef\n        .nativeElement\n        .addEventListener(\n          'scroll',\n          () => this.scroll.emit(),\n          { passive: true },\n        );\n\n      renderer.listen(\n        window,\n        'resize',\n        () => {\n          const e = { handled: false, source: 'resize' };\n          this.reset.emit(e);\n        },\n      );\n    });\n  }\n\n  drawPlaceholder(width: number, height: number) {\n    const box = this.elementRef.nativeElement;\n    const style = box.style;\n    const placeholder = placeholderBitmap(width || box.clientWidth, height || box.clientHeight);\n\n    style.backgroundImage = 'url(' + placeholder + ')';\n    style.backgroundRepeat = 'repeat';\n  }\n\n  resetX() {\n    this.elementRef.nativeElement.scrollLeft = 0;\n  }\n\n  resetY() {\n    this.elementRef.nativeElement.scrollTop = 0;\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { isNumber } from '@qgrid/core';\nimport { VscrollBox } from './vscroll.box';\nimport { VscrollContext } from './vscroll.context';\nimport { VscrollDirective } from './vscroll.directive';\nimport { VscrollLayout } from './vscroll.layout';\nimport { VscrollLink } from './vscroll.link';\nimport { VscrollPort } from './vscroll.port';\nimport { findPositionUsingItemSize, findPositionUsingOffsets, IVscrollPosition, recycleFactory } from './vscroll.position';\nimport { capitalize } from './vscroll.utility';\n\n@Directive({\n  selector: '[q-grid-vscroll-port-y]',\n})\nexport class VscrollPortYDirective implements VscrollPort, OnChanges {\n  private link: VscrollLink = null;\n\n  @Input('q-grid-vscroll-port-y') context: VscrollContext;\n\n  layout: VscrollLayout = null;\n  markup: { [key: string]: HTMLElement } = {};\n\n  constructor(\n    private elementRef: ElementRef,\n    private view: VscrollDirective,\n  ) {\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const contextChange = changes['context'];\n    if (contextChange && this.context) {\n      this.layout = new VscrollLayout(this);\n      this.link = new VscrollLink(this, this.view);\n      this.context.container.reset();\n    }\n  }\n\n  public reset() {\n    this.view.resetY();\n  }\n\n  emit(f: () => void) {\n    const { settings } = this.context;\n    if (settings.emit) {\n      settings.emit(f);\n    } else {\n      f();\n    }\n  }\n\n  getPositionUsingItemSize(itemSize: number, box: VscrollBox, arm: number): IVscrollPosition {\n    const limitTop = box.scrollTop - arm;\n    const limitBottom = box.scrollHeight - (box.portHeight + arm);\n    const value = Math.min(limitBottom, Math.max(0, limitTop));\n    return findPositionUsingItemSize(value, itemSize);\n  }\n\n  getPositionUsingOffsets(offsets: Array<number>, box: VscrollBox, arm: number): IVscrollPosition {\n    const limitTop = box.scrollTop - arm;\n    const limitBottom = box.scrollHeight - (box.portHeight + arm);\n    const value = Math.min(limitBottom, Math.max(0, limitTop));\n    return findPositionUsingOffsets(value, offsets);\n  }\n\n  move(top: number, bottom: number) {\n    this.pad('top', top);\n    this.pad('bottom', bottom);\n  }\n\n  getItemSize(): number {\n    const rowHeight = this.context.settings.rowHeight as number;\n    return isNumber(rowHeight) ? rowHeight : 0;\n  }\n\n  getScrollSize(box: VscrollBox) {\n    return box.scrollHeight;\n  }\n\n  getSize(box: VscrollBox) {\n    return box.portHeight;\n  }\n\n  recycleFactory(items: Array<any>) {\n    const recycle = recycleFactory(items);\n    return (index: number, count: number) => {\n      const size = this.getItemSize();\n      if (size) {\n        return [];\n      }\n\n      return recycle(index, count);\n    };\n  }\n\n  hasChanges(newBox: VscrollBox, oldBox: VscrollBox) {\n    return !oldBox.portHeight || newBox.scrollTop !== oldBox.scrollTop;\n  }\n\n  private pad(pos: string, value: number) {\n    if (Object.prototype.hasOwnProperty.call(this.markup, pos)) {\n      const mark = this.markup[pos];\n      mark.style.height = value + 'px';\n    } else {\n      this.elementRef.nativeElement.style['padding' + capitalize(pos)] = value + 'px';\n    }\n  }\n}\n","import {\n  Directive,\n  Input,\n  ElementRef,\n  OnDestroy,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { sizeFactory } from './vscroll.container';\nimport { VscrollPortYDirective } from './vscroll-port-y.directive';\n\n@Directive({\n  selector: '[q-grid-vscroll-row]',\n})\nexport class VscrollRowDirective implements OnDestroy, OnChanges {\n  private row: HTMLElement;\n\n  private get layout() {\n    return this.port.layout;\n  }\n\n  private get settings() {\n    return this.port.context.settings;\n  }\n\n  private get container() {\n    return this.port.context.container;\n  }\n\n  @Input('q-grid-vscroll-row') index: number;\n\n  constructor(elementRef: ElementRef, private port: VscrollPortYDirective) {\n    this.row = elementRef.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['index']) {\n      if (this.port.getItemSize()) {\n        this.ngOnChanges = null;\n        return;\n      }\n\n      const { layout, settings, container, row } = this;\n      const { rowHeight } = settings;\n      this.ngOnChanges = (e: SimpleChanges) => {\n        if (e['index']) {\n          const change = e['index'];\n          const newIndex = change.currentValue;\n          const oldIndex = change.previousValue;\n          layout.removeItem(oldIndex);\n\n          const size = sizeFactory(rowHeight, container, row, newIndex);\n          layout.setItem(newIndex, size);\n        }\n      };\n\n      const firstChange = changes['index'];\n      const firstNewIndex = firstChange.currentValue;\n      const firstSize = sizeFactory(rowHeight, container, row, firstNewIndex);\n      layout.setItem(firstNewIndex, firstSize);\n    }\n  }\n\n  ngOnDestroy() {\n    this.port.layout.removeItem(this.index);\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { isNumber } from '@qgrid/core';\nimport { VscrollBox } from './vscroll.box';\nimport { VscrollContext } from './vscroll.context';\nimport { VscrollDirective } from './vscroll.directive';\nimport { VscrollLayout } from './vscroll.layout';\nimport { VscrollLink } from './vscroll.link';\nimport { VscrollPort } from './vscroll.port';\nimport { findPositionUsingItemSize, findPositionUsingOffsets, IVscrollPosition, recycleFactory } from './vscroll.position';\nimport { capitalize } from './vscroll.utility';\n\n@Directive({\n  selector: '[q-grid-vscroll-port-x]',\n})\nexport class VscrollPortXDirective implements VscrollPort, OnChanges {\n  private link: VscrollLink = null;\n\n  @Input('q-grid-vscroll-port-x') context: VscrollContext;\n\n  markup: { [key: string]: HTMLElement } = {};\n  layout: VscrollLayout = null;\n\n  constructor(\n    private elementRef: ElementRef,\n    private view: VscrollDirective,\n  ) {\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const contextChange = changes['context'];\n    if (contextChange && this.context) {\n      this.layout = new VscrollLayout(this);\n      this.link = new VscrollLink(this, this.view);\n      this.context.container.reset();\n    }\n  }\n\n  reset() {\n    this.view.resetX();\n  }\n\n  emit(f: () => void) {\n    const { settings } = this.context;\n\n    if (settings.emit) {\n      settings.emit(f);\n    } else {\n      f();\n    }\n  }\n\n  getPositionUsingItemSize(itemSize: number, box: VscrollBox, arm: number): IVscrollPosition {\n    const limitTop = box.scrollLeft - arm;\n    const limitBottom = box.scrollWidth - (box.portWidth + arm);\n    const value = Math.min(limitBottom, Math.max(0, limitTop));\n\n    return findPositionUsingItemSize(value, itemSize);\n  }\n\n  getPositionUsingOffsets(offsets: Array<number>, box: VscrollBox, arm: number): IVscrollPosition {\n    const limitTop = box.scrollLeft - arm;\n    const limitBottom = box.scrollHeight - (box.portWidth + arm);\n    const value = Math.min(limitBottom, Math.max(0, limitTop));\n\n    return findPositionUsingOffsets(value, offsets);\n  }\n\n  move(left: number, right: number) {\n    this.pad('left', left);\n    this.pad('right', right);\n  }\n\n  getItemSize(): number {\n    const columnWidth = this.context.settings.columnWidth as number;\n    return isNumber(columnWidth) ? columnWidth : 0;\n  }\n\n  getScrollSize(box: VscrollBox) {\n    return box.scrollWidth;\n  }\n\n  getSize(box: VscrollBox) {\n    return box.portWidth;\n  }\n\n  recycleFactory(items: Array<any>) {\n    const recycle = recycleFactory(items);\n    return (index: number, count: number) => {\n      const size = this.getItemSize();\n      if (size) {\n        return [];\n      }\n\n      return recycle(index, count);\n    };\n  }\n\n  hasChanges(newBox: VscrollBox, oldBox: VscrollBox) {\n    return !oldBox.portWidth || newBox.scrollWidth !== oldBox.scrollWidth;\n  }\n\n  private pad(pos: string, value: number) {\n    if (Object.prototype.hasOwnProperty.call(this.markup, pos)) {\n      const mark = this.markup[pos];\n      mark.style.width = value + 'px';\n    } else {\n      this.elementRef.nativeElement.style['padding' + capitalize(pos)] = value + 'px';\n    }\n  }\n}\n","import {\n  Directive,\n  OnInit,\n  OnDestroy,\n  ElementRef,\n  Input,\n  Optional,\n} from '@angular/core';\nimport { VscrollPortXDirective } from './vscroll-port-x.directive';\nimport { VscrollPortYDirective } from './vscroll-port-y.directive';\nimport { VscrollPort } from './vscroll.port';\n\n@Directive({\n  selector: '[q-grid-vscroll-mark]',\n})\nexport class VscrollMarkDirective implements OnInit, OnDestroy {\n  private ports: Array<VscrollPort> = [];\n\n  @Input('q-grid-vscroll-mark') key: string;\n\n  constructor(\n    private elementRef: ElementRef,\n    @Optional() portX: VscrollPortXDirective,\n    @Optional() portY: VscrollPortYDirective) {\n    if (portX) {\n      this.ports.push(portX);\n    }\n\n    if (portY) {\n      this.ports.push(portY);\n    }\n  }\n\n  ngOnInit() {\n    const element = this.elementRef.nativeElement;\n    const key = this.key;\n\n    this.ports.forEach(port => port.markup[key] = element);\n  }\n\n  ngOnDestroy() {\n    const key = this.key;\n\n    this.ports.forEach(port => delete port.markup[key]);\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { DomTr } from '../dom/dom';\nimport { GridLet } from '../grid/grid-let';\nimport { GridPlugin } from '../plugin/grid-plugin';\n\n@Directive({\n  selector: '[q-grid-core-tr]',\n})\nexport class TrCoreDirective implements DomTr, OnInit, OnDestroy {\n  @Input('q-grid-core-index') viewIndex: number;\n  @Input('q-grid-core-tr') model: any;\n  @Input('q-grid-core-source') source;\n\n  element: HTMLElement;\n\n  get index() {\n    return this.$view.scroll.y.container.position + this.viewIndex;\n  }\n\n  constructor(\n    public $view: GridLet,\n    private plugin: GridPlugin,\n    elementRef: ElementRef,\n  ) {\n    this.element = elementRef.nativeElement;\n  }\n\n  ngOnInit() {\n    this.plugin.table.box.bag[this.source].addRow(this);\n  }\n\n  ngOnDestroy() {\n    this.plugin.table.box.bag[this.source].deleteRow(this);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { bodyCellClassifier, ColumnModel, headCellClassifier } from '@qgrid/core';\n\n@Injectable()\nexport class CellClassService {\n  private bodyCache = new Map<ColumnModel, (x: HTMLElement) => void>();\n\n  toBody(element: HTMLElement, column: ColumnModel) {\n    let classify = this.bodyCache.get(column);\n    if (!classify) {\n      classify = bodyCellClassifier(column);\n      this.bodyCache.set(column, classify);\n    }\n\n    classify(element);\n  }\n\n  toHead(element: HTMLElement, column: ColumnModel) {\n    const classify = headCellClassifier(column);\n    classify(element);\n  }\n}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\nimport { ColumnView } from '@qgrid/core';\nimport { CellClassService } from '../cell/cell-class.service';\n\n@Directive({\n  selector: '[q-grid-core-td-align]',\n})\nexport class TdCoreAlignDirective implements OnInit {\n  @Input('q-grid-core-td-align') columnView: ColumnView;\n\n  constructor(\n    private elementRef: ElementRef,\n    private cellClass: CellClassService,\n  ) {\n  }\n\n  ngOnInit() {\n    this.cellClass.toBody(this.elementRef.nativeElement, this.columnView.model);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TemplateLink } from './template-link';\n\n@Injectable()\nexport class TemplateLinkService {\n  private cache: Map<string, TemplateLink> = new Map();\n\n  get(key: string): TemplateLink {\n    return this.cache.get(key);\n  }\n\n  put(key: string, value: TemplateLink) {\n    this.cache.set(key, value);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TemplateLink } from './template-link';\n\n@Injectable()\nexport class TemplateCacheService {\n  private cache: Map<string, TemplateLink> = new Map();\n\n  constructor() {\n  }\n\n  get(key: string): TemplateLink {\n    return this.cache.get(key);\n  }\n\n  put(key: string, value: TemplateLink) {\n    this.cache.set(key, value);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { isArray, isString } from '@qgrid/core';\nimport { TemplateCacheService } from './template-cache.service';\nimport { TemplateLink } from './template-link';\nimport { TemplateLinkService } from './template-link.service';\n\n@Injectable()\nexport class TemplateService {\n  constructor(\n\t\tprivate templateLink: TemplateLinkService,\n\t\tprivate templateCache: TemplateCacheService,\n  ) { }\n\n  find(keys: string | string[]): TemplateLink {\n    if (isString(keys)) {\n      const key = keys as string;\n      const link = this.templateCache.get(key) || this.templateLink.get(key);\n      return link || null;\n    }\n\n    if (isArray(keys)) {\n      return this.lookInCache(keys) || this.lookInLink(keys);\n    }\n  }\n\n  private lookInCache(keys) {\n    for (const key of keys) {\n      const link = this.templateCache.get(key);\n      if (link) {\n        return link;\n      }\n    }\n\n    return null;\n  }\n\n  private lookInLink(keys) {\n    for (const key of keys) {\n      const link = this.templateLink.get(key);\n      if (link) {\n        return link;\n      }\n    }\n\n    return null;\n  }\n}\n","import { Injectable, ViewContainerRef } from '@angular/core';\nimport { ColumnModel, GridError, noop } from '@qgrid/core';\nimport { TemplateService } from '../template/template.service';\n\nfunction canBuild(column) {\n  return column.type !== 'pad';\n}\n\nfunction buildId(source: string, column: ColumnModel, mode = 'view') {\n  const { key, type, itemType } = column as any;\n  return `${source}-${mode}-cell-${type}-of-${itemType}-the-${key}.tpl.html`;\n}\n\nfunction buildKeys(source: string, column: ColumnModel, mode = 'view') {\n  const { key, itemType } = column as any;\n  let { type } = column as any;\n\n  switch (mode) {\n    case 'view': {\n      const result = [\n        `${source}-cell-${type}-the-${key}.tpl.html`,\n        `${source}-cell-the-${key}.tpl.html`,\n        `${source}-cell-${type}.tpl.html`,\n        `${source}-cell.tpl.html`,\n        `${source}-cell-text.tpl.html`,\n      ];\n\n      if (itemType) {\n        result.splice(0, 0,\n          ...[`${source}-cell-${type}-of-${itemType}-the-${key}.tpl.html`, `${source}-cell-${type}-of-${itemType}.tpl.html`],\n        );\n      }\n\n      return result;\n    }\n    case 'change':\n    case 'edit': {\n      type = column.editor || type;\n      const result = [\n        `${mode}-cell-${type}-the-${key}.tpl.html`,\n        `${mode}-cell-the-${key}.tpl.html`,\n        `${mode}-cell-${type}.tpl.html`,\n        `${mode}-cell.tpl.html`,\n        `${mode}-cell-text.tpl.html`,\n      ];\n\n      if (itemType) {\n        result.splice(0, 0,\n          ...[`${mode}-cell-${type}-of-${itemType}-the-${key}.tpl.html`, `${mode}-cell-${type}-of-${itemType}.tpl.html`],\n        );\n      }\n\n      return result;\n    }\n    default:\n      throw new GridError('cell.service', `Invalid mode '${mode}'`);\n  }\n}\n\n@Injectable()\nexport class CellTemplateService {\n  private commits = new Map<string, (container: ViewContainerRef, context: any) => void>();\n\n  constructor(private templateService: TemplateService) { }\n\n  build(source: string, column: ColumnModel, mode: 'view' | 'edit' | 'change' = 'view') {\n    if (!canBuild(column)) {\n      return noop;\n    }\n\n    const id = buildId(source, column, mode);\n    let commit = this.commits.get(id);\n    if (commit) {\n      return commit;\n    }\n\n    const keys = buildKeys(source, column, mode);\n    const templateLink = this.templateService.find(keys);\n    if (!templateLink) {\n      return noop;\n    }\n\n    commit = (container: ViewContainerRef, context: any) => {\n      container.clear();\n      return container.createEmbeddedView(templateLink.template, context);\n    };\n\n    this.commits.set(id, commit);\n    return commit;\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChange,\n  SimpleChanges,\n  ViewContainerRef,\n} from '@angular/core';\nimport {\n  ColumnModel,\n  ColumnView,\n  GridError,\n  GRID_PREFIX,\n  noop,\n} from '@qgrid/core';\nimport { CellClassService } from '../cell/cell-class.service';\nimport { CellTemplateService } from '../cell/cell-template.service';\nimport { DomTd } from '../dom/dom';\nimport { GridLet } from '../grid/grid-let';\nimport { GridRoot } from '../grid/grid-root';\nimport { TrCoreDirective } from '../row/tr-core.directive';\n\n@Directive({\n  selector: '[q-grid-core-td]',\n})\nexport class TdCoreDirective implements DomTd, OnInit, OnDestroy, OnChanges {\n  @Input('q-grid-core-value') actualValue: any;\n  @Input('q-grid-core-label') actualLabel: any;\n\n  @Input('q-grid-core-td') columnView: ColumnView;\n\n  $implicit = this;\n\n  element: HTMLElement;\n  changes: SimpleChange;\n\n  get value() {\n    return this.actualValue;\n  }\n\n  set value(value) {\n    const { column, row, rowIndex, columnIndex } = this;\n    this.$view.body.render.setValue(row, column, value, rowIndex, columnIndex);\n  }\n\n  get label() {\n    return this.actualLabel;\n  }\n\n  set label(label) {\n    const { column, row, rowIndex, columnIndex } = this;\n    this.$view.body.render.setLabel(row, column, label, rowIndex, columnIndex);\n  }\n\n  get column(): ColumnModel {\n    return this.columnView.model;\n  }\n\n  get columnIndex() {\n    return this.columnView.columnIndex;\n  }\n\n  get row() {\n    return this.tr.model;\n  }\n\n  get rowIndex() {\n    return this.tr.index;\n  }\n\n  get dataRowIndex() {\n    const { model } = this.root;\n    const { rows } = model.data();\n    return rows.indexOf(this.row);\n  }\n\n  constructor(\n    public $view: GridLet,\n    private root: GridRoot,\n    private viewContainerRef: ViewContainerRef,\n    private cellTemplate: CellTemplateService,\n    private cellClass: CellClassService,\n    private tr: TrCoreDirective,\n    private cd: ChangeDetectorRef,\n    elementRef: ElementRef,\n  ) {\n    this.element = elementRef.nativeElement.parentNode;\n  }\n\n  ngOnInit() {\n    const { table } = this.root;\n    table.box.bag.body.addCell(this);\n\n    this.cellClass.toBody(this.element, this.column);\n\n    const link = this.cellTemplate.build('body', this.column, 'view');\n    link(this.viewContainerRef, this);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const { actualLabel } = changes;\n    if (actualLabel && !actualLabel.firstChange && actualLabel.currentValue !== actualLabel.previousValue) {\n      this.changes = actualLabel;\n      this.mode('change');\n    }\n  }\n\n  mode(value: 'view' | 'edit' | 'change') {\n    const link = this.cellTemplate.build('body', this.column, value);\n\n    switch (value) {\n      case 'view': {\n        this.element.classList.remove(`${GRID_PREFIX}-change`);\n        this.element.classList.remove(`${GRID_PREFIX}-edit`);\n\n        if (link !== noop) {\n          link(this.viewContainerRef, this);\n          this.cd.markForCheck();\n          this.cd.detectChanges();\n        }\n        break;\n      }\n      case 'edit': {\n        if (link === noop) {\n          throw new GridError(\n            'td-core.directive',\n            `Can't find template link for edit of ${this.column.key}`,\n          );\n        }\n\n        this.element.classList.add(`${GRID_PREFIX}-${value}`);\n        link(this.viewContainerRef, this);\n        this.cd.markForCheck();\n        this.cd.detectChanges();\n        break;\n      }\n      case 'change': {\n        if (link !== noop) {\n          this.element.classList.add(`${GRID_PREFIX}-${value}`);\n          link(this.viewContainerRef, this);\n          this.cd.markForCheck();\n          this.cd.detectChanges();\n        }\n        break;\n      }\n      default: {\n        throw new GridError('td-core.directive', `Invalid mode ${value}`);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    const { table } = this.root;\n    table.box.bag.body.deleteCell(this);\n  }\n}\n","import { ChangeDetectorRef, OnDestroy, Pipe, PipeTransform } from '@angular/core';\nimport {\n  Disposable,\n  IVscrollContext,\n  Log,\n  ObservableLike,\n  SubjectLike,\n} from '@qgrid/core';\n\n@Pipe({\n  name: 'qGridVscroll$',\n  pure: true,\n})\nexport class VscrollPipe implements OnDestroy, PipeTransform {\n  private disposable = new Disposable();\n\n  constructor(private cd: ChangeDetectorRef) {\n  }\n\n  transform(data: any[], context: IVscrollContext): ObservableLike<any[]> {\n    this.disposable.finalize();\n\n    if (!context) {\n      Log.warn('VscrollPipe', 'Context is not defined');\n      return new SubjectLike();\n    }\n\n    data = data || [];\n    const { container, settings } = context;\n    const items$ = new SubjectLike<any>();\n\n    container.update(data.length);\n\n    let cursor = container.position;\n    this.disposable.add(\n      container.draw$.subscribe(({ position }) => {\n        const { length } = data;\n        const { threshold } = settings;\n\n        container.update(length);\n\n        // We need to have a less number of virtual items on\n        // the bottom, as deferred loading is happen there should\n        // be a threshold place to draw several items below so we use cursor for the last\n        const first = position;\n        if (container.force || first !== cursor) {\n          const last = Math.min(first + threshold, length);\n          const wnd = new Array(last - first);\n\n          cursor = first;\n          container.force = false;\n\n          for (let i = first, j = 0; i < last; i++, j++) {\n            wnd[j] = data[i];\n          }\n\n          // TODO: remove that workaround\n          // async pipe doesn't trigger change detection,\n          // so we put subscription here to invoke detect changes\n          // after async pipe marks for check\n          const sub = items$.subscribe(() => {\n            this.cd.detectChanges();\n          });\n\n          try {\n            items$.next(wnd);\n          } finally {\n            sub.unsubscribe();\n          }\n        }\n      }),\n    );\n\n    return items$;\n  }\n\n  ngOnDestroy() {\n    this.disposable.finalize();\n  }\n}\n","<ng-container *ngTemplateOutlet=\"$view.scroll.mode === 'virtual' && pin === 'body' ? virtualRows : rows\">\n</ng-container>\n\n<ng-template #virtualRows>\n\t<tr q-grid-vscroll-mark=\"top\"\n\t\tclass=\"q-grid-scroll-mark\">\n\t</tr>\n\t<tr class=\"q-grid-align\">\n\t\t<td *ngFor=\"let $column of $view.body.columns($table.pin); trackBy: columnId\"\n\t\t\t[q-grid-core-td-align]=\"$column\">\n\t\t</td>\n\t</tr>\n\t<tr *ngFor=\"\n\t\tlet $row of $view.body.render.rows[pin] | qGridVscroll$: $view.scroll.y | async;\n\t\tindex as $vscrollIndex;\n\t\ttrackBy: $view.scroll.y.id\"\n\t\t\t[q-grid-core-tr]=\"$row\"\n\t\t\t[q-grid-core-index]=\"$vscrollIndex\"\n\t\t\t[q-grid-vscroll-row]=\"$vscrollIndex\"\n\t\t\tq-grid-core-source=\"body\">\n\t\t<td *ngFor=\"\n\t\t\tlet $column of $view.body.render.columns($row, $table.pin, mapToDataIndex($vscrollIndex));\n\t\t\tindex as $columnIndex;\n\t\t\ttrackBy: columnId\"\n\t\t\t\t[attr.rowspan]=\"$view.body.render.rowspan($row, $column, mapToDataIndex($vscrollIndex), $columnIndex)\"\n\t\t\t\t[attr.colspan]=\"$view.body.render.colspan($row, $column, mapToDataIndex($vscrollIndex), $columnIndex)\">\n\t\t\t\t<ng-container [q-grid-core-td]=\"$column\"\n\t\t\t\t\t[q-grid-core-label]=\"$view.body.render.getLabel($row, $column.model, mapToDataIndex($vscrollIndex), $columnIndex)\"\n\t\t\t\t\t[q-grid-core-value]=\"$view.body.render.getValue($row, $column.model, mapToDataIndex($vscrollIndex), $columnIndex)\">\n\t\t\t\t</ng-container>\n\t\t</td>\n\t</tr>\n\t<tr q-grid-vscroll-mark=\"bottom\"\n\t\tclass=\"q-grid-scroll-mark\">\n\t</tr>\n</ng-template>\n\n<ng-template #rows>\n\t<tr class=\"q-grid-align\">\n\t\t<td *ngFor=\"let $column of $view.body.columns($table.pin); trackBy: columnId\"\n\t\t\t[q-grid-core-td-align]=\"$column\">\n\t\t</td>\n\t</tr>\n\t<tr *ngFor=\"let $row of $view.body.render.rows[pin]; index as $rowIndex; trackBy: rowId\"\n\t\t[q-grid-core-tr]=\"$row\"\n\t\t[q-grid-core-index]=\"$rowIndex\"\n\t\tq-grid-core-source=\"body\">\n\t\t<td *ngFor=\"let $column of $view.body.render.columns($row, $table.pin, $rowIndex); index as $columnIndex; trackBy: columnId\"\n\t\t\t[attr.rowspan]=\"$view.body.render.rowspan($row, $column, $rowIndex, $columnIndex)\"\n\t\t\t[attr.colspan]=\"$view.body.render.colspan($row, $column, $rowIndex, $columnIndex)\">\n\t\t\t<ng-container [q-grid-core-td]=\"$column\"\n\t\t\t\t[q-grid-core-label]=\"$view.body.render.getLabel($row, $column.model, $rowIndex, $columnIndex)\"\n\t\t\t\t[q-grid-core-value]=\"$view.body.render.getValue($row, $column.model, $rowIndex, $columnIndex)\">\n\t\t\t</ng-container>\n\t\t</td>\n\t</tr>\n</ng-template>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  NgZone,\n  OnInit,\n} from '@angular/core';\nimport {\n  BodyHost,\n  ColumnView,\n  EventListener,\n  EventManager,\n  SelectionState,\n} from '@qgrid/core';\nimport { GridLet } from '../grid/grid-let';\nimport { GridModel } from '../grid/grid-model';\nimport { GridPlugin } from '../plugin/grid-plugin';\nimport { TableCoreService } from '../table/table-core.service';\n\n@Component({\n  selector: 'tbody[q-grid-core-body]', // eslint-disable-line @angular-eslint/component-selector\n  templateUrl: './body-core.component.html',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BodyCoreComponent implements OnInit {\n  @Input() pin = 'body';\n\n  // @deprecated\n  get selection(): SelectionState {\n    return this.model.selection();\n  }\n\n  get model(): GridModel {\n    return this.plugin.model;\n  }\n\n  constructor(\n    public $view: GridLet,\n    public $table: TableCoreService,\n    private elementRef: ElementRef,\n    private zone: NgZone,\n    private cd: ChangeDetectorRef,\n    private plugin: GridPlugin,\n  ) {\n  }\n\n  ngOnInit() {\n    const { model, disposable, observeReply, observe } = this.plugin;\n    const nativeElement = this.elementRef.nativeElement as HTMLElement;\n\n    const host = new BodyHost(this.plugin);\n\n    const listener = new EventListener(this.elementRef.nativeElement, new EventManager(this));\n    this.zone.runOutsideAngular(() => {\n      const scrollSettings = { passive: true };\n      disposable.add(\n        listener.on('scroll',\n          () => host.scroll({\n            scrollLeft: this.$table.pin === 'mid' ? nativeElement.scrollLeft : model.scroll().left,\n            scrollTop: nativeElement.scrollTop,\n          }),\n          scrollSettings,\n        ));\n\n      disposable.add(listener.on('wheel', e => host.wheel(e)));\n      disposable.add(listener.on('mouseleave', e => host.mouseLeave(e)));\n    });\n\n    observeReply(model.sceneChanged)\n      .subscribe(e => {\n        if (model.grid().interactionMode === 'detached') {\n          if (e.hasChanges('status')) {\n            switch (e.state.status) {\n              case 'stop':\n                this.cd.detach();\n                break;\n              case 'start':\n                this.cd.reattach();\n                break;\n            }\n          }\n        }\n      });\n\n    observe(model.sceneChanged)\n      .subscribe(e => {\n        if (e.hasChanges('status') && e.state.status === 'push') {\n          this.cd.markForCheck();\n        }\n      });\n  }\n\n  columnId(index: number, item: ColumnView) {\n    return item.model.key;\n  }\n\n  rowId(index: number) {\n    return index;\n  }\n\n  mapToDataIndex(viewIndex: number) {\n    return this.$view.scroll.y.container.position + viewIndex;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IVscrollSettings } from '@qgrid/core';\nimport { VscrollContext } from './vscroll.context';\n\n@Injectable()\nexport class VscrollService {\n  context(settings: Partial<IVscrollSettings> = {}) {\n    const context = new VscrollContext();\n    Object.assign(context.settings, settings);\n\n    return context;\n  }\n}\n","import {\n  Directive,\n  Input,\n  ElementRef,\n  OnDestroy,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { sizeFactory } from './vscroll.container';\nimport { VscrollPortYDirective } from './vscroll-port-y.directive';\n\n@Directive({\n  selector: '[q-grid-vscroll-column]',\n})\nexport class VscrollColumnDirective implements OnDestroy, OnChanges {\n  private column: HTMLElement;\n\n  private get layout() {\n    return this.port.layout;\n  }\n\n  private get settings() {\n    return this.port.context.settings;\n  }\n\n  private get container() {\n    return this.port.context.container;\n  }\n\n  @Input('q-grid-vscroll-column') index: number;\n\n  constructor(elementRef: ElementRef, private port: VscrollPortYDirective) {\n    this.column = elementRef.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['index']) {\n      if (this.port.getItemSize()) {\n        this.ngOnChanges = null;\n        return;\n      }\n\n      const { layout, settings, container, column } = this;\n      const { rowHeight } = settings;\n      this.ngOnChanges = (e: SimpleChanges) => {\n        if (e['index']) {\n          const change = e['index'];\n          const newIndex = change.currentValue;\n          const oldIndex = change.previousValue;\n          layout.removeItem(oldIndex);\n\n          const size = sizeFactory(rowHeight, container, column, newIndex);\n          layout.setItem(newIndex, size);\n        }\n      };\n\n      const firstChange = changes['index'];\n      const firstIndex = firstChange.currentValue;\n      const firstSize = sizeFactory(rowHeight, container, column, firstIndex);\n      layout.setItem(firstIndex, firstSize);\n    }\n  }\n\n  ngOnDestroy() {\n    this.port.layout.removeItem(this.index);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { VscrollService } from './vscroll.service';\nimport { VscrollColumnDirective } from './vscroll-column.directive';\nimport { VscrollRowDirective } from './vscroll-row.directive';\nimport { VscrollPipe } from './vscroll.pipe';\nimport { VscrollMarkDirective } from './vscroll-mark.directive';\nimport { VscrollPortXDirective } from './vscroll-port-x.directive';\nimport { VscrollPortYDirective } from './vscroll-port-y.directive';\nimport { VscrollDirective } from './vscroll.directive';\n\n@NgModule({\n  declarations: [\n    VscrollDirective,\n    VscrollColumnDirective,\n    VscrollRowDirective,\n    VscrollMarkDirective,\n    VscrollPortXDirective,\n    VscrollPortYDirective,\n    VscrollPipe,\n  ],\n  exports: [\n    VscrollDirective,\n    VscrollColumnDirective,\n    VscrollRowDirective,\n    VscrollMarkDirective,\n    VscrollPortXDirective,\n    VscrollPortYDirective,\n    VscrollPipe,\n  ],\n  providers: [\n    VscrollService,\n  ],\n})\nexport class VscrollModule {\n}\n","import { Injectable } from '@angular/core';\nimport { GridModel } from '../grid/grid-model';\n\n@Injectable()\nexport class StateAccessor {\n  private setters: Array<(model: GridModel) => void> = [];\n\n  setter<TState>(type: new () => TState): (state: Partial<TState>) => void {\n    return value => {\n      this.setters.push(model => {\n        const accessor = model.resolve(type);\n        accessor.state(value);\n      });\n    };\n  }\n\n  write(model: GridModel) {\n    for (const setter of this.setters) {\n      setter(model);\n    }\n\n    this.setters = [];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { identity } from '@qgrid/core';\n\n@Injectable()\nexport class TemplateHostService {\n  key: (x: string) => string = identity;\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n} from '@angular/core';\nimport {\n  Command,\n  RowDetails,\n  RowState,\n  RowStateMode,\n  RowStateUnit,\n  Td,\n} from '@qgrid/core';\nimport { GridPlugin } from '../plugin/grid-plugin';\nimport { StateAccessor } from '../state/state-accessor';\nimport { TemplateHostService } from '../template/template-host.service';\n\n// TODO: move it to plugins\n@Component({\n  selector: 'q-grid-row',\n  template: `<ng-content></ng-content>\n`,\n  providers: [\n    TemplateHostService,\n    GridPlugin,\n    StateAccessor,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RowComponent implements OnChanges, OnInit {\n  private rowAccessor = this.stateAccessor.setter(RowState);\n\n  private toggleStatus = new Command<any>({\n    execute: row => {\n      const { view } = this.plugin;\n      return view.rowDetails.toggleStatus.execute(row);\n    },\n    canExecute: row => {\n      if (row instanceof RowDetails) {\n        return false;\n      }\n\n      const { view } = this.plugin;\n      return view.rowDetails.toggleStatus.canExecute(row);\n    },\n  });\n\n  @Input() behavior: string[] = [];\n\n  @Input() set mode(mode: RowStateMode) { this.rowAccessor({ mode }); }\n  @Input() set unit(unit: RowStateUnit) { this.rowAccessor({ unit }); }\n  @Input() set canMove(canMove: boolean) { this.rowAccessor({ canMove }); }\n  @Input() set canResize(canResize: boolean) { this.rowAccessor({ canResize }); }\n  @Input() set minHeight(minHeight: number) { this.rowAccessor({ minHeight }); }\n  @Input() set height(height: RowState['height']) { this.rowAccessor({ height }); }\n\n  constructor(\n    private plugin: GridPlugin,\n    private stateAccessor: StateAccessor,\n    templateHost: TemplateHostService,\n  ) {\n    templateHost.key = source => `body-cell-row-${source}.tpl.html`;\n  }\n\n  ngOnInit() {\n    const { model, observe } = this.plugin;\n\n    if (this.behavior.indexOf('expandOnShortcut') >= 0) {\n      observe(model.keyboardChanged)\n        .subscribe(e => {\n          const { codes, status } = e.state;\n          if (status === 'down') {\n            switch (codes[0]) {\n              // TODO: replace it from row state shortcut property.\n              case 'enter':\n              case 'space': {\n                const { cell } = model.navigation();\n                if (cell) {\n                  const { row, column } = cell;\n                  if (column.type !== 'row-expand' && this.toggleStatus.canExecute(row)) {\n                    this.toggleStatus.execute(row);\n                  }\n                }\n                break;\n              }\n            }\n          }\n        });\n\n      if (this.behavior.indexOf('expandOnClick') >= 0) {\n        observe(model.mouseChanged)\n          .subscribe(e => {\n            const { code, status, target } = e.state;\n            if (code === 'left' && status === 'up') {\n              if (target && target.column.type !== 'row-expand') {\n                if (this.toggleStatus.canExecute(target.row)) {\n                  this.toggleStatus.execute(target.row);\n                }\n              }\n            }\n          });\n      }\n    }\n\n    if (this.behavior.indexOf('expandOnDblClick') >= 0) {\n      let firstClickTarget: Td | null = null;\n\n      observe(model.mouseChanged)\n        .subscribe(e => {\n          const { code, timestamp } = e.changes;\n          if (e.state.status === 'release' && code?.oldValue === 'left') {\n            const target = e.changes.target?.oldValue;\n            if (firstClickTarget === null) {\n              firstClickTarget = target || null;\n            } else {\n              const dblClickInterval = 300;\n              if (firstClickTarget === target && timestamp && timestamp.newValue - timestamp.oldValue <= dblClickInterval) {\n                if (target.column.type !== 'row-expand') {\n                  if (this.toggleStatus.canExecute(target.row)) {\n                    this.toggleStatus.execute(target.row);\n                  }\n                }\n              }\n\n              firstClickTarget = null;\n            }\n          }\n        });\n    }\n  }\n\n  ngOnChanges() {\n    const { model } = this.plugin;\n    this.stateAccessor.write(model);\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { DomTr } from '../dom/dom';\nimport { GridLet } from '../grid/grid-let';\nimport { GridPlugin } from '../plugin/grid-plugin';\n\n@Directive({\n  selector: '[q-grid-core-trh]',\n})\nexport class TrhCoreDirective implements DomTr, OnInit, OnDestroy {\n  @Input('q-grid-core-index') index: number;\n  @Input('q-grid-core-trh') model: any;\n  @Input('q-grid-core-source') source;\n\n  element: HTMLElement;\n\n  constructor(\n    public $view: GridLet,\n    private plugin: GridPlugin,\n    elementRef: ElementRef,\n  ) {\n    this.element = elementRef.nativeElement;\n  }\n\n  ngOnInit() {\n    this.plugin.table.box.bag[this.source].addRow(this);\n  }\n\n  ngOnDestroy() {\n    this.plugin.table.box.bag[this.source].deleteRow(this);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RowComponent } from './row.component';\nimport { TrCoreDirective } from './tr-core.directive';\nimport { TrhCoreDirective } from './trh-core.directive';\n\n@NgModule({\n  declarations: [\n    RowComponent,\n    TrCoreDirective,\n    TrhCoreDirective,\n  ],\n  exports: [\n    RowComponent,\n    TrCoreDirective,\n    TrhCoreDirective,\n  ],\n})\nexport class RowModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BodyCoreComponent } from './body-core.component';\nimport { TdCoreAlignDirective } from './td-core-align.directive';\nimport { TdCoreDirective } from './td-core.directive';\nimport { VscrollModule } from '../vscroll/vscroll.module';\nimport { RowModule } from '../row/row.module';\n\n@NgModule({\n  declarations: [\n    BodyCoreComponent,\n    TdCoreAlignDirective,\n    TdCoreDirective,\n  ],\n  imports: [\n    CommonModule,\n    VscrollModule,\n    RowModule,\n  ],\n  exports: [\n    BodyCoreComponent,\n  ],\n})\nexport class BodyModule {\n}\n","import { Injectable } from '@angular/core';\nimport { Event } from '@qgrid/core';\n\nexport interface ThemeNameChangeEventArg {\n\toldName: string;\n\tnewName: string;\n}\n\n@Injectable()\nexport class ThemeService {\n  private themeName = '';\n\n  changed = new Event<ThemeNameChangeEventArg>();\n  component: any;\n\n  get name() {\n    return this.themeName;\n  }\n\n  set name(value: string) {\n    if (value !== this.themeName) {\n      const oldName = this.themeName;\n      const newName = value;\n\n      this.changed.emit({ oldName, newName });\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, OnInit } from '@angular/core';\nimport { BoxHost, GRID_PREFIX } from '@qgrid/core';\nimport { GridPlugin } from '../plugin/grid-plugin';\nimport { ThemeService } from '../theme/theme.service';\n\n@Component({\n  selector: 'q-grid-box',\n  templateUrl: './box.component.html',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BoxComponent implements OnInit {\n  constructor(\n\t\tprivate elementRef: ElementRef,\n\t\tprivate theme: ThemeService,\n\t\tprivate plugin: GridPlugin,\n  ) {\n  }\n\n  ngOnInit() {\n    // tslint:disable-next-line:no-unused-expression\n    new BoxHost(this.elementRef.nativeElement, this.plugin);\n    this.initTheme();\n  }\n\n  initTheme() {\n    const { observeReply } = this.plugin;\n    const { nativeElement } = this.elementRef;\n\n    observeReply(this.theme.changed)\n      .subscribe(e => {\n        if (e) {\n          nativeElement.classList.remove(`${GRID_PREFIX}-theme-${e.oldName}`);\n        }\n\n        nativeElement.classList.add(`${GRID_PREFIX}-theme-${e.newName}`);\n      });\n  }\n}\n","<ng-content></ng-content>\n","import { NgModule } from '@angular/core';\nimport { BoxComponent } from './box.component';\n\n@NgModule({\n  declarations: [\n    BoxComponent,\n  ],\n  exports: [\n    BoxComponent,\n  ],\n})\nexport class BoxModule {\n}\n","<i #marker\n   *ngIf=\"canEditBatch\"\n   class=\"material-icons q-grid-edit-marker\"\n   (mousedown)=\"startBatchEdit()\">\n    signal_cellular_4_bar\n</i>\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  CellView,\n  EditService,\n  Fastdom,\n  jobLine,\n  NavigationState,\n  RowDetails,\n} from '@qgrid/core';\nimport { GridEventArg } from '../grid/grid-model';\nimport { GridPlugin } from '../plugin/grid-plugin';\n\n@Component({\n  selector: 'q-grid-cell-handler',\n  templateUrl: './cell-handler.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [GridPlugin],\n})\nexport class CellHandlerComponent implements OnInit, AfterViewInit {\n  private endBatchEdit: () => void;\n\n  @ViewChild('marker', { static: true }) marker: ElementRef;\n\n  canEditBatch = false;\n\n  constructor(\n    private elementRef: ElementRef,\n    private plugin: GridPlugin,\n    private cd: ChangeDetectorRef,\n  ) {\n    this.elementRef.nativeElement.style.display = 'none';\n  }\n\n  ngOnInit() {\n    const { model, observeReply } = this.plugin;\n    const updateHandler = this.updateHandlerFactory();\n\n    observeReply(model.navigationChanged)\n      .subscribe(e => updateHandler(e));\n\n    observeReply(model.editChanged)\n      .subscribe(e => {\n        if (e.hasChanges('method')) {\n          this.canEditBatch = e.state.method === 'batch';\n          this.cd.markForCheck();\n          this.cd.detectChanges();\n        }\n\n        if (e.hasChanges('status')) {\n          if (e.state.status === 'endBatch' && this.endBatchEdit) {\n            this.endBatchEdit();\n            this.endBatchEdit = null;\n          }\n        }\n      });\n  }\n\n  ngAfterViewInit() {\n    this.elementRef.nativeElement.style.display = '';\n  }\n\n  updateHandlerFactory() {\n    const { model, table } = this.plugin;\n    const element = this.elementRef.nativeElement;\n    const job = jobLine(150);\n\n    // When navigate first or when animation wasn't applied we need to omit\n    // next navigation event to make handler to correct position.\n    let doNotPassAnimation = false;\n    return (e: GridEventArg<NavigationState>) => {\n      if (e.hasChanges('cell')) {\n        const { cell } = e.state;\n\n        if (cell) {\n          const oldCell = e.changes.cell.oldValue || {} as CellView;\n          const newCell = e.changes.cell.newValue || {} as CellView;\n          const oldColumn = oldCell.column || {};\n          const newColumn = newCell.column || {};\n\n          // Do not apply animation for columns that have viewWidth assigned\n          // because it can be animated too.\n          const shouldAnimate =\n            !model.drag().isActive\n            && (oldColumn.key === newColumn.key || !(oldColumn.viewWidth || newColumn.viewWidth))\n            && !(oldCell.row instanceof RowDetails || newCell.row instanceof RowDetails);\n\n          const domCell = table.body.cell(cell.rowIndex, cell.columnIndex);\n          if (shouldAnimate) {\n            // It can be that the cell object was changed but indices are not.\n            doNotPassAnimation =\n              oldCell.rowIndex >= 0\n              && oldCell.columnIndex >= 0\n              && (newCell.rowIndex !== oldCell.rowIndex || newCell.columnIndex !== oldCell.columnIndex);\n\n            if (doNotPassAnimation) {\n              domCell.addClass('q-grid-animate');\n              element.classList.add('q-grid-active');\n\n              job(() => {\n                element.classList.remove('q-grid-active');\n                domCell.removeClass('q-grid-animate');\n              }).catch(() => {\n                Fastdom.mutate(() => {\n                  domCell.removeClass('q-grid-animate');\n                });\n              });\n            }\n          } else {\n            doNotPassAnimation = false;\n          }\n\n          Fastdom.measure(() => {\n            const target = domCell.element;\n            const scrollState = model.scroll();\n\n            const headHeight = table.view.height('head-mid');\n\n            const top = Math.max(headHeight, (target.offsetTop - scrollState.top));\n            const left = (target.offsetLeft - (cell.column.pin === 'mid' ? scrollState.left : 0));\n            const width = target.offsetWidth;\n            const height = target.offsetHeight;\n\n            Fastdom.mutate(() => {\n              element.style.top = top + 'px';\n              element.style.left = left + 'px';\n              element.style.width = width + 'px';\n              element.style.height = height + 'px';\n            });\n          });\n\n          doNotPassAnimation = true;\n        }\n      }\n\n    };\n  }\n\n  startBatchEdit() {\n    const { model } = this.plugin;\n\n    const { cell: startCell } = model.navigation();\n    if (startCell) {\n      const editService = new EditService(this.plugin);\n      this.endBatchEdit = editService.startBatch(startCell);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CellHandlerComponent } from './cell-handler.component';\n\n@NgModule({\n  declarations: [\n    CellHandlerComponent,\n  ],\n  exports: [\n    CellHandlerComponent,\n  ],\n  imports: [\n    CommonModule,\n  ],\n})\nexport class CellHandlerModule {\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  Input,\n  NgZone,\n  OnDestroy,\n} from '@angular/core';\nimport { ObservableLike, UnsubscribableLike } from '@qgrid/core';\n\n@Directive({\n  selector: '[q-grid-dirty-host]',\n})\nexport class DirtyHostDirective implements OnDestroy {\n  private subscription: UnsubscribableLike | null = null;\n\n  whoNeedsIt = 0;\n\n  @Input('q-grid-dirty-host') set trigger(value: ObservableLike<any>) {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = null;\n    }\n\n    if (value) {\n      this.subscription = value.subscribe(() => {\n        if (this.whoNeedsIt > 0) {\n          this.zone.run(() => {\n            this.cd.detectChanges();\n          });\n        }\n      });\n    }\n  }\n\n  constructor(\n    private zone: NgZone,\n    private cd: ChangeDetectorRef,\n  ) {\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = null;\n    }\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  forwardRef,\n  Host,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport { ObservableLike, UnsubscribableLike } from '@qgrid/core';\nimport { DirtyHostDirective } from './dirty-host.directive';\n\n@Directive({\n  selector: '[q-grid-dirty]',\n})\nexport class DirtyDirective implements OnDestroy {\n  private subscription: UnsubscribableLike | null = null;\n\n  @Input('q-grid-dirty') set trigger(value: ObservableLike<any>) {\n    // todo: trigger cd only for particular values\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = null;\n    }\n\n    if (value) {\n      this.subscription = value.subscribe(() => {\n        if (this.host) {\n          this.cd.markForCheck();\n        } else {\n          this.zone.run(() => {\n            this.cd.markForCheck();\n            this.cd.detectChanges();\n          });\n        }\n      });\n    }\n  }\n\n  constructor(\n    private zone: NgZone,\n    private cd: ChangeDetectorRef,\n    @Optional() @Host() @SkipSelf() private host: DirtyHostDirective,\n  ) {\n    if (this.host) {\n      this.host.whoNeedsIt++;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.host) {\n      this.host.whoNeedsIt--;\n    }\n\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = null;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { DirtyHostDirective } from './dirty-host.directive';\nimport { DirtyDirective } from './dirty.directive';\n\n@NgModule({\n  declarations: [\n    DirtyDirective,\n    DirtyHostDirective,\n  ],\n  exports: [\n    DirtyDirective,\n    DirtyHostDirective,\n  ],\n})\nexport class ChangeDetectorModule {\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ColumnListHost,\n  ColumnModel,\n  isUndefined,\n  Lazy,\n  parseFactory,\n} from '@qgrid/core';\nimport { GridPlugin } from '../plugin/grid-plugin';\n\n@Injectable()\nexport class ColumnListService {\n  private host = new Lazy(() => {\n    const canCopy = (key: string, source, target) =>\n      Object.prototype.hasOwnProperty.call(target, key) && !isUndefined(source[key]);\n\n    return new ColumnListHost(this.plugin.model, canCopy, parseFactory);\n  });\n\n  constructor(private plugin: GridPlugin) {\n  }\n\n  add(column: ColumnModel) {\n    this.host.instance.add(column);\n  }\n\n  copy(target, source) {\n    this.host.instance.copy(target, source);\n  }\n\n  generateKey(source) {\n    return this.host.instance.generateKey(source);\n  }\n\n  extract(key, type): ColumnModel {\n    return this.host.instance.extract(key, type);\n  }\n\n  register(column: ColumnModel) {\n    this.host.instance.register(column);\n  }\n\n  delete(key: string) {\n    this.host.instance.delete(key);\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges } from '@angular/core';\nimport { ColumnListState, ColumnListStateGeneration, ColumnListStateTypeDetection } from '@qgrid/core';\nimport { GridPlugin } from '../plugin/grid-plugin';\nimport { StateAccessor } from '../state/state-accessor';\nimport { ColumnListService } from './column-list.service';\n\n@Component({\n  selector: 'q-grid-columns',\n  template: `<ng-content></ng-content>\n`,\n  providers: [\n    ColumnListService,\n    GridPlugin,\n    StateAccessor,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ColumnListComponent implements OnChanges {\n  private columnListAccessor = this.stateAccessor.setter(ColumnListState);\n\n  @Input() set generation(generation: ColumnListStateGeneration) { this.columnListAccessor({ generation }); }\n  @Input() set typeDetection(typeDetection: ColumnListStateTypeDetection) { this.columnListAccessor({ typeDetection }); }\n\n  constructor(\n    private plugin: GridPlugin,\n    private stateAccessor: StateAccessor,\n  ) {\n  }\n\n  ngOnChanges() {\n    const { model } = this.plugin;\n    this.stateAccessor.write(model);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ColumnListComponent } from './column-list.component';\n\n@NgModule({\n  declarations: [\n    ColumnListComponent,\n  ],\n  exports: [\n    ColumnListComponent,\n  ],\n})\nexport class ColumnListModule {\n}\n","import { TemplateRef } from '@angular/core';\n\nexport class TemplateLink {\n  constructor(public template: TemplateRef<any>, public context: any) {\n  }\n}\n","import { Directive, Input, TemplateRef, OnInit } from '@angular/core';\nimport { TemplateCacheService } from '../template/template-cache.service';\nimport { TemplateLink } from '../template/template-link';\n\n@Directive({\n  selector: 'ng-template[qGridColumnBody]', // eslint-disable-line @angular-eslint/directive-selector\n})\n\nexport class ColumnBodyTemplateDirective implements OnInit {\n  @Input('qGridColumnBody') key = '';\n\n  constructor(\n    private templateCache: TemplateCacheService,\n    private templateRef: TemplateRef<any>,\n  ) {\n  }\n\n  ngOnInit() {\n    const link = new TemplateLink(this.templateRef, null);\n    this.templateCache.put(`body-cell-the-${this.key}.tpl.html`, link);\n  }\n}\n","import { Directive, Input, TemplateRef, OnInit } from '@angular/core';\nimport { TemplateCacheService } from '../template/template-cache.service';\nimport { TemplateLink } from '../template/template-link';\n\n@Directive({\n  selector: 'ng-template[qGridColumnEdit]', // eslint-disable-line @angular-eslint/directive-selector\n})\n\nexport class ColumnEditTemplateDirective implements OnInit {\n  @Input('qGridColumnEdit') key = '';\n\n  constructor(\n    private templateCache: TemplateCacheService,\n    private templateRef: TemplateRef<any>,\n  ) {\n  }\n\n  ngOnInit() {\n    const link = new TemplateLink(this.templateRef, null);\n    this.templateCache.put(`edit-cell-the-${this.key}.tpl.html`, link);\n  }\n}\n","import { Directive, Input, TemplateRef, OnInit } from '@angular/core';\nimport { TemplateCacheService } from '../template/template-cache.service';\nimport { TemplateLink } from '../template/template-link';\n\n@Directive({\n  selector: 'ng-template[qGridColumnFoot]', // eslint-disable-line @angular-eslint/directive-selector\n})\n\nexport class ColumnFootTemplateDirective implements OnInit {\n  @Input('qGridColumnFoot') key = '';\n\n  constructor(\n    private templateCache: TemplateCacheService,\n    private templateRef: TemplateRef<any>,\n  ) {\n  }\n\n  ngOnInit() {\n    const link = new TemplateLink(this.templateRef, null);\n    this.templateCache.put(`foot-cell-the-${this.key}.tpl.html`, link);\n  }\n}\n","import { Directive, Input, TemplateRef, OnInit } from '@angular/core';\nimport { TemplateCacheService } from '../template/template-cache.service';\nimport { TemplateLink } from '../template/template-link';\n\n@Directive({\n  selector: 'ng-template[qGridColumnHead]', // eslint-disable-line @angular-eslint/directive-selector\n})\n\nexport class ColumnHeadTemplateDirective implements OnInit {\n  @Input('qGridColumnHead') key = '';\n\n  constructor(\n    private templateCache: TemplateCacheService,\n    private templateRef: TemplateRef<any>,\n  ) {\n  }\n\n  ngOnInit() {\n    const link = new TemplateLink(this.templateRef, null);\n    this.templateCache.put(`head-cell-the-${this.key}.tpl.html`, link);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ColumnModel } from '@qgrid/core';\n\n@Injectable()\nexport class ColumnHostService {\n  column: ColumnModel;\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  SimpleChanges,\n  SkipSelf,\n} from '@angular/core';\nimport {\n  ColumnModel,\n  ColumnModelCategory,\n  ColumnModelPin,\n  ColumnModelType,\n  ColumnModelWidthMode,\n  guid,\n  isUndefined,\n} from '@qgrid/core';\nimport { ColumnListService } from '../column-list/column-list.service';\nimport { GridPlugin } from '../plugin/grid-plugin';\nimport { TemplateHostService } from '../template/template-host.service';\nimport { ColumnHostService } from './column-host.service';\n\n@Component({\n  selector: 'q-grid-column',\n  template: `<ng-content></ng-content>\n`,\n  providers: [\n    TemplateHostService,\n    ColumnHostService,\n    GridPlugin,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ColumnComponent implements OnInit, OnDestroy, OnChanges {\n  @Input() type: string | ColumnModelType;\n  @Input() key: string;\n  @Input() category: ColumnModelCategory;\n  @Input() class: string;\n  @Input() title: string;\n  @Input() description: string;\n  @Input() pin: ColumnModelPin;\n  @Input() aggregation: string;\n  @Input() aggregationOptions: any;\n  @Input() editor: string;\n  @Input() editorOptions: any;\n  @Input() format: string;\n  @Input() dateFormat: string;\n  @Input() timeFormat: string;\n  @Input() symbol: string;\n  @Input() code: string;\n\n  @Input() width: number | string;\n  @Input() widthMode: ColumnModelWidthMode;\n  @Input() minWidth: number | string;\n  @Input() maxWidth: number | string;\n  @Input() viewWidth: number | string;\n  @Input() offset: number | string;\n\n  @Input() canEdit: boolean;\n  @Input() canResize: boolean;\n  @Input() canSort: boolean;\n  @Input() canMove: boolean;\n  @Input() canFilter: boolean;\n  @Input() canHighlight: boolean;\n  @Input() canFocus: boolean;\n\n  @Input() isVisible: boolean;\n  @Input() isDefault: boolean;\n\n  @Input() index: number;\n\n  @Input() label: ((row: any, value?: any) => any) | any;\n  @Input() labelPath: string;\n\n  @Input() itemLabel: (row: any, value?: any) => any;\n  @Input() itemFormat: string;\n  @Input() itemType: string;\n\n  @Input() value: (row: any, value?: any) => any;\n  @Input() path: string;\n\n  @Input() compare: (x: any, y: any) => number;\n\n  @Input() trueValue: any;\n  @Input() falseValue: any;\n\n  @Input() maxLength: number;\n\n  @Input() startNumber: number;\n\n  constructor(\n    @SkipSelf() @Optional() private parentHost: ColumnHostService,\n    private selfHost: ColumnHostService,\n    private columnList: ColumnListService,\n    private templateHost: TemplateHostService,\n    private elementRef: ElementRef,\n    private plugin: GridPlugin,\n  ) {\n  }\n\n  ngOnInit() {\n    let withKey = !isUndefined(this.key);\n    let withType = !isUndefined(this.type);\n\n    // We want to update model when ngOntInit is triggered and not in afterViewInit\n    // so we apply dirty hack to understand if column is cohort or not.\n    const element = this.elementRef.nativeElement as HTMLElement;\n    if (element.children.length && element.children.item(0).tagName === 'Q-GRID-COLUMN') {\n      this.type = 'cohort';\n      if (!withKey) {\n        this.key = `$cohort-${this.title || guid()}`;\n      }\n\n      withKey = true;\n      withType = true;\n    }\n\n    if (!withKey) {\n      this.key = this.columnList.generateKey(this);\n    }\n\n    const column = this.columnList.extract(this.key, this.type);\n    this.columnList.copy(column, this);\n\n    this.templateHost.key = source => {\n      const parts = [source, 'cell'];\n\n      if (withType) {\n        parts.push(this.type);\n      }\n\n      if (withKey) {\n        parts.push(`the-${this.key}`);\n      }\n\n      return parts.join('-') + '.tpl.html';\n    };\n\n    if (withKey) {\n      if (this.parentHost) {\n        this.parentHost.column.children.push(column);\n      } else {\n        this.columnList.add(column);\n      }\n\n      this.selfHost.column = column;\n    } else {\n      const settings =\n        Object\n          .keys(this)\n          .filter(key => !isUndefined(this[key]) && Object.prototype.hasOwnProperty.call(column, key))\n          .reduce((memo, key) => {\n            memo[key] = column[key];\n            return memo;\n          }, {}) as ColumnModel;\n\n      this.columnList.register(settings);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const { column } = this.selfHost;\n    if (column && changes.isVisible) {\n      if (column.isVisible !== this.isVisible) {\n        column.isVisible = this.isVisible;\n\n        const { model } = this.plugin;\n        model.data({\n          columns: Array.from(model.data().columns),\n        }, {\n          source: 'column.component',\n        });\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    const { column } = this.selfHost;\n    if (column && column.source === 'template') {\n      this.columnList.delete(column.key);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ColumnComponent } from './column.component';\nimport { ColumnBodyTemplateDirective } from './column-body-template.directive';\nimport { ColumnEditTemplateDirective } from './column-edit-template.directive';\nimport { ColumnFootTemplateDirective } from './column-foot-template.directive';\nimport { ColumnHeadTemplateDirective } from './column-head-template.directive';\n@NgModule({\n  declarations: [\n    ColumnComponent,\n    ColumnBodyTemplateDirective,\n    ColumnEditTemplateDirective,\n    ColumnFootTemplateDirective,\n    ColumnHeadTemplateDirective,\n  ],\n  exports: [\n    ColumnComponent,\n    ColumnBodyTemplateDirective,\n    ColumnEditTemplateDirective,\n    ColumnFootTemplateDirective,\n    ColumnHeadTemplateDirective,\n  ],\n})\nexport class ColumnModule {\n}\n","import { Directive, ElementRef, Input, Optional } from '@angular/core';\nimport {\n  Command,\n  DragService,\n  EventListener,\n  EventManager,\n  GRID_PREFIX,\n  isFunction,\n} from '@qgrid/core';\nimport { GridPlugin } from '../plugin/grid-plugin';\n\n@Directive({\n  selector: '[q-grid-drag]',\n})\nexport class DragDirective {\n  @Input('q-grid-drag-data') data: any;\n  @Input('q-grid-drag-effect') effect: undefined | 'move';\n  @Input('q-grid-drag') drag: Command<any>;\n  @Input('q-grid-drop-area') area: string;\n\n  constructor(\n    @Optional() private plugin: GridPlugin,\n    private elementRef: ElementRef,\n  ) {\n    const element = elementRef.nativeElement;\n    const listener = new EventListener(element, new EventManager(this));\n    element.classList.add(`${GRID_PREFIX}-can-drag`);\n    element.setAttribute('draggable', true);\n\n    listener.on('dragstart', this.onStart);\n    listener.on('dragend', this.onEnd);\n  }\n\n  onStart(e: DragEvent) {\n    const transfer = e.dataTransfer;\n    const data = this.data;\n    const eventArg = { data };\n\n    if (this.drag.canExecute(eventArg) === false) {\n      e.preventDefault();\n      if (transfer) {\n        transfer.effectAllowed = 'none';\n      }\n\n      return false;\n    }\n\n    const result = this.drag.execute(eventArg);\n    DragService.element =\n      result && isFunction(result.getBoundingClientRect)\n        // tslint:disable-next-line: deprecation\n        ? result : (e.srcElement || e.target);\n\n    this.elementRef.nativeElement.classList.add(`${GRID_PREFIX}-drag`);\n\n    if (transfer) {\n      transfer.setData(DragService.mimeType, DragService.encode(data));\n      transfer.effectAllowed = this.effect || 'move';\n    }\n\n    DragService.data = data;\n    DragService.area = this.area;\n\n    const rect = DragService.element.getBoundingClientRect();\n    DragService.startPosition = {\n      x: e.clientX,\n      y: e.clientY,\n      rect,\n    };\n\n    if (this.plugin) {\n      const { model } = this.plugin;\n      model.drag({ isActive: true }, { source: 'drag.directive' });\n    }\n  }\n\n  onEnd() {\n    if (this.plugin) {\n      const { model } = this.plugin;\n      model.drag({ isActive: false }, { source: 'drag.directive' });\n    }\n\n    this.elementRef.nativeElement.classList.remove(`${GRID_PREFIX}-drag`);\n\n    DragService.data = null;\n    DragService.area = null;\n    DragService.element = null;\n    DragService.startPosition = null;\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  NgZone,\n  OnInit,\n  Optional,\n} from '@angular/core';\nimport {\n  Command,\n  DragService,\n  elementFromPoint,\n  EventListener,\n  EventManager,\n  GRID_PREFIX,\n  no,\n  parents,\n} from '@qgrid/core';\nimport { GridPlugin } from '../plugin/grid-plugin';\n\nexport interface DropEventArg {\n  path: HTMLElement[];\n  dragData: any;\n  dropData: any;\n  action: string; // 'over' | 'drop' | 'end';\n\n  inAreaY(element: HTMLElement): boolean;\n  inAreaX(element: HTMLElement): boolean;\n}\n\n@Directive({\n  selector: '[q-grid-drop]',\n})\nexport class DropDirective implements OnInit {\n  @Input('q-grid-drop-area') area: string;\n  @Input('q-grid-drop-data') dropData: any;\n  @Input('q-grid-drop') drop: Command<DropEventArg>;\n  @Input('q-grid-drag-over') dragOver: Command<DropEventArg>;\n  @Input('q-grid-drag-direction') dragDirection: 'x' | 'y' = 'y';\n\n  constructor(\n    @Optional() private plugin: GridPlugin,\n    private elementRef: ElementRef,\n    zone: NgZone,\n  ) {\n    const element = elementRef.nativeElement;\n    const listener = new EventListener(element, new EventManager(this));\n\n    element.classList.add(`${GRID_PREFIX}-can-drop`);\n    zone.runOutsideAngular(() => {\n      listener.on('dragenter', this.onEnter);\n      listener.on('dragover', this.onOver);\n      listener.on('dragleave', this.onLeave);\n    });\n\n    listener.on('drop', this.onDrop);\n  }\n\n  ngOnInit() {\n    if (this.plugin) {\n      const { model, observe } = this.plugin;\n      observe(model.dragChanged)\n        .subscribe(e => {\n          if (e.hasChanges('isActive')) {\n            if (!e.state.isActive) {\n              const eventArg = {\n                path: [],\n                dragData: DragService.data,\n                dropData: this.dropData,\n                action: 'end',\n                inAreaX: no,\n                inAreaY: no,\n              };\n\n              if (this.drop.canExecute(eventArg)) {\n                this.drop.execute(eventArg);\n              }\n            }\n          }\n        });\n    }\n  }\n\n  onDrop(e: DragEvent) {\n    e.stopPropagation();\n\n    this.elementRef.nativeElement.classList.remove(`${GRID_PREFIX}-dragover`);\n    const eventArg = {\n      path: (e as any).path,\n      dragData: DragService.data,\n      dropData: this.dropData,\n      action: 'drop',\n      inAreaX: this.inAreaFactory(e, 'x'),\n      inAreaY: this.inAreaFactory(e, 'y'),\n    };\n\n    if (this.drop.canExecute(eventArg)) {\n      this.drop.execute(eventArg);\n    }\n\n    return false;\n  }\n\n  onEnter(e: DragEvent) {\n    e.preventDefault();\n\n    this.elementRef.nativeElement.classList.add(`${GRID_PREFIX}-dragover`);\n    e.dataTransfer.dropEffect = 'move';\n    return false;\n  }\n\n  onOver(e: DragEvent) {\n    e.preventDefault();\n\n    if (this.plugin && this.plugin.model.scene().status !== 'stop') {\n      return false;\n    }\n\n    if (this.area !== DragService.area) {\n      e.dataTransfer.dropEffect = 'none';\n      return false;\n    }\n\n    const pos = this.getPosition(e);\n    const path = this.getPath(pos);\n    if (path.indexOf(DragService.element) >= 0) {\n      return false;\n    }\n\n    const eventArg = {\n      path,\n      dragData: DragService.data,\n      dropData: this.dropData,\n      action: 'over',\n      inAreaX: this.inAreaFactory(e, 'x'),\n      inAreaY: this.inAreaFactory(e, 'y'),\n    };\n\n    if (this.dragOver.canExecute(eventArg)) {\n      this.dragOver.execute(eventArg);\n      if (DragService.data !== eventArg.dragData) {\n        DragService.data = eventArg.dragData;\n      }\n\n      e.dataTransfer.dropEffect = 'move';\n    }\n\n    return false;\n  }\n\n  onLeave() {\n    this.elementRef.nativeElement.classList.remove(`${GRID_PREFIX}-dragover`);\n  }\n\n  private getPosition(e: DragEvent) {\n    const start = DragService.startPosition;\n    const src = start.rect;\n\n    const offsetX = start.x - (src.left + src.width / 2);\n    const offsetY = start.y - (src.top + src.height / 2);\n\n    const { clientX, clientY } = e;\n\n    const x = clientX - offsetX;\n    const y = clientY - offsetY;\n\n    return { x, y };\n  }\n\n  private getPath({ x, y }: { x: number; y: number }) {\n    // Document.elementsFromPoint is not working with tr?\n    // so we need to go through all parent.\n\n    const element = elementFromPoint(x, y);\n    const path = parents(element);\n    return path;\n  }\n\n  private inAreaFactory(e: DragEvent, direction: 'x' | 'y') {\n    const src = DragService.startPosition.rect;\n    const { x, y } = this.getPosition(e);\n\n    if (direction === 'y') {\n      return (element: HTMLElement) => {\n        const trg = element.getBoundingClientRect();\n        // we are on the top of target\n        if (src.top < trg.top) {\n          return trg.bottom > y && y > trg.bottom - src.height;\n        }\n\n        // we are on the bottom of target\n        return trg.top < y && y < trg.top + src.height;\n      };\n    }\n\n    return (element: HTMLElement) => {\n      const trg = element.getBoundingClientRect();\n\n      // we are on the left of target\n      if (src.left < trg.left) {\n        return trg.right > x && x > trg.right - src.width;\n      }\n\n      // we are on the right of target\n      return trg.left < x && x < trg.left + src.width;\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { DragDirective } from './drag.directive';\nimport { DropDirective } from './drop.directive';\n\n@NgModule({\n  declarations: [\n    DragDirective,\n    DropDirective,\n  ],\n  exports: [\n    DragDirective,\n    DropDirective,\n  ],\n})\nexport class DndModule {\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewContainerRef,\n} from '@angular/core';\nimport { ColumnModel, ColumnView, GridError } from '@qgrid/core';\nimport { CellClassService } from '../cell/cell-class.service';\nimport { CellTemplateService } from '../cell/cell-template.service';\nimport { DomTd } from '../dom/dom';\nimport { GridLet } from '../grid/grid-let';\nimport { GridPlugin } from '../plugin/grid-plugin';\nimport { TrhCoreDirective } from '../row/trh-core.directive';\n\n@Directive({\n  selector: '[q-grid-core-tf]',\n})\nexport class TfCoreDirective implements DomTd, OnInit, OnDestroy {\n  @Input('q-grid-core-tf') columnView: ColumnView;\n\n  $implicit = this;\n  element: HTMLElement = this.elementRef.nativeElement.parentNode;\n\n  get value() {\n    const column = this.column;\n    return this.$view.foot.value(column);\n  }\n\n  get label() {\n    return this.value;\n  }\n\n  get column(): ColumnModel {\n    return this.columnView.model;\n  }\n\n  get columnIndex() {\n    return this.columnView.columnIndex;\n  }\n\n  get row() {\n    return this.tr.model;\n  }\n\n  get rowIndex() {\n    return this.tr.index;\n  }\n\n  constructor(\n    public $view: GridLet,\n    private plugin: GridPlugin,\n    private cellTemplate: CellTemplateService,\n    private cellClass: CellClassService,\n    private viewContainerRef: ViewContainerRef,\n    private tr: TrhCoreDirective,\n    private elementRef: ElementRef,\n  ) {\n  }\n\n  ngOnInit() {\n    const { column, element } = this;\n    const { table } = this.plugin;\n\n    table.box.bag.foot.addCell(this);\n\n    this.cellClass.toBody(element, column);\n\n    const link = this.cellTemplate.build('foot', this.column);\n    link(this.viewContainerRef, this);\n  }\n\n  mode(value: string): void {\n    throw new GridError('tf-core.directive', `${value} mode is not supported`);\n  }\n\n  ngOnDestroy() {\n    const { table } = this.plugin;\n    table.box.bag.foot.deleteCell(this);\n  }\n}\n","<tr *ngFor=\"let $row of $view.foot.rows; trackBy: rowId; index as $rowIndex\"\n\t\t[q-grid-core-trh]=\"$row\"\n\t\t[q-grid-core-index]=\"$rowIndex\"\n\t\tq-grid-core-source=\"foot\">\n\t<td *ngFor=\"let $column of $view.foot.columns($row, $table.pin); trackBy: columnId; index as $columnIndex\"\n\t\t\t[attr.rowspan]=\"$column.rowspan\"\n\t\t\t[attr.colspan]=\"$column.colspan\">\n\t\t<ng-container [q-grid-core-tf]=\"$column\">\n\t\t</ng-container>\n\t</td>\n</tr>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { ColumnView } from '@qgrid/core';\nimport { GridLet } from '../grid/grid-let';\nimport { GridPlugin } from '../plugin/grid-plugin';\nimport { TableCoreService } from '../table/table-core.service';\n\n@Component({\n  selector: 'tfoot[q-grid-core-foot]', // eslint-disable-line @angular-eslint/component-selector\n  templateUrl: './foot-core.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [GridPlugin],\n})\nexport class FootCoreComponent implements OnInit {\n  constructor(\n\t\tpublic $view: GridLet,\n\t\tpublic $table: TableCoreService,\n\t\tprivate plugin: GridPlugin,\n\t\tprivate cd: ChangeDetectorRef,\n  ) {\n  }\n\n  ngOnInit() {\n    const { model, observe } = this.plugin;\n    observe(model.sceneChanged)\n      .subscribe(e => {\n        if (e.hasChanges('status') && e.state.status === 'push') {\n          this.cd.markForCheck();\n        }\n      });\n  }\n\n  columnId(index: number, item: ColumnView) {\n    return item.model.key;\n  }\n\n  rowId(index: number) {\n    return index;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FootCoreComponent } from './foot-core.component';\nimport { TfCoreDirective } from './tf-core.directive';\nimport { RowModule } from '../row/row.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    FootCoreComponent,\n    TfCoreDirective,\n  ],\n  exports: [\n    FootCoreComponent,\n    TfCoreDirective,\n  ],\n  imports: [\n    CommonModule,\n    RowModule,\n  ],\n})\nexport class FootModule {\n}\n","export class Layer {\n  constructor(private onDestroy: () => void) {\n  }\n\n  destroy() {\n    this.onDestroy();\n  }\n}\n","import { Injectable, ViewContainerRef } from '@angular/core';\nimport { TemplateService } from '../template/template.service';\nimport { Layer } from './layer';\n\n@Injectable()\nexport class LayerService {\n  private container: ViewContainerRef;\n  private layers = new Map<string, Layer>();\n\n  get count() {\n    return this.layers.size;\n  }\n\n  constructor(private templateService: TemplateService) {\n  }\n\n  init(container: ViewContainerRef) {\n    this.container = container;\n  }\n\n  create(name) {\n    if (this.layers.has(name)) {\n      return this.layers.get(name);\n    }\n\n    const { container, templateService } = this;\n    const link = templateService.find(`layer-${name}.tpl.html`);\n    if (link && container) {\n      const { nativeElement } = container.element;\n      nativeElement.parentElement.classList.add(`q-grid-layer-${name}`);\n      this.getHostElement()?.classList.add(`q-grid-${name}`);\n      container.createEmbeddedView(link.template, {});\n    }\n\n    const destroy = container\n      ? () => {\n        this.layers.delete(name);\n        const { nativeElement } = container.element;\n        nativeElement.parentElement.classList.add(`q-grid-layer-${name}`);\n        this.getHostElement()?.classList.remove(`q-grid-${name}`);\n        container.clear();\n      }\n      : () => this.layers.delete(name);\n\n    const layer = new Layer(destroy);\n    this.layers.set(name, layer);\n    return layer;\n  }\n\n  private getHostElement() {\n    const { nativeElement } = this.container.element;\n    for (let el = nativeElement; el; el = el.parentElement) {\n      if (el.tagName === 'Q-GRID') {\n        return el;\n      }\n    }\n    return null;\n  }\n}\n","import { Directive, ViewContainerRef } from '@angular/core';\nimport { LayerService } from './layer.service';\n\n@Directive({\n  selector: '[q-grid-core-layer]',\n})\nexport class LayerCoreDirective {\n  constructor(\n    layerService: LayerService,\n    viewContainerRef: ViewContainerRef,\n  ) {\n    layerService.init(viewContainerRef);\n  }\n}\n","import { Component, HostBinding, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'q-grid-core-layer',\n  templateUrl: './layer-core.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LayerCoreComponent {\n  @HostBinding('class') hostClass = 'q-grid-layer';\n}\n","<ng-container q-grid-core-layer></ng-container>\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  Optional,\n} from '@angular/core';\nimport { TableCoreService } from '../table/table-core.service';\nimport { GridPlugin } from '../plugin/grid-plugin';\n\n@Directive({\n  selector: '[q-grid-markup]',\n  providers: [GridPlugin],\n})\nexport class MarkupDirective implements OnInit {\n  @Input('q-grid-markup') name = '';\n\n  constructor(\n    private plugin: GridPlugin,\n    private elementRef: ElementRef,\n    @Optional() private table: TableCoreService,\n  ) { }\n\n  ngOnInit() {\n    const { table, disposable } = this.plugin;\n    table.box.markup[this.getName()] = this.elementRef.nativeElement;\n\n    disposable.add(() => delete table.box.markup[this.getName()]);\n  }\n\n  private getName() {\n    if (this.table && this.table.pin) {\n      return `${this.name}-${this.table.pin}`;\n    }\n\n    return this.name;\n  }\n}\n","/* eslint-disable @angular-eslint/no-conflicting-lifecycle */\n\nimport {\n  Directive,\n  DoCheck,\n  EmbeddedViewRef,\n  Input,\n  ViewContainerRef,\n  SimpleChanges,\n  OnChanges,\n} from '@angular/core';\nimport { TemplateService } from './template.service';\n\n@Directive({\n  selector: 'ng-container[key]', // eslint-disable-line @angular-eslint/directive-selector\n})\nexport class TemplateDirective implements DoCheck, OnChanges {\n  private viewRef: EmbeddedViewRef<any>;\n\n  @Input() key = '';\n  @Input() context: any = null;\n  @Input() check = false;\n\n  constructor(\n    private templateService: TemplateService,\n    private viewContainerRef: ViewContainerRef,\n  ) { }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const keyChange = changes['key'];\n    if (keyChange) {\n      if (this.viewRef) {\n        this.viewRef.destroy();\n        this.viewRef = null;\n      }\n    }\n  }\n\n  ngDoCheck() {\n    if (!this.viewRef) {\n      const link = this.templateService.find(this.key);\n      if (link) {\n        this.viewRef = this.viewContainerRef.createEmbeddedView(link.template, this.context);\n      }\n    }\n  }\n}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'q-grid-core-toolbar',\n  templateUrl: './toolbar-core.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ToolbarCoreComponent {\n\t@Input() position: 'top' | 'right' | 'bottom' | 'left';\n}\n","<ng-container key=\"toolbar-{{position}}.tpl.html\"></ng-container>\n","import { DOCUMENT } from '@angular/common';\nimport {\n  Directive,\n  ElementRef,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Optional,\n} from '@angular/core';\nimport { clone, EventListener, EventManager, GRID_PREFIX } from '@qgrid/core';\nimport { Grid } from '../grid/grid';\nimport { GridModel } from '../grid/grid-model';\nimport { GridPlugin } from '../plugin/grid-plugin';\n\n@Directive({\n  selector: '[q-grid-resize]',\n})\nexport class ResizeDirective implements OnInit, OnDestroy {\n  private element: HTMLElement;\n  private divider: HTMLElement;\n\n  private listener: {\n    divider: EventListener;\n    document: EventListener;\n  };\n\n  private context = {\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n  };\n\n  private get model(): GridModel {\n    return this.plugin.model;\n  }\n\n  @Input('q-grid-resize') key;\n  @Input('q-grid-resize-path') path;\n  @Input('q-grid-can-resize') canResize;\n  @Input('q-grid-resize-selector') selector;\n\n  constructor(\n    private zone: NgZone,\n    @Optional() private plugin: GridPlugin,\n    private qgrid: Grid,\n    @Inject(DOCUMENT) document: any,\n    elementRef: ElementRef,\n  ) {\n    this.element = elementRef.nativeElement;\n    this.divider = document.createElement('div');\n\n    this.listener = {\n      divider: new EventListener(\n        this.divider,\n        new EventManager(this),\n      ),\n\n      document: new EventListener(\n        document,\n        new EventManager(this),\n      ),\n    };\n  }\n\n  ngOnInit() {\n    const e = { data: this.key };\n    if (this.canResize(e)) {\n      this.zone.runOutsideAngular(() => {\n        this.listener.divider.on('mousedown', this.dragStart);\n      });\n\n      this.divider.classList.add(`${GRID_PREFIX}-resize-handler`);\n      this.element.appendChild(this.divider);\n    }\n  }\n\n  ngOnDestroy() {\n    this.listener.divider.off();\n    this.listener.document.off();\n  }\n\n  dragStart(e: DragEvent) {\n    e.preventDefault();\n\n    const context = this.context;\n\n    const host = this.select();\n    context.width = host.clientWidth;\n    context.height = host.clientHeight;\n    context.x = e.screenX;\n    context.y = e.screenY;\n\n    this.zone.runOutsideAngular(() => {\n      this.listener.document.on('mousemove', this.drag);\n      this.listener.document.on('mouseup', this.dragEnd);\n    });\n\n    const model = this.model;\n    model.drag({ isActive: true });\n  }\n\n  drag(e: MouseEvent) {\n    const { context, path, key } = this;\n    const { layout } = this.model;\n\n    const state = clone(layout()[path]);\n\n    state.set(key, {\n      width: context.width + e.screenX - context.x,\n      height: context.height + e.screenY - context.y,\n    });\n\n    layout({ [path]: state });\n  }\n\n  dragEnd() {\n    this.listener.document.off();\n\n    const model = this.model;\n    model.drag({ isActive: false });\n  }\n\n  private select(): HTMLElement {\n    if (this.selector === 'parent') {\n      return this.element.parentElement;\n    }\n\n    return this.element;\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewContainerRef,\n} from '@angular/core';\nimport { ColumnModel, ColumnView, FilterRowColumnModel, GridError } from '@qgrid/core';\nimport { CellClassService } from '../cell/cell-class.service';\nimport { CellTemplateService } from '../cell/cell-template.service';\nimport { DomTd } from '../dom/dom';\nimport { GridLet } from '../grid/grid-let';\nimport { GridPlugin } from '../plugin/grid-plugin';\nimport { TrhCoreDirective } from '../row/trh-core.directive';\n\n@Directive({\n  selector: '[q-grid-core-th]',\n})\nexport class ThCoreDirective implements DomTd, OnInit, OnDestroy {\n  @Input('q-grid-core-th') columnView: ColumnView;\n\n  $implicit = this;\n  element: HTMLElement;\n  value: any;\n  label: any;\n\n  get column(): ColumnModel {\n    return this.columnView.model;\n  }\n\n  get columnIndex() {\n    return this.columnView.columnIndex;\n  }\n\n  get row() {\n    return this.tr.model;\n  }\n\n  get rowIndex() {\n    return this.tr.index;\n  }\n\n  constructor(\n    public $view: GridLet,\n    private root: GridPlugin,\n    private viewContainerRef: ViewContainerRef,\n    private cellTemplate: CellTemplateService,\n    private cellClass: CellClassService,\n    private tr: TrhCoreDirective,\n    elementRef: ElementRef,\n  ) {\n    this.element = elementRef.nativeElement.parentNode;\n  }\n\n  ngOnInit() {\n    const { column, element } = this;\n    const { table } = this.root;\n\n    table.box.bag.head.addCell(this);\n\n    let targetColumn: ColumnModel = column;\n    let targetSource = 'head';\n\n    if (column.type === 'filter-row') {\n      targetSource = 'filter';\n      targetColumn = (column as FilterRowColumnModel).model;\n      this.element.classList.add('q-grid-filter-row');\n    }\n\n    this.cellClass.toHead(element, column);\n    this.cellClass.toBody(element, targetColumn);\n\n    const link = this.cellTemplate.build(targetSource, targetColumn, 'view');\n    link(this.viewContainerRef, this);\n  }\n\n  mode(value: string): void {\n    throw new GridError(\n      'th-core.directive',\n      `${value} mode is not supported`,\n    );\n  }\n\n  ngOnDestroy() {\n    const { table } = this.root;\n    table.box.bag.head.deleteCell(this);\n  }\n}\n","<tr *ngFor=\"let $row of $view.head.rows; trackBy: rowId; index as $rowIndex\"\n    [q-grid-core-trh]=\"$row\"\n    [q-grid-core-index]=\"$rowIndex\"\n    q-grid-core-source=\"head\">\n    <th *ngFor=\"let $column of $view.head.columns($row, $table.pin); trackBy: columnId; index as $columnIndex\"\n        [attr.rowspan]=\"$column.rowspan\"\n        [attr.colspan]=\"$column.colspan\"\n        [q-grid-drag]=\"$view.head.drag\"\n        [q-grid-drag-data]=\"$column.model.key\"\n        q-grid-drop-area=\"head\"\n        q-grid-resize-path=\"columns\"\n        [q-grid-resize]=\"$column.model.key\"\n        [q-grid-can-resize]=\"$view.head.resize.canExecute\">\n        <ng-container [q-grid-core-th]=\"$column\">\n        </ng-container>\n    </th>\n</tr>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  NgZone,\n  OnInit,\n} from '@angular/core';\nimport { ColumnView, EventListener, EventManager, HeadHost } from '@qgrid/core';\nimport { GridLet } from '../grid/grid-let';\nimport { GridPlugin } from '../plugin/grid-plugin';\nimport { TableCoreService } from '../table/table-core.service';\n\n@Component({\n  selector: 'thead[q-grid-core-head]', // eslint-disable-line @angular-eslint/component-selector\n  templateUrl: './head-core.component.html',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HeadCoreComponent implements OnInit {\n  constructor(\n\t\tpublic $view: GridLet,\n\t\tpublic $table: TableCoreService,\n\t\tprivate elementRef: ElementRef,\n\t\tprivate plugin: GridPlugin,\n\t\tprivate zone: NgZone,\n\t\tprivate cd: ChangeDetectorRef,\n  ) {\n  }\n\n  ngOnInit() {\n    const { disposable, model, observe } = this.plugin;\n\n    const element = this.elementRef.nativeElement;\n    const host = new HeadHost(this.plugin);\n\n    const listener = new EventListener(element, new EventManager(this));\n    this.zone.runOutsideAngular(() => {\n      disposable.add(listener.on('mousemove', e => host.mouseMove(e)));\n      disposable.add(listener.on('mouseleave', e => host.mouseLeave(e)));\n    });\n\n    observe(model.sceneChanged)\n      .subscribe(e => {\n        if (e.hasChanges('status') && e.state.status === 'push') {\n          this.cd.markForCheck();\n        }\n      });\n  }\n\n  columnId(index: number, item: ColumnView) {\n    return item.model.key;\n  }\n\n  rowId(index: number) {\n    return index;\n  }\n}\n","<table q-grid-markup=\"table\">\n\t<thead *ngIf=\"visibility.head\"\n\t\t\t\tq-grid-core-head\n\t\t\t\tq-grid-markup=\"head\"\n\t\t\t\tq-grid-animate=\"false\"\n\t\t\t\tq-grid-drop-area=\"head\"\n\t\t\t\t[q-grid-drop]=\"$any($view.head.drop)\"\n\t\t\t\tq-grid-drag-direction=\"x\"\n\t\t\t\t[q-grid-drag-over]=\"$any($view.head.drop)\">\n\t</thead>\n\t<tbody *ngIf=\"visibility.pin.top\"\n\t\t\t\tclass=\"q-grid-body-top\"\n\t\t\t\tpin=\"top\"\n\t\t\t\tq-grid-core-body\n\t\t\t\tq-grid-markup=\"body-top\"\n\t\t\t\tq-grid-animate=\"false\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t\tq-grid-drop-area=\"body\"\n\t\t\t\t[q-grid-drop]=\"$any($view.row.drop)\"\n\t\t\t\tq-grid-drag-direction=\"y\"\n\t\t\t\t[q-grid-drag-over]=\"$any($view.row.drop)\">\n\t</tbody>\n\t<tbody *ngIf=\"visibility.body\"\n\t\t\t\tq-grid-core-body\n\t\t\t\tq-grid-markup=\"body\"\n\t\t\t\tq-grid-animate=\"false\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t\tq-grid-drop-area=\"body\"\n\t\t\t\t[q-grid-drop]=\"$any($view.row.drop)\"\n\t\t\t\tq-grid-drag-direction=\"y\"\n\t\t\t\tq-grid-vscroll\n\t\t\t\t[q-grid-vscroll-port-y]=\"$any($view.scroll.y)\"\n\t\t\t\t[q-grid-drag-over]=\"$any($view.row.drop)\">\n\t</tbody>\n\t<tbody *ngIf=\"visibility.pin.bottom\"\n\t\t\t\tclass=\"q-grid-body-bottom\"\n\t\t\t\tpin=\"bottom\"\n\t\t\t\tq-grid-core-body\n\t\t\t\tq-grid-markup=\"body-bottom\"\n\t\t\t\tq-grid-animate=\"false\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t\tq-grid-drop-area=\"body\"\n\t\t\t\t[q-grid-drop]=\"$any($view.row.drop)\"\n\t\t\t\tq-grid-drag-direction=\"y\"\n\t\t\t\t[q-grid-drag-over]=\"$any($view.row.drop)\">\n\t</tbody>\n\t<tfoot *ngIf=\"visibility.foot\"\n\t\t\t\tq-grid-core-foot\n\t\t\t\tq-grid-markup=\"foot\"\n\t\t\t\tq-grid-animate=\"false\">\n\t</tfoot>\n</table>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { ColumnModelPin, VisibilityState } from '@qgrid/core';\nimport { GridLet } from '../grid/grid-let';\nimport { GridPlugin } from '../plugin/grid-plugin';\nimport { TableCoreService } from './table-core.service';\n\n@Component({\n  selector: 'q-grid-core-table',\n  templateUrl: './table-core.component.html',\n  providers: [TableCoreService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TableCoreComponent implements OnInit {\n  @Input() pin: ColumnModelPin = 'mid';\n\n  get visibility(): VisibilityState {\n    const { model } = this.plugin;\n    return model.visibility();\n  }\n\n  constructor(\n    public $view: GridLet,\n    private plugin: GridPlugin,\n    private tableHost: TableCoreService,\n    private cd: ChangeDetectorRef,\n  ) {\n  }\n\n  ngOnInit() {\n    const { model, observe } = this.plugin;\n\n    this.tableHost.pin = this.pin;\n\n    observe(model.visibilityChanged)\n      .subscribe(() => {\n        this.cd.markForCheck();\n        this.cd.detectChanges();\n      });\n  }\n}\n","<q-grid-core-table *ngIf=\"visibility.pin.left\"\n                   pin=\"left\"\n                   class=\"q-grid-table q-grid-table-left q-grid-layout-column\">\n</q-grid-core-table>\n\n<q-grid-core-table pin=\"mid\"\n                   class=\"q-grid-table q-grid-table-mid q-grid-layout-column q-grid-flex\">\n</q-grid-core-table>\n\n<q-grid-core-table *ngIf=\"visibility.pin.right\"\n                   pin=\"right\"\n                   class=\"q-grid-table q-grid-table-right q-grid-layout-column\">\n</q-grid-core-table>\n\n<q-grid-cell-handler class=\"q-grid-cell-handler\">\n</q-grid-cell-handler>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DoCheck,\n  ElementRef,\n  NgZone,\n  OnInit,\n} from '@angular/core';\nimport {\n  EventListener,\n  EventManager,\n  TableCommandManager,\n  ViewHost,\n  VisibilityState,\n} from '@qgrid/core';\nimport { CellClassService } from '../cell/cell-class.service';\nimport { CellTemplateService } from '../cell/cell-template.service';\nimport { Grid } from '../grid/grid';\nimport { GridLet } from '../grid/grid-let';\nimport { GridPlugin } from '../plugin/grid-plugin';\n\n@Component({\n  selector: 'q-grid-core-view',\n  templateUrl: './view-core.component.html',\n  providers: [\n    CellTemplateService,\n    CellClassService,\n    GridPlugin,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ViewCoreComponent implements OnInit, DoCheck {\n  private host: ViewHost;\n\n  get visibility(): VisibilityState {\n    const { model } = this.plugin;\n    return model.visibility();\n  }\n\n  constructor(\n\t\tprivate plugin: GridPlugin,\n\t\tprivate qgrid: Grid,\n\t\tprivate cd: ChangeDetectorRef,\n\t\tprivate zone: NgZone,\n\t\tprivate view: GridLet,\n\t\tprivate elementRef: ElementRef,\n  ) {\n    zone\n      .onStable\n      .subscribe(() => {\n        const { model, table } = this.plugin;\n\n        if (model) {\n          const { status } = model.scene();\n          if (status === 'push') {\n            table.invalidate();\n\n            model.scene({\n              status: 'stop',\n            }, {\n              source: 'view-core.component',\n              behavior: 'core',\n            });\n\n            if (this.host) {\n              this.host.invalidate();\n            }\n          }\n        }\n      });\n  }\n\n  ngDoCheck() {\n    if (this.host) {\n      const { model } = this.plugin;\n      if (model.scene().status === 'stop') {\n        this.host.invalidate();\n      }\n    }\n  }\n\n  ngOnInit() {\n    const {\n      model,\n      table,\n      observeReply,\n      observe,\n      view,\n      disposable,\n      service,\n    } = this.plugin;\n\n    // TODO: make it better\n    table.box.markup.view = this.elementRef.nativeElement;\n    const cmdManager = new TableCommandManager(f => f(), table);\n    this.view.init(this.plugin, cmdManager);\n\n    view.scroll.y.settings.emit = f => {\n      f();\n\n      this.cd.markForCheck();\n      this.cd.detectChanges();\n    };\n\n    this.host = new ViewHost(this.plugin);\n\n    observeReply(model.sceneChanged)\n      .subscribe(e => {\n        if (e.hasChanges('status') && e.state.status === 'pull') {\n          this.cd.markForCheck();\n\n          this.zone.run(() =>\n            model.scene({\n              status: 'push',\n            }, {\n              source: 'view-core.component',\n              behavior: 'core',\n            }),\n          );\n        }\n      });\n\n    observe(model.styleChanged)\n      .subscribe(() => this.host.invalidate());\n\n    observe(model.layoutChanged)\n      .subscribe(e => {\n        if (e.hasChanges('rows')) {\n          this.host.invalidate();\n        }\n      });\n\n    observeReply(model.editChanged)\n      .subscribe(e => {\n        if (e.hasChanges('status')) {\n          if (e.state.status === 'endBatch') {\n            service.invalidate({\n              source: 'view-core.component',\n              why: 'refresh',\n            });\n          }\n        }\n      });\n\n    const listener = new EventListener(this.elementRef.nativeElement, new EventManager(this));\n\n    this.zone.runOutsideAngular(() => {\n      disposable.add(listener.on('mousemove', e => this.host.mouseMove(e)));\n      disposable.add(listener.on('mouseenter', e => this.host.mouseEnter(e)));\n      disposable.add(listener.on('mouseleave', e => this.host.mouseLeave(e)));\n      disposable.add(listener.on('mouseup', e => this.host.mouseUp(e)));\n    });\n\n    disposable.add(\n      listener.on('mousedown', e => this.host.mouseDown(e)),\n    );\n\n    if (model.scroll().mode === 'virtual') {\n      const asVirtualBody = table.body as any;\n      if (asVirtualBody.requestInvalidate) {\n        asVirtualBody.requestInvalidate.on(() => this.host.invalidate());\n      }\n    }\n  }\n}\n","<ng-container *ngComponentOutlet=\"themeComponent\">\n</ng-container>\n\n<q-grid-box class=\"q-grid-box q-grid-layout-column\"\n\t\t\t\t\t\tq-grid-markup=\"box\">\n\n\t<q-grid-core-toolbar position=\"top\"\n\t\t\t\t\t\t\t\t\t\t\tclass=\"q-grid-toolbar q-grid-toolbar-top q-grid-flex-auto\"\n\t\t\t\t\t\t\t\t\t\t\t*ngIf=\"visibility.toolbar.top\">\n\t</q-grid-core-toolbar>\n\n\t<div class=\"q-grid-flex-100 q-grid-layout-row\"\n\t\t\t[ngClass]=\"{\n\t\t\t\t'q-grid-with-left-pin': visibility.pin.left,\n\t\t\t\t'q-grid-with-right-pin': visibility.pin.right,\n\t\t\t\t'q-grid-with-top-pin': visibility.pin.top,\n\t\t\t\t'q-grid-with-bottom-pin': visibility.pin.bottom\n\t\t\t}\">\n\t\t<q-grid-core-toolbar position=\"left\"\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"q-grid-toolbar q-grid-toolbar-left q-grid-flex-auto\"\n\t\t\t\t\t\t\t\t\t\t\t\t*ngIf=\"visibility.toolbar.left\">\n\t\t</q-grid-core-toolbar>\n\t\t<q-grid-core-view class=\"q-grid-view q-grid-layout-row q-grid-flex\"\n\t\t\t\t\t\t\t\t\t\t\tq-grid-markup=\"view\">\n\t\t</q-grid-core-view>\n\t\t<q-grid-core-toolbar position=\"right\"\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"q-grid-toolbar q-grid-toolbar-right q-grid-flex-auto\"\n\t\t\t\t\t\t\t\t\t\t\t\t*ngIf=\"visibility.toolbar.right\">\n\t\t</q-grid-core-toolbar>\n\t</div>\n\n\t<q-grid-core-toolbar position=\"bottom\"\n\t\t\t\t\t\t\t\t\t\t\tclass=\"q-grid-toolbar q-grid-toolbar-bottom q-grid-flex-auto\"\n\t\t\t\t\t\t\t\t\t\t\t*ngIf=\"visibility.toolbar.bottom\">\n\t</q-grid-core-toolbar>\n\n\t<q-grid-core-layer>\n\t</q-grid-core-layer>\n\n</q-grid-box>\n","import { DOCUMENT } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  ColumnModel,\n  Command,\n  DataState,\n  EditState,\n  EditStateMethod,\n  EditStateMode,\n  EventListener,\n  EventManager,\n  eventPath,\n  FilterState,\n  FilterStateUnit,\n  GridError,\n  GridHost,\n  GridState,\n  GridStateInteractionMode,\n  GroupState,\n  GroupStateMode,\n  GroupStateSummary,\n  PivotState,\n  ScrollState,\n  ScrollStateMode,\n  SelectionState,\n  SelectionStateArea,\n  SelectionStateMode,\n  SelectionStateUnit,\n  SortState,\n  SortStateMode,\n  StyleCellCallback,\n  StyleRowCallback,\n  StyleState,\n  tableFactory,\n  VisibilityState,\n} from '@qgrid/core';\nimport { LayerService } from '../layer/layer.service';\nimport { GridPlugin } from '../plugin/grid-plugin';\nimport { StateAccessor } from '../state/state-accessor';\nimport { TemplateCacheService } from '../template/template-cache.service';\nimport { TemplateLinkService } from '../template/template-link.service';\nimport { TemplateService } from '../template/template.service';\nimport { ThemeService } from '../theme/theme.service';\nimport { Grid } from './grid';\nimport { GridLet } from './grid-let';\nimport { GridModel } from './grid-model';\nimport { GridModelBuilder } from './grid-model.builder';\nimport { GridRoot } from './grid-root';\n\n@Component({\n  selector: 'q-grid',\n  providers: [\n    Grid,\n    GridPlugin,\n    GridRoot,\n    GridLet,\n    LayerService,\n    TemplateCacheService,\n    TemplateLinkService,\n    TemplateService,\n    StateAccessor,\n  ],\n  styleUrls: ['../../../../qgrid-styles/index.scss'],\n  templateUrl: './grid.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GridComponent implements OnInit, OnChanges {\n  private firstSetup = true;\n\n  private gridState = this.stateAccessor.setter(GridState);\n  private dataState = this.stateAccessor.setter(DataState);\n  private editState = this.stateAccessor.setter(EditState);\n  private filterState = this.stateAccessor.setter(FilterState);\n  private groupState = this.stateAccessor.setter(GroupState);\n  private pivotState = this.stateAccessor.setter(PivotState);\n  private selectionState = this.stateAccessor.setter(SelectionState);\n  private scrollState = this.stateAccessor.setter(ScrollState);\n  private sortState = this.stateAccessor.setter(SortState);\n  private styleState = this.stateAccessor.setter(StyleState);\n\n  themeComponent: any;\n\n  @Input() set model(value: GridModel) {\n    this.root.model = value;\n  }\n\n  get model(): GridModel {\n    return this.root.model;\n  }\n\n  // @deprecated\n  get visibility(): VisibilityState {\n    // TODO: get rid of that\n    const { model } = this.plugin;\n    return model.visibility();\n  }\n\n  @Input('id') set gridId(id: string) { this.gridState({ id }); }\n  @Input('header') set gridTitle(header: string) { this.gridState({ caption: header }); }\n  @Input('caption') set gridCaption(caption: string) { this.gridState({ caption }); }\n  @Input('interactionMode') set gridInteractionMode(interactionMode: GridStateInteractionMode) { this.gridState({ interactionMode }); }\n\n  @Input('columns') set dataColumns(columns: Array<ColumnModel>) { if (Array.isArray(columns)) { this.dataState({ columns }); } }\n  @Input('rows') set dataRows(rows: any[] | null) {\n    if (Array.isArray(rows)) {\n      this.dataState({ rows });\n    }\n  }\n\n  @Input() set editCancel(cancel: Command) { this.editState({ cancel }); }\n  @Input() set editCommit(commit: Command) { this.editState({ commit }); }\n  @Input() set editEnter(enter: Command) { this.editState({ enter }); }\n  @Input() set editMethod(method: EditStateMethod) { this.editState({ method }); }\n  @Input() set editMode(mode: EditStateMode) { this.editState({ mode }); }\n  @Input() set editReset(reset: Command) { this.editState({ reset }); }\n\n  @Input() set filterUnit(unit: FilterStateUnit) { this.filterState({ unit }); }\n\n  @Input() set groupBy(by: Array<string>) { this.groupState({ by }); }\n  @Input() set groupMode(mode: GroupStateMode) { this.groupState({ mode }); }\n  @Input() set groupSummary(summary: GroupStateSummary) { this.groupState({ summary }); }\n\n  @Input() set pivotBy(by: Array<string>) { this.pivotState({ by }); }\n\n  @Input('selection') set selectionItems(items: Array<any>) { this.selectionState({ items }); }\n  @Input() set selectionArea(area: SelectionStateArea) { this.selectionState({ area }); }\n  @Input() set selectionMode(mode: SelectionStateMode) { this.selectionState({ mode }); }\n  @Input() set selectionUnit(unit: SelectionStateUnit) { this.selectionState({ unit }); }\n\n  @Input() set scrollMode(mode: ScrollStateMode) { this.scrollState({ mode }); }\n\n  @Input() set sortBy(by: Array<string>) { this.sortState({ by }); }\n  @Input() set sortMode(mode: SortStateMode) { this.sortState({ mode }); }\n  @Input() set sortTrigger(trigger: Array<string>) { this.sortState({ trigger }); }\n\n  @Input() set styleCell(cell: StyleCellCallback | { [key: string]: StyleCellCallback }) { this.styleState({ cell }); }\n  @Input() set styleRow(row: StyleRowCallback) { this.styleState({ row }); }\n\n  constructor(\n    private root: GridRoot,\n    private plugin: GridPlugin,\n    private elementRef: ElementRef,\n    private zone: NgZone,\n    private layerService: LayerService,\n    private cd: ChangeDetectorRef,\n    private stateAccessor: StateAccessor,\n    private modelBuilder: GridModelBuilder,\n    @Inject(DOCUMENT) private document: any,\n    theme: ThemeService,\n  ) {\n    if (!theme.component) {\n      throw new GridError(\n        'grid.component',\n        'Ensure that grid theme module was included',\n      );\n    }\n\n    this.themeComponent = theme.component;\n  }\n\n  ngOnInit() {\n    if (this.firstSetup) {\n      this.setup();\n    }\n\n    const { model, disposable, observe } = this.plugin;\n    const { nativeElement } = this.elementRef;\n\n    if (nativeElement.classList.length) {\n      model.style({\n        classList: Array.from(nativeElement.classList),\n      }, {\n        source: 'grid.component',\n      });\n    }\n\n    const host = new GridHost(\n      nativeElement,\n      this.plugin,\n    );\n    const listener = new EventListener(nativeElement, new EventManager(this));\n    const docListener = new EventListener(this.document, new EventManager(this));\n\n    this.zone.runOutsideAngular(() => {\n      disposable.add(\n        docListener.on('focusin', () => host.invalidateActive()),\n      );\n\n      disposable.add(\n        docListener.on('mousedown', e => {\n          if (model.edit().status === 'edit') {\n            const path = eventPath(e);\n            const clickedOutside = path.every(x => x !== nativeElement && x.classList && !x.classList.contains('q-grid-editor-part'));\n            if (clickedOutside) {\n              model.edit({\n                status: 'view',\n              }, {\n                source: 'document.click',\n              });\n            }\n          }\n        }));\n\n\n      disposable.add(\n        listener.on('keyup', e => host.keyUp(e, 'grid')),\n      );\n    });\n\n    disposable.add(\n      listener.on('keydown', e => host.keyDown(e, 'grid')),\n    );\n\n\n    observe(model.visibilityChanged)\n      .subscribe(() => this.cd.detectChanges());\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.model || this.firstSetup) {\n      this.setup();\n    }\n\n    this.stateAccessor.write(this.model);\n  }\n\n  private setup() {\n    this.firstSetup = false;\n\n    const model = this.model || this.modelBuilder.build();\n    const table = tableFactory(model, name => this.layerService.create(name));\n\n    this.root.model = model;\n    this.root.table = table;\n  }\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { TemplateHostService } from '../template/template-host.service';\n\n@Component({\n  selector: 'q-grid-layer',\n  template: `<ng-content></ng-content>\n`,\n  providers: [TemplateHostService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LayerComponent {\n  constructor(templateHost: TemplateHostService) {\n    templateHost.key = source => `layer-${source}.tpl.html`;\n  }\n}\n","import { Directive, Input, OnInit, TemplateRef } from '@angular/core';\nimport { TemplateLinkService } from './template-link.service';\nimport { TemplateLink } from './template-link';\n\n@Directive({\n  selector: 'ng-template[key]', // eslint-disable-line @angular-eslint/directive-selector\n})\nexport class TemplateLinkDirective implements OnInit {\n  @Input() key = '';\n  @Input() context = {};\n\n  constructor(private templateLink: TemplateLinkService, private templateRef: TemplateRef<any>) {\n  }\n\n  ngOnInit() {\n    const link = new TemplateLink(this.templateRef, this.context);\n    this.templateLink.put(this.key, link);\n  }\n}\n","import {\n  Directive,\n  Input,\n  OnInit,\n  TemplateRef,\n  Optional,\n} from '@angular/core';\nimport { TemplateCacheService } from './template-cache.service';\nimport { TemplateHostService } from './template-host.service';\nimport { TemplateLink } from './template-link';\n\n@Directive({\n  selector: 'ng-template[for]', // eslint-disable-line @angular-eslint/directive-selector\n})\nexport class TemplateCacheDirective implements OnInit {\n  @Input('for') key = '';\n  @Input() context = {};\n\n  constructor(\n    private templateCache: TemplateCacheService,\n    private templateRef: TemplateRef<any>,\n    @Optional() private templateHost: TemplateHostService) {\n  }\n\n  ngOnInit() {\n    const link = new TemplateLink(this.templateRef, this.context);\n    if (this.templateHost) {\n      this.templateCache.put(this.templateHost.key(this.key), link);\n    } else {\n      this.templateCache.put(this.key, link);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { TemplateDirective } from './template.directive';\nimport { TemplateLinkDirective } from './template-link.directive';\nimport { TemplateCacheDirective } from './template-cache.directive';\n\n@NgModule({\n  declarations: [\n    TemplateDirective,\n    TemplateLinkDirective,\n    TemplateCacheDirective,\n  ],\n  exports: [\n    TemplateDirective,\n    TemplateLinkDirective,\n    TemplateCacheDirective,\n  ],\n})\nexport class TemplateModule {\n}\n","import { NgModule } from '@angular/core';\nimport { LayerCoreComponent } from './layer-core.component';\nimport { LayerCoreDirective } from './layer-core.directive';\nimport { LayerComponent } from './layer.component';\nimport { TemplateModule } from '../template/template.module';\n\n@NgModule({\n  declarations: [\n    LayerCoreComponent,\n    LayerCoreDirective,\n    LayerComponent,\n  ],\n  exports: [\n    LayerCoreComponent,\n    LayerCoreDirective,\n    LayerComponent,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class LayerModule {\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  NgZone,\n  OnInit,\n  Renderer2,\n} from '@angular/core';\nimport { isString, yes } from '@qgrid/core';\n\n@Directive({\n  selector: '[q-grid-stop-propagate]',\n})\nexport class StopPropagateDirective implements OnInit {\n  @Input('q-grid-stop-propagate') eventName: string | Array<string> = 'click';\n\n  // tslint:disable-next-line:no-input-rename\n  @Input('q-grid-stop-propagate-when') needStop = yes;\n\n  constructor(\n    private element: ElementRef,\n    private renderer: Renderer2,\n    private zone: NgZone) {\n  }\n\n  ngOnInit() {\n    let eventNames = this.eventName as Array<string>;\n    if (isString(this.eventName)) {\n      eventNames = [this.eventName as string];\n    }\n\n    this.zone.runOutsideAngular(() =>\n      eventNames.forEach(eventName =>\n        this.renderer.listen(\n          this.element.nativeElement,\n          eventName,\n          e => {\n            if (this.needStop()) {\n              e.stopPropagation();\n            }\n          }),\n      ),\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MarkupDirective } from './markup.directive';\nimport { StopPropagateDirective } from './stop-propagate.directive';\n\n@NgModule({\n  declarations: [\n    MarkupDirective,\n    StopPropagateDirective,\n  ],\n  exports: [\n    MarkupDirective,\n    StopPropagateDirective,\n  ],\n})\nexport class MarkupModule {\n}\n","import { NgModule } from '@angular/core';\nimport { ScrollService } from './scroll.service';\n\n@NgModule({\n  providers: [\n    ScrollService,\n  ],\n})\nexport class ScrollModule {\n}\n","import { NgModule } from '@angular/core';\nimport { ThemeService } from './theme.service';\n\n@NgModule({\n  providers: [\n    ThemeService,\n  ],\n})\nexport class ThemeModule {\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { TemplateHostService } from '../template/template-host.service';\n\n@Component({\n  selector: 'q-grid-toolbar',\n  template: `<ng-content></ng-content>\n`,\n  providers: [TemplateHostService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ToolbarComponent {\n  constructor(templateHost: TemplateHostService) {\n    templateHost.key = source => `toolbar-${source}.tpl.html`;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ToolbarComponent } from './toolbar.component';\nimport { ToolbarCoreComponent } from './toolbar-core.component';\nimport { TemplateModule } from '../template/template.module';\n\n@NgModule({\n  declarations: [\n    ToolbarComponent,\n    ToolbarCoreComponent,\n  ],\n  exports: [\n    ToolbarComponent,\n    ToolbarCoreComponent,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class ToolbarModule {\n}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\nimport { Fastdom } from '@qgrid/core';\n\n@Directive({\n  selector: '[q-grid-autosize]',\n})\nexport class AutoSizeDirective implements OnInit {\n  private actualText: string;\n  private host: HTMLElement;\n  private element: HTMLInputElement;\n\n  @Input('q-grid-autosize') selector;\n  @Input('q-grid-autosize-empty-width') emptyWidth = 75;\n\n  @Input('q-grid-autosize-value') set value(value: string) {\n    this.autoWidth(value);\n  }\n\n  constructor(element: ElementRef) {\n    this.host = element.nativeElement as HTMLInputElement;\n  }\n\n  ngOnInit() {\n    this.element = this.selector ? this.host.querySelector(this.selector) as HTMLInputElement : this.host as HTMLInputElement;\n  }\n\n  autoWidth(text) {\n    if (!text) {\n      this.actualText = text;\n      Fastdom.measure(() => {\n        Fastdom.mutate(() => {\n          this.host.style.width = `${this.emptyWidth}px`;\n        });\n      });\n      return;\n    }\n\n    if (!this.element) {\n      return;\n    }\n\n    if (this.actualText === text) {\n      return;\n    }\n\n    this.actualText = text;\n    Fastdom.measure(() => {\n      const width = `${this.calculateWidth(this.element, text)}px`;\n      Fastdom.mutate(() => this.host.style.width = width);\n    });\n  }\n\n  private calculateWidth(element: HTMLElement, text: string) {\n    let width = 0;\n    if (text) {\n      const document = element.ownerDocument;\n      const body = document.body;\n      const test = document.createElement('span');\n\n      test.innerText = text;\n      test.style.whiteSpace = 'pre';\n      test.style.visibility = 'hidden';\n      test.style.font = element.style.font;\n      test.style.fontFamily = element.style.fontFamily;\n      test.style.lineHeight = element.style.lineHeight;\n      test.style.border = element.style.border;\n      // borderBox ?\n\n      body.appendChild(test);\n      width = test.offsetWidth;\n      test.remove();\n    }\n\n    return width;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ResizeDirective } from './resize.directive';\nimport { AutoSizeDirective } from './autosize.directive';\n\n@NgModule({\n  declarations: [\n    ResizeDirective,\n    AutoSizeDirective,\n  ],\n  exports: [\n    ResizeDirective,\n    AutoSizeDirective,\n  ],\n})\nexport class ResizeModule {\n}\n","import { NgModule } from '@angular/core';\nimport { ThCoreDirective } from './th-core.directive';\nimport { HeadCoreComponent } from './head-core.component';\nimport { RowModule } from '../row/row.module';\nimport { CommonModule } from '@angular/common';\nimport { ResizeModule } from '../resize/resize.module';\nimport { DndModule } from '../dnd/dnd.module';\n\n@NgModule({\n  declarations: [\n    HeadCoreComponent,\n    ThCoreDirective,\n  ],\n  exports: [\n    HeadCoreComponent,\n    ThCoreDirective,\n  ],\n  imports: [\n    CommonModule,\n    RowModule,\n    ResizeModule,\n    DndModule,\n  ],\n})\nexport class HeadModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TableCoreComponent } from './table-core.component';\nimport { HeadModule } from '../head/head.module';\nimport { FootModule } from '../foot/foot.module';\nimport { BodyModule } from '../body/body.module';\nimport { MarkupModule } from '../markup/markup.module';\nimport { DndModule } from '../dnd/dnd.module';\nimport { VscrollModule } from '../vscroll/vscroll.module';\n\n@NgModule({\n  declarations: [\n    TableCoreComponent,\n  ],\n  exports: [\n    TableCoreComponent,\n  ],\n  imports: [\n    CommonModule,\n\n    HeadModule,\n    FootModule,\n    BodyModule,\n    MarkupModule,\n    DndModule,\n    VscrollModule,\n  ],\n})\nexport class TableModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ViewCoreComponent } from './view-core.component';\nimport { CellHandlerModule } from '../cell-handler/cell-handler.module';\nimport { TableModule } from '../table/table.module';\n\n@NgModule({\n  declarations: [\n    ViewCoreComponent,\n  ],\n  exports: [\n    ViewCoreComponent,\n  ],\n  imports: [\n    CommonModule,\n    CellHandlerModule,\n    TableModule,\n  ],\n})\nexport class ViewModule {\n}\n","import { CommonModule, CurrencyPipe, DatePipe, DecimalPipe } from '@angular/common';\nimport { NgModule, NgZone } from '@angular/core';\nimport { Fastdom, FormatService } from '@qgrid/core';\nimport { BoxModule } from '../box/box.module';\nimport { LayerModule } from '../layer/layer.module';\nimport { MarkupModule } from '../markup/markup.module';\nimport { ScrollModule } from '../scroll/scroll.module';\nimport { TemplateModule } from '../template/template.module';\nimport { ThemeModule } from '../theme/theme.module';\nimport { ToolbarModule } from '../toolbar/toolbar.module';\nimport { ViewModule } from '../view/view.module';\nimport { Grid } from './grid';\nimport { GridModelBuilder } from './grid-model.builder';\nimport { GridComponent } from './grid.component';\n\n@NgModule({\n  declarations: [\n    GridComponent,\n  ],\n  exports: [\n    GridComponent,\n  ],\n  imports: [\n    CommonModule,\n\n    BoxModule,\n    LayerModule,\n    MarkupModule,\n    ScrollModule,\n    TemplateModule,\n    ThemeModule,\n    ToolbarModule,\n    ViewModule,\n  ],\n  providers: [\n    DatePipe,\n    DecimalPipe,\n    CurrencyPipe,\n    GridModelBuilder,\n    Grid,\n  ],\n})\nexport class GridModule {\n  constructor(\n    zone: NgZone,\n    datePipe: DatePipe,\n    numberPipe: DecimalPipe,\n    currencyPipe: CurrencyPipe,\n  ) {\n    FormatService.date = (x, format) => datePipe.transform(x, format);\n    FormatService.number = (x, format) => numberPipe.transform(x, format);\n    FormatService.currency = (x, format) => currencyPipe.transform(x, format);\n\n    Fastdom.invoke = task => zone.runOutsideAngular<any>(task);\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["DisposableCore","labelService","i1.GridModelBuilder","i1.Grid","i2.ScrollService","i1.GridLet","i2.GridRoot","i3.Grid","i1.VscrollDirective","i1.VscrollPortYDirective","i1.VscrollPortXDirective","i2.VscrollPortYDirective","i2.GridPlugin","i1.CellClassService","i1.TemplateLinkService","i2.TemplateCacheService","i1.TemplateService","i3.CellTemplateService","i4.CellClassService","i5.TrCoreDirective","Disposable","Pipe","i2.TableCoreService","i3.GridPlugin","_c0","i1.GridPlugin","i2.StateAccessor","i3.TemplateHostService","i1.ThemeService","i1.DirtyHostDirective","i1.TemplateCacheService","i1.ColumnHostService","i2.ColumnListService","i4.GridPlugin","i5.TrhCoreDirective","i1.LayerService","i3.TableCoreService","i2.Grid","i3.GridLet","i6.ThemeService","i1.TemplateHostService","i2.TemplateHostService","i1"],"mappings":"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"}}}