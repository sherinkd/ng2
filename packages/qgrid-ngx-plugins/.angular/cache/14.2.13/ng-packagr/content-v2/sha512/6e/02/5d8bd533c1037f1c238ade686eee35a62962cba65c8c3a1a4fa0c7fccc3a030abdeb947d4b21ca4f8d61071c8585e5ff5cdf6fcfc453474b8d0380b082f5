{"hash":"b175a2e9a34f389cc68c29db13804f1425b27edb","fesm2020":{"code":"import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, NgModule, TemplateRef, ContentChild, Input, Pipe, Directive, Injectable, EventEmitter, ViewChild, Output, Inject, Optional, HostListener, HostBinding } from '@angular/core';\nimport * as i1 from '@qgrid/ngx';\nimport { GridPlugin, TemplateModule, TemplateHostService, GridError, LayerModule, StateAccessor, CellTemplateService, Disposable } from '@qgrid/ngx';\nimport * as columnService from '@qgrid/core';\nimport { guid, Action, Command, isArray, Log, isUndefined, predicateFactory, Guard, noop, jobLine, GRID_PREFIX, FocusAfterRenderService, Fetch, flatten, getValue as getValue$1, uniq, EventListener, EventManager, CommandManager, Shortcut, ShortcutDispatcher, parseFactory, PipeUnit, Keyboard, isDate, isFunction, isObject, cloneDeep, clone, Composite, yes, filterNode, isString, escapeRegexp, htmlEncode, Fastdom, PaginationState, PersistenceState, PersistenceService, filter, takeOnce, getValueFactory, createValidator, MarkupVisitor, SelectionService, RestState, selectRowIndex, selectColumnIndex } from '@qgrid/core';\nimport { AutofocusPlugin, BackdropPlugin, ColumnChooserState, ColumnChooserPlugin, ColumnFilterState, ColumnFilterPlugin, ColumnSortPlugin, DataManipulationState, DataManipulationPlugin, EditFormPanelPlugin, ExportPlugin, ImportPlugin, PositionPlugin, PagerPlugin, PersistencePlugin, RestPlugin, ValidatorPlugin } from '@qgrid/plugins';\nimport * as i1$1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i1$2 from '@angular/common/http';\n\nclass ActionBarComponent {\r\n    constructor(plugin, cd) {\r\n        this.plugin = plugin;\r\n        this.cd = cd;\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n    }\r\n    get actions() {\r\n        const { model } = this.plugin;\r\n        return model.action().items;\r\n    }\r\n    ngOnInit() {\r\n        const { model, observeReply } = this.plugin;\r\n        observeReply(model.actionChanged)\r\n            .subscribe(e => {\r\n            if (e.hasChanges('items')) {\r\n                const { items } = e.state;\r\n                const inRightOrder = this.checkOrder(items);\r\n                if (!inRightOrder) {\r\n                    // todo: make it better\r\n                    model.action({\r\n                        items: items.sort((a, b) => a.command.priority - b.command.priority),\r\n                    });\r\n                }\r\n                this.cd.markForCheck();\r\n                this.cd.detectChanges();\r\n            }\r\n        });\r\n    }\r\n    checkOrder(actions) {\r\n        for (let i = 0; i < actions.length - 1; i++) {\r\n            const action = actions[i];\r\n            const nextAction = actions[i + 1];\r\n            if (action.command.priority > nextAction.command.priority) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\nActionBarComponent.ɵfac = function ActionBarComponent_Factory(t) { return new (t || ActionBarComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };\r\nActionBarComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ActionBarComponent, selectors: [[\"q-grid-action-bar\"]], features: [i0.ɵɵProvidersFeature([GridPlugin])], decls: 1, vars: 2, consts: [[3, \"key\", \"context\"]], template: function ActionBarComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementContainer(0, 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"key\", \"plugin-action-bar.tpl.html\")(\"context\", ctx.context);\r\n    } }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionBarComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-action-bar', providers: [GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container [key]=\\\"'plugin-action-bar.tpl.html'\\\"\\n\\t\\t\\t\\t\\t\\t\\t[context]=\\\"context\\\">\\n</ng-container>\\n\" }]\r\n    }], function () { return [{ type: i1.GridPlugin }, { type: i0.ChangeDetectorRef }]; }, null); })();\n\nclass ActionListComponent {\r\n}\r\nActionListComponent.ɵfac = function ActionListComponent_Factory(t) { return new (t || ActionListComponent)(); };\r\nActionListComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ActionListComponent, selectors: [[\"q-grid-actions\"]], decls: 0, vars: 0, template: function ActionListComponent_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionListComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'q-grid-actions',\r\n                template: '',\r\n                changeDetection: ChangeDetectionStrategy.OnPush,\r\n            }]\r\n    }], null, null); })();\n\nclass ActionBarModule {\r\n}\r\nActionBarModule.ɵfac = function ActionBarModule_Factory(t) { return new (t || ActionBarModule)(); };\r\nActionBarModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ActionBarModule });\r\nActionBarModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionBarModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    ActionBarComponent,\r\n                    ActionListComponent,\r\n                ],\r\n                exports: [\r\n                    ActionBarComponent,\r\n                    ActionListComponent,\r\n                ],\r\n                imports: [\r\n                    TemplateModule,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ActionBarModule, { declarations: [ActionBarComponent,\r\n        ActionListComponent], imports: [TemplateModule], exports: [ActionBarComponent,\r\n        ActionListComponent] }); })();\n\nclass ActionComponent {\r\n    constructor(plugin, templateHost) {\r\n        this.plugin = plugin;\r\n        this.templateHost = templateHost;\r\n        const id = guid();\r\n        templateHost.key = source => `action-${source}-${id}.tpl.html`;\r\n    }\r\n    ngOnInit() {\r\n        const { model, disposable } = this.plugin;\r\n        const action = new Action(this.command || new Command(), this.title, this.icon);\r\n        if (this.templateRef) {\r\n            action.templateUrl = this.templateHost.key('trigger');\r\n        }\r\n        model.action({\r\n            items: model\r\n                .action()\r\n                .items\r\n                .concat([action]),\r\n        }, {\r\n            source: 'action.component',\r\n        });\r\n        disposable.add(() => model.action({\r\n            items: model\r\n                .action()\r\n                .items\r\n                .filter(x => x !== action),\r\n        }));\r\n    }\r\n}\r\nActionComponent.ɵfac = function ActionComponent_Factory(t) { return new (t || ActionComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i1.TemplateHostService)); };\r\nActionComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ActionComponent, selectors: [[\"q-grid-action\"]], contentQueries: function ActionComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\r\n        i0.ɵɵcontentQuery(dirIndex, TemplateRef, 7);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\r\n    } }, inputs: { title: \"title\", icon: \"icon\", command: \"command\" }, features: [i0.ɵɵProvidersFeature([GridPlugin, TemplateHostService])], decls: 0, vars: 0, template: function ActionComponent_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'q-grid-action',\r\n                template: '',\r\n                changeDetection: ChangeDetectionStrategy.OnPush,\r\n                providers: [GridPlugin, TemplateHostService],\r\n            }]\r\n    }], function () { return [{ type: i1.GridPlugin }, { type: i1.TemplateHostService }]; }, { templateRef: [{\r\n            type: ContentChild,\r\n            args: [TemplateRef, { static: true }]\r\n        }], title: [{\r\n            type: Input\r\n        }], icon: [{\r\n            type: Input\r\n        }], command: [{\r\n            type: Input\r\n        }] }); })();\n\nclass ActionCoreComponent {\r\n    constructor(plugin) {\r\n        this.plugin = plugin;\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n    }\r\n    get model() {\r\n        return this.plugin.model;\r\n    }\r\n    get command() {\r\n        const { action } = this;\r\n        if (!action) {\r\n            throw new GridError('action-core.component', 'Action is not set');\r\n        }\r\n        return action.command;\r\n    }\r\n    get title() {\r\n        const { action } = this;\r\n        if (!action) {\r\n            throw new GridError('action-core.component', 'Action is not set');\r\n        }\r\n        return action.title;\r\n    }\r\n    get icon() {\r\n        const { action } = this;\r\n        if (!action) {\r\n            throw new GridError('action-core.component', 'Action is not set');\r\n        }\r\n        return action.icon;\r\n    }\r\n    get templateUrl() {\r\n        const { action } = this;\r\n        if (!action) {\r\n            throw new GridError('action-core.component', 'Action is not set');\r\n        }\r\n        return action.templateUrl;\r\n    }\r\n    get mode() {\r\n        const { action } = this;\r\n        if (!action) {\r\n            throw new GridError('action-core.component', 'Action is not set');\r\n        }\r\n        if (action.templateUrl) {\r\n            return 'template';\r\n        }\r\n        if (action.icon) {\r\n            return 'icon';\r\n        }\r\n        if (action.title) {\r\n            return 'text';\r\n        }\r\n        return 'none';\r\n    }\r\n}\r\nActionCoreComponent.ɵfac = function ActionCoreComponent_Factory(t) { return new (t || ActionCoreComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin)); };\r\nActionCoreComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ActionCoreComponent, selectors: [[\"q-grid-action-core\"]], inputs: { action: \"action\" }, features: [i0.ɵɵProvidersFeature([GridPlugin])], decls: 1, vars: 1, consts: [[\"key\", \"plugin-action-core.tpl.html\", 3, \"context\"]], template: function ActionCoreComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementContainer(0, 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"context\", ctx.context);\r\n    } }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionCoreComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-action-core', providers: [GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-action-core.tpl.html\\\"\\n              [context]=\\\"context\\\">\\n</ng-container>\\n\" }]\r\n    }], function () { return [{ type: i1.GridPlugin }]; }, { action: [{\r\n            type: Input\r\n        }] }); })();\n\nclass ActionModule {\r\n}\r\nActionModule.ɵfac = function ActionModule_Factory(t) { return new (t || ActionModule)(); };\r\nActionModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ActionModule });\r\nActionModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    ActionComponent,\r\n                    ActionCoreComponent,\r\n                ],\r\n                exports: [\r\n                    ActionComponent,\r\n                    ActionCoreComponent,\r\n                ],\r\n                imports: [\r\n                    TemplateModule,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ActionModule, { declarations: [ActionComponent,\r\n        ActionCoreComponent], imports: [TemplateModule], exports: [ActionComponent,\r\n        ActionCoreComponent] }); })();\n\nfunction AltComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵtext(0);\r\n} if (rf & 2) {\r\n    const $cell_r1 = ctx.$implicit;\r\n    i0.ɵɵtextInterpolate1(\" \", $cell_r1.rowIndex, \"\\n\");\r\n} }\r\nclass AltComponent {\r\n    constructor(plugin) {\r\n        this.plugin = plugin;\r\n    }\r\n    ngOnInit() {\r\n        const { model, observe, service } = this.plugin;\r\n        const altColumn = {\r\n            key: '$alt.number',\r\n            type: 'row-number',\r\n            title: 'Alt',\r\n            canHighlight: false,\r\n            canMove: false,\r\n            canResize: false,\r\n        };\r\n        model\r\n            .pagination({\r\n            size: 10,\r\n        }, {\r\n            source: 'alt.component',\r\n        })\r\n            .data({\r\n            columns: [altColumn]\r\n                .concat(model.data().columns),\r\n        }, {\r\n            source: 'alt.component',\r\n        });\r\n        observe(model.keyboardChanged)\r\n            .subscribe(e => {\r\n            const { codes, status } = e.state;\r\n            if (status === 'down') {\r\n                switch (codes[0]) {\r\n                    case 'alt': {\r\n                        const rowNo = Number.parseInt(codes[1], 10);\r\n                        if (!Number.isNaN(rowNo)) {\r\n                            const { rows } = model.view();\r\n                            const { current, size } = model.pagination();\r\n                            const rowIndex = rowNo + current * size;\r\n                            const altRow = rows[rowIndex];\r\n                            if (altRow) {\r\n                                model.selection({\r\n                                    items: [altRow],\r\n                                }, {\r\n                                    source: 'alt.component',\r\n                                });\r\n                                service.focus(rowIndex);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nAltComponent.ɵfac = function AltComponent_Factory(t) { return new (t || AltComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin)); };\r\nAltComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AltComponent, selectors: [[\"q-grid-alt\"]], features: [i0.ɵɵProvidersFeature([GridPlugin])], decls: 1, vars: 0, consts: [[\"for\", \"body-cell-row-number-the-$alt.number.tpl.html\"]], template: function AltComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵtemplate(0, AltComponent_ng_template_0_Template, 1, 1, \"ng-template\", 0);\r\n    } }, dependencies: [i1.TemplateCacheDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AltComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-alt', providers: [GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template for=\\\"body-cell-row-number-the-$alt.number.tpl.html\\\"\\n                        let-$cell>\\n\\t{{$cell.rowIndex}}\\n</ng-template>\\n\" }]\r\n    }], function () { return [{ type: i1.GridPlugin }]; }, null); })();\n\nclass AltModule {\r\n}\r\nAltModule.ɵfac = function AltModule_Factory(t) { return new (t || AltModule)(); };\r\nAltModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: AltModule });\r\nAltModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AltModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    AltComponent,\r\n                ],\r\n                exports: [\r\n                    AltComponent,\r\n                ],\r\n                imports: [\r\n                    TemplateModule,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AltModule, { declarations: [AltComponent], imports: [TemplateModule], exports: [AltComponent] }); })();\n\nclass ArrayPipe {\r\n    transform(value) {\r\n        if (isArray(value)) {\r\n            return value;\r\n        }\r\n        Log.warn('ArrayPipe', `${value} is not of array type`);\r\n        return isUndefined(value) || value === null ? [] : [value];\r\n    }\r\n}\r\nArrayPipe.ɵfac = function ArrayPipe_Factory(t) { return new (t || ArrayPipe)(); };\r\nArrayPipe.ɵpipe = /*@__PURE__*/ i0.ɵɵdefinePipe({ name: \"qGridArray\", type: ArrayPipe, pure: true });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ArrayPipe, [{\r\n        type: Pipe,\r\n        args: [{\r\n                name: 'qGridArray',\r\n            }]\r\n    }], null, null); })();\n\nclass AutoCompleteEditorComponent {\r\n    constructor(plugin) {\r\n        this.plugin = plugin;\r\n        this.options = [];\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n    }\r\n    get cell() {\r\n        return this.plugin.view.edit.cell;\r\n    }\r\n    get items() {\r\n        return this.cell.fetch.result;\r\n    }\r\n    get title() {\r\n        return this.cell.column.title;\r\n    }\r\n    get value() {\r\n        return this.cell.value;\r\n    }\r\n    set value(value) {\r\n        this.cell.value = value;\r\n    }\r\n    filter(search) {\r\n        const test = predicateFactory(search);\r\n        const getLabel = this.itemLabelFactory(this.cell.column);\r\n        if (isArray(this.items)) {\r\n            this.options = this.items.filter(item => test(getLabel(item)));\r\n        }\r\n    }\r\n    reset() {\r\n        this.options = [];\r\n    }\r\n    itemLabelFactory(column) {\r\n        const { itemLabel } = column;\r\n        if (itemLabel) {\r\n            return item => itemLabel(item);\r\n        }\r\n        return item => item;\r\n    }\r\n}\r\nAutoCompleteEditorComponent.ɵfac = function AutoCompleteEditorComponent_Factory(t) { return new (t || AutoCompleteEditorComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin)); };\r\nAutoCompleteEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AutoCompleteEditorComponent, selectors: [[\"q-grid-autocomplete-editor\"]], features: [i0.ɵɵProvidersFeature([GridPlugin])], decls: 1, vars: 1, consts: [[\"key\", \"plugin-autocomplete-editor.tpl.html\", 3, \"context\"]], template: function AutoCompleteEditorComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementContainer(0, 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"context\", ctx.context);\r\n    } }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AutoCompleteEditorComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-autocomplete-editor', providers: [GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-autocomplete-editor.tpl.html\\\"\\n              [context]=\\\"context\\\">\\n</ng-container>\\n\" }]\r\n    }], function () { return [{ type: i1.GridPlugin }]; }, null); })();\n\nclass AutoCompleteEditorModule {\r\n}\r\nAutoCompleteEditorModule.ɵfac = function AutoCompleteEditorModule_Factory(t) { return new (t || AutoCompleteEditorModule)(); };\r\nAutoCompleteEditorModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: AutoCompleteEditorModule });\r\nAutoCompleteEditorModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AutoCompleteEditorModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    AutoCompleteEditorComponent,\r\n                ],\r\n                exports: [\r\n                    AutoCompleteEditorComponent,\r\n                ],\r\n                imports: [\r\n                    TemplateModule,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AutoCompleteEditorModule, { declarations: [AutoCompleteEditorComponent], imports: [TemplateModule], exports: [AutoCompleteEditorComponent] }); })();\n\nclass AutoFocusDirective {\r\n    constructor(plugin) {\r\n        this.plugin = plugin;\r\n    }\r\n    ngAfterViewInit() {\r\n        if (this.enabled !== false) {\r\n            new AutofocusPlugin(this.plugin);\r\n        }\r\n    }\r\n}\r\nAutoFocusDirective.ɵfac = function AutoFocusDirective_Factory(t) { return new (t || AutoFocusDirective)(i0.ɵɵdirectiveInject(i1.GridPlugin)); };\r\nAutoFocusDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: AutoFocusDirective, selectors: [[\"\", \"q-grid-autofocus\", \"\"]], inputs: { enabled: [\"q-grid-autofocus\", \"enabled\"] }, features: [i0.ɵɵProvidersFeature([GridPlugin])] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AutoFocusDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-autofocus]',\r\n                providers: [GridPlugin],\r\n            }]\r\n    }], function () { return [{ type: i1.GridPlugin }]; }, { enabled: [{\r\n            type: Input,\r\n            args: ['q-grid-autofocus']\r\n        }] }); })();\n\nclass BackdropService {\r\n    constructor() {\r\n        this.isActive = true;\r\n    }\r\n    hide() {\r\n        Guard.notNull(this.element, 'element');\r\n        if (this.isActive) {\r\n            this.element.nativeElement.classList.add('q-grid-backdrop-inactive');\r\n            this.isActive = false;\r\n        }\r\n    }\r\n    reveal() {\r\n        Guard.notNull(this.element, 'element');\r\n        if (!this.isActive) {\r\n            this.element.nativeElement.classList.remove('q-grid-backdrop-inactive');\r\n            this.isActive = true;\r\n        }\r\n    }\r\n}\r\nBackdropService.ɵfac = function BackdropService_Factory(t) { return new (t || BackdropService)(); };\r\nBackdropService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: BackdropService, factory: BackdropService.ɵfac });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BackdropService, [{\r\n        type: Injectable\r\n    }], null, null); })();\n\nclass BackdropComponent {\r\n    constructor(backdropService, elementRef) {\r\n        this.backdropService = backdropService;\r\n        this.closeEvent = new EventEmitter();\r\n        this.propagate = true;\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n        backdropService.element = elementRef;\r\n    }\r\n    ngOnInit() {\r\n        const context = {\r\n            element: this.backdropService.element.nativeElement,\r\n            propagate: this.propagate,\r\n            onKeyDown: () => { },\r\n        };\r\n        const backdrop = new BackdropPlugin(context);\r\n        backdrop.closeEvent.on(() => this.closeEvent.emit());\r\n    }\r\n    ngOnDestroy() {\r\n        this.backdropService.element = null;\r\n    }\r\n}\r\nBackdropComponent.ɵfac = function BackdropComponent_Factory(t) { return new (t || BackdropComponent)(i0.ɵɵdirectiveInject(BackdropService), i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nBackdropComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: BackdropComponent, selectors: [[\"q-grid-backdrop\"]], viewQuery: function BackdropComponent_Query(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵviewQuery(TemplateRef, 7);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\r\n    } }, inputs: { propagate: \"propagate\" }, outputs: { closeEvent: \"close\" }, decls: 1, vars: 1, consts: [[\"key\", \"plugin-backdrop.tpl.html\", 3, \"context\"]], template: function BackdropComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementContainer(0, 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"context\", ctx.context);\r\n    } }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BackdropComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-backdrop', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-backdrop.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\n\" }]\r\n    }], function () { return [{ type: BackdropService }, { type: i0.ElementRef }]; }, { template: [{\r\n            type: ViewChild,\r\n            args: [TemplateRef, { static: true }]\r\n        }], closeEvent: [{\r\n            type: Output,\r\n            args: ['close']\r\n        }], propagate: [{\r\n            type: Input\r\n        }] }); })();\n\nclass BackdropDirective {\r\n    constructor(zone, document) {\r\n        this.zone = zone;\r\n        this.document = document;\r\n        this.close = new EventEmitter();\r\n        this.selector = '';\r\n    }\r\n    set backdropHost(value) {\r\n        if (!value) {\r\n            if (this.backdrop) {\r\n                this.backdrop.remove();\r\n                this.backdrop = null;\r\n            }\r\n            return;\r\n        }\r\n        this.backdrop = this.document.createElement('div');\r\n        this.backdrop.classList.add('q-grid-backdrop');\r\n        this.backdrop.style.zIndex = '1000';\r\n        this.zone.runOutsideAngular(() => {\r\n            this.backdrop.addEventListener('click', () => {\r\n                if (this.backdrop) {\r\n                    this.backdrop.remove();\r\n                    this.backdrop = null;\r\n                    this.close.emit();\r\n                }\r\n            });\r\n        });\r\n        this.zone.runOutsideAngular(() => {\r\n            const element = document.querySelector(this.selector);\r\n            element.style.zIndex = '1001';\r\n            element.parentElement.appendChild(this.backdrop);\r\n        });\r\n    }\r\n}\r\nBackdropDirective.ɵfac = function BackdropDirective_Factory(t) { return new (t || BackdropDirective)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(DOCUMENT)); };\r\nBackdropDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: BackdropDirective, selectors: [[\"\", \"q-grid-backdrop\", \"\"]], inputs: { selector: [\"q-grid-backdrop-selector\", \"selector\"], backdropHost: [\"q-grid-backdrop-active\", \"backdropHost\"] }, outputs: { close: \"q-grid-backdrop\" } });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BackdropDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-backdrop]',\r\n            }]\r\n    }], function () { return [{ type: i0.NgZone }, { type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [DOCUMENT]\r\n            }] }]; }, { close: [{\r\n            type: Output,\r\n            args: ['q-grid-backdrop']\r\n        }], selector: [{\r\n            type: Input,\r\n            args: ['q-grid-backdrop-selector']\r\n        }], backdropHost: [{\r\n            type: Input,\r\n            args: ['q-grid-backdrop-active']\r\n        }] }); })();\n\nclass BackdropModule {\r\n}\r\nBackdropModule.ɵfac = function BackdropModule_Factory(t) { return new (t || BackdropModule)(); };\r\nBackdropModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: BackdropModule });\r\nBackdropModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ providers: [\r\n        BackdropService,\r\n    ], imports: [TemplateModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BackdropModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    BackdropComponent,\r\n                    BackdropDirective,\r\n                ],\r\n                exports: [\r\n                    BackdropComponent,\r\n                    BackdropDirective,\r\n                ],\r\n                imports: [\r\n                    TemplateModule,\r\n                ],\r\n                providers: [\r\n                    BackdropService,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(BackdropModule, { declarations: [BackdropComponent,\r\n        BackdropDirective], imports: [TemplateModule], exports: [BackdropComponent,\r\n        BackdropDirective] }); })();\n\nclass BlurDirective {\r\n    constructor(renderer, elementRef) {\r\n        this.renderer = renderer;\r\n        this.elementRef = elementRef;\r\n        this.onBlur = noop;\r\n        this.selector = 'input';\r\n    }\r\n    ngOnInit() {\r\n        const element = this.renderer.selectRootElement(this.selector);\r\n        this.renderer.listen(element, 'blur', this.onBlur);\r\n    }\r\n}\r\nBlurDirective.ɵfac = function BlurDirective_Factory(t) { return new (t || BlurDirective)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nBlurDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: BlurDirective, selectors: [[\"\", \"q-grid-on-blur\", \"\"]], inputs: { onBlur: [\"q-grid-on-blur\", \"onBlur\"], selector: [\"q-grid-on-blur-selector\", \"selector\"] } });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BlurDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-on-blur]',\r\n            }]\r\n    }], function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }]; }, { onBlur: [{\r\n            type: Input,\r\n            args: ['q-grid-on-blur']\r\n        }], selector: [{\r\n            type: Input,\r\n            args: ['q-grid-on-blur-selector']\r\n        }] }); })();\n\nclass BoolEditorComponent {\r\n    constructor() {\r\n        this.autofocus = false;\r\n        this.valueChange = new EventEmitter();\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n    }\r\n    get value() {\r\n        return this.state;\r\n    }\r\n    set value(value) {\r\n        if (value !== this.value) {\r\n            this.state = value;\r\n            this.valueChange.emit(value);\r\n        }\r\n    }\r\n    get isChecked() {\r\n        return this.column.isChecked(this.value);\r\n    }\r\n    set isChecked(value) {\r\n        this.value = value ? this.trueValue : this.falseValue;\r\n    }\r\n    get trueValue() {\r\n        return this.column.trueValue;\r\n    }\r\n    get falseValue() {\r\n        return this.column.falseValue;\r\n    }\r\n    ngOnInit() {\r\n        // entering edit mode means toggling boolean value\r\n        if (this.autofocus && this.column.editorOptions.trigger === 'click') {\r\n            setTimeout(() => this.value =\r\n                this.value === this.trueValue\r\n                    ? this.falseValue\r\n                    : this.trueValue, 10);\r\n        }\r\n    }\r\n    isIndeterminate() {\r\n        return this.column.isIndeterminate(this.value);\r\n    }\r\n}\r\nBoolEditorComponent.ɵfac = function BoolEditorComponent_Factory(t) { return new (t || BoolEditorComponent)(); };\r\nBoolEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: BoolEditorComponent, selectors: [[\"q-grid-bool-editor\"]], inputs: { autofocus: \"autofocus\", column: \"column\", label: \"label\", value: \"value\" }, outputs: { valueChange: \"valueChange\" }, decls: 1, vars: 1, consts: [[\"key\", \"plugin-bool-editor.tpl.html\", 3, \"context\"]], template: function BoolEditorComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementContainer(0, 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"context\", ctx.context);\r\n    } }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BoolEditorComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-bool-editor', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-bool-editor.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\n\" }]\r\n    }], null, { autofocus: [{\r\n            type: Input\r\n        }], column: [{\r\n            type: Input\r\n        }], label: [{\r\n            type: Input\r\n        }], valueChange: [{\r\n            type: Output\r\n        }], value: [{\r\n            type: Input\r\n        }] }); })();\n\nclass BoolEditorModule {\r\n}\r\nBoolEditorModule.ɵfac = function BoolEditorModule_Factory(t) { return new (t || BoolEditorModule)(); };\r\nBoolEditorModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: BoolEditorModule });\r\nBoolEditorModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BoolEditorModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    BoolEditorComponent,\r\n                ],\r\n                exports: [\r\n                    BoolEditorComponent,\r\n                ],\r\n                imports: [\r\n                    TemplateModule,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(BoolEditorModule, { declarations: [BoolEditorComponent], imports: [TemplateModule], exports: [BoolEditorComponent] }); })();\n\nclass CaptionComponent {\r\n    constructor(plugin, cd) {\r\n        this.plugin = plugin;\r\n        this.cd = cd;\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n    }\r\n    get value() {\r\n        const { caption, title } = this.plugin.model.grid();\r\n        return caption || title;\r\n    }\r\n    ngOnInit() {\r\n        const { model, observe } = this.plugin;\r\n        observe(model.gridChanged)\r\n            .subscribe(() => this.cd.detectChanges());\r\n    }\r\n}\r\nCaptionComponent.ɵfac = function CaptionComponent_Factory(t) { return new (t || CaptionComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };\r\nCaptionComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CaptionComponent, selectors: [[\"q-grid-caption\"]], features: [i0.ɵɵProvidersFeature([GridPlugin])], decls: 1, vars: 1, consts: [[\"key\", \"plugin-caption.tpl.html\", 3, \"context\"]], template: function CaptionComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementContainer(0, 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"context\", ctx.context);\r\n    } }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CaptionComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-caption', providers: [GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-caption.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\n\" }]\r\n    }], function () { return [{ type: i1.GridPlugin }, { type: i0.ChangeDetectorRef }]; }, null); })();\n\nclass CaptionModule {\r\n}\r\nCaptionModule.ɵfac = function CaptionModule_Factory(t) { return new (t || CaptionModule)(); };\r\nCaptionModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: CaptionModule });\r\nCaptionModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CaptionModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    CaptionComponent,\r\n                ],\r\n                exports: [\r\n                    CaptionComponent,\r\n                ],\r\n                imports: [\r\n                    TemplateModule,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(CaptionModule, { declarations: [CaptionComponent], imports: [TemplateModule], exports: [CaptionComponent] }); })();\n\nfunction CellEditorComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵprojection(0);\r\n} }\r\nconst _c0$6 = [\"*\"];\r\nclass CellEditorComponent {\r\n    constructor(plugin) {\r\n        this.plugin = plugin;\r\n        this.closeEvent = new EventEmitter();\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n    }\r\n    ngOnInit() {\r\n        const { view, disposable } = this.plugin;\r\n        if (this.closeEvent.observers.length) {\r\n            view.edit.cell.requestClose = () => {\r\n                this.close();\r\n                return true;\r\n            };\r\n        }\r\n        disposable.add(() => view.edit.cell.requestClose = null);\r\n    }\r\n    close() {\r\n        this.closeEvent.emit();\r\n    }\r\n}\r\nCellEditorComponent.ɵfac = function CellEditorComponent_Factory(t) { return new (t || CellEditorComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin)); };\r\nCellEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CellEditorComponent, selectors: [[\"q-grid-cell-editor\"]], viewQuery: function CellEditorComponent_Query(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵviewQuery(TemplateRef, 7);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\r\n    } }, outputs: { closeEvent: \"close\" }, features: [i0.ɵɵProvidersFeature([GridPlugin])], ngContentSelectors: _c0$6, decls: 2, vars: 1, consts: [[\"key\", \"plugin-cell-editor.tpl.html\", 3, \"context\"]], template: function CellEditorComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵprojectionDef();\r\n        i0.ɵɵtemplate(0, CellEditorComponent_ng_template_0_Template, 1, 0, \"ng-template\");\r\n        i0.ɵɵelementContainer(1, 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"context\", ctx.context);\r\n    } }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellEditorComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-cell-editor', providers: [GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template>\\n    <ng-content>\\n    </ng-content>\\n</ng-template>\\n\\n<ng-container key=\\\"plugin-cell-editor.tpl.html\\\"\\n              [context]=\\\"context\\\">\\n</ng-container>\\n\" }]\r\n    }], function () { return [{ type: i1.GridPlugin }]; }, { template: [{\r\n            type: ViewChild,\r\n            args: [TemplateRef, { static: true }]\r\n        }], closeEvent: [{\r\n            type: Output,\r\n            args: ['close']\r\n        }] }); })();\n\nclass CellEditorModule {\r\n}\r\nCellEditorModule.ɵfac = function CellEditorModule_Factory(t) { return new (t || CellEditorModule)(); };\r\nCellEditorModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: CellEditorModule });\r\nCellEditorModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellEditorModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    CellEditorComponent,\r\n                ],\r\n                exports: [\r\n                    CellEditorComponent,\r\n                ],\r\n                imports: [\r\n                    TemplateModule,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(CellEditorModule, { declarations: [CellEditorComponent], imports: [TemplateModule], exports: [CellEditorComponent] }); })();\n\nclass CellTooltipDirective {\r\n    constructor(elementRef, renderer) {\r\n        this.elementRef = elementRef;\r\n        this.renderer = renderer;\r\n        this.showDelay = 1000;\r\n        this.job = jobLine(this.showDelay);\r\n    }\r\n    ngOnChanges(e) {\r\n        if (e.showDelay) {\r\n            this.job = jobLine(this.showDelay);\r\n        }\r\n        if (e.host && this.host) {\r\n            const { top, left, height } = this.host.getBoundingClientRect();\r\n            const box = this.getBoxRect(this.host);\r\n            const host = this.elementRef.nativeElement;\r\n            this.job(() => {\r\n                this.renderer.setStyle(host, 'top', top - box.top + height + 'px');\r\n                this.renderer.setStyle(host, 'left', left - box.left + 'px');\r\n                this.renderer.removeClass(host, 'q-grid-hide');\r\n            });\r\n        }\r\n    }\r\n    // TODO: Extract to external function\r\n    getBoxRect(element) {\r\n        let view = element;\r\n        const marker = `${GRID_PREFIX}-box`;\r\n        while (view) {\r\n            if (view.classList && view.classList.contains(marker)) {\r\n                return view.getBoundingClientRect();\r\n            }\r\n            view = view.parentNode;\r\n        }\r\n        return view.getBoundingClientRect();\r\n    }\r\n}\r\nCellTooltipDirective.ɵfac = function CellTooltipDirective_Factory(t) { return new (t || CellTooltipDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2)); };\r\nCellTooltipDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: CellTooltipDirective, selectors: [[\"\", \"q-grid-tooltip\", \"\"]], inputs: { host: \"host\", showDelay: \"showDelay\" }, features: [i0.ɵɵProvidersFeature([GridPlugin, TemplateHostService]), i0.ɵɵNgOnChangesFeature] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellTooltipDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-tooltip]',\r\n                providers: [GridPlugin, TemplateHostService],\r\n            }]\r\n    }], function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }]; }, { host: [{\r\n            type: Input\r\n        }], showDelay: [{\r\n            type: Input\r\n        }] }); })();\n\nfunction CellTooltipComponent_ng_template_1_div_0_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"div\", 2);\r\n    i0.ɵɵelementContainer(1, 3);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r1 = i0.ɵɵnextContext(2);\r\n    i0.ɵɵproperty(\"showDelay\", ctx_r1.showDelay)(\"host\", ctx_r1.cellElement);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"context\", ctx_r1.context);\r\n} }\r\nfunction CellTooltipComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵtemplate(0, CellTooltipComponent_ng_template_1_div_0_Template, 2, 3, \"div\", 1);\r\n} if (rf & 2) {\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.cellElement);\r\n} }\r\nclass CellTooltipComponent {\r\n    constructor(plugin, cd, appRef) {\r\n        this.plugin = plugin;\r\n        this.cd = cd;\r\n        this.appRef = appRef;\r\n        this.context = {\r\n            $implicit: null,\r\n        };\r\n    }\r\n    ngOnInit() {\r\n        const { model, observe, table } = this.plugin;\r\n        observe(model.mouseChanged)\r\n            .subscribe(e => {\r\n            if (e.state.status !== 'move' && e.state.status !== 'leave') {\r\n                return;\r\n            }\r\n            if (e.state.target) {\r\n                const { rowIndex, columnIndex } = e.state.target;\r\n                const domCell = table.body.cell(rowIndex, columnIndex);\r\n                if (domCell.model()) {\r\n                    this.context = {\r\n                        $implicit: domCell.model(),\r\n                    };\r\n                    this.cellElement = domCell.element;\r\n                    this.addTooltipLayer();\r\n                }\r\n            }\r\n            else {\r\n                this.cellElement = null;\r\n            }\r\n            this.invalidate();\r\n        });\r\n    }\r\n    addTooltipLayer() {\r\n        const tooltipLayer = 'tooltip';\r\n        const table = this.plugin.table;\r\n        if (table.view.hasLayer(tooltipLayer)) {\r\n            table.view.removeLayer(tooltipLayer);\r\n        }\r\n        table.view.addLayer(tooltipLayer);\r\n    }\r\n    invalidate() {\r\n        // ToDo: Investigate how to improve.\r\n        this.cd.markForCheck();\r\n        this.cd.detectChanges();\r\n        this.appRef.tick();\r\n    }\r\n}\r\nCellTooltipComponent.ɵfac = function CellTooltipComponent_Factory(t) { return new (t || CellTooltipComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ApplicationRef)); };\r\nCellTooltipComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CellTooltipComponent, selectors: [[\"q-grid-cell-tooltip\"]], inputs: { showDelay: \"showDelay\" }, features: [i0.ɵɵProvidersFeature([GridPlugin, TemplateHostService])], decls: 2, vars: 0, consts: [[\"for\", \"tooltip\"], [\"class\", \"q-grid-cell-tooltip q-grid-hide\", \"q-grid-tooltip\", \"\", 3, \"showDelay\", \"host\", 4, \"ngIf\"], [\"q-grid-tooltip\", \"\", 1, \"q-grid-cell-tooltip\", \"q-grid-hide\", 3, \"showDelay\", \"host\"], [\"key\", \"body-cell-tooltip.tpl.html\", 3, \"context\"]], template: function CellTooltipComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"q-grid-layer\");\r\n        i0.ɵɵtemplate(1, CellTooltipComponent_ng_template_1_Template, 1, 1, \"ng-template\", 0);\r\n        i0.ɵɵelementEnd();\r\n    } }, dependencies: [i1$1.NgIf, i1.TemplateDirective, i1.TemplateCacheDirective, i1.LayerComponent, CellTooltipDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellTooltipComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-cell-tooltip', providers: [GridPlugin, TemplateHostService], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<q-grid-layer>\\n\\t<ng-template for=\\\"tooltip\\\">\\n\\t\\t<div class=\\\"q-grid-cell-tooltip q-grid-hide\\\"\\n\\t\\t\\t*ngIf=\\\"cellElement\\\"\\n\\t\\t\\tq-grid-tooltip\\n\\t\\t\\t[showDelay]=\\\"showDelay\\\"\\n\\t\\t\\t[host]=\\\"cellElement\\\">\\n\\n\\t\\t\\t<ng-container key=\\\"body-cell-tooltip.tpl.html\\\"\\n\\t\\t\\t\\t\\t\\t\\t[context]=\\\"context\\\">\\n\\t\\t\\t</ng-container>\\n\\t\\t</div>\\n\\t</ng-template>\\n</q-grid-layer>\\n\" }]\r\n    }], function () { return [{ type: i1.GridPlugin }, { type: i0.ChangeDetectorRef }, { type: i0.ApplicationRef }]; }, { showDelay: [{\r\n            type: Input\r\n        }] }); })();\n\nclass CellTooltipModule {\r\n}\r\nCellTooltipModule.ɵfac = function CellTooltipModule_Factory(t) { return new (t || CellTooltipModule)(); };\r\nCellTooltipModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: CellTooltipModule });\r\nCellTooltipModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\r\n        TemplateModule,\r\n        LayerModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellTooltipModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    CellTooltipComponent,\r\n                    CellTooltipDirective,\r\n                ],\r\n                exports: [\r\n                    CellTooltipComponent,\r\n                    CellTooltipDirective,\r\n                ],\r\n                imports: [\r\n                    CommonModule,\r\n                    TemplateModule,\r\n                    LayerModule,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(CellTooltipModule, { declarations: [CellTooltipComponent,\r\n        CellTooltipDirective], imports: [CommonModule,\r\n        TemplateModule,\r\n        LayerModule], exports: [CellTooltipComponent,\r\n        CellTooltipDirective] }); })();\n\nclass FocusAfterRender {\r\n    constructor(plugin) {\r\n        if (plugin) {\r\n            new FocusAfterRenderService(plugin);\r\n        }\r\n    }\r\n}\r\nFocusAfterRender.ɵfac = function FocusAfterRender_Factory(t) { return new (t || FocusAfterRender)(i0.ɵɵinject(i1.GridPlugin, 8)); };\r\nFocusAfterRender.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: FocusAfterRender, factory: FocusAfterRender.ɵfac });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FocusAfterRender, [{\r\n        type: Injectable\r\n    }], function () { return [{ type: i1.GridPlugin, decorators: [{\r\n                type: Optional\r\n            }] }]; }, null); })();\n\nconst COLUMN_CHOOSER_NAME = 'qGridColumnChooser';\r\nclass RootContext {\r\n    constructor(ctrl) {\r\n        this.ctrl = ctrl;\r\n    }\r\n    get node() {\r\n        return this.ctrl.treeView;\r\n    }\r\n}\r\nclass ColumnChooserComponent {\r\n    constructor(focusAfterRender, plugin, zone, cd, stateAccessor) {\r\n        this.focusAfterRender = focusAfterRender;\r\n        this.plugin = plugin;\r\n        this.zone = zone;\r\n        this.cd = cd;\r\n        this.stateAccessor = stateAccessor;\r\n        this.ccState = this.stateAccessor.setter(ColumnChooserState);\r\n        this.submitEvent = new EventEmitter();\r\n        this.cancelEvent = new EventEmitter();\r\n    }\r\n    set columnChooserCanAggregate(canAggregate) { this.ccState({ canAggregate }); }\r\n    root() {\r\n        return { $implicit: new RootContext(this.context.$implicit) };\r\n    }\r\n    ngOnChanges() {\r\n        const { model } = this.plugin;\r\n        this.stateAccessor.write(model);\r\n    }\r\n    ngOnInit() {\r\n        const context = {\r\n            name: COLUMN_CHOOSER_NAME,\r\n        };\r\n        const columnChooser = new ColumnChooserPlugin(this.plugin, context);\r\n        columnChooser.submitEvent.on(() => this.submitEvent.emit());\r\n        columnChooser.cancelEvent.on(() => this.cancelEvent.emit());\r\n        columnChooser.dropEvent.on(() => {\r\n            this.cd.markForCheck();\r\n            this.zone.run(noop);\r\n        });\r\n        this.context = { $implicit: columnChooser, plugin: this };\r\n    }\r\n}\r\nColumnChooserComponent.ɵfac = function ColumnChooserComponent_Factory(t) { return new (t || ColumnChooserComponent)(i0.ɵɵdirectiveInject(FocusAfterRender), i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.StateAccessor)); };\r\nColumnChooserComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ColumnChooserComponent, selectors: [[\"q-grid-column-chooser\"]], inputs: { columnChooserCanAggregate: [\"canAggregate\", \"columnChooserCanAggregate\"] }, outputs: { submitEvent: \"submit\", cancelEvent: \"cancel\" }, features: [i0.ɵɵProvidersFeature([\r\n            FocusAfterRender,\r\n            GridPlugin,\r\n            StateAccessor,\r\n        ]), i0.ɵɵNgOnChangesFeature], decls: 1, vars: 1, consts: [[\"key\", \"column-chooser.tpl.html\", 3, \"context\"]], template: function ColumnChooserComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementContainer(0, 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"context\", ctx.context);\r\n    } }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnChooserComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-column-chooser', providers: [\r\n                    FocusAfterRender,\r\n                    GridPlugin,\r\n                    StateAccessor,\r\n                ], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"column-chooser.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\n\" }]\r\n    }], function () { return [{ type: FocusAfterRender }, { type: i1.GridPlugin }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1.StateAccessor }]; }, { submitEvent: [{\r\n            type: Output,\r\n            args: ['submit']\r\n        }], cancelEvent: [{\r\n            type: Output,\r\n            args: ['cancel']\r\n        }], columnChooserCanAggregate: [{\r\n            type: Input,\r\n            args: ['canAggregate']\r\n        }] }); })();\n\nclass ColumnChooserModule {\r\n    constructor(modelBuilder) {\r\n        modelBuilder.register('columnChooser', ColumnChooserState);\r\n    }\r\n}\r\nColumnChooserModule.ɵfac = function ColumnChooserModule_Factory(t) { return new (t || ColumnChooserModule)(i0.ɵɵinject(i1.GridModelBuilder)); };\r\nColumnChooserModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ColumnChooserModule });\r\nColumnChooserModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [FormsModule,\r\n        TemplateModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnChooserModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [\r\n                    FormsModule,\r\n                    TemplateModule,\r\n                ],\r\n                exports: [\r\n                    ColumnChooserComponent,\r\n                ],\r\n                declarations: [\r\n                    ColumnChooserComponent,\r\n                ],\r\n            }]\r\n    }], function () { return [{ type: i1.GridModelBuilder }]; }, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ColumnChooserModule, { declarations: [ColumnChooserComponent], imports: [FormsModule,\r\n        TemplateModule], exports: [ColumnChooserComponent] }); })();\n\nclass ColumnChooserTriggerComponent {\r\n}\r\nColumnChooserTriggerComponent.ɵfac = function ColumnChooserTriggerComponent_Factory(t) { return new (t || ColumnChooserTriggerComponent)(); };\r\nColumnChooserTriggerComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ColumnChooserTriggerComponent, selectors: [[\"q-grid-column-chooser-trigger\"]], decls: 1, vars: 0, consts: [[\"key\", \"plugin-column-chooser-trigger.tpl.html\"]], template: function ColumnChooserTriggerComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementContainer(0, 0);\r\n    } }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnChooserTriggerComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-column-chooser-trigger', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-column-chooser-trigger.tpl.html\\\"></ng-container>\\n\" }]\r\n    }], null, null); })();\n\nclass ColumnChooserTriggerModule {\r\n}\r\nColumnChooserTriggerModule.ɵfac = function ColumnChooserTriggerModule_Factory(t) { return new (t || ColumnChooserTriggerModule)(); };\r\nColumnChooserTriggerModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ColumnChooserTriggerModule });\r\nColumnChooserTriggerModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnChooserTriggerModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [\r\n                    TemplateModule,\r\n                ],\r\n                exports: [\r\n                    ColumnChooserTriggerComponent,\r\n                ],\r\n                declarations: [\r\n                    ColumnChooserTriggerComponent,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ColumnChooserTriggerModule, { declarations: [ColumnChooserTriggerComponent], imports: [TemplateModule], exports: [ColumnChooserTriggerComponent] }); })();\n\nclass ColumnFilterByComponent {\r\n    constructor() {\r\n        this.byBlanksChange = new EventEmitter();\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n    }\r\n    get isBlanks() {\r\n        return this.byBlanks;\r\n    }\r\n    remove(item) {\r\n        this.by.delete(item);\r\n    }\r\n    removeByBlanks() {\r\n        this.byBlanksChange.emit(false);\r\n    }\r\n}\r\nColumnFilterByComponent.ɵfac = function ColumnFilterByComponent_Factory(t) { return new (t || ColumnFilterByComponent)(); };\r\nColumnFilterByComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ColumnFilterByComponent, selectors: [[\"q-grid-column-filter-by\"]], inputs: { column: \"column\", by: \"by\", byBlanks: \"byBlanks\" }, outputs: { byBlanksChange: \"byBlanksChange\" }, decls: 1, vars: 1, consts: [[\"key\", \"plugin-column-filter-by.tpl.html\", 3, \"context\"]], template: function ColumnFilterByComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementContainer(0, 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"context\", ctx.context);\r\n    } }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnFilterByComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-column-filter-by', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-column-filter-by.tpl.html\\\"\\n              [context]=\\\"context\\\">\\n</ng-container>\\n\" }]\r\n    }], null, { column: [{\r\n            type: Input\r\n        }], by: [{\r\n            type: Input\r\n        }], byBlanks: [{\r\n            type: Input\r\n        }], byBlanksChange: [{\r\n            type: Output\r\n        }] }); })();\n\nclass ColumnFilterComponent {\r\n    constructor(focusAfterRender, plugin, vscroll, qgrid, cd, templateService) {\r\n        this.focusAfterRender = focusAfterRender;\r\n        this.plugin = plugin;\r\n        this.vscroll = vscroll;\r\n        this.qgrid = qgrid;\r\n        this.cd = cd;\r\n        this.templateService = templateService;\r\n        this.search = '';\r\n        this.submitEvent = new EventEmitter();\r\n        this.cancelEvent = new EventEmitter();\r\n    }\r\n    get operators() {\r\n        const { model } = this.plugin;\r\n        return model\r\n            .filter()\r\n            .operatorFactory(this.column);\r\n    }\r\n    get hasOperators() {\r\n        return this.operators && this.operators.length > 1;\r\n    }\r\n    ngOnInit() {\r\n        const { model } = this.plugin;\r\n        const { column } = this;\r\n        const context = { column };\r\n        const columnFilter = model.resolve(ColumnFilterState);\r\n        const columnFilterPlugin = new ColumnFilterPlugin(this.plugin, context);\r\n        columnFilterPlugin.submitEvent.on(() => this.submitEvent.emit());\r\n        columnFilterPlugin.cancelEvent.on(() => this.cancelEvent.emit());\r\n        const vscrollContext = this.vscroll.context({\r\n            emit: f => {\r\n                f();\r\n                this.cd.markForCheck();\r\n                this.cd.detectChanges();\r\n            },\r\n            threshold: columnFilter.state().threshold,\r\n            fetch: (skip, take, d) => {\r\n                const filterState = model.filter();\r\n                const service = this.qgrid.service(model);\r\n                // We need to close items property for correct reset behavior\r\n                const items = columnFilterPlugin.items;\r\n                if (column.key && filterState.fetch !== this.qgrid.noop) {\r\n                    const cancelBusy = service.busy();\r\n                    const select = filterState\r\n                        .fetch(column.key, {\r\n                        skip,\r\n                        take,\r\n                        value: columnFilterPlugin.getValue,\r\n                        search: '' + this.search,\r\n                        // @deprecated\r\n                        filter: '' + this.search,\r\n                    });\r\n                    const fetch = new Fetch(select);\r\n                    fetch.run();\r\n                    fetch.busy\r\n                        .then(page => {\r\n                        items.push(...page);\r\n                        d.resolve(items.length + (page.length === take ? take : 0));\r\n                        cancelBusy();\r\n                    })\r\n                        .catch(cancelBusy);\r\n                }\r\n                else {\r\n                    const cancelBusy = service.busy();\r\n                    const isBlank = model.filter().assertFactory().isNull;\r\n                    try {\r\n                        if (!items.length) {\r\n                            const source = model[columnFilter.state().source];\r\n                            Guard.notNull(source, 'source');\r\n                            const sourceState = source();\r\n                            Guard.hasProperty(sourceState, 'rows');\r\n                            let values;\r\n                            if (columnFilterPlugin.column.type === 'array') {\r\n                                values = flatten(sourceState.rows.map(row => getValue$1(row, column)));\r\n                            }\r\n                            else {\r\n                                values = sourceState.rows.map(columnFilterPlugin.getValue);\r\n                            }\r\n                            const uniqValues = uniq(values);\r\n                            const notBlankValues = uniqValues.filter(x => !isBlank(x));\r\n                            // TODO: improve search also\r\n                            const search = ('' + this.search).toLowerCase();\r\n                            const filteredItems = search\r\n                                ? notBlankValues.filter(x => ('' + x).toLowerCase().indexOf(search) >= 0)\r\n                                : notBlankValues;\r\n                            filteredItems.sort(columnFilterPlugin.column.compare);\r\n                            columnFilterPlugin.items = filteredItems;\r\n                            columnFilterPlugin.hasBlanks =\r\n                                notBlankValues.length !== uniqValues.length &&\r\n                                    (!search || 'blanks'.indexOf(search.toLowerCase()) >= 0);\r\n                        }\r\n                        d.resolve(columnFilterPlugin.items.length);\r\n                    }\r\n                    finally {\r\n                        cancelBusy();\r\n                    }\r\n                }\r\n            },\r\n        });\r\n        this.vscrollContext = vscrollContext;\r\n        this.context = {\r\n            $implicit: columnFilterPlugin,\r\n            plugin: this,\r\n            vscroll: vscrollContext,\r\n        };\r\n    }\r\n    reset() {\r\n        this.context.$implicit.items = [];\r\n        this.vscrollContext.container.reset();\r\n    }\r\n    clear() {\r\n        this.search = '';\r\n        this.context.$implicit.reset.execute();\r\n    }\r\n    getOperatorTemplateKey(op) {\r\n        const keys = this.buildTemplateKeys(op);\r\n        for (const key of keys) {\r\n            if (this.templateService.find(key)) {\r\n                return key;\r\n            }\r\n        }\r\n        throw new GridError('column-filter.component', `Column filter template for operator ${op} is not found`);\r\n    }\r\n    buildTemplateKeys(op) {\r\n        const { key, type } = this.column;\r\n        const PREFIX = 'plugin-column-filter';\r\n        const keys = [\r\n            `${PREFIX}-${type}-the-${key}-${op}.tpl.html`,\r\n            `${PREFIX}-the-${key}-${op}.tpl.html`,\r\n            `${PREFIX}-the-${key}.tpl.html`,\r\n            `${PREFIX}-${type}-${op}.tpl.html`,\r\n            `${PREFIX}-${type}.tpl.html`,\r\n            `${PREFIX}-${op}.tpl.html`,\r\n        ];\r\n        switch (op) {\r\n            case 'isEmpty':\r\n            case 'isNotEmpty':\r\n            case 'isNull':\r\n            case 'isNotNull': {\r\n                keys.push(`${PREFIX}-${type}-the-${key}-label.tpl.html`);\r\n                keys.push(`${PREFIX}-${type}-label.tpl.html`);\r\n                keys.push(`${PREFIX}-label.tpl.html`);\r\n                break;\r\n            }\r\n            case 'like':\r\n            case 'notLike':\r\n            case 'startsWith':\r\n            case 'endsWith':\r\n            case 'lessThan':\r\n            case 'lessThanOrEquals':\r\n            case 'greaterThan':\r\n            case 'greaterThanOrEquals': {\r\n                keys.push(`${PREFIX}-${type}-the-${key}-input.tpl.html`);\r\n                keys.push(`${PREFIX}-${type}-input.tpl.html`);\r\n                keys.push(`${PREFIX}-input.tpl.html`);\r\n                break;\r\n            }\r\n        }\r\n        keys.push(`${PREFIX}-contains.tpl.html`);\r\n        return keys;\r\n    }\r\n}\r\nColumnFilterComponent.ɵfac = function ColumnFilterComponent_Factory(t) { return new (t || ColumnFilterComponent)(i0.ɵɵdirectiveInject(FocusAfterRender), i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i1.VscrollService), i0.ɵɵdirectiveInject(i1.Grid), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.TemplateService)); };\r\nColumnFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ColumnFilterComponent, selectors: [[\"q-grid-column-filter\"]], inputs: { column: \"column\", search: \"search\" }, outputs: { submitEvent: \"submit\", cancelEvent: \"cancel\" }, features: [i0.ɵɵProvidersFeature([FocusAfterRender, GridPlugin])], decls: 1, vars: 1, consts: [[\"key\", \"plugin-column-filter.tpl.html\", 3, \"context\"]], template: function ColumnFilterComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementContainer(0, 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"context\", ctx.context);\r\n    } }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnFilterComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-column-filter', providers: [FocusAfterRender, GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-column-filter.tpl.html\\\"\\n              [context]=\\\"context\\\">\\n</ng-container>\\n\" }]\r\n    }], function () { return [{ type: FocusAfterRender }, { type: i1.GridPlugin }, { type: i1.VscrollService }, { type: i1.Grid }, { type: i0.ChangeDetectorRef }, { type: i1.TemplateService }]; }, { column: [{\r\n            type: Input\r\n        }], search: [{\r\n            type: Input\r\n        }], submitEvent: [{\r\n            type: Output,\r\n            args: ['submit']\r\n        }], cancelEvent: [{\r\n            type: Output,\r\n            args: ['cancel']\r\n        }] }); })();\n\nclass ColumnFilterItemListDirective {\r\n    constructor(cellService) {\r\n        this.cellService = cellService;\r\n    }\r\n}\r\nColumnFilterItemListDirective.ɵfac = function ColumnFilterItemListDirective_Factory(t) { return new (t || ColumnFilterItemListDirective)(i0.ɵɵdirectiveInject(i1.CellTemplateService)); };\r\nColumnFilterItemListDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: ColumnFilterItemListDirective, selectors: [[\"\", \"q-grid-column-filter-item-list\", \"\"]], inputs: { column: [\"q-grid-column-filter-item-list\", \"column\"], search: [\"q-grid-column-filter-search\", \"search\"] }, features: [i0.ɵɵProvidersFeature([CellTemplateService])] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnFilterItemListDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-column-filter-item-list]',\r\n                providers: [CellTemplateService],\r\n            }]\r\n    }], function () { return [{ type: i1.CellTemplateService }]; }, { column: [{\r\n            type: Input,\r\n            args: ['q-grid-column-filter-item-list']\r\n        }], search: [{\r\n            type: Input,\r\n            args: ['q-grid-column-filter-search']\r\n        }] }); })();\n\nclass ColumnFilterItemDirective {\r\n    constructor(viewContainerRef, itemList) {\r\n        this.viewContainerRef = viewContainerRef;\r\n        this.itemList = itemList;\r\n        this.$implicit = this;\r\n    }\r\n    ngOnInit() {\r\n        const itemList = this.itemList;\r\n        const link = itemList.cellService.build('column-filter', itemList.column);\r\n        link(this.viewContainerRef, this);\r\n    }\r\n}\r\nColumnFilterItemDirective.ɵfac = function ColumnFilterItemDirective_Factory(t) { return new (t || ColumnFilterItemDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(ColumnFilterItemListDirective)); };\r\nColumnFilterItemDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: ColumnFilterItemDirective, selectors: [[\"\", \"q-grid-column-filter-item\", \"\"]], inputs: { value: [\"q-grid-column-filter-item\", \"value\"] } });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnFilterItemDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-column-filter-item]',\r\n            }]\r\n    }], function () { return [{ type: i0.ViewContainerRef }, { type: ColumnFilterItemListDirective }]; }, { value: [{\r\n            type: Input,\r\n            args: ['q-grid-column-filter-item']\r\n        }] }); })();\n\nclass ColumnFilterTriggerComponent {\r\n    constructor(plugin, element) {\r\n        this.plugin = plugin;\r\n        this.element = element;\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n    }\r\n    ngOnInit() {\r\n        const { model, observeReply } = this.plugin;\r\n        observeReply(model.filterChanged)\r\n            .subscribe(e => {\r\n            if (e.hasChanges('by')) {\r\n                if (this.plugin.view.filter.has(this.column)) {\r\n                    this.element.nativeElement.classList.add(`${GRID_PREFIX}-active`);\r\n                }\r\n                else {\r\n                    this.element.nativeElement.classList.remove(`${GRID_PREFIX}-active`);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nColumnFilterTriggerComponent.ɵfac = function ColumnFilterTriggerComponent_Factory(t) { return new (t || ColumnFilterTriggerComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nColumnFilterTriggerComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ColumnFilterTriggerComponent, selectors: [[\"q-grid-column-filter-trigger\"]], inputs: { column: \"column\" }, features: [i0.ɵɵProvidersFeature([GridPlugin])], decls: 1, vars: 1, consts: [[\"key\", \"plugin-column-filter-trigger.tpl.html\", 3, \"context\"]], template: function ColumnFilterTriggerComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementContainer(0, 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"context\", ctx.context);\r\n    } }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnFilterTriggerComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-column-filter-trigger', providers: [GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-column-filter-trigger.tpl.html\\\"\\n              [context]=\\\"context\\\">\\n</ng-container>\\n\" }]\r\n    }], function () { return [{ type: i1.GridPlugin }, { type: i0.ElementRef }]; }, { column: [{\r\n            type: Input\r\n        }] }); })();\n\nclass ColumnFilterModule {\r\n    constructor(modelBuilder) {\r\n        modelBuilder.register('columnFilter', ColumnFilterState);\r\n    }\r\n}\r\nColumnFilterModule.ɵfac = function ColumnFilterModule_Factory(t) { return new (t || ColumnFilterModule)(i0.ɵɵinject(i1.GridModelBuilder)); };\r\nColumnFilterModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ColumnFilterModule });\r\nColumnFilterModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnFilterModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    ColumnFilterComponent,\r\n                    ColumnFilterTriggerComponent,\r\n                    ColumnFilterByComponent,\r\n                    ColumnFilterItemListDirective,\r\n                    ColumnFilterItemDirective,\r\n                ],\r\n                exports: [\r\n                    ColumnFilterComponent,\r\n                    ColumnFilterTriggerComponent,\r\n                    ColumnFilterByComponent,\r\n                    ColumnFilterItemListDirective,\r\n                    ColumnFilterItemDirective,\r\n                ],\r\n                imports: [\r\n                    TemplateModule,\r\n                ],\r\n            }]\r\n    }], function () { return [{ type: i1.GridModelBuilder }]; }, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ColumnFilterModule, { declarations: [ColumnFilterComponent,\r\n        ColumnFilterTriggerComponent,\r\n        ColumnFilterByComponent,\r\n        ColumnFilterItemListDirective,\r\n        ColumnFilterItemDirective], imports: [TemplateModule], exports: [ColumnFilterComponent,\r\n        ColumnFilterTriggerComponent,\r\n        ColumnFilterByComponent,\r\n        ColumnFilterItemListDirective,\r\n        ColumnFilterItemDirective] }); })();\n\nfunction ColumnSortComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵprojection(0);\r\n} }\r\nconst _c0$5 = [\"*\"];\r\nclass ColumnSortComponent {\r\n    constructor(plugin, elementRef, zone) {\r\n        this.plugin = plugin;\r\n        this.elementRef = elementRef;\r\n        this.zone = zone;\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n    }\r\n    ngAfterViewInit() {\r\n        const { nativeElement } = this.elementRef;\r\n        const iconAsc = nativeElement.querySelector('.q-grid-asc');\r\n        const iconDesc = nativeElement.querySelector('.q-grid-desc');\r\n        const columnSort = new ColumnSortPlugin(this.plugin, {\r\n            element: nativeElement,\r\n            column: this.column,\r\n            iconAsc,\r\n            iconDesc,\r\n        });\r\n        const listener = new EventListener(nativeElement, new EventManager(this));\r\n        listener.on('click', () => {\r\n            if (columnSort.click()) {\r\n                new FocusAfterRender(this.plugin);\r\n            }\r\n        });\r\n        this.zone.runOutsideAngular(() => listener.on('mouseleave', () => columnSort.mouseLeave()));\r\n    }\r\n}\r\nColumnSortComponent.ɵfac = function ColumnSortComponent_Factory(t) { return new (t || ColumnSortComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone)); };\r\nColumnSortComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ColumnSortComponent, selectors: [[\"q-grid-column-sort\"]], viewQuery: function ColumnSortComponent_Query(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵviewQuery(TemplateRef, 7);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\r\n    } }, inputs: { column: \"column\" }, features: [i0.ɵɵProvidersFeature([GridPlugin])], ngContentSelectors: _c0$5, decls: 2, vars: 1, consts: [[\"key\", \"plugin-column-sort.tpl.html\", 3, \"context\"]], template: function ColumnSortComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵprojectionDef();\r\n        i0.ɵɵtemplate(0, ColumnSortComponent_ng_template_0_Template, 1, 0, \"ng-template\");\r\n        i0.ɵɵelementContainer(1, 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"context\", ctx.context);\r\n    } }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnSortComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-column-sort', providers: [GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template>\\n    <ng-content></ng-content>\\n</ng-template>\\n\\n<ng-container key=\\\"plugin-column-sort.tpl.html\\\"\\n              [context]=\\\"context\\\">\\n</ng-container>\\n\" }]\r\n    }], function () { return [{ type: i1.GridPlugin }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, { template: [{\r\n            type: ViewChild,\r\n            args: [TemplateRef, { static: true }]\r\n        }], column: [{\r\n            type: Input\r\n        }] }); })();\n\nclass ColumnSortModule {\r\n}\r\nColumnSortModule.ɵfac = function ColumnSortModule_Factory(t) { return new (t || ColumnSortModule)(); };\r\nColumnSortModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ColumnSortModule });\r\nColumnSortModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnSortModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    ColumnSortComponent,\r\n                ],\r\n                exports: [\r\n                    ColumnSortComponent,\r\n                ],\r\n                imports: [\r\n                    TemplateModule,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ColumnSortModule, { declarations: [ColumnSortComponent], imports: [TemplateModule], exports: [ColumnSortComponent] }); })();\n\n/* eslint-disable @angular-eslint/no-conflicting-lifecycle */\r\nclass ZoneCommandManager {\r\n    constructor(run, manager, commandArg) {\r\n        this.run = run;\r\n        this.manager = manager;\r\n        this.commandArg = commandArg;\r\n    }\r\n    invoke(commands) {\r\n        return this.run(() => this.manager.invoke(commands, this.commandArg, 'command.directive'));\r\n    }\r\n    filter(commands) {\r\n        return this.manager.filter(commands);\r\n    }\r\n}\r\nclass CommandDirective {\r\n    constructor(disposable, elementRef, zone, plugin) {\r\n        this.disposable = disposable;\r\n        this.elementRef = elementRef;\r\n        this.zone = zone;\r\n        this.plugin = plugin;\r\n        this.isAfterViewInit = false;\r\n        this.commandEvent = 'click';\r\n        this.host = 'grid';\r\n        this.commandExecute = new EventEmitter();\r\n    }\r\n    ngOnInit() {\r\n        const { nativeElement } = this.elementRef;\r\n        this.aroundZone(() => nativeElement\r\n            .addEventListener(this.commandEvent, e => this.execute(e)));\r\n    }\r\n    ngDoCheck() {\r\n        if (!this.isAfterViewInit) {\r\n            return;\r\n        }\r\n        if (this.command) {\r\n            this.updateState();\r\n        }\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes.command) {\r\n            this.unregister();\r\n            if (this.command) {\r\n                this.register();\r\n            }\r\n        }\r\n    }\r\n    ngAfterViewInit() {\r\n        if (this.command) {\r\n            this.updateState();\r\n        }\r\n        this.isAfterViewInit = true;\r\n    }\r\n    register() {\r\n        const { command, commandArg } = this;\r\n        this.disposable.add(command\r\n            .canExecuteCheck\r\n            .subscribe(() => this.updateState()));\r\n        if (this.useCommandShortcut && command.shortcut) {\r\n            if (this.plugin && this.host === 'grid') {\r\n                const { model } = this.plugin;\r\n                const { shortcut, manager } = model.action();\r\n                const zoneManager = new ZoneCommandManager(f => {\r\n                    const result = this.aroundZone(f);\r\n                    this.afterExecute();\r\n                    return result;\r\n                }, manager, commandArg);\r\n                this.disposable.add(shortcut.register(zoneManager, [command]));\r\n            }\r\n            else {\r\n                const manager = new CommandManager(f => {\r\n                    this.aroundZone(f);\r\n                    this.afterExecute();\r\n                }, commandArg);\r\n                const shortcut = new Shortcut(new ShortcutDispatcher());\r\n                const keyDown = e => {\r\n                    shortcut.keyDown(e);\r\n                };\r\n                document.addEventListener('keydown', keyDown);\r\n                this.disposable.add(() => document.removeEventListener('keydown', keyDown));\r\n                this.disposable.add(shortcut.register(manager, [command]));\r\n            }\r\n        }\r\n    }\r\n    execute(e) {\r\n        const { command, commandArg } = this;\r\n        const result = command.execute(commandArg) === true;\r\n        if (result && e) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        }\r\n        this.afterExecute();\r\n    }\r\n    afterExecute() {\r\n        const { commandArg } = this;\r\n        this.commandExecute.emit(commandArg);\r\n        this.command.canExecuteCheck.next();\r\n    }\r\n    unregister() {\r\n        this.disposable.finalize();\r\n    }\r\n    updateState() {\r\n        const nativeElement = this.elementRef.nativeElement;\r\n        if (!nativeElement.setAttribute) {\r\n            return;\r\n        }\r\n        const { command, commandArg } = this;\r\n        const canExecute = command.canExecute(commandArg) === true;\r\n        if (canExecute) {\r\n            if (nativeElement.hasAttribute('disabled')) {\r\n                nativeElement.removeAttribute('disabled');\r\n                nativeElement.classList.remove('q-grid-disabled');\r\n            }\r\n        }\r\n        else {\r\n            if (!nativeElement.hasAttribute('!disabled')) {\r\n                nativeElement.setAttribute('disabled', 'true');\r\n                nativeElement.classList.add('q-grid-disabled');\r\n            }\r\n        }\r\n    }\r\n    aroundZone(f) {\r\n        if (this.useZone) {\r\n            return this.zone.run(f);\r\n        }\r\n        return this.zone.runOutsideAngular(f);\r\n    }\r\n}\r\nCommandDirective.ɵfac = function CommandDirective_Factory(t) { return new (t || CommandDirective)(i0.ɵɵdirectiveInject(i1.Disposable), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.GridPlugin, 8)); };\r\nCommandDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: CommandDirective, selectors: [[\"\", \"q-grid-command\", \"\"]], inputs: { command: [\"q-grid-command\", \"command\"], commandArg: [\"q-grid-command-arg\", \"commandArg\"], useCommandShortcut: [\"q-grid-command-use-shortcut\", \"useCommandShortcut\"], commandEvent: [\"q-grid-command-event\", \"commandEvent\"], useZone: [\"q-grid-command-use-zone\", \"useZone\"], host: [\"q-grid-command-host\", \"host\"] }, outputs: { commandExecute: \"q-grid-command-execute\" }, features: [i0.ɵɵProvidersFeature([Disposable]), i0.ɵɵNgOnChangesFeature] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CommandDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-command]',\r\n                providers: [Disposable],\r\n            }]\r\n    }], function () { return [{ type: i1.Disposable }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i1.GridPlugin, decorators: [{\r\n                type: Optional\r\n            }] }]; }, { command: [{\r\n            type: Input,\r\n            args: ['q-grid-command']\r\n        }], commandArg: [{\r\n            type: Input,\r\n            args: ['q-grid-command-arg']\r\n        }], useCommandShortcut: [{\r\n            type: Input,\r\n            args: ['q-grid-command-use-shortcut']\r\n        }], commandEvent: [{\r\n            type: Input,\r\n            args: ['q-grid-command-event']\r\n        }], useZone: [{\r\n            type: Input,\r\n            args: ['q-grid-command-use-zone']\r\n        }], host: [{\r\n            type: Input,\r\n            args: ['q-grid-command-host']\r\n        }], commandExecute: [{\r\n            type: Output,\r\n            args: ['q-grid-command-execute']\r\n        }] }); })();\n\nclass CommandModule {\r\n}\r\nCommandModule.ɵfac = function CommandModule_Factory(t) { return new (t || CommandModule)(); };\r\nCommandModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: CommandModule });\r\nCommandModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CommandModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    CommandDirective,\r\n                ],\r\n                exports: [\r\n                    CommandDirective,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(CommandModule, { declarations: [CommandDirective], exports: [CommandDirective] }); })();\n\nclass ConvertPipe {\r\n    constructor() { }\r\n    transform(value, type) {\r\n        const parse = parseFactory(type);\r\n        const result = parse(value);\r\n        return result === null ? value : result;\r\n    }\r\n}\r\nConvertPipe.ɵfac = function ConvertPipe_Factory(t) { return new (t || ConvertPipe)(); };\r\nConvertPipe.ɵpipe = /*@__PURE__*/ i0.ɵɵdefinePipe({ name: \"qGridConvert\", type: ConvertPipe, pure: true });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ConvertPipe, [{\r\n        type: Pipe,\r\n        args: [{\r\n                name: 'qGridConvert',\r\n            }]\r\n    }], function () { return []; }, null); })();\n\nclass CurrencyPipe {\r\n    constructor(pipe) {\r\n        this.pipe = pipe;\r\n    }\r\n    transform(value, currencyCode, display, digitsInfo, locale) {\r\n        try {\r\n            return this.pipe.transform(value, currencyCode, display, digitsInfo, locale);\r\n        }\r\n        catch (ex) {\r\n            Log.warn('DatePipe', ex.message);\r\n            return value;\r\n        }\r\n    }\r\n}\r\nCurrencyPipe.ɵfac = function CurrencyPipe_Factory(t) { return new (t || CurrencyPipe)(i0.ɵɵdirectiveInject(i1$1.CurrencyPipe, 16)); };\r\nCurrencyPipe.ɵpipe = /*@__PURE__*/ i0.ɵɵdefinePipe({ name: \"qGridCurrency\", type: CurrencyPipe, pure: true });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CurrencyPipe, [{\r\n        type: Pipe,\r\n        args: [{\r\n                name: 'qGridCurrency',\r\n            }]\r\n    }], function () { return [{ type: i1$1.CurrencyPipe }]; }, null); })();\n\nclass DataManipulationComponent {\r\n    constructor(plugin, stateAccessor) {\r\n        this.plugin = plugin;\r\n        this.stateAccessor = stateAccessor;\r\n        this.dmState = this.stateAccessor.setter(DataManipulationState);\r\n    }\r\n    set dataManipulationRowFactory(rowFactory) { this.dmState({ rowFactory }); }\r\n    ngOnChanges() {\r\n        const { model } = this.plugin;\r\n        this.stateAccessor.write(model);\r\n    }\r\n    ngOnInit() {\r\n        const dm = new DataManipulationPlugin(this.plugin);\r\n        this.context = { $implicit: dm };\r\n    }\r\n}\r\nDataManipulationComponent.ɵfac = function DataManipulationComponent_Factory(t) { return new (t || DataManipulationComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i1.StateAccessor)); };\r\nDataManipulationComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DataManipulationComponent, selectors: [[\"q-grid-data-manipulation\"]], inputs: { dataManipulationRowFactory: [\"rowFactory\", \"dataManipulationRowFactory\"] }, features: [i0.ɵɵProvidersFeature([GridPlugin, StateAccessor]), i0.ɵɵNgOnChangesFeature], decls: 0, vars: 0, template: function DataManipulationComponent_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DataManipulationComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'q-grid-data-manipulation',\r\n                template: '',\r\n                providers: [GridPlugin, StateAccessor],\r\n                changeDetection: ChangeDetectionStrategy.OnPush,\r\n            }]\r\n    }], function () { return [{ type: i1.GridPlugin }, { type: i1.StateAccessor }]; }, { dataManipulationRowFactory: [{\r\n            type: Input,\r\n            args: ['rowFactory']\r\n        }] }); })();\n\nclass DataManipulationModule {\r\n    constructor(modelBuilder) {\r\n        modelBuilder\r\n            .register('dataManipulation', DataManipulationState);\r\n    }\r\n}\r\nDataManipulationModule.ɵfac = function DataManipulationModule_Factory(t) { return new (t || DataManipulationModule)(i0.ɵɵinject(i1.GridModelBuilder)); };\r\nDataManipulationModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: DataManipulationModule });\r\nDataManipulationModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DataManipulationModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    DataManipulationComponent,\r\n                ],\r\n                exports: [\r\n                    DataManipulationComponent,\r\n                ],\r\n            }]\r\n    }], function () { return [{ type: i1.GridModelBuilder }]; }, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(DataManipulationModule, { declarations: [DataManipulationComponent], exports: [DataManipulationComponent] }); })();\n\nclass DataProviderComponent {\r\n    constructor(plugin, zone) {\r\n        this.plugin = plugin;\r\n        this.zone = zone;\r\n        this.requestRows = new EventEmitter();\r\n    }\r\n    set rows(value) {\r\n        if (Array.isArray(value)) {\r\n            const next = this.next;\r\n            if (next) {\r\n                this.next = null;\r\n                next(value);\r\n            }\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        this.plugin.model.data({\r\n            pipe: [\r\n                (data, context, next) => this.zone.run(() => {\r\n                    this.next = next;\r\n                    this.requestRows.emit(context.model);\r\n                }),\r\n                ...PipeUnit.view,\r\n            ],\r\n        }, { source: 'data.provider' });\r\n    }\r\n}\r\nDataProviderComponent.ɵfac = function DataProviderComponent_Factory(t) { return new (t || DataProviderComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i0.NgZone)); };\r\nDataProviderComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DataProviderComponent, selectors: [[\"q-grid-data-provider\"]], inputs: { rows: \"rows\" }, outputs: { requestRows: \"requestRows\" }, features: [i0.ɵɵProvidersFeature([GridPlugin])], decls: 0, vars: 0, template: function DataProviderComponent_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DataProviderComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'q-grid-data-provider',\r\n                template: '',\r\n                providers: [GridPlugin],\r\n                changeDetection: ChangeDetectionStrategy.OnPush,\r\n            }]\r\n    }], function () { return [{ type: i1.GridPlugin }, { type: i0.NgZone }]; }, { requestRows: [{\r\n            type: Output\r\n        }], rows: [{\r\n            type: Input,\r\n            args: ['rows']\r\n        }] }); })();\n\nclass DataProviderModule {\r\n}\r\nDataProviderModule.ɵfac = function DataProviderModule_Factory(t) { return new (t || DataProviderModule)(); };\r\nDataProviderModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: DataProviderModule });\r\nDataProviderModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DataProviderModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    DataProviderComponent,\r\n                ],\r\n                exports: [\r\n                    DataProviderComponent,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(DataProviderModule, { declarations: [DataProviderComponent], exports: [DataProviderComponent] }); })();\n\nconst DELIMITER = '/';\r\nclass DateMaskDirective {\r\n    constructor(elementRef) {\r\n        this.elementRef = elementRef;\r\n    }\r\n    keyUp(e) {\r\n        if (!this.mask) {\r\n            return;\r\n        }\r\n        const input = this.elementRef.nativeElement;\r\n        const value = input.value || '';\r\n        const maskChar = this.mask[value.length];\r\n        if (!maskChar) {\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        const code = Keyboard.translate(e.keyCode);\r\n        if (this.isDigit(code)) {\r\n            if (maskChar === DELIMITER) {\r\n                e.preventDefault();\r\n                input.value += DELIMITER + code;\r\n                return;\r\n            }\r\n            const nextMaskChar = this.mask[input.value.length + 1];\r\n            if (nextMaskChar === DELIMITER) {\r\n                e.preventDefault();\r\n                input.value += code + DELIMITER;\r\n            }\r\n        }\r\n    }\r\n    isDigit(char) {\r\n        return /^[0-9]$/i.test(char);\r\n    }\r\n}\r\nDateMaskDirective.ɵfac = function DateMaskDirective_Factory(t) { return new (t || DateMaskDirective)(i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nDateMaskDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: DateMaskDirective, selectors: [[\"\", \"q-grid-date-mask\", \"\"]], hostBindings: function DateMaskDirective_HostBindings(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵlistener(\"keypress\", function DateMaskDirective_keypress_HostBindingHandler($event) { return ctx.keyUp($event); });\r\n    } }, inputs: { mask: [\"q-grid-date-mask\", \"mask\"] } });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DateMaskDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-date-mask]',\r\n            }]\r\n    }], function () { return [{ type: i0.ElementRef }]; }, { mask: [{\r\n            type: Input,\r\n            args: ['q-grid-date-mask']\r\n        }], keyUp: [{\r\n            type: HostListener,\r\n            args: ['keypress', ['$event']]\r\n        }] }); })();\n\nclass DateService {\r\n    constructor() {\r\n        this.toDateTime = parseFactory('datetime');\r\n    }\r\n    parseDateTime(dateOrText, format) {\r\n        if (!dateOrText) {\r\n            return null;\r\n        }\r\n        if (isDate(dateOrText)) {\r\n            return dateOrText;\r\n        }\r\n        if (format) {\r\n            const simpleFormat = format.replace(/[^A-Za-z]/g, '');\r\n            const justDigitsValue = dateOrText.replace(/[^0-9]/g, '');\r\n            return this.parseDateText(justDigitsValue, simpleFormat);\r\n        }\r\n        return this.toDateTime(dateOrText);\r\n    }\r\n    isValid(dateOrText, format) {\r\n        if (!dateOrText) {\r\n            return true;\r\n        }\r\n        const result = this.parseDateTime(dateOrText, format);\r\n        return result && !isNaN(result.getTime());\r\n    }\r\n    parseDateText(text, format) {\r\n        let year = '';\r\n        let month = '';\r\n        let day = '';\r\n        let cursor = 0;\r\n        for (const formatKey of format) {\r\n            switch (formatKey) {\r\n                case 'y': {\r\n                    const digit = text[cursor++];\r\n                    if (digit) {\r\n                        year += digit;\r\n                    }\r\n                    break;\r\n                }\r\n                case 'M': {\r\n                    const digit = text[cursor++];\r\n                    if (digit) {\r\n                        month += digit;\r\n                    }\r\n                    break;\r\n                }\r\n                case 'd': {\r\n                    const digit = text[cursor++];\r\n                    if (digit) {\r\n                        day += digit;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (year.length < 4 || month.length < 1 || day.length < 1) {\r\n            return null;\r\n        }\r\n        month = month.length === 1 ? '0' + month : month;\r\n        day = day.length === 1 ? '0' + day : day;\r\n        return this.toDateTime(`${year}-${month}-${day}`);\r\n    }\r\n}\r\nDateService.ɵfac = function DateService_Factory(t) { return new (t || DateService)(); };\r\nDateService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: DateService, factory: DateService.ɵfac });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DateService, [{\r\n        type: Injectable\r\n    }], null, null); })();\n\nclass DateDirective {\r\n    constructor(templateRef, viewContainerRef, dateService) {\r\n        this.dateService = dateService;\r\n        this.toMidnight = parseFactory('date');\r\n        viewContainerRef.createEmbeddedView(templateRef, { $implicit: this });\r\n    }\r\n    isValid(dateOrText, format) {\r\n        return this.dateService.isValid(dateOrText, format);\r\n    }\r\n    dateLow(value, format) {\r\n        const date = this.dateService.parseDateTime(value, format);\r\n        if (date) {\r\n            return this.toMidnight(date);\r\n        }\r\n        return value;\r\n    }\r\n    datetime(previous, current, format) {\r\n        const previousDate = this.dateService.parseDateTime(previous, format);\r\n        const currentDate = this.dateService.parseDateTime(current, format);\r\n        if (previousDate && currentDate) {\r\n            const midnight = this.toMidnight(currentDate);\r\n            const sameHours = new Date(midnight.getFullYear(), midnight.getMonth(), midnight.getDate(), previousDate.getHours(), previousDate.getMinutes(), previousDate.getSeconds(), previousDate.getMilliseconds());\r\n            return sameHours;\r\n        }\r\n        if (currentDate) {\r\n            return this.toMidnight(currentDate);\r\n        }\r\n        return current;\r\n    }\r\n}\r\nDateDirective.ɵfac = function DateDirective_Factory(t) { return new (t || DateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(DateService)); };\r\nDateDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: DateDirective, selectors: [[\"\", \"q-grid-date\", \"\"]] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DateDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-date]',\r\n            }]\r\n    }], function () { return [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }, { type: DateService }]; }, null); })();\n\nclass DateModule {\r\n}\r\nDateModule.ɵfac = function DateModule_Factory(t) { return new (t || DateModule)(); };\r\nDateModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: DateModule });\r\nDateModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ providers: [\r\n        DateService,\r\n    ] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DateModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    DateDirective,\r\n                    DateMaskDirective,\r\n                ],\r\n                exports: [\r\n                    DateDirective,\r\n                    DateMaskDirective,\r\n                ],\r\n                providers: [\r\n                    DateService,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(DateModule, { declarations: [DateDirective,\r\n        DateMaskDirective], exports: [DateDirective,\r\n        DateMaskDirective] }); })();\n\nclass DatePipe {\r\n    constructor(pipe) {\r\n        this.pipe = pipe;\r\n    }\r\n    transform(value, format, timezone, locale) {\r\n        try {\r\n            // The value expression: a Date object, a number (milliseconds since UTC epoch), or an ISO string\r\n            return this.pipe.transform(value, format, timezone, locale);\r\n        }\r\n        catch (ex) {\r\n            Log.warn('DatePipe', ex.message);\r\n            return value;\r\n        }\r\n    }\r\n}\r\nDatePipe.ɵfac = function DatePipe_Factory(t) { return new (t || DatePipe)(i0.ɵɵdirectiveInject(i1$1.DatePipe, 16)); };\r\nDatePipe.ɵpipe = /*@__PURE__*/ i0.ɵɵdefinePipe({ name: \"qGridDate\", type: DatePipe, pure: true });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DatePipe, [{\r\n        type: Pipe,\r\n        args: [{\r\n                name: 'qGridDate',\r\n            }]\r\n    }], function () { return [{ type: i1$1.DatePipe }]; }, null); })();\n\nfunction evaluateFactory(expression, args) {\r\n    return visit;\r\n    function visit(value) {\r\n        if (isArray(value)) {\r\n            return visitArray(value);\r\n        }\r\n        else if (isFunction(value)) {\r\n            return visitFunction(value);\r\n        }\r\n        else if (isObject(value)) {\r\n            return visitObject(value);\r\n        }\r\n        return value;\r\n    }\r\n    function visitObject(inst) {\r\n        const keys = Object.keys(inst);\r\n        const length = keys.length;\r\n        const result = {};\r\n        for (let i = 0; i < length; i++) {\r\n            const key = keys[i];\r\n            result[key] = visit(inst[key]);\r\n        }\r\n        return result;\r\n    }\r\n    function visitArray(list) {\r\n        const result = [];\r\n        for (let i = 0, length = list.length; i < length; i++) {\r\n            result[i] = visit(list[i]);\r\n        }\r\n        return result;\r\n    }\r\n    function visitFunction(delegate) {\r\n        return delegate.apply(expression, args);\r\n    }\r\n}\n\nclass EbNodeService {\r\n    constructor() {\r\n        this.node = null;\r\n        this.currentChange = new EventEmitter();\r\n    }\r\n    get current() {\r\n        return this.node;\r\n    }\r\n    set current(value) {\r\n        const oldNode = this.node;\r\n        if (value !== oldNode) {\r\n            this.node = value;\r\n            this.currentChange.emit({\r\n                oldValue: oldNode,\r\n                newValue: value,\r\n            });\r\n        }\r\n    }\r\n}\r\nEbNodeService.ɵfac = function EbNodeService_Factory(t) { return new (t || EbNodeService)(); };\r\nEbNodeService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: EbNodeService, factory: EbNodeService.ɵfac });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EbNodeService, [{\r\n        type: Injectable\r\n    }], null, null); })();\n\nclass Node {\r\n    constructor(id, schema, parent) {\r\n        this.id = id;\r\n        this.schema = schema;\r\n        this.parent = parent;\r\n        this.attributes = {};\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.children = [];\r\n        this.level = parent ? parent.level + 1 : 0;\r\n    }\r\n    attr(key, value) {\r\n        if (arguments.length === 2) {\r\n            this.attributes[key] = value;\r\n        }\r\n        else {\r\n            return this.attributes[key];\r\n        }\r\n    }\r\n    classes() {\r\n    }\r\n    addChildAfter(child, after) {\r\n        const index = after ? this.children.indexOf(after) : this.children.length - 1;\r\n        this.children.splice(index + 1, 0, child);\r\n        child.parent = this;\r\n        child.level = this.level + 1;\r\n    }\r\n    addChildBefore(child, before) {\r\n        const index = before ? this.children.indexOf(before) : 0;\r\n        this.children.splice(index, 0, child);\r\n        child.parent = this;\r\n        child.level = this.level + 1;\r\n    }\r\n    addAfter(child) {\r\n        if (!this.parent) {\r\n            throw new GridError('node', 'Can\\'t add after root');\r\n        }\r\n        this.parent.addChildAfter(child, this);\r\n    }\r\n    addBefore(child) {\r\n        if (!this.parent) {\r\n            throw new GridError('node', 'Can\\'t add after root');\r\n        }\r\n        this.parent.addChildBefore(child, this);\r\n    }\r\n    clone() {\r\n        return this.schema.apply(new Node(this.id, this.schema));\r\n    }\r\n    remove() {\r\n        if (!this.parent) {\r\n            throw new GridError('node', 'Root element can\\'t be removed');\r\n        }\r\n        const index = this.parent.children.indexOf(this);\r\n        this.parent.children.splice(index, 1);\r\n    }\r\n    clear() {\r\n        this.children.forEach(child => child.parent = null);\r\n        this.children = [];\r\n    }\r\n    toString(indent = 0) {\r\n        return Array(indent).join('-') + ' ' + this.level + '\\n' +\r\n            this.children\r\n                .map(child => child.toString(indent + 1))\r\n                .join('\\n');\r\n    }\r\n    toTraceString() {\r\n        if (this.parent) {\r\n            let parent = this.parent;\r\n            while (null !== parent.parent) {\r\n                parent = parent.parent;\r\n            }\r\n            return parent.toString();\r\n        }\r\n        return this.toString();\r\n    }\r\n}\n\nfunction EbNodeComponent_li_3_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"li\", 6);\r\n    i0.ɵɵelement(1, \"q-grid-eb-expression\", 7);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const expr_r3 = ctx.$implicit;\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"model\", expr_r3)(\"node\", ctx_r0.model)(\"line\", ctx_r0.model.line);\r\n} }\r\nfunction EbNodeComponent_li_6_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"li\", 8);\r\n    i0.ɵɵelement(1, \"q-grid-eb-node\", 9);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const child_r4 = ctx.$implicit;\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"model\", child_r4);\r\n} }\r\nfunction EbNodeComponent_ng_template_7_li_1_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"li\", 6);\r\n    i0.ɵɵelement(1, \"q-grid-eb-expression\", 7);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const expr_r9 = ctx.$implicit;\r\n    const ctx_r10 = i0.ɵɵnextContext();\r\n    const $node_r6 = ctx_r10.node;\r\n    const $line_r7 = ctx_r10.line;\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"model\", expr_r9)(\"node\", $node_r6)(\"line\", $line_r7);\r\n} }\r\nfunction EbNodeComponent_ng_template_7_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"ul\", 10);\r\n    i0.ɵɵtemplate(1, EbNodeComponent_ng_template_7_li_1_Template, 2, 3, \"li\", 2);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const $group_r5 = ctx.$implicit;\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngForOf\", $group_r5.expressions);\r\n} }\r\nconst _c0$4 = function (a0) { return { \"q-grid-eb-active\": a0 }; };\r\nclass EbNodeComponent {\r\n    constructor(service) {\r\n        this.service = service;\r\n    }\r\n    select(e) {\r\n        e.stopPropagation();\r\n        if (this.model.parent) {\r\n            this.service.current = this.model;\r\n        }\r\n    }\r\n}\r\nEbNodeComponent.ɵfac = function EbNodeComponent_Factory(t) { return new (t || EbNodeComponent)(i0.ɵɵdirectiveInject(EbNodeService)); };\r\nEbNodeComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: EbNodeComponent, selectors: [[\"q-grid-eb-node\"]], inputs: { model: \"model\" }, decls: 8, vars: 6, consts: [[1, \"q-grid-eb-node\", 3, \"q-grid-eb-class\", \"ngClass\", \"click\"], [1, \"q-grid-eb-line\"], [\"class\", \"q-grid-eb-expression\", 4, \"ngFor\", \"ngForOf\"], [1, \"q-grid-eb-children\"], [\"class\", \"q-grid-eb-child\", 4, \"ngFor\", \"ngForOf\"], [\"key\", \"eb-group.tpl.html\"], [1, \"q-grid-eb-expression\"], [3, \"model\", \"node\", \"line\"], [1, \"q-grid-eb-child\"], [3, \"model\"], [1, \"q-grid-eb-group\"]], template: function EbNodeComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"ul\", 0);\r\n        i0.ɵɵlistener(\"click\", function EbNodeComponent_Template_ul_click_0_listener($event) { return ctx.select($event); });\r\n        i0.ɵɵelementStart(1, \"li\", 1)(2, \"ul\");\r\n        i0.ɵɵtemplate(3, EbNodeComponent_li_3_Template, 2, 3, \"li\", 2);\r\n        i0.ɵɵelementEnd()();\r\n        i0.ɵɵelementStart(4, \"li\", 3)(5, \"ul\");\r\n        i0.ɵɵtemplate(6, EbNodeComponent_li_6_Template, 2, 1, \"li\", 4);\r\n        i0.ɵɵelementEnd()()();\r\n        i0.ɵɵtemplate(7, EbNodeComponent_ng_template_7_Template, 2, 1, \"ng-template\", 5);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"q-grid-eb-class\", ctx.model.attr(\"class\"))(\"ngClass\", i0.ɵɵpureFunction1(4, _c0$4, ctx.service.current === ctx.model));\r\n        i0.ɵɵadvance(3);\r\n        i0.ɵɵproperty(\"ngForOf\", ctx.model.line.expressions);\r\n        i0.ɵɵadvance(3);\r\n        i0.ɵɵproperty(\"ngForOf\", ctx.model.children);\r\n    } }, encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EbNodeComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-eb-node', template: \"<ul class=\\\"q-grid-eb-node\\\"\\n\\t[q-grid-eb-class]=\\\"model.attr('class')\\\"\\n\\t[ngClass]=\\\"{'q-grid-eb-active': service.current === model}\\\"\\n\\t(click)=\\\"select($event)\\\">\\n\\t<li class=\\\"q-grid-eb-line\\\">\\n\\t\\t<ul>\\n\\t\\t\\t<li *ngFor=\\\"let expr of model.line.expressions\\\"\\n\\t\\t\\t\\t\\tclass=\\\"q-grid-eb-expression\\\">\\n\\t\\t\\t\\t<q-grid-eb-expression [model]=\\\"expr\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[node]=\\\"model\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[line]=\\\"model.line\\\">\\n\\t\\t\\t\\t</q-grid-eb-expression>\\n\\t\\t\\t</li>\\n\\t\\t</ul>\\n\\t</li>\\n\\n\\t<li class=\\\"q-grid-eb-children\\\">\\n\\t\\t<ul>\\n\\t\\t\\t<li *ngFor=\\\"let child of model.children\\\"\\n\\t\\t\\t\\t\\tclass=\\\"q-grid-eb-child\\\">\\n\\t\\t\\t\\t<q-grid-eb-node [model]=\\\"child\\\">\\n\\t\\t\\t\\t</q-grid-eb-node>\\n\\t\\t\\t</li>\\n\\t\\t</ul>\\n\\t</li>\\n</ul>\\n\\n<ng-template key=\\\"eb-group.tpl.html\\\"\\n\\t\\t\\tlet-$group\\n\\t\\t\\tlet-$node=\\\"node\\\"\\n\\t\\t\\tlet-$line=\\\"line\\\">\\n\\t<ul class=\\\"q-grid-eb-group\\\">\\n\\t\\t<li *ngFor=\\\"let expr of $group.expressions\\\"\\n\\t\\t\\t\\tclass=\\\"q-grid-eb-expression\\\">\\n\\t\\t\\t<q-grid-eb-expression [model]=\\\"expr\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[node]=\\\"$node\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[line]=\\\"$line\\\">\\n\\t\\t\\t</q-grid-eb-expression>\\n\\t\\t</li>\\n\\t</ul>\\n</ng-template>\\n\" }]\r\n    }], function () { return [{ type: EbNodeService }]; }, { model: [{\r\n            type: Input\r\n        }] }); })();\n\nclass EbClassDirective {\r\n    constructor(elementRef, node) {\r\n        this.elementRef = elementRef;\r\n        this.node = node;\r\n        this.oldClassList = [];\r\n    }\r\n    ngOnInit() {\r\n        this.evaluate = evaluateFactory(this.model, [this.node ? this.node.model : null]);\r\n    }\r\n    ngDoCheck() {\r\n        const result = this.evaluate(this.klass);\r\n        if (result) {\r\n            const classList = this.fetchClasses(result);\r\n            if (this.oldClassList.length !== classList.length\r\n                || this.oldClassList.join(' ') !== classList.join(' ')) {\r\n                const element = this.elementRef.nativeElement;\r\n                element.classList.remove(...this.oldClassList);\r\n                element.classList.add(...classList);\r\n                this.oldClassList = classList;\r\n            }\r\n        }\r\n        else if (this.oldClassList.length) {\r\n            const element = this.elementRef.nativeElement;\r\n            element.classList.remove(...this.oldClassList);\r\n            this.oldClassList = [];\r\n        }\r\n    }\r\n    fetchClasses(meta) {\r\n        if (isArray(meta)) {\r\n            return meta;\r\n        }\r\n        const keys = Object.keys(meta);\r\n        const classList = [];\r\n        for (let i = 0, length = keys.length; i < length; i++) {\r\n            const key = keys[i];\r\n            if (meta[key]) {\r\n                classList.push(key);\r\n            }\r\n        }\r\n        return classList;\r\n    }\r\n}\r\nEbClassDirective.ɵfac = function EbClassDirective_Factory(t) { return new (t || EbClassDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(EbNodeComponent, 8)); };\r\nEbClassDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: EbClassDirective, selectors: [[\"\", \"q-grid-eb-class\", \"\"]], inputs: { klass: [\"q-grid-eb-class\", \"klass\"], model: [\"q-grid-eb-class-model\", \"model\"] } });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EbClassDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-eb-class]',\r\n            }]\r\n    }], function () { return [{ type: i0.ElementRef }, { type: EbNodeComponent, decorators: [{\r\n                type: Optional\r\n            }] }]; }, { klass: [{\r\n            type: Input,\r\n            args: ['q-grid-eb-class']\r\n        }], model: [{\r\n            type: Input,\r\n            args: ['q-grid-eb-class-model']\r\n        }] }); })();\n\nclass Watcher {\r\n    constructor(expression, key, handler, args = []) {\r\n        this.expression = expression;\r\n        this.key = key;\r\n        this.handler = handler;\r\n        this.args = args;\r\n        this.isFirstRun = true;\r\n        this.evaluate = evaluateFactory(expression, args);\r\n        this.oldValue = this.evaluate(expression[key]);\r\n    }\r\n    detect() {\r\n        const inst = this.expression[this.key];\r\n        const newValue = this.evaluate(inst);\r\n        if (this.isFirstRun || this.oldValue !== newValue) {\r\n            this.isFirstRun = false;\r\n            this.handler.apply(this.expression, [newValue, this.oldValue].concat(this.args));\r\n            this.oldValue = newValue;\r\n        }\r\n    }\r\n}\n\nclass Expression {\r\n    constructor() {\r\n        this.templateUrl = '';\r\n        this.method = [];\r\n    }\r\n}\r\nclass GroupExpression extends Expression {\r\n    constructor() {\r\n        super();\r\n        this.expressions = [];\r\n        this.type = 'group';\r\n        this.templateUrl = 'eb-group.tpl.html';\r\n    }\r\n}\n\nclass Line {\r\n    constructor(GroupSchemaT) {\r\n        this.GroupSchemaT = GroupSchemaT;\r\n        this.immutable = true;\r\n        this.expressions = [];\r\n    }\r\n    add(expression) {\r\n        this.expressions.push(expression);\r\n    }\r\n    clone(id) {\r\n        return cloneDeep(this.get(id));\r\n    }\r\n    get(id) {\r\n        const expression = this.findById(this.expressions, id);\r\n        if (!expression) {\r\n            throw new GridError('line', `Expression ${id} not found`);\r\n        }\r\n        return expression.expression;\r\n    }\r\n    put(id, node, build) {\r\n        const index = this.getIndex(id);\r\n        const schema = new this.GroupSchemaT(node, this);\r\n        const group = new GroupExpression();\r\n        const item = this.findById(this.expressions, id);\r\n        if (item.expression instanceof GroupExpression) {\r\n            build(schema);\r\n            schema.apply(group);\r\n            group.id = id;\r\n            this.expressions.splice(index, 1, group);\r\n            this.immutable = false;\r\n        }\r\n        else {\r\n            throw new GridError('line', 'Unsupported operation: put to expression, that is not a group');\r\n        }\r\n    }\r\n    remove(id) {\r\n        const item = this.findById(this.expressions, id);\r\n        if (item.expression instanceof GroupExpression) {\r\n            item.expression.expressions = [];\r\n        }\r\n        else {\r\n            throw new GridError('line', 'Unsupported operation: remove expression, that is not a group');\r\n        }\r\n    }\r\n    getIndex(id) {\r\n        const index = this.expressions.findIndex(item => item.id === id);\r\n        if (index < 0) {\r\n            throw new GridError('line', `Expression ${id} not found`);\r\n        }\r\n        return index;\r\n    }\r\n    findById(expressions, id, parent = null) {\r\n        for (let index = 0, length = expressions.length; index < length; index++) {\r\n            const expression = expressions[index];\r\n            if (expression.id === id) {\r\n                return { index, expression, parent };\r\n            }\r\n            if (expression instanceof GroupExpression) {\r\n                const group = expression;\r\n                const groupChild = this.findById(group.expressions, id, group);\r\n                if (groupChild) {\r\n                    return groupChild;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\n\nclass EbExpressionComponent {\r\n    ngOnInit() {\r\n        this.context = { $implicit: this.model, node: this.node, line: this.line };\r\n        const $watch = this.model.$watch;\r\n        if ($watch) {\r\n            this.watchers =\r\n                Object\r\n                    .keys($watch)\r\n                    .map(key => new Watcher(this.model, key, $watch[key], [this.node, this.line]));\r\n        }\r\n    }\r\n    ngDoCheck() {\r\n        const ws = this.watchers;\r\n        if (!ws) {\r\n            return;\r\n        }\r\n        for (let i = 0, length = ws.length; i < length; i++) {\r\n            ws[i].detect();\r\n        }\r\n    }\r\n}\r\nEbExpressionComponent.ɵfac = function EbExpressionComponent_Factory(t) { return new (t || EbExpressionComponent)(); };\r\nEbExpressionComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: EbExpressionComponent, selectors: [[\"q-grid-eb-expression\"]], inputs: { node: \"node\", line: \"line\", model: \"model\" }, decls: 1, vars: 2, consts: [[3, \"key\", \"context\"]], template: function EbExpressionComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementContainer(0, 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"key\", ctx.model.templateUrl)(\"context\", ctx.context);\r\n    } }, dependencies: [i1.TemplateDirective], encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EbExpressionComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-eb-expression', template: \"<ng-container [key]=\\\"model.templateUrl\\\" [context]=\\\"context\\\">\\n</ng-container>\\n\" }]\r\n    }], null, { node: [{\r\n            type: Input\r\n        }], line: [{\r\n            type: Input\r\n        }], model: [{\r\n            type: Input\r\n        }] }); })();\n\nfunction indexOf(array, predicate) {\r\n    for (let i = 0, length = array.length; i < length; i++) {\r\n        if (predicate(array[i], i)) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\nfunction defaults(...args) {\r\n    const dst = args[0];\r\n    const result = clone(dst);\r\n    for (let i = 1, sourcesLength = args.length; i < sourcesLength; i++) {\r\n        const source = args[i];\r\n        if (!source) {\r\n            continue;\r\n        }\r\n        const keys = Object.keys(source);\r\n        for (let k = 0, keysLength = keys.length; k < keysLength; k++) {\r\n            const key = keys[k];\r\n            if (!Object.prototype.hasOwnProperty.call(result, key)) {\r\n                result[key] = source[key];\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction override(dst, src) {\r\n    const keys = Object.keys(src);\r\n    const length = keys.length;\r\n    for (let i = 0; i < length; i++) {\r\n        const key = keys[i];\r\n        dst[key] = src[key];\r\n    }\r\n    return dst;\r\n}\n\n/* eslint-disable no-use-before-define */\r\nclass Serializer {\r\n    constructor(node) {\r\n        this.node = node;\r\n    }\r\n    serialize() {\r\n        const groups = this.node.line.expressions.map(expr => this.serializeGroup(expr));\r\n        return {\r\n            id: this.node.id,\r\n            attributes: this.serializeAttributes(this.node),\r\n            children: this.node.children.map(child => new Serializer(child).serialize()),\r\n            line: groups.filter(group => group.expressions.length),\r\n        };\r\n    }\r\n    serializeGroup(group) {\r\n        return {\r\n            id: group.id,\r\n            expressions: group.expressions\r\n                .filter(expr => this.canSerialize(expr))\r\n                .map(expr => this.serializeExpression(expr)),\r\n        };\r\n    }\r\n    serializeExpression(expression) {\r\n        const result = {};\r\n        const serializeAttr = this.node.attr('serialize');\r\n        const serializableProps = serializeAttr[expression.id];\r\n        for (let i = 0, length = serializableProps.length; i < length; i++) {\r\n            const prop = serializableProps[i];\r\n            result[prop] = expression[prop];\r\n        }\r\n        result.id = expression.id;\r\n        result.type = expression.type;\r\n        result.method = expression.method;\r\n        return result;\r\n    }\r\n    serializeAttributes(node) {\r\n        const serializeAttr = node.attr('serialize');\r\n        if (serializeAttr && serializeAttr['@attr']) {\r\n            const props = serializeAttr['@attr'];\r\n            return props.reduce((memo, attr) => {\r\n                memo[attr] = node.attr(attr);\r\n                return memo;\r\n            }, {});\r\n        }\r\n        return {};\r\n    }\r\n    canSerialize(expression) {\r\n        const serializeAttr = this.node.attr('serialize');\r\n        if (!serializeAttr) {\r\n            return false;\r\n        }\r\n        const props = serializeAttr[expression.id];\r\n        return !!(props && props.length);\r\n    }\r\n}\r\nclass Deserializer {\r\n    constructor(schema) {\r\n        this.schema = schema;\r\n    }\r\n    deserialize(data, parent = null, nodeMap) {\r\n        nodeMap = nodeMap || {};\r\n        let node;\r\n        if (!parent) {\r\n            node = new Node(data.id, this.schema);\r\n            this.schema.apply(node);\r\n            traverse(node, nodeMap);\r\n            node.clear();\r\n        }\r\n        else {\r\n            node = nodeMap[data.id].clone();\r\n            parent.addChildAfter(node);\r\n            traverse(parent, nodeMap);\r\n            node.clear();\r\n        }\r\n        override(node.attributes, data.attributes);\r\n        this.deserializeLine(node, node.line, data.line);\r\n        const children = data.children;\r\n        const length = children.length;\r\n        for (let i = 0; i < length; i++) {\r\n            const child = children[i];\r\n            const childSchema = this.schema.schemaMap[child.id];\r\n            new Deserializer(childSchema).deserialize(child, node, nodeMap);\r\n        }\r\n        return node;\r\n    }\r\n    deserializeLine(node, line, dataGroups) {\r\n        for (let i = 0, length = dataGroups.length; i < length; i++) {\r\n            const dataGroup = dataGroups[i];\r\n            const exprGroup = line.get(dataGroup.id);\r\n            this.deserializeGroup(node, line, exprGroup, dataGroup);\r\n        }\r\n    }\r\n    deserializeGroup(node, line, group, dataGroup) {\r\n        const dataExpressions = dataGroup.expressions;\r\n        const length = dataExpressions.length;\r\n        let index;\r\n        for (let i = 0; i < length; i++) {\r\n            const dataExp = dataExpressions[i];\r\n            index = indexOf(group.expressions, expr => expr.id === dataExp.id);\r\n            override(group.expressions[index], dataExp);\r\n        }\r\n        for (let i = 0; i < length; i++) {\r\n            const dataExpr = dataExpressions[i];\r\n            if (dataExpr.method) {\r\n                dataExpr.method.forEach(m => {\r\n                    group.expressions[index][m](node, line);\r\n                    group.expressions[index].method = dataExpressions[i].method;\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction traverse(node, map) {\r\n    if (!Object.prototype.hasOwnProperty.call(map, node.id)) {\r\n        map[node.id] = node;\r\n    }\r\n    for (let i = 0, length = node.children.length; i < length; i++) {\r\n        const child = node.children[0];\r\n        traverse(child, map);\r\n    }\r\n}\r\nclass SerializationService {\r\n    serialize(node) {\r\n        return new Serializer(node).serialize();\r\n    }\r\n    deserialize(schema, data) {\r\n        return new Deserializer(schema).deserialize(data);\r\n    }\r\n}\r\nSerializationService.ɵfac = function SerializationService_Factory(t) { return new (t || SerializationService)(); };\r\nSerializationService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: SerializationService, factory: SerializationService.ɵfac });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SerializationService, [{\r\n        type: Injectable\r\n    }], null, null); })();\n\nclass EbModule {\r\n}\r\nEbModule.ɵfac = function EbModule_Factory(t) { return new (t || EbModule)(); };\r\nEbModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: EbModule });\r\nEbModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ providers: [\r\n        SerializationService,\r\n        EbNodeService,\r\n    ], imports: [CommonModule,\r\n        TemplateModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EbModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [\r\n                    CommonModule,\r\n                    TemplateModule,\r\n                ],\r\n                exports: [\r\n                    EbNodeComponent,\r\n                    EbClassDirective,\r\n                ],\r\n                declarations: [\r\n                    EbNodeComponent,\r\n                    EbExpressionComponent,\r\n                    EbClassDirective,\r\n                ],\r\n                providers: [\r\n                    SerializationService,\r\n                    EbNodeService,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(EbModule, { declarations: [EbNodeComponent,\r\n        EbExpressionComponent,\r\n        EbClassDirective], imports: [CommonModule,\r\n        TemplateModule], exports: [EbNodeComponent,\r\n        EbClassDirective] }); })();\r\ni0.ɵɵsetComponentScope(EbNodeComponent, [i1$1.NgClass, i1$1.NgForOf, i1.TemplateLinkDirective, EbNodeComponent,\r\n    EbExpressionComponent,\r\n    EbClassDirective], []);\n\nclass EditFormComponent {\r\n    constructor(plugin) {\r\n        this.plugin = plugin;\r\n        this.cancel = new EventEmitter();\r\n        this.reset = new EventEmitter();\r\n        this.submit = new EventEmitter();\r\n    }\r\n    ngOnInit() {\r\n        const context = {\r\n            row: this.row,\r\n            caption: this.caption,\r\n        };\r\n        const editFormPanel = new EditFormPanelPlugin(this.plugin, context);\r\n        const { service } = this.plugin;\r\n        editFormPanel.cancelEvent.on(() => this.cancel.emit());\r\n        editFormPanel.resetEvent.on(() => this.reset.emit());\r\n        editFormPanel.submitEvent.on(() => {\r\n            this.submit.emit();\r\n            service.invalidate({\r\n                source: 'edit-form.component',\r\n                why: 'refresh',\r\n            });\r\n        });\r\n        this.context = { $implicit: editFormPanel };\r\n    }\r\n}\r\nEditFormComponent.ɵfac = function EditFormComponent_Factory(t) { return new (t || EditFormComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin)); };\r\nEditFormComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: EditFormComponent, selectors: [[\"q-grid-edit-form\"]], inputs: { caption: \"caption\", row: \"row\" }, outputs: { cancel: \"cancel\", reset: \"reset\", submit: \"submit\" }, features: [i0.ɵɵProvidersFeature([GridPlugin])], decls: 1, vars: 1, consts: [[\"key\", \"plugin-edit-form.tpl.html\", 3, \"context\"]], template: function EditFormComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementContainer(0, 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"context\", ctx.context);\r\n    } }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditFormComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-edit-form', providers: [GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-edit-form.tpl.html\\\"\\n              [context]=\\\"context\\\">\\n</ng-container>\\n\" }]\r\n    }], function () { return [{ type: i1.GridPlugin }]; }, { caption: [{\r\n            type: Input\r\n        }], row: [{\r\n            type: Input\r\n        }], cancel: [{\r\n            type: Output\r\n        }], reset: [{\r\n            type: Output\r\n        }], submit: [{\r\n            type: Output\r\n        }] }); })();\n\nconst _c0$3 = function (a0) { return { $implicit: a0 }; };\r\nclass EditFormControlComponent {\r\n    get key() {\r\n        if (this.editor) {\r\n            const { column } = this.editor.cell;\r\n            const type = column.editor || column.type;\r\n            return `edit-form-${type}.tpl.html`;\r\n        }\r\n        return 'edit-form-text.tpl.html';\r\n    }\r\n}\r\nEditFormControlComponent.ɵfac = function EditFormControlComponent_Factory(t) { return new (t || EditFormControlComponent)(); };\r\nEditFormControlComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: EditFormControlComponent, selectors: [[\"q-grid-edit-form-control\"]], inputs: { editor: \"editor\" }, decls: 1, vars: 4, consts: [[3, \"key\", \"context\"]], template: function EditFormControlComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementContainer(0, 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵpropertyInterpolate(\"key\", ctx.key);\r\n        i0.ɵɵproperty(\"context\", i0.ɵɵpureFunction1(2, _c0$3, ctx.editor));\r\n    } }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditFormControlComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-edit-form-control', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"{{key}}\\\"\\n              [context]=\\\"{$implicit: editor}\\\">\\n</ng-container>\\n\" }]\r\n    }], null, { editor: [{\r\n            type: Input\r\n        }] }); })();\n\nclass EditFormTriggerComponent {\r\n    constructor() {\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n    }\r\n}\r\nEditFormTriggerComponent.ɵfac = function EditFormTriggerComponent_Factory(t) { return new (t || EditFormTriggerComponent)(); };\r\nEditFormTriggerComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: EditFormTriggerComponent, selectors: [[\"q-grid-edit-form-trigger\"]], inputs: { caption: \"caption\", row: \"row\" }, decls: 1, vars: 1, consts: [[\"key\", \"plugin-edit-form-trigger.tpl.html\", 3, \"context\"]], template: function EditFormTriggerComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementContainer(0, 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"context\", ctx.context);\r\n    } }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditFormTriggerComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-edit-form-trigger', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-edit-form-trigger.tpl.html\\\"\\n              [context]=\\\"context\\\">\\n</ng-container>\\n\" }]\r\n    }], null, { caption: [{\r\n            type: Input\r\n        }], row: [{\r\n            type: Input\r\n        }] }); })();\n\nclass EditFormModule {\r\n}\r\nEditFormModule.ɵfac = function EditFormModule_Factory(t) { return new (t || EditFormModule)(); };\r\nEditFormModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: EditFormModule });\r\nEditFormModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\r\n        TemplateModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditFormModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    EditFormTriggerComponent,\r\n                    EditFormComponent,\r\n                    EditFormControlComponent,\r\n                ],\r\n                exports: [\r\n                    EditFormTriggerComponent,\r\n                    EditFormComponent,\r\n                    EditFormControlComponent,\r\n                ],\r\n                imports: [\r\n                    CommonModule,\r\n                    TemplateModule,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(EditFormModule, { declarations: [EditFormTriggerComponent,\r\n        EditFormComponent,\r\n        EditFormControlComponent], imports: [CommonModule,\r\n        TemplateModule], exports: [EditFormTriggerComponent,\r\n        EditFormComponent,\r\n        EditFormControlComponent] }); })();\n\nclass ExportComponent {\r\n    constructor(plugin, templateHost) {\r\n        this.plugin = plugin;\r\n        this.templateHost = templateHost;\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n        this.templateHost.key = () => `export-${this.type}`;\r\n    }\r\n    ngAfterViewInit() {\r\n        const { model, disposable } = this.plugin;\r\n        const exportPlugin = new ExportPlugin(model, this.type);\r\n        const action = new Action(new Command({\r\n            execute: () => exportPlugin[this.type].execute(),\r\n        }), `Export to ${this.type}`, 'file_download');\r\n        if (this.templateRef) {\r\n            action.templateUrl = this.templateHost.key('trigger');\r\n        }\r\n        const items = Composite.list([model.action().items, [action]]);\r\n        model.action({\r\n            items,\r\n        }, {\r\n            source: 'export.component',\r\n        });\r\n        disposable.add(() => {\r\n            model.action({\r\n                items: model\r\n                    .action()\r\n                    .items\r\n                    .filter(x => x !== action),\r\n            }, {\r\n                source: 'export.component',\r\n            });\r\n        });\r\n    }\r\n}\r\nExportComponent.ɵfac = function ExportComponent_Factory(t) { return new (t || ExportComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i1.TemplateHostService)); };\r\nExportComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ExportComponent, selectors: [[\"q-grid-export\"]], contentQueries: function ExportComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\r\n        i0.ɵɵcontentQuery(dirIndex, TemplateRef, 5);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\r\n    } }, inputs: { type: \"type\" }, features: [i0.ɵɵProvidersFeature([TemplateHostService, GridPlugin])], decls: 0, vars: 0, template: function ExportComponent_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ExportComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-export', providers: [TemplateHostService, GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"\" }]\r\n    }], function () { return [{ type: i1.GridPlugin }, { type: i1.TemplateHostService }]; }, { type: [{\r\n            type: Input\r\n        }], templateRef: [{\r\n            type: ContentChild,\r\n            args: [TemplateRef]\r\n        }] }); })();\n\nclass ExportModule {\r\n}\r\nExportModule.ɵfac = function ExportModule_Factory(t) { return new (t || ExportModule)(); };\r\nExportModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ExportModule });\r\nExportModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ExportModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    ExportComponent,\r\n                ],\r\n                exports: [\r\n                    ExportComponent,\r\n                ],\r\n                imports: [\r\n                    TemplateModule,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ExportModule, { declarations: [ExportComponent], imports: [TemplateModule], exports: [ExportComponent] }); })();\n\nclass FileDirective {\r\n    constructor(backdropService, disposable, elementRef) {\r\n        this.backdropService = backdropService;\r\n        this.reader = new FileReader();\r\n        this.valueChange = new EventEmitter();\r\n        this.labelChange = new EventEmitter();\r\n        this.isValid = yes;\r\n        const listener = new EventListener(elementRef.nativeElement, new EventManager(this));\r\n        disposable.add(listener.on('change', this.onUpload));\r\n        disposable.add(listener.on('drop', this.onUpload));\r\n        disposable.add(listener.on('click', this.hideBackdrop));\r\n        disposable.add(listener.on('focus', this.revealBackdrop));\r\n        this.reader.onloadend = e => this.onLoadEnd(e);\r\n    }\r\n    get value() {\r\n        return this._value;\r\n    }\r\n    set value(value) {\r\n        if (value !== this._value) {\r\n            this._value = value;\r\n            this.valueChange.emit(value);\r\n        }\r\n    }\r\n    get label() {\r\n        return this._label;\r\n    }\r\n    set label(value) {\r\n        if (value !== this._label) {\r\n            this._label = value;\r\n            this.labelChange.emit(value);\r\n        }\r\n    }\r\n    onUpload(e) {\r\n        const { files } = e.target;\r\n        const file = files[0];\r\n        if (file && this.isValid(file.name)) {\r\n            this.reader.readAsDataURL(file);\r\n            this.label = file.name;\r\n        }\r\n    }\r\n    onLoadEnd(e) {\r\n        if (e.target.readyState === this.reader.DONE) {\r\n            this.value = e.target.result;\r\n        }\r\n    }\r\n    hideBackdrop() {\r\n        if (this.backdropService) {\r\n            this.backdropService.hide();\r\n        }\r\n    }\r\n    revealBackdrop() {\r\n        if (this.backdropService) {\r\n            if (!this.backdropService.isActive) {\r\n                setTimeout(() => this.backdropService.reveal(), 300);\r\n            }\r\n        }\r\n    }\r\n}\r\nFileDirective.ɵfac = function FileDirective_Factory(t) { return new (t || FileDirective)(i0.ɵɵdirectiveInject(BackdropService, 8), i0.ɵɵdirectiveInject(i1.Disposable), i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nFileDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: FileDirective, selectors: [[\"\", \"q-grid-file\", \"\"]], inputs: { isValid: [\"q-grid-file-is-valid\", \"isValid\"], value: [\"q-grid-file\", \"value\"], label: [\"q-grid-file-label\", \"label\"] }, outputs: { valueChange: \"q-grid-fileChange\", labelChange: \"q-grid-file-labelChange\" }, features: [i0.ɵɵProvidersFeature([Disposable])] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FileDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-file]',\r\n                providers: [Disposable],\r\n            }]\r\n    }], function () { return [{ type: BackdropService, decorators: [{\r\n                type: Optional\r\n            }] }, { type: i1.Disposable }, { type: i0.ElementRef }]; }, { valueChange: [{\r\n            type: Output,\r\n            args: ['q-grid-fileChange']\r\n        }], labelChange: [{\r\n            type: Output,\r\n            args: ['q-grid-file-labelChange']\r\n        }], isValid: [{\r\n            type: Input,\r\n            args: ['q-grid-file-is-valid']\r\n        }], value: [{\r\n            type: Input,\r\n            args: ['q-grid-file']\r\n        }], label: [{\r\n            type: Input,\r\n            args: ['q-grid-file-label']\r\n        }] }); })();\n\nclass FileModule {\r\n}\r\nFileModule.ɵfac = function FileModule_Factory(t) { return new (t || FileModule)(); };\r\nFileModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: FileModule });\r\nFileModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FileModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    FileDirective,\r\n                ],\r\n                exports: [\r\n                    FileDirective,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(FileModule, { declarations: [FileDirective], exports: [FileDirective] }); })();\n\nclass FilterPipe {\r\n    transform(items, { search = null, type = 'plain' }) {\r\n        if (search || search === 0 || search === false) {\r\n            const predicate = predicateFactory(search);\r\n            switch (type) {\r\n                case 'node': {\r\n                    const root = items;\r\n                    return filterNode(root, predicate);\r\n                }\r\n                default: {\r\n                    return items.filter(predicate);\r\n                }\r\n            }\r\n        }\r\n        return items;\r\n    }\r\n}\r\nFilterPipe.ɵfac = function FilterPipe_Factory(t) { return new (t || FilterPipe)(); };\r\nFilterPipe.ɵpipe = /*@__PURE__*/ i0.ɵɵdefinePipe({ name: \"qGridFilter\", type: FilterPipe, pure: true });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterPipe, [{\r\n        type: Pipe,\r\n        args: [{\r\n                name: 'qGridFilter',\r\n            }]\r\n    }], null, null); })();\n\nclass FocusDirective {\r\n    constructor(elementRef, zone) {\r\n        this.elementRef = elementRef;\r\n        this.zone = zone;\r\n        this.disabled = false;\r\n    }\r\n    ngAfterViewInit() {\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n        const selector = this.selector;\r\n        const element = selector\r\n            ? isString(selector) ? this.elementRef.nativeElement.querySelector(selector) : selector\r\n            : this.elementRef.nativeElement;\r\n        if (!element) {\r\n            throw new GridError('focus.directive', `Element ${this.selector} is not found`);\r\n        }\r\n        if (!isFunction(element.focus)) {\r\n            throw new GridError('focus.directive', `Can't find focus method in ${element}`);\r\n        }\r\n        // we need a small timeout to wait, for example, position directive\r\n        // in other case it will scroll to element before layout\r\n        this.zone.runOutsideAngular(() => setTimeout(() => {\r\n            element.focus();\r\n        }, 10));\r\n    }\r\n}\r\nFocusDirective.ɵfac = function FocusDirective_Factory(t) { return new (t || FocusDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone)); };\r\nFocusDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: FocusDirective, selectors: [[\"\", \"q-grid-focus\", \"\"]], inputs: { selector: [\"q-grid-focus\", \"selector\"], disabled: [\"q-grid-focus-disabled\", \"disabled\"] } });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FocusDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-focus]',\r\n            }]\r\n    }], function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, { selector: [{\r\n            type: Input,\r\n            args: ['q-grid-focus']\r\n        }], disabled: [{\r\n            type: Input,\r\n            args: ['q-grid-focus-disabled']\r\n        }] }); })();\n\nclass FocusModule {\r\n}\r\nFocusModule.ɵfac = function FocusModule_Factory(t) { return new (t || FocusModule)(); };\r\nFocusModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: FocusModule });\r\nFocusModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FocusModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    FocusDirective,\r\n                    AutoFocusDirective,\r\n                    BlurDirective,\r\n                ],\r\n                exports: [\r\n                    FocusDirective,\r\n                    AutoFocusDirective,\r\n                    BlurDirective,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(FocusModule, { declarations: [FocusDirective,\r\n        AutoFocusDirective,\r\n        BlurDirective], exports: [FocusDirective,\r\n        AutoFocusDirective,\r\n        BlurDirective] }); })();\n\nclass HighlightPipe {\r\n    transform(text, search) {\r\n        if ((text || text === 0) && (search || search === 0)) {\r\n            text = text.toString();\r\n            search = search.toString();\r\n            const contains = new RegExp(escapeRegexp(search), 'gi');\r\n            if (contains.test(text)) {\r\n                return text.replace(contains, s => `<span class=\"${GRID_PREFIX}-highlight-part\">${htmlEncode(s)}</span>`);\r\n            }\r\n            const contained = new RegExp(escapeRegexp(text), 'gi');\r\n            if (contained.test(search)) {\r\n                return `<span class=\"${GRID_PREFIX}-highlight-part\">${htmlEncode(text)}</span>`;\r\n            }\r\n        }\r\n        return htmlEncode(text);\r\n    }\r\n}\r\nHighlightPipe.ɵfac = function HighlightPipe_Factory(t) { return new (t || HighlightPipe)(); };\r\nHighlightPipe.ɵpipe = /*@__PURE__*/ i0.ɵɵdefinePipe({ name: \"qGridHighlight\", type: HighlightPipe, pure: true });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HighlightPipe, [{\r\n        type: Pipe,\r\n        args: [{\r\n                name: 'qGridHighlight',\r\n            }]\r\n    }], null, null); })();\n\nclass ImportComponent {\r\n    constructor(plugin, templateHost, hostElement) {\r\n        this.plugin = plugin;\r\n        this.templateHost = templateHost;\r\n        this.hostElement = hostElement;\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n        this.templateHost.key = () => 'import';\r\n    }\r\n    get rows() {\r\n        return this.plugin.model.data().rows;\r\n    }\r\n    get columns() {\r\n        return this.plugin.model.columnList().line;\r\n    }\r\n    get id() {\r\n        return this.plugin.model.grid().id;\r\n    }\r\n    ngAfterViewInit() {\r\n        const { model, disposable } = this.plugin;\r\n        const { nativeElement } = this.hostElement;\r\n        const eventListener = new EventListener(nativeElement, new EventManager(this));\r\n        const importPlugin = new ImportPlugin(model, nativeElement, this.options);\r\n        eventListener.on('change', e => importPlugin.load(e));\r\n        const action = new Action(new Command({\r\n            execute: () => importPlugin.upload(),\r\n        }), 'Import data', 'file_upload');\r\n        if (this.templateRef) {\r\n            action.templateUrl = this.templateHost.key('trigger');\r\n        }\r\n        const items = Composite.list([model.action().items, [action]]);\r\n        model.action({\r\n            items,\r\n        }, {\r\n            source: 'import.component',\r\n        });\r\n        disposable.add(() => {\r\n            // notImportItems\r\n            model.action({\r\n                items: model\r\n                    .action()\r\n                    .items\r\n                    .filter(x => x !== action),\r\n            }, {\r\n                source: 'import.component',\r\n            });\r\n        });\r\n    }\r\n}\r\nImportComponent.ɵfac = function ImportComponent_Factory(t) { return new (t || ImportComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i1.TemplateHostService), i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nImportComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ImportComponent, selectors: [[\"q-grid-import\"]], contentQueries: function ImportComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\r\n        i0.ɵɵcontentQuery(dirIndex, TemplateRef, 5);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\r\n    } }, inputs: { options: \"options\" }, features: [i0.ɵɵProvidersFeature([TemplateHostService, GridPlugin])], decls: 0, vars: 0, template: function ImportComponent_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ImportComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-import', providers: [TemplateHostService, GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"\" }]\r\n    }], function () { return [{ type: i1.GridPlugin }, { type: i1.TemplateHostService }, { type: i0.ElementRef }]; }, { options: [{\r\n            type: Input\r\n        }], templateRef: [{\r\n            type: ContentChild,\r\n            args: [TemplateRef]\r\n        }] }); })();\n\nclass ImportModule {\r\n}\r\nImportModule.ɵfac = function ImportModule_Factory(t) { return new (t || ImportModule)(); };\r\nImportModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ImportModule });\r\nImportModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ImportModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    ImportComponent,\r\n                ],\r\n                exports: [\r\n                    ImportComponent,\r\n                ],\r\n                imports: [\r\n                    TemplateModule,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ImportModule, { declarations: [ImportComponent], imports: [TemplateModule], exports: [ImportComponent] }); })();\n\nclass ItemLabelPipe {\r\n    constructor() { }\r\n    transform(value, itemLabel) {\r\n        if (itemLabel) {\r\n            return itemLabel(value);\r\n        }\r\n        return value;\r\n    }\r\n}\r\nItemLabelPipe.ɵfac = function ItemLabelPipe_Factory(t) { return new (t || ItemLabelPipe)(); };\r\nItemLabelPipe.ɵpipe = /*@__PURE__*/ i0.ɵɵdefinePipe({ name: \"qGridItemLabel\", type: ItemLabelPipe, pure: true });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ItemLabelPipe, [{\r\n        type: Pipe,\r\n        args: [{\r\n                name: 'qGridItemLabel',\r\n            }]\r\n    }], function () { return []; }, null); })();\n\nclass PositionDirective {\r\n    constructor(elementRef, disposable) {\r\n        this.elementRef = elementRef;\r\n        this.disposable = disposable;\r\n        this.target = '';\r\n    }\r\n    ngOnInit() {\r\n        const position = new PositionPlugin({\r\n            element: this.elementRef.nativeElement,\r\n            targetName: this.target,\r\n        }, this.disposable);\r\n        position.invalidate();\r\n    }\r\n}\r\nPositionDirective.ɵfac = function PositionDirective_Factory(t) { return new (t || PositionDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Disposable)); };\r\nPositionDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: PositionDirective, selectors: [[\"\", \"q-grid-position\", \"\"]], inputs: { target: [\"q-grid-position\", \"target\"] }, features: [i0.ɵɵProvidersFeature([Disposable])] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PositionDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-position]',\r\n                providers: [Disposable],\r\n            }]\r\n    }], function () { return [{ type: i0.ElementRef }, { type: i1.Disposable }]; }, { target: [{\r\n            type: Input,\r\n            args: ['q-grid-position']\r\n        }] }); })();\n\nclass LayoutModule {\r\n}\r\nLayoutModule.ɵfac = function LayoutModule_Factory(t) { return new (t || LayoutModule)(); };\r\nLayoutModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: LayoutModule });\r\nLayoutModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LayoutModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    PositionDirective,\r\n                ],\r\n                exports: [\r\n                    PositionDirective,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(LayoutModule, { declarations: [PositionDirective], exports: [PositionDirective] }); })();\n\nclass LegendComponent {\r\n    constructor(templateHost) {\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n        templateHost.key = () => 'plugin-legend-core.tpl.html';\r\n    }\r\n}\r\nLegendComponent.ɵfac = function LegendComponent_Factory(t) { return new (t || LegendComponent)(i0.ɵɵdirectiveInject(i1.TemplateHostService)); };\r\nLegendComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: LegendComponent, selectors: [[\"q-grid-legend\"]], features: [i0.ɵɵProvidersFeature([TemplateHostService])], decls: 1, vars: 1, consts: [[\"key\", \"plugin-legend-core.tpl.html\", 3, \"context\"]], template: function LegendComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementContainer(0, 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"context\", ctx.context);\r\n    } }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LegendComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-legend', changeDetection: ChangeDetectionStrategy.OnPush, providers: [TemplateHostService], template: \"<ng-container key=\\\"plugin-legend-core.tpl.html\\\"\\n              [context]=\\\"context\\\">\\n</ng-container>\\n\" }]\r\n    }], function () { return [{ type: i1.TemplateHostService }]; }, null); })();\n\nclass LegendModule {\r\n}\r\nLegendModule.ɵfac = function LegendModule_Factory(t) { return new (t || LegendModule)(); };\r\nLegendModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: LegendModule });\r\nLegendModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LegendModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    LegendComponent,\r\n                ],\r\n                exports: [\r\n                    LegendComponent,\r\n                ],\r\n                imports: [\r\n                    TemplateModule,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(LegendModule, { declarations: [LegendComponent], imports: [TemplateModule], exports: [LegendComponent] }); })();\n\nconst _c0$2 = [\"currency\"];\r\nconst _c1 = [\"number\"];\r\nconst _c2 = [\"time\"];\r\nconst _c3 = [\"text\"];\r\nfunction LiveCellComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementContainer(0);\r\n} }\r\nfunction LiveCellComponent_ng_template_1_i_1_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"i\", 11);\r\n    i0.ɵɵtext(1, \" \\u2191 \");\r\n    i0.ɵɵelementEnd();\r\n} }\r\nfunction LiveCellComponent_ng_template_1_i_2_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"i\", 12);\r\n    i0.ɵɵtext(1, \" \\u2193 \");\r\n    i0.ɵɵelementEnd();\r\n} }\r\nfunction LiveCellComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"span\", 5);\r\n    i0.ɵɵtemplate(1, LiveCellComponent_ng_template_1_i_1_Template, 2, 0, \"i\", 6);\r\n    i0.ɵɵtemplate(2, LiveCellComponent_ng_template_1_i_2_Template, 2, 0, \"i\", 7);\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementStart(3, \"span\", 8);\r\n    i0.ɵɵtext(4);\r\n    i0.ɵɵpipe(5, \"qGridCurrency\");\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementStart(6, \"span\", 9);\r\n    i0.ɵɵtext(7);\r\n    i0.ɵɵpipe(8, \"qGridCurrency\");\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementStart(9, \"span\", 10);\r\n    i0.ɵɵtext(10);\r\n    i0.ɵɵpipe(11, \"qGridCurrency\");\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r2 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.getDifference(ctx_r2.cell.changes) > 0);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.getDifference(ctx_r2.cell.changes) < 0);\r\n    i0.ɵɵadvance(2);\r\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(5, 5, ctx_r2.getDifference(ctx_r2.cell.changes), ctx_r2.cell.column.code));\r\n    i0.ɵɵadvance(3);\r\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(8, 8, ctx_r2.cell.changes.previousValue, ctx_r2.cell.column.code));\r\n    i0.ɵɵadvance(3);\r\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(11, 11, ctx_r2.cell.label, ctx_r2.cell.column.code));\r\n} }\r\nfunction LiveCellComponent_ng_template_3_i_7_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"i\", 11);\r\n    i0.ɵɵtext(1, \" \\u2191 \");\r\n    i0.ɵɵelementEnd();\r\n} }\r\nfunction LiveCellComponent_ng_template_3_i_8_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"i\", 12);\r\n    i0.ɵɵtext(1, \" \\u2193 \");\r\n    i0.ɵɵelementEnd();\r\n} }\r\nfunction LiveCellComponent_ng_template_3_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"span\", 10);\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementStart(2, \"span\", 9);\r\n    i0.ɵɵtext(3);\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementStart(4, \"span\", 8);\r\n    i0.ɵɵtext(5);\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementStart(6, \"span\", 5);\r\n    i0.ɵɵtemplate(7, LiveCellComponent_ng_template_3_i_7_Template, 2, 0, \"i\", 6);\r\n    i0.ɵɵtemplate(8, LiveCellComponent_ng_template_3_i_8_Template, 2, 0, \"i\", 7);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r4 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate(ctx_r4.cell.label);\r\n    i0.ɵɵadvance(2);\r\n    i0.ɵɵtextInterpolate(ctx_r4.cell.changes.previousValue);\r\n    i0.ɵɵadvance(2);\r\n    i0.ɵɵtextInterpolate(ctx_r4.getDifference(ctx_r4.cell.changes));\r\n    i0.ɵɵadvance(2);\r\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.getDifference(ctx_r4.cell.changes) > 0);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.getDifference(ctx_r4.cell.changes) < 0);\r\n} }\r\nfunction LiveCellComponent_ng_template_5_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"span\", 9);\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementStart(2, \"span\", 10);\r\n    i0.ɵɵtext(3);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r6 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate(ctx_r6.cell.changes.previousValue);\r\n    i0.ɵɵadvance(2);\r\n    i0.ɵɵtextInterpolate(ctx_r6.cell.label);\r\n} }\r\nfunction LiveCellComponent_ng_template_7_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"span\", 9);\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementStart(2, \"span\", 10);\r\n    i0.ɵɵtext(3);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r8 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate(ctx_r8.cell.changes.previousValue);\r\n    i0.ɵɵadvance(2);\r\n    i0.ɵɵtextInterpolate(ctx_r8.cell.label);\r\n} }\r\nclass LiveCellComponent {\r\n    constructor(zone) {\r\n        this.zone = zone;\r\n        this.duration = 500;\r\n        this.timeoutId = null;\r\n    }\r\n    ngOnInit() {\r\n        if (!this.cell.changes) {\r\n            throw new GridError('live-cell.component', 'No changes found');\r\n        }\r\n        this.class = `q-grid-live-cell q-grid-live-cell-${this.cell.column.type} `;\r\n        if (this.getDifference(this.cell.changes)) {\r\n            this.class += this.getDifference(this.cell.changes) > 0 ? 'q-grid-live-cell-up ' : 'q-grid-live-cell-down ';\r\n        }\r\n        this.zone.runOutsideAngular(() => {\r\n            this.timeoutId = setTimeout(() => {\r\n                this.cell.mode('view');\r\n            }, this.duration);\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.timeoutId) {\r\n            clearTimeout(this.timeoutId);\r\n        }\r\n    }\r\n    getDifference(value) {\r\n        switch (this.cell.column.type) {\r\n            case 'number':\r\n            case 'currency':\r\n                return +value.currentValue - +value.previousValue;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n    getTemplate() {\r\n        switch (this.cell.column.type) {\r\n            case 'currency':\r\n                return this.currencyTemplate;\r\n            case 'time':\r\n                return this.timeTemplate;\r\n            case 'number':\r\n                return this.numberTemplate;\r\n            default:\r\n                return this.textTemplate;\r\n        }\r\n    }\r\n}\r\nLiveCellComponent.ɵfac = function LiveCellComponent_Factory(t) { return new (t || LiveCellComponent)(i0.ɵɵdirectiveInject(i0.NgZone)); };\r\nLiveCellComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: LiveCellComponent, selectors: [[\"q-grid-live-cell\"]], viewQuery: function LiveCellComponent_Query(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵviewQuery(_c0$2, 7);\r\n        i0.ɵɵviewQuery(_c1, 7);\r\n        i0.ɵɵviewQuery(_c2, 7);\r\n        i0.ɵɵviewQuery(_c3, 7);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.currencyTemplate = _t.first);\r\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.numberTemplate = _t.first);\r\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.timeTemplate = _t.first);\r\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textTemplate = _t.first);\r\n    } }, hostVars: 2, hostBindings: function LiveCellComponent_HostBindings(rf, ctx) { if (rf & 2) {\r\n        i0.ɵɵclassMap(ctx.class);\r\n    } }, inputs: { cell: \"cell\", duration: \"duration\" }, features: [i0.ɵɵProvidersFeature([TemplateHostService])], decls: 9, vars: 1, consts: [[4, \"ngTemplateOutlet\"], [\"currency\", \"\"], [\"number\", \"\"], [\"time\", \"\"], [\"text\", \"\"], [1, \"q-grid-live-cell-arrow\"], [\"class\", \"q-grid-icon q-grid-asc\", 4, \"ngIf\"], [\"class\", \"q-grid-icon q-grid-desc\", 4, \"ngIf\"], [1, \"q-grid-live-cell-diff\"], [1, \"q-grid-live-cell-prev\"], [1, \"q-grid-live-cell-curr\"], [1, \"q-grid-icon\", \"q-grid-asc\"], [1, \"q-grid-icon\", \"q-grid-desc\"]], template: function LiveCellComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵtemplate(0, LiveCellComponent_ng_container_0_Template, 1, 0, \"ng-container\", 0);\r\n        i0.ɵɵtemplate(1, LiveCellComponent_ng_template_1_Template, 12, 14, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\r\n        i0.ɵɵtemplate(3, LiveCellComponent_ng_template_3_Template, 9, 5, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\r\n        i0.ɵɵtemplate(5, LiveCellComponent_ng_template_5_Template, 4, 2, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\r\n        i0.ɵɵtemplate(7, LiveCellComponent_ng_template_7_Template, 4, 2, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.getTemplate());\r\n    } }, dependencies: [i1$1.NgIf, i1$1.NgTemplateOutlet, CurrencyPipe], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LiveCellComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-live-cell', providers: [TemplateHostService], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container *ngTemplateOutlet=\\\"getTemplate()\\\"></ng-container>\\n\\n<ng-template #currency>\\n  <span class=\\\"q-grid-live-cell-arrow\\\">\\n    <i *ngIf=\\\"getDifference(cell.changes) > 0\\\"\\n       class=\\\"q-grid-icon q-grid-asc\\\">\\n      &uarr;\\n    </i>\\n    <i *ngIf=\\\"getDifference(cell.changes) < 0\\\"\\n       class=\\\"q-grid-icon q-grid-desc\\\">\\n      &darr;\\n    </i>\\n  </span>\\n  <span class=\\\"q-grid-live-cell-diff\\\">{{ getDifference(cell.changes) | qGridCurrency: cell.column.code}}</span>\\n  <span class=\\\"q-grid-live-cell-prev\\\">{{ cell.changes.previousValue | qGridCurrency: cell.column.code}}</span>\\n  <span class=\\\"q-grid-live-cell-curr\\\">{{ cell.label | qGridCurrency: cell.column.code}}</span>\\n</ng-template>\\n\\n<ng-template #number>\\n  <span class=\\\"q-grid-live-cell-curr\\\">{{ cell.label }}</span>\\n  <span class=\\\"q-grid-live-cell-prev\\\">{{ cell.changes.previousValue }}</span>\\n  <span class=\\\"q-grid-live-cell-diff\\\">{{ getDifference(cell.changes) }}</span>\\n  <span class=\\\"q-grid-live-cell-arrow\\\">\\n    <i *ngIf=\\\"getDifference(cell.changes) > 0\\\"\\n       class=\\\"q-grid-icon q-grid-asc\\\">\\n      &uarr;\\n    </i>\\n    <i *ngIf=\\\"getDifference(cell.changes) < 0\\\"\\n       class=\\\"q-grid-icon q-grid-desc\\\">\\n      &darr;\\n    </i>\\n  </span>\\n</ng-template>\\n\\n<ng-template #time>\\n  <span class=\\\"q-grid-live-cell-prev\\\">{{ cell.changes.previousValue }}</span>\\n  <span class=\\\"q-grid-live-cell-curr\\\">{{ cell.label }}</span>\\n</ng-template>\\n\\n<ng-template #text>\\n  <span class=\\\"q-grid-live-cell-prev\\\">{{ cell.changes.previousValue }}</span>\\n  <span class=\\\"q-grid-live-cell-curr\\\">{{ cell.label }}</span>\\n</ng-template>\\n\" }]\r\n    }], function () { return [{ type: i0.NgZone }]; }, { cell: [{\r\n            type: Input\r\n        }], duration: [{\r\n            type: Input\r\n        }], class: [{\r\n            type: HostBinding,\r\n            args: ['class']\r\n        }], currencyTemplate: [{\r\n            type: ViewChild,\r\n            args: ['currency', { static: true }]\r\n        }], numberTemplate: [{\r\n            type: ViewChild,\r\n            args: ['number', { static: true }]\r\n        }], timeTemplate: [{\r\n            type: ViewChild,\r\n            args: ['time', { static: true }]\r\n        }], textTemplate: [{\r\n            type: ViewChild,\r\n            args: ['text', { static: true }]\r\n        }] }); })();\n\nclass TimePipe {\r\n    constructor(pipe) {\r\n        this.pipe = pipe;\r\n    }\r\n    transform(value, format, timezone, locale) {\r\n        try {\r\n            return this.pipe.transform(value, format, timezone, locale);\r\n        }\r\n        catch (ex) {\r\n            Log.warn('TimePipe', ex.message);\r\n            return value;\r\n        }\r\n    }\r\n}\r\nTimePipe.ɵfac = function TimePipe_Factory(t) { return new (t || TimePipe)(i0.ɵɵdirectiveInject(i1$1.DatePipe, 16)); };\r\nTimePipe.ɵpipe = /*@__PURE__*/ i0.ɵɵdefinePipe({ name: \"qGridTime\", type: TimePipe, pure: true });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimePipe, [{\r\n        type: Pipe,\r\n        args: [{\r\n                name: 'qGridTime',\r\n            }]\r\n    }], function () { return [{ type: i1$1.DatePipe }]; }, null); })();\n\nclass NumberPipe {\r\n    constructor(pipe) {\r\n        this.pipe = pipe;\r\n    }\r\n    transform(value, digitsInfo, locale) {\r\n        try {\r\n            return this.pipe.transform(value, digitsInfo, locale);\r\n        }\r\n        catch (ex) {\r\n            Log.warn('NumberPipe', ex.message);\r\n            return value;\r\n        }\r\n    }\r\n}\r\nNumberPipe.ɵfac = function NumberPipe_Factory(t) { return new (t || NumberPipe)(i0.ɵɵdirectiveInject(i1$1.DecimalPipe, 16)); };\r\nNumberPipe.ɵpipe = /*@__PURE__*/ i0.ɵɵdefinePipe({ name: \"qGridNumber\", type: NumberPipe, pure: true });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NumberPipe, [{\r\n        type: Pipe,\r\n        args: [{\r\n                name: 'qGridNumber',\r\n            }]\r\n    }], function () { return [{ type: i1$1.DecimalPipe }]; }, null); })();\n\nclass TextPipe {\r\n    transform(item, format) {\r\n        switch (format) {\r\n            case 'fromCamelCase': {\r\n                return item.replace(/([a-z])([A-Z])/g, '$1 $2').toLowerCase();\r\n            }\r\n            default: {\r\n                throw new GridError('text.pipe', `Unknown input format type '${format}'`);\r\n            }\r\n        }\r\n    }\r\n}\r\nTextPipe.ɵfac = function TextPipe_Factory(t) { return new (t || TextPipe)(); };\r\nTextPipe.ɵpipe = /*@__PURE__*/ i0.ɵɵdefinePipe({ name: \"qGridText\", type: TextPipe, pure: true });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TextPipe, [{\r\n        type: Pipe,\r\n        args: [{\r\n                name: 'qGridText',\r\n            }]\r\n    }], null, null); })();\n\nclass PipeModule {\r\n}\r\nPipeModule.ɵfac = function PipeModule_Factory(t) { return new (t || PipeModule)(); };\r\nPipeModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: PipeModule });\r\nPipeModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PipeModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    ArrayPipe,\r\n                    ConvertPipe,\r\n                    CurrencyPipe,\r\n                    DatePipe,\r\n                    FilterPipe,\r\n                    HighlightPipe,\r\n                    ItemLabelPipe,\r\n                    NumberPipe,\r\n                    TextPipe,\r\n                    TimePipe,\r\n                ],\r\n                exports: [\r\n                    ArrayPipe,\r\n                    ConvertPipe,\r\n                    CurrencyPipe,\r\n                    DatePipe,\r\n                    FilterPipe,\r\n                    HighlightPipe,\r\n                    ItemLabelPipe,\r\n                    NumberPipe,\r\n                    TextPipe,\r\n                    TimePipe,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(PipeModule, { declarations: [ArrayPipe,\r\n        ConvertPipe,\r\n        CurrencyPipe,\r\n        DatePipe,\r\n        FilterPipe,\r\n        HighlightPipe,\r\n        ItemLabelPipe,\r\n        NumberPipe,\r\n        TextPipe,\r\n        TimePipe], exports: [ArrayPipe,\r\n        ConvertPipe,\r\n        CurrencyPipe,\r\n        DatePipe,\r\n        FilterPipe,\r\n        HighlightPipe,\r\n        ItemLabelPipe,\r\n        NumberPipe,\r\n        TextPipe,\r\n        TimePipe] }); })();\n\nclass LiveCellModule {\r\n}\r\nLiveCellModule.ɵfac = function LiveCellModule_Factory(t) { return new (t || LiveCellModule)(); };\r\nLiveCellModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: LiveCellModule });\r\nLiveCellModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule,\r\n        CommonModule,\r\n        PipeModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LiveCellModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    LiveCellComponent,\r\n                ],\r\n                exports: [\r\n                    LiveCellComponent,\r\n                ],\r\n                imports: [\r\n                    TemplateModule,\r\n                    CommonModule,\r\n                    PipeModule,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(LiveCellModule, { declarations: [LiveCellComponent], imports: [TemplateModule,\r\n        CommonModule,\r\n        PipeModule], exports: [LiveCellComponent] }); })();\n\nclass LiveColumnComponent {\r\n    constructor(plugin, zone) {\r\n        this.plugin = plugin;\r\n        this.zone = zone;\r\n        this.duration = 500;\r\n    }\r\n    ngOnInit() {\r\n        let startPos;\r\n        let endPos;\r\n        const { model } = this.plugin;\r\n        let currentColumns;\r\n        model.animation({\r\n            apply: model.animation().apply.concat((memo, context, complete) => {\r\n                const previousColumns = currentColumns;\r\n                currentColumns = memo.columns ? memo.columns[0] : currentColumns;\r\n                if (!previousColumns || !memo.columns) {\r\n                    complete(0);\r\n                    return;\r\n                }\r\n                const { columnId } = model.data();\r\n                const animations = [];\r\n                startPos = currentColumns.length;\r\n                endPos = 0;\r\n                for (let columnIndex = 0, length = previousColumns.length; columnIndex < length; columnIndex++) {\r\n                    const newColumnIndex = currentColumns.findIndex((column, i) => columnId(i, column.model) === columnId(columnIndex, previousColumns[columnIndex].model));\r\n                    if (newColumnIndex !== columnIndex) {\r\n                        startPos = Math.min(Math.min(columnIndex, newColumnIndex), startPos);\r\n                        endPos = Math.max(Math.max(columnIndex, newColumnIndex), endPos);\r\n                    }\r\n                }\r\n                for (let columnIndex = 0, length = previousColumns.length; columnIndex < length; columnIndex++) {\r\n                    const newColumnIndex = currentColumns.findIndex((column, i) => columnId(i, column.model) === columnId(columnIndex, previousColumns[columnIndex].model));\r\n                    if (newColumnIndex !== columnIndex) {\r\n                        animations.push(this.moveColumn(columnIndex, newColumnIndex, startPos, endPos));\r\n                    }\r\n                }\r\n                this.zone.runOutsideAngular(() => {\r\n                    Promise.all(animations)\r\n                        .then(complete);\r\n                });\r\n            }),\r\n        });\r\n    }\r\n    moveColumn(from, to, startPos, endPos) {\r\n        const { table } = this.plugin;\r\n        return new Promise((animationEnd, animationError) => {\r\n            const oldColumn = table.body.column(from);\r\n            const newColumn = table.body.column(to);\r\n            const startColumn = table.body.column(startPos);\r\n            const endColumn = table.body.column(endPos);\r\n            if (!oldColumn.model() || !newColumn.model()) {\r\n                const errorIndex = oldColumn.model() ? to : from;\r\n                animationError(`Can't find model for column ${errorIndex}`);\r\n                return;\r\n            }\r\n            Fastdom.measure(() => {\r\n                const newRect = newColumn.cells()[0].rect();\r\n                const oldRect = oldColumn.cells()[0].rect();\r\n                const startRect = startColumn.cells()[0].rect();\r\n                const endRect = endColumn.cells()[0].rect();\r\n                let offset = 0;\r\n                if (from < to) {\r\n                    offset = (Math.abs(from - to) > 1) ? newRect.left - oldRect.right + endRect.width : endRect.width;\r\n                }\r\n                else {\r\n                    offset = (Math.abs(from - to) > 1) ? newRect.left - oldRect.left : -1 * startRect.width;\r\n                }\r\n                Fastdom.mutate(() => {\r\n                    const animatedCells = [];\r\n                    oldColumn.addClass(`${GRID_PREFIX}-live-column`);\r\n                    oldColumn.cells().forEach(cell => animatedCells.push(new Promise(columnAnimationEnd => {\r\n                        const animation = cell.model().element.animate([{ transform: 'translateX(0px)' }, { transform: `translateX(${offset}px)` }], { duration: this.duration });\r\n                        animation.onfinish = () => Fastdom.mutate(() => {\r\n                            oldColumn.removeClass(`${GRID_PREFIX}-live-column`);\r\n                            oldColumn.removeClass(`${GRID_PREFIX}-drag`);\r\n                            columnAnimationEnd(null);\r\n                        });\r\n                    })));\r\n                    Promise.all(animatedCells).finally(() => animationEnd(null));\r\n                });\r\n            });\r\n        });\r\n    }\r\n}\r\nLiveColumnComponent.ɵfac = function LiveColumnComponent_Factory(t) { return new (t || LiveColumnComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i0.NgZone)); };\r\nLiveColumnComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: LiveColumnComponent, selectors: [[\"q-grid-live-columns\"]], inputs: { duration: \"duration\" }, features: [i0.ɵɵProvidersFeature([GridPlugin])], decls: 0, vars: 0, template: function LiveColumnComponent_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LiveColumnComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'q-grid-live-columns',\r\n                template: '',\r\n                providers: [GridPlugin],\r\n                changeDetection: ChangeDetectionStrategy.OnPush,\r\n            }]\r\n    }], function () { return [{ type: i1.GridPlugin }, { type: i0.NgZone }]; }, { duration: [{\r\n            type: Input,\r\n            args: ['duration']\r\n        }] }); })();\n\nclass LiveColumnModule {\r\n}\r\nLiveColumnModule.ɵfac = function LiveColumnModule_Factory(t) { return new (t || LiveColumnModule)(); };\r\nLiveColumnModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: LiveColumnModule });\r\nLiveColumnModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LiveColumnModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    LiveColumnComponent,\r\n                ],\r\n                exports: [\r\n                    LiveColumnComponent,\r\n                ],\r\n                imports: [\r\n                    CommonModule,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(LiveColumnModule, { declarations: [LiveColumnComponent], imports: [CommonModule], exports: [LiveColumnComponent] }); })();\n\nclass LiveRowComponent {\r\n    constructor(plugin, zone) {\r\n        this.plugin = plugin;\r\n        this.zone = zone;\r\n        this.duration = 400;\r\n    }\r\n    ngOnInit() {\r\n        const { model } = this.plugin;\r\n        let currentRows;\r\n        model.animation({\r\n            apply: model.animation().apply.concat((memo, context, complete) => {\r\n                const previousRows = currentRows;\r\n                currentRows = memo.rows ? memo.rows : currentRows;\r\n                if (!previousRows || !currentRows) {\r\n                    complete(0);\r\n                    return;\r\n                }\r\n                const { rowId } = model.data();\r\n                const animations = [];\r\n                for (let rowIndex = 0, length = previousRows.length; rowIndex < length; rowIndex++) {\r\n                    const newRowIndex = currentRows.findIndex((row, i) => rowId(i, row) === rowId(rowIndex, previousRows[rowIndex]));\r\n                    if (newRowIndex < 0) {\r\n                        animations.push(this.fadeOutRow(rowIndex));\r\n                    }\r\n                    else if (newRowIndex !== rowIndex) {\r\n                        animations.push(this.moveRow(rowIndex, newRowIndex));\r\n                    }\r\n                }\r\n                this.zone.runOutsideAngular(() => {\r\n                    Promise.all(animations)\r\n                        .then(complete);\r\n                });\r\n            }),\r\n        });\r\n    }\r\n    fadeOutRow(index) {\r\n        return new Promise((resolve, reject) => {\r\n            const tr = this.plugin.table.body.row(index);\r\n            if (!tr.model()) {\r\n                reject(`Can't find model for row ${index}`);\r\n                return;\r\n            }\r\n            Fastdom.mutate(() => {\r\n                const animation = tr.model().tr.element.animate([{ opacity: '1' }, { opacity: '0' }], { duration: this.duration });\r\n                animation.onfinish = () => resolve(null);\r\n            });\r\n        });\r\n    }\r\n    moveRow(from, to) {\r\n        const { table } = this.plugin;\r\n        return new Promise((animationEnd, animationError) => {\r\n            const oldTr = table.body.row(from);\r\n            const newTr = table.body.row(to);\r\n            if (!oldTr.model() || !newTr.model()) {\r\n                const errorIndex = oldTr.model() ? to : from;\r\n                animationError(`Can't find model for row ${errorIndex}`);\r\n                return;\r\n            }\r\n            Fastdom.measure(() => {\r\n                const offset = newTr.rect().top - oldTr.rect().top;\r\n                Fastdom.mutate(() => {\r\n                    const animatedRows = [];\r\n                    oldTr.addClass(`${GRID_PREFIX}-live-row`);\r\n                    oldTr.getElement()\r\n                        .elements\r\n                        .forEach(rowElement => animatedRows.push(new Promise(animationRowEnd => {\r\n                        const animation = rowElement.animate([{ transform: 'translateY(0px)' }, { transform: `translateY(${offset}px)` }], { duration: this.duration });\r\n                        animation.onfinish = () => Fastdom.mutate(() => {\r\n                            oldTr.removeClass(`${GRID_PREFIX}-live-row`);\r\n                            oldTr.removeClass(`${GRID_PREFIX}-drag`);\r\n                            animationRowEnd(null);\r\n                        });\r\n                    })));\r\n                    Promise.all(animatedRows).finally(() => animationEnd(null));\r\n                });\r\n            });\r\n        });\r\n    }\r\n}\r\nLiveRowComponent.ɵfac = function LiveRowComponent_Factory(t) { return new (t || LiveRowComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i0.NgZone)); };\r\nLiveRowComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: LiveRowComponent, selectors: [[\"q-grid-live-rows\"]], inputs: { duration: \"duration\" }, features: [i0.ɵɵProvidersFeature([GridPlugin])], decls: 0, vars: 0, template: function LiveRowComponent_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LiveRowComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'q-grid-live-rows',\r\n                template: '',\r\n                providers: [GridPlugin],\r\n                changeDetection: ChangeDetectionStrategy.OnPush,\r\n            }]\r\n    }], function () { return [{ type: i1.GridPlugin }, { type: i0.NgZone }]; }, { duration: [{\r\n            type: Input,\r\n            args: ['duration']\r\n        }] }); })();\n\nclass LiveRowModule {\r\n}\r\nLiveRowModule.ɵfac = function LiveRowModule_Factory(t) { return new (t || LiveRowModule)(); };\r\nLiveRowModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: LiveRowModule });\r\nLiveRowModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LiveRowModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    LiveRowComponent,\r\n                ],\r\n                exports: [\r\n                    LiveRowComponent,\r\n                ],\r\n                imports: [\r\n                    CommonModule,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(LiveRowModule, { declarations: [LiveRowComponent], imports: [CommonModule], exports: [LiveRowComponent] }); })();\n\nclass PagerComponent {\r\n    constructor(plugin, cd, stateAccessor) {\r\n        this.plugin = plugin;\r\n        this.cd = cd;\r\n        this.stateAccessor = stateAccessor;\r\n        this.pagerState = this.stateAccessor.setter(PaginationState);\r\n    }\r\n    set size(size) { this.pagerState({ size }); }\r\n    set sizeList(sizeList) { this.pagerState({ sizeList }); }\r\n    set mode(mode) { this.pagerState({ mode }); }\r\n    ngOnChanges() {\r\n        const { model } = this.plugin;\r\n        this.stateAccessor.write(model);\r\n    }\r\n    ngOnInit() {\r\n        const { model, observe } = this.plugin;\r\n        const pager = new PagerPlugin(this.plugin);\r\n        this.context = { $implicit: pager };\r\n        observe(model.paginationChanged)\r\n            .subscribe(() => this.cd.detectChanges());\r\n    }\r\n}\r\nPagerComponent.ɵfac = function PagerComponent_Factory(t) { return new (t || PagerComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.StateAccessor)); };\r\nPagerComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PagerComponent, selectors: [[\"q-grid-pager\"]], inputs: { size: \"size\", sizeList: \"sizeList\", mode: \"mode\" }, features: [i0.ɵɵProvidersFeature([GridPlugin, StateAccessor]), i0.ɵɵNgOnChangesFeature], decls: 1, vars: 1, consts: [[\"key\", \"plugin-pager.tpl.html\", 3, \"context\"]], template: function PagerComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementContainer(0, 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"context\", ctx.context);\r\n    } }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PagerComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-pager', providers: [GridPlugin, StateAccessor], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-pager.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\n\" }]\r\n    }], function () { return [{ type: i1.GridPlugin }, { type: i0.ChangeDetectorRef }, { type: i1.StateAccessor }]; }, { size: [{\r\n            type: Input,\r\n            args: ['size']\r\n        }], sizeList: [{\r\n            type: Input,\r\n            args: ['sizeList']\r\n        }], mode: [{\r\n            type: Input,\r\n            args: ['mode']\r\n        }] }); })();\n\nclass PagerTargetComponent {\r\n    constructor(plugin) {\r\n        this.plugin = plugin;\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n    }\r\n    get current() {\r\n        return this.plugin.model.pagination().current + 1;\r\n    }\r\n    get total() {\r\n        const { count, size } = this.plugin.model.pagination();\r\n        return size === 0 ? 0 : Math.max(1, Math.ceil(count / size));\r\n    }\r\n    ngOnInit() {\r\n        this.value = this.current;\r\n    }\r\n    keyDown(e) {\r\n        let code = Shortcut.translate(e);\r\n        if (code.startsWith('numpad')) {\r\n            code = code.slice(6);\r\n        }\r\n        const value = this.value || 0;\r\n        switch (code) {\r\n            case 'enter': {\r\n                if (value) {\r\n                    const current = value - 1;\r\n                    if (this.plugin.model.pagination().current !== current) {\r\n                        // new FocusAfterRender(this.plugin);\r\n                        this.plugin.model.pagination({\r\n                            current,\r\n                        }, {\r\n                            source: 'pager-target.component',\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'up': {\r\n                if (value < this.total) {\r\n                    this.value = value + 1;\r\n                }\r\n                break;\r\n            }\r\n            case 'down': {\r\n                if (value > 1) {\r\n                    this.value = value - 1;\r\n                }\r\n                break;\r\n            }\r\n            case 'left':\r\n            case 'right':\r\n            case 'backspace': {\r\n                break;\r\n            }\r\n            default: {\r\n                const digit = Number.parseInt(code, 10);\r\n                const page = Number.parseInt('' + value + digit, 10);\r\n                const min = 1;\r\n                const max = this.total;\r\n                const isValid = page >= min && page <= max && !isNaN(digit);\r\n                if (!isValid) {\r\n                    this.value = page > this.total ? max : min;\r\n                    e.preventDefault();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nPagerTargetComponent.ɵfac = function PagerTargetComponent_Factory(t) { return new (t || PagerTargetComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin)); };\r\nPagerTargetComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PagerTargetComponent, selectors: [[\"q-grid-pager-target\"]], features: [i0.ɵɵProvidersFeature([GridPlugin])], decls: 1, vars: 1, consts: [[\"key\", \"plugin-pager-target.tpl.html\", 3, \"context\"]], template: function PagerTargetComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementContainer(0, 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"context\", ctx.context);\r\n    } }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PagerTargetComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-pager-target', providers: [GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-pager-target.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\n\" }]\r\n    }], function () { return [{ type: i1.GridPlugin }]; }, null); })();\n\nclass PagerModule {\r\n}\r\nPagerModule.ɵfac = function PagerModule_Factory(t) { return new (t || PagerModule)(); };\r\nPagerModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: PagerModule });\r\nPagerModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PagerModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    PagerComponent,\r\n                    PagerTargetComponent,\r\n                ],\r\n                exports: [\r\n                    PagerComponent,\r\n                    PagerTargetComponent,\r\n                ],\r\n                imports: [\r\n                    TemplateModule,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(PagerModule, { declarations: [PagerComponent,\r\n        PagerTargetComponent], imports: [TemplateModule], exports: [PagerComponent,\r\n        PagerTargetComponent] }); })();\n\nfunction PaneComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"div\", 2);\r\n    i0.ɵɵelementContainer(1, 3);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"context\", ctx_r0.context.right);\r\n} }\r\nfunction PaneComponent_ng_template_2_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"div\", 4);\r\n    i0.ɵɵelementContainer(1, 5);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r1 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"context\", ctx_r1.context.left);\r\n} }\r\nconst DEFAULT_SIDE = 'right';\r\nclass PaneComponent {\r\n    constructor(plugin, cd, templateHost) {\r\n        this.plugin = plugin;\r\n        this.cd = cd;\r\n        templateHost.key = source => `plugin-pane-${source}.tpl.html`;\r\n        this.context = {\r\n            left: {\r\n                $implicit: this,\r\n                value: null,\r\n            },\r\n            right: {\r\n                $implicit: this,\r\n                value: null,\r\n            },\r\n        };\r\n    }\r\n    ngOnInit() {\r\n        const { model, observeReply } = this.plugin;\r\n        const scope = this.parse();\r\n        if (scope) {\r\n            const [state, prop] = scope;\r\n            observeReply(model[`${state}Changed`])\r\n                .subscribe((e) => {\r\n                if (!prop || e.hasChanges(prop)) {\r\n                    this.open(DEFAULT_SIDE);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    open(side = DEFAULT_SIDE, value) {\r\n        const { table, model } = this.plugin;\r\n        const scope = this.parse();\r\n        if (scope && isUndefined(value)) {\r\n            const [state, prop] = scope;\r\n            value = model[state]()[prop];\r\n        }\r\n        this.context[side] = { $implicit: this, value };\r\n        const paneLayer = `pane-${side}`;\r\n        if (table.view.hasLayer(paneLayer)) {\r\n            table.view.removeLayer(paneLayer);\r\n        }\r\n        table.view.addLayer(paneLayer);\r\n        this.invalidate();\r\n    }\r\n    close(side = DEFAULT_SIDE) {\r\n        const { table } = this.plugin;\r\n        table.view.removeLayer(`pane-${side}`);\r\n        this.context[side] = null;\r\n        this.invalidate();\r\n    }\r\n    invalidate() {\r\n        this.cd.markForCheck();\r\n        this.cd.detectChanges();\r\n    }\r\n    parse() {\r\n        const { model } = this.plugin;\r\n        const parts = this.trigger ? this.trigger.split('.') : [];\r\n        if (parts.length > 0) {\r\n            const [state, prop] = parts;\r\n            if (!model[state]) {\r\n                throw new GridError('pane.component', `Trigger ${state} not found`);\r\n            }\r\n            return [state, prop];\r\n        }\r\n        return null;\r\n    }\r\n}\r\nPaneComponent.ɵfac = function PaneComponent_Factory(t) { return new (t || PaneComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.TemplateHostService)); };\r\nPaneComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PaneComponent, selectors: [[\"q-grid-pane\"]], inputs: { trigger: \"trigger\" }, features: [i0.ɵɵProvidersFeature([GridPlugin, TemplateHostService])], decls: 3, vars: 0, consts: [[\"for\", \"pane-right\"], [\"for\", \"pane-left\"], [1, \"q-grid-pane\", \"q-grid-pane-right\"], [\"key\", \"plugin-pane-right.tpl.html\", 3, \"context\"], [1, \"q-grid-pane\", \"q-grid-pane-left\"], [\"key\", \"plugin-pane-left.tpl.html\", 3, \"context\"]], template: function PaneComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"q-grid-layer\");\r\n        i0.ɵɵtemplate(1, PaneComponent_ng_template_1_Template, 2, 1, \"ng-template\", 0);\r\n        i0.ɵɵtemplate(2, PaneComponent_ng_template_2_Template, 2, 1, \"ng-template\", 1);\r\n        i0.ɵɵelementEnd();\r\n    } }, dependencies: [i1.TemplateDirective, i1.TemplateCacheDirective, i1.LayerComponent], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PaneComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-pane', providers: [GridPlugin, TemplateHostService], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<q-grid-layer>\\n    <ng-template for=\\\"pane-right\\\">\\n        <div class=\\\"q-grid-pane q-grid-pane-right\\\">\\n            <ng-container key=\\\"plugin-pane-right.tpl.html\\\"\\n                          [context]=\\\"context.right\\\">\\n            </ng-container>\\n        </div>\\n    </ng-template>\\n    <ng-template for=\\\"pane-left\\\">\\n        <div class=\\\"q-grid-pane q-grid-pane-left\\\">\\n            <ng-container key=\\\"plugin-pane-left.tpl.html\\\"\\n                          [context]=\\\"context.left\\\">\\n            </ng-container>\\n        </div>\\n    </ng-template>\\n</q-grid-layer>\\n\" }]\r\n    }], function () { return [{ type: i1.GridPlugin }, { type: i0.ChangeDetectorRef }, { type: i1.TemplateHostService }]; }, { trigger: [{\r\n            type: Input\r\n        }] }); })();\n\nclass PaneModule {\r\n}\r\nPaneModule.ɵfac = function PaneModule_Factory(t) { return new (t || PaneModule)(); };\r\nPaneModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: PaneModule });\r\nPaneModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\r\n        TemplateModule,\r\n        LayerModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PaneModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    PaneComponent,\r\n                ],\r\n                exports: [\r\n                    PaneComponent,\r\n                ],\r\n                imports: [\r\n                    CommonModule,\r\n                    TemplateModule,\r\n                    LayerModule,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(PaneModule, { declarations: [PaneComponent], imports: [CommonModule,\r\n        TemplateModule,\r\n        LayerModule], exports: [PaneComponent] }); })();\n\nclass PersistenceComponent {\r\n    constructor(plugin, modelBuilder, stateAccessor) {\r\n        this.plugin = plugin;\r\n        this.modelBuilder = modelBuilder;\r\n        this.stateAccessor = stateAccessor;\r\n        this.persistenceState = this.stateAccessor.setter(PersistenceState);\r\n        this.service = null;\r\n    }\r\n    set schedule(schedule) { this.persistenceState({ schedule }); }\r\n    set storage(storage) { this.persistenceState({ storage }); }\r\n    ngOnChanges() {\r\n        const { model } = this.plugin;\r\n        this.stateAccessor.write(model);\r\n    }\r\n    ngOnInit() {\r\n        const { model, disposable, observe, observeReply } = this.plugin;\r\n        const id = `q-grid:${model.grid().id}:persistence-list`;\r\n        model.persistence({ id });\r\n        this.service = new PersistenceService(model, () => this.modelBuilder.build());\r\n        observeReply(model.dataChanged)\r\n            .pipe(filter(e => {\r\n            if (e.hasChanges('rows') || e.hasChanges('columns')) {\r\n                const { rows, columns } = e.state;\r\n                if (rows.length > 0 && columns.length > 0) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }), takeOnce())\r\n            .subscribe(() => model.persistence()\r\n            .storage\r\n            .getItem(id)\r\n            .then((items) => {\r\n            if (!items || items.length === 0) {\r\n                return;\r\n            }\r\n            const defaultItem = items.find(item => item.isDefault);\r\n            if (defaultItem) {\r\n                this.service.load(defaultItem.model);\r\n            }\r\n        }));\r\n        switch (model.persistence().schedule) {\r\n            case 'onDemand': {\r\n                const historyAction = new Action(new Command(), 'Save/Load', 'history');\r\n                historyAction.templateUrl = 'plugin-persistence.tpl.html';\r\n                const items = Composite.list([model.action().items, [historyAction]]);\r\n                model.action({ items }, { source: 'persistence.component' });\r\n                disposable.add(() => {\r\n                    const notPersistenceActions = model.action().items.filter(x => x !== historyAction);\r\n                    model.action({ items: notPersistenceActions }, { source: 'persistence.component' });\r\n                });\r\n                break;\r\n            }\r\n            case 'onStateChange': {\r\n                const { settings, storage, defaultGroup } = model.persistence();\r\n                for (const state of Object.keys(settings)) {\r\n                    for (const key of settings[state]) {\r\n                        observe(model[state + 'Changed'])\r\n                            .pipe(\r\n                        // TODO: get rid of e.tag.source check\r\n                        filter(e => e.hasChanges(key) && e.tag.source !== 'persistence.service'))\r\n                            .subscribe(() => {\r\n                            const currentModel = this.service.save();\r\n                            const item = {\r\n                                title: `auto-save: ${state}.${key} changed`,\r\n                                modified: Date.now(),\r\n                                group: defaultGroup,\r\n                                model: currentModel,\r\n                                isDefault: true,\r\n                                canEdit: false,\r\n                            };\r\n                            storage.setItem(id, [item]);\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\nPersistenceComponent.ɵfac = function PersistenceComponent_Factory(t) { return new (t || PersistenceComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i1.GridModelBuilder), i0.ɵɵdirectiveInject(i1.StateAccessor)); };\r\nPersistenceComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PersistenceComponent, selectors: [[\"q-grid-persistence\"]], inputs: { schedule: \"schedule\", storage: \"storage\" }, features: [i0.ɵɵProvidersFeature([GridPlugin, StateAccessor]), i0.ɵɵNgOnChangesFeature], decls: 0, vars: 0, template: function PersistenceComponent_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PersistenceComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'q-grid-persistence',\r\n                template: '',\r\n                providers: [GridPlugin, StateAccessor],\r\n                changeDetection: ChangeDetectionStrategy.OnPush,\r\n            }]\r\n    }], function () { return [{ type: i1.GridPlugin }, { type: i1.GridModelBuilder }, { type: i1.StateAccessor }]; }, { schedule: [{\r\n            type: Input,\r\n            args: ['schedule']\r\n        }], storage: [{\r\n            type: Input,\r\n            args: ['storage']\r\n        }] }); })();\n\nclass PersistencePanelComponent {\r\n    constructor(plugin, modelBuilder) {\r\n        this.plugin = plugin;\r\n        this.modelBuilder = modelBuilder;\r\n    }\r\n    ngOnInit() {\r\n        const persistence = new PersistencePlugin(this.plugin, () => this.modelBuilder.build());\r\n        this.context = { $implicit: persistence };\r\n    }\r\n}\r\nPersistencePanelComponent.ɵfac = function PersistencePanelComponent_Factory(t) { return new (t || PersistencePanelComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i1.GridModelBuilder)); };\r\nPersistencePanelComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PersistencePanelComponent, selectors: [[\"q-grid-persistence-panel\"]], features: [i0.ɵɵProvidersFeature([GridPlugin])], decls: 1, vars: 1, consts: [[\"key\", \"plugin-persistence-panel.tpl.html\", 3, \"context\"]], template: function PersistencePanelComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementContainer(0, 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"context\", ctx.context);\r\n    } }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PersistencePanelComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-persistence-panel', providers: [GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-persistence-panel.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\n\" }]\r\n    }], function () { return [{ type: i1.GridPlugin }, { type: i1.GridModelBuilder }]; }, null); })();\n\nclass PersistenceModule {\r\n}\r\nPersistenceModule.ɵfac = function PersistenceModule_Factory(t) { return new (t || PersistenceModule)(); };\r\nPersistenceModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: PersistenceModule });\r\nPersistenceModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [FormsModule,\r\n        TemplateModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PersistenceModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [\r\n                    FormsModule,\r\n                    TemplateModule,\r\n                ],\r\n                exports: [\r\n                    PersistenceComponent,\r\n                    PersistencePanelComponent,\r\n                ],\r\n                declarations: [\r\n                    PersistenceComponent,\r\n                    PersistencePanelComponent,\r\n                ]\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(PersistenceModule, { declarations: [PersistenceComponent,\r\n        PersistencePanelComponent], imports: [FormsModule,\r\n        TemplateModule], exports: [PersistenceComponent,\r\n        PersistencePanelComponent] }); })();\n\nclass ProgressComponent {\r\n    constructor(plugin, cd) {\r\n        this.plugin = plugin;\r\n        this.cd = cd;\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n    }\r\n    get isBusy() {\r\n        const { isBusy, queue } = this.plugin.model.progress();\r\n        return isBusy || queue.length;\r\n    }\r\n    ngOnInit() {\r\n        const { model, observeReply } = this.plugin;\r\n        observeReply(model.progressChanged)\r\n            .subscribe(() => this.cd.detectChanges());\r\n    }\r\n}\r\nProgressComponent.ɵfac = function ProgressComponent_Factory(t) { return new (t || ProgressComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };\r\nProgressComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ProgressComponent, selectors: [[\"q-grid-progress\"]], features: [i0.ɵɵProvidersFeature([GridPlugin])], decls: 1, vars: 1, consts: [[\"key\", \"plugin-progress.tpl.html\", 3, \"context\"]], template: function ProgressComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementContainer(0, 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"context\", ctx.context);\r\n    } }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProgressComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-progress', providers: [GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-progress.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\n\" }]\r\n    }], function () { return [{ type: i1.GridPlugin }, { type: i0.ChangeDetectorRef }]; }, null); })();\n\nclass ProgressModule {\r\n}\r\nProgressModule.ɵfac = function ProgressModule_Factory(t) { return new (t || ProgressModule)(); };\r\nProgressModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ProgressModule });\r\nProgressModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProgressModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    ProgressComponent,\r\n                ],\r\n                exports: [\r\n                    ProgressComponent,\r\n                ],\r\n                imports: [\r\n                    TemplateModule,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ProgressModule, { declarations: [ProgressComponent], imports: [TemplateModule], exports: [ProgressComponent] }); })();\n\nclass QueryBuilderComponent {\r\n    constructor(plugin) {\r\n        this.plugin = plugin;\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n    }\r\n    ngOnInit() {\r\n        const { model, disposable } = this.plugin;\r\n        const action = new Action(new Command(), 'Query Builder', 'filter');\r\n        action.templateUrl = 'plugin-query-builder.tpl.html';\r\n        const items = Composite.list([model.action().items, [action]]);\r\n        model.action({\r\n            items,\r\n        }, {\r\n            source: 'query-builder.component',\r\n        });\r\n        disposable.add(() => {\r\n            model.action({\r\n                items: model\r\n                    .action()\r\n                    .items\r\n                    .filter(x => x !== action),\r\n            }, {\r\n                source: 'query-builder.component',\r\n            });\r\n        });\r\n    }\r\n}\r\nQueryBuilderComponent.ɵfac = function QueryBuilderComponent_Factory(t) { return new (t || QueryBuilderComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin)); };\r\nQueryBuilderComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: QueryBuilderComponent, selectors: [[\"q-grid-query-builder\"]], features: [i0.ɵɵProvidersFeature([GridPlugin])], decls: 1, vars: 1, consts: [[\"key\", \"plugin-query-builder.tpl.html\", 3, \"context\"]], template: function QueryBuilderComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementContainer(0, 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"context\", ctx.context);\r\n    } }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QueryBuilderComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-query-builder', providers: [GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-query-builder.tpl.html\\\"\\n              [context]=\\\"context\\\">\\n</ng-container>\\n\" }]\r\n    }], function () { return [{ type: i1.GridPlugin }]; }, null); })();\n\nclass QueryBuilderModel {\r\n    constructor() {\r\n        this.node = null;\r\n    }\r\n}\n\nclass TraverseService {\r\n    findUp(node, test) {\r\n        while (node) {\r\n            if (test(node)) {\r\n                return node;\r\n            }\r\n            node = node.parent;\r\n        }\r\n        return null;\r\n    }\r\n    findUpSibling(node) {\r\n        if (node.parent) {\r\n            const children = node.parent.children;\r\n            const index = children.indexOf(node);\r\n            if (index >= 0) {\r\n                if (index > 0) {\r\n                    return children[index - 1];\r\n                }\r\n                return node.parent;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    depth(root) {\r\n        return (reduce, memo) => {\r\n            memo = this.visitLine(reduce, memo, root, root.line);\r\n            const children = root.children;\r\n            const length = children.length;\r\n            for (let i = 0; i < length; i++) {\r\n                memo = this.depth(children[i])(reduce, memo);\r\n            }\r\n            return memo;\r\n        };\r\n    }\r\n    visitLine(reduce, memo, node, line) {\r\n        const groups = line.expressions;\r\n        const length = groups.length;\r\n        for (let i = 0; i < length; i++) {\r\n            memo = this.visitGroup(reduce, memo, node, line, groups[i]);\r\n        }\r\n        return memo;\r\n    }\r\n    visitGroup(reduce, memo, node, line, group) {\r\n        const expressions = group.expressions;\r\n        const length = expressions.length;\r\n        for (let i = 0; i < length; i++) {\r\n            memo = reduce(memo, expressions[i], line, node);\r\n        }\r\n        return memo;\r\n    }\r\n}\n\nfunction method(inst, key) {\r\n    const sourceFn = inst[key];\r\n    return {\r\n        with: withFactory(inst, key, sourceFn),\r\n    };\r\n}\r\nfunction methodsOf(inst) {\r\n    const keys = Object.keys(inst);\r\n    const length = keys.length;\r\n    const patch = {};\r\n    for (let i = 0; i < length; i++) {\r\n        const key = keys[i];\r\n        if (isFunction(inst[key])) {\r\n            patch[key] = method(inst, key);\r\n        }\r\n    }\r\n    return {\r\n        with: (...args) => {\r\n            const patchKeys = Object.keys(patch);\r\n            const patchLength = patchKeys.length;\r\n            for (let i = 0; i < patchLength; i++) {\r\n                const key = patchKeys[i];\r\n                inst.action = key;\r\n                patch[key].with.apply(inst, args);\r\n            }\r\n        },\r\n    };\r\n}\r\nfunction withFactory(inst, key, sourceFn) {\r\n    const withFn = (...withArgs) => inst[key] = (...keyArgs) => sourceFn.apply(inst, withArgs.concat(keyArgs));\r\n    withFn.decorator = (...args) => {\r\n        const decorate = args[0];\r\n        args = args.slice(1);\r\n        inst[key] = () => decorate.apply(inst, [\r\n            sourceFn,\r\n            inst,\r\n            key,\r\n        ].concat(args));\r\n    };\r\n    return withFn;\r\n}\n\nclass GroupSchema {\r\n    constructor(node, line) {\r\n        this.node = node;\r\n        this.line = line;\r\n        this.plan = [];\r\n    }\r\n    apply(group) {\r\n        this.plan.forEach(p => p(this.node, this.line, group));\r\n    }\r\n}\n\nfunction nodeSchema(GroupSchemaT) {\r\n    return class NodeSchema {\r\n        constructor(schemaMap = {}) {\r\n            this.schemaMap = schemaMap;\r\n            this.plan = [];\r\n            this.planMap = {};\r\n        }\r\n        clone() {\r\n            const schema = new NodeSchema({ ...this.schemaMap });\r\n            schema.plan = [...this.plan];\r\n            schema.planMap = { ...this.planMap };\r\n            return schema;\r\n        }\r\n        attr(key, value) {\r\n            this.plan.push(node => node.attr(key, value));\r\n            return this;\r\n        }\r\n        apply(node) {\r\n            node = node || new Node('#root', this);\r\n            const line = new Line(GroupSchemaT);\r\n            node.line = line;\r\n            this.plan.forEach(p => p(node, line));\r\n            return node;\r\n        }\r\n        node(id, build) {\r\n            if (!build) {\r\n                throw new GridError('node.schema', 'Build function is not defined');\r\n            }\r\n            this.plan.push(node => {\r\n                const schema = new NodeSchema(this.schemaMap);\r\n                build(schema);\r\n                const newNode = new Node(id, schema, node);\r\n                schema.apply(newNode);\r\n                node.addChildAfter(newNode);\r\n                this.schemaMap[id] = schema;\r\n                return node;\r\n            });\r\n            return this;\r\n        }\r\n        group(id, build) {\r\n            if (!build) {\r\n                throw new GridError('node.schema', 'Build function is not defined');\r\n            }\r\n            const buildGroup = (node, line) => {\r\n                const group = new GroupExpression();\r\n                group.id = id;\r\n                const schema = new GroupSchemaT(node, line);\r\n                build(schema);\r\n                schema.apply(group);\r\n                line.add(group);\r\n                return node;\r\n            };\r\n            this.plan.push(buildGroup);\r\n            this.planMap[id] = buildGroup;\r\n            return this;\r\n        }\r\n        get(id) {\r\n            const schema = this.schemaMap[id];\r\n            if (!schema) {\r\n                throw new GridError('node.schema', `Schema ${id} is not found`);\r\n            }\r\n            return schema;\r\n        }\r\n        materialize(id) {\r\n            const schema = this.get(id);\r\n            return schema.apply(new Node(id, schema));\r\n        }\r\n    };\r\n}\n\nclass EmptyStatement {\r\n    constructor() {\r\n        this.type = 'empty';\r\n        this.templateKey = 'eb-empty.tpl.html';\r\n    }\r\n}\n\nclass ExpressionBuilder {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n    }\r\n    build(statements) {\r\n        const NodeSchemaT = nodeSchema(GroupSchema);\r\n        const settings = this.settings;\r\n        statements\r\n            .concat([new EmptyStatement()])\r\n            .forEach(statement => {\r\n            const factory = function (...args) {\r\n                let id = guid();\r\n                let sampleExpression;\r\n                if (args.length > 1) {\r\n                    id = args[0];\r\n                    sampleExpression = args[1];\r\n                }\r\n                else if (args.length === 1) {\r\n                    sampleExpression = args[0];\r\n                }\r\n                const build = function (node, line) {\r\n                    const expression = defaults(sampleExpression, statement.defaults, settings.defaults);\r\n                    expression.id = id;\r\n                    expression.type = statement.type;\r\n                    expression.templateUrl = statement.templateKey;\r\n                    const group = new GroupExpression();\r\n                    group.id = id;\r\n                    group.expressions.push(expression);\r\n                    line.add(group);\r\n                    methodsOf(expression).with(node, line);\r\n                    const keys = Object.keys(expression);\r\n                    keys.forEach(key => {\r\n                        const sourceFunction = expression[key];\r\n                        if (isFunction(sourceFunction)) {\r\n                            expression[key] = (...context) => {\r\n                                const result = sourceFunction.apply(expression, context);\r\n                                // TODO add decorator for mutable methods instead of trigger\r\n                                if (!line.immutable) {\r\n                                    expression.method = expression.method || [];\r\n                                    if (expression.method.indexOf(key) < 0) {\r\n                                        expression.method.push(key);\r\n                                    }\r\n                                    line.immutable = true;\r\n                                }\r\n                                return result;\r\n                            };\r\n                        }\r\n                    });\r\n                    return node;\r\n                };\r\n                this.plan.push(build);\r\n                this.planMap[id] = build;\r\n                return this;\r\n            };\r\n            const groupFactory = function (...args) {\r\n                let id = guid();\r\n                let sampleExpression;\r\n                if (args.length > 1) {\r\n                    id = args[0];\r\n                    sampleExpression = args[1];\r\n                }\r\n                else if (args.length === 1) {\r\n                    sampleExpression = args[0];\r\n                }\r\n                const build = function (node, line, expressionGroup) {\r\n                    const expression = defaults(sampleExpression, statement.defaults, settings.defaults);\r\n                    expression.id = id;\r\n                    expression.type = statement.type;\r\n                    expression.templateUrl = statement.templateKey;\r\n                    expressionGroup.expressions.push(expression);\r\n                    methodsOf(expression).with(node, line);\r\n                    return node;\r\n                };\r\n                this.plan.push(build);\r\n                return this;\r\n            };\r\n            NodeSchemaT.prototype[statement.type] = factory;\r\n            GroupSchema.prototype[statement.type] = groupFactory;\r\n        });\r\n        // TODO: think how to avoid this\r\n        return new NodeSchemaT();\r\n    }\r\n}\n\nfunction swap(inst) {\r\n    const result = {};\r\n    for (const prop in inst) {\r\n        if (Object.prototype.hasOwnProperty.call(inst, prop)) {\r\n            result[inst[prop]] = prop;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nconst commonOperators = [\r\n    'EQUALS',\r\n    'NOT EQUALS',\r\n    'IN',\r\n    'IS EMPTY',\r\n    'IS NOT EMPTY',\r\n];\r\nconst oneToOneCommonOperators = ['EQUALS', 'NOT EQUALS'];\r\nconst textOperators = [\r\n    'LIKE',\r\n    'NOT LIKE',\r\n    'STARTS WITH',\r\n    'ENDS WITH',\r\n];\r\nconst numberOperators = [\r\n    'BETWEEN',\r\n    'GREATER THAN',\r\n    'LESS THAN',\r\n    'GREATER OR EQ. TO',\r\n    'LESS OR EQ. TO',\r\n];\r\nconst oneToOneNumberOperators = [\r\n    'GREATER THAN',\r\n    'LESS THAN',\r\n    'GREATER OR EQ. TO',\r\n    'LESS OR EQ. TO',\r\n];\r\nconst camelCaseMapping = {\r\n    'IS EMPTY': 'isNull',\r\n    'IS NOT EMPTY': 'isNotNull',\r\n    'EQUALS': 'equals',\r\n    'NOT EQUALS': 'notEquals',\r\n    'GREATER OR EQ. TO': 'greaterThanOrEquals',\r\n    'LESS OR EQ. TO': 'lessThanOrEquals',\r\n    'GREATER THAN': 'greaterThan',\r\n    'LESS THAN': 'lessThan',\r\n    'LIKE': 'like',\r\n    'NOT LIKE': 'notLike',\r\n    'STARTS WITH': 'startsWith',\r\n    'ENDS WITH': 'endsWith',\r\n    'IN': 'in',\r\n    'BETWEEN': 'between',\r\n};\r\nconst typeMapping = {\r\n    bool: oneToOneCommonOperators,\r\n    id: commonOperators.concat(textOperators),\r\n    text: commonOperators.concat(textOperators),\r\n    email: commonOperators.concat(textOperators),\r\n    url: commonOperators.concat(textOperators),\r\n    password: commonOperators.concat(textOperators),\r\n    number: commonOperators.concat(numberOperators),\r\n    date: commonOperators.concat(numberOperators),\r\n    time: commonOperators.concat(numberOperators),\r\n    currency: commonOperators.concat(numberOperators),\r\n};\r\nconst oneToOneMapping = {\r\n    bool: oneToOneCommonOperators,\r\n    id: oneToOneCommonOperators.concat(textOperators),\r\n    text: oneToOneCommonOperators.concat(textOperators),\r\n    email: oneToOneCommonOperators.concat(textOperators),\r\n    url: oneToOneCommonOperators.concat(textOperators),\r\n    password: oneToOneCommonOperators.concat(textOperators),\r\n    number: oneToOneCommonOperators.concat(oneToOneNumberOperators),\r\n    date: oneToOneCommonOperators.concat(oneToOneNumberOperators),\r\n    time: oneToOneCommonOperators.concat(oneToOneNumberOperators),\r\n    currency: oneToOneCommonOperators.concat(oneToOneNumberOperators),\r\n};\r\nconst labelMapping = swap(camelCaseMapping);\n\nclass QueryBuilderService {\r\n    constructor(model) {\r\n        this.model = model;\r\n    }\r\n    columns() {\r\n        const model = this.model;\r\n        return model\r\n            .columnList()\r\n            .line\r\n            .filter(column => Object.prototype.hasOwnProperty.call(typeMapping, column.type))\r\n            .map(column => ({\r\n            key: column.key,\r\n            title: column.title,\r\n            type: column.type,\r\n        }));\r\n    }\r\n    columnMap() {\r\n        return this.columns().reduce((memo, column) => {\r\n            memo[column.key] = column;\r\n            return memo;\r\n        }, {});\r\n    }\r\n    submit(expression) {\r\n        const model = this.model;\r\n        model.filter({\r\n            by: expression,\r\n        }, {\r\n            source: 'query-builder.service',\r\n        });\r\n    }\r\n    suggest(key, skip, take, search, selection) {\r\n        selection = (selection || []).map(item => ('' + item).toLowerCase());\r\n        const model = this.model;\r\n        const columnMap = columnService.mapColumns(model.columnList().line);\r\n        const column = columnMap[key];\r\n        if (!column) {\r\n            throw new GridError('query-builder.service', `Column ${key} is not found`);\r\n        }\r\n        const getValue = getValueFactory(column);\r\n        return new Promise(resolve => {\r\n            const view = model\r\n                .data()\r\n                .rows\r\n                .map(getValue)\r\n                .filter(item => !isUndefined(item) &&\r\n                item !== '' &&\r\n                item !== null &&\r\n                selection.indexOf(('' + item).toLowerCase()) < 0);\r\n            const uniqueView = uniq(view);\r\n            const sortedView = uniqueView.sort();\r\n            const searchText = ('' + search).toLowerCase();\r\n            const filterView = searchText\r\n                ? sortedView.filter(x => ('' + x).toLowerCase().indexOf(searchText) >= 0)\r\n                : sortedView;\r\n            const toggleView = filterView.length ? filterView : sortedView;\r\n            const pageView = toggleView.slice(skip, take);\r\n            resolve(pageView);\r\n        });\r\n    }\r\n    build() {\r\n        const statements = [\r\n            {\r\n                type: 'label',\r\n                templateKey: 'plugin-eb-label.tpl.html',\r\n            },\r\n            {\r\n                type: 'input',\r\n                templateKey: 'plugin-eb-input.tpl.html',\r\n            },\r\n            {\r\n                type: 'select',\r\n                templateKey: 'plugin-eb-select.tpl.html',\r\n            },\r\n            {\r\n                type: 'button',\r\n                templateKey: 'plugin-eb-button.tpl.html',\r\n            },\r\n            {\r\n                type: 'iconButton',\r\n                templateKey: 'plugin-eb-icon-button.tpl.html',\r\n            },\r\n            {\r\n                type: 'autocomplete',\r\n                templateKey: 'plugin-eb-autocomplete.tpl.html',\r\n            },\r\n            {\r\n                type: 'multiselect',\r\n                templateKey: 'plugin-eb-multiselect.tpl.html',\r\n            },\r\n        ];\r\n        const settings = {\r\n            defaults: {\r\n                isValid: function () {\r\n                    return !this.validate || !(this.state = this.validate()).length;\r\n                },\r\n            },\r\n        };\r\n        return new ExpressionBuilder(settings)\r\n            .build(statements);\r\n    }\r\n}\n\nfunction visit(item) {\r\n    switch (item.id) {\r\n        case '#root':\r\n            return visit(item.children[0]);\r\n        case '#logical': {\r\n            const group = visitGroup(item);\r\n            if (group) {\r\n                if (!(group.left || group.right)) {\r\n                    return null;\r\n                }\r\n            }\r\n            return group;\r\n        }\r\n        case '#condition':\r\n            return visitCondition(item);\r\n        default:\r\n            throw new GridError('converter', `Invalid kind ${item.kind}`);\r\n    }\r\n}\r\nfunction visitGroup(node) {\r\n    const line = node.line;\r\n    const opExpr = find(line, '#logical-op', '#logical-op');\r\n    const children = node.children.filter(notPlaceholder).map(visit);\r\n    if (children.length === 0) {\r\n        return null;\r\n    }\r\n    if (children.length === 1) {\r\n        return {\r\n            kind: 'group',\r\n            op: opExpr.value.toLowerCase(),\r\n            left: children[0],\r\n            right: null,\r\n        };\r\n    }\r\n    return children\r\n        .slice(1)\r\n        .reduce((memo, item) => ({\r\n        kind: 'group',\r\n        op: opExpr.value.toLowerCase(),\r\n        left: memo,\r\n        right: item,\r\n    }), children[0]);\r\n}\r\nfunction visitCondition(node) {\r\n    const line = node.line;\r\n    const opExpr = find(line, '#operator', '#operator');\r\n    const value = opExpr.value.toUpperCase();\r\n    let condition;\r\n    switch (value) {\r\n        case 'IS NOT EMPTY':\r\n        case 'IS EMPTY':\r\n            condition = visitUnary(line, opExpr.value);\r\n            break;\r\n        case 'EQUALS':\r\n        case 'NOT EQUALS':\r\n        case 'GREATER OR EQ. TO':\r\n        case 'GREATER THAN':\r\n        case 'LESS OR EQ. TO':\r\n        case 'LESS THAN':\r\n        case 'LIKE':\r\n        case 'NOT LIKE':\r\n        case 'STARTS WITH':\r\n        case 'ENDS WITH':\r\n            condition = visitBinary(line, opExpr.value);\r\n            break;\r\n        case 'BETWEEN':\r\n            condition = visitBetween(line);\r\n            break;\r\n        case 'IN':\r\n            condition = visitIn(line);\r\n            break;\r\n        default:\r\n            throw new GridError('converter', `Invalid operation ${value}`);\r\n    }\r\n    condition.kind = 'condition';\r\n    return condition;\r\n}\r\nfunction visitUnary(line, op) {\r\n    const left = visitField(line);\r\n    return {\r\n        left: left.value,\r\n        op: camelCaseMapping[op.toUpperCase()],\r\n    };\r\n}\r\nfunction visitBinary(line, op) {\r\n    const left = visitField(line);\r\n    const right = find(line, '#operand', '#value') || find(line, '#fieldRight');\r\n    return {\r\n        left: left.value,\r\n        op: camelCaseMapping[op.toUpperCase()],\r\n        right: right.value,\r\n    };\r\n}\r\nfunction visitIn(line) {\r\n    const left = visitField(line);\r\n    const right = find(line, '#operand', '#in-operand') || find(line, '#fieldRight');\r\n    return {\r\n        left: left.value,\r\n        op: 'in',\r\n        right: cloneDeep(right.values) || right.value,\r\n    };\r\n}\r\nfunction visitBetween(line) {\r\n    const left = visitField(line);\r\n    const from = find(line, '#operand', '#from') || find(line, '#fieldFrom');\r\n    const to = find(line, '#operand', '#to') || find(line, '#fieldTo');\r\n    return {\r\n        left: left.value,\r\n        op: 'between',\r\n        right: [from.value, to.value],\r\n    };\r\n}\r\nfunction visitField(line) {\r\n    return find(line, '#field') || find(line, '#fieldLeft');\r\n}\r\nfunction notPlaceholder(node) {\r\n    return !node.attributes.placeholder;\r\n}\r\nfunction find(line, groupId, exprId) {\r\n    const group = findById(line, groupId);\r\n    if (!group) {\r\n        return null;\r\n    }\r\n    return findById(group.expressions, exprId || groupId);\r\n}\r\nfunction findById(items, id) {\r\n    const result = items.filter(item => item.id === id);\r\n    const length = result.length;\r\n    if (length === 1) {\r\n        return result[0];\r\n    }\r\n    if (length > 1) {\r\n        throw new GridError('converter', `Ambiguous id ${id}`);\r\n    }\r\n    return null;\r\n}\n\nfunction suggestFactory(service, name) {\r\n    return function (node, line) {\r\n        const search = (this.value || '').toLowerCase();\r\n        const field = line.get(name).expressions[0].value;\r\n        return service.suggest(field, 0, 10, search);\r\n    };\r\n}\r\nfunction suggestsFactory(service, name) {\r\n    return function (node, line) {\r\n        const search = this.search;\r\n        const field = line.get(name).expressions[0].value;\r\n        const selection = (this.values || [])\r\n            .map(item => ('' + item).toLowerCase());\r\n        return new Promise((resolve, reject) => service\r\n            .suggest(field, 0, 10, search, selection)\r\n            .then(items => {\r\n            const result = selection.length\r\n                ? items.filter(item => selection.indexOf(('' + item).toLowerCase()) < 0)\r\n                : items;\r\n            resolve(result);\r\n        })\r\n            .catch(ex => reject(ex)));\r\n    };\r\n}\n\nclass Validator {\r\n    constructor(service) {\r\n        this.trueResult = [];\r\n        this.validators = {};\r\n        this.rules = {\r\n            'bool': ['required'],\r\n            'currency': ['required', 'decimal'],\r\n            'date': ['required', 'iso_date'],\r\n            'email': ['required'],\r\n            'file': ['required'],\r\n            'id': ['required'],\r\n            'image': ['required'],\r\n            'number': ['required', 'decimal'],\r\n            'password': ['required'],\r\n            'url': ['required'],\r\n            'reference': ['required'],\r\n            'text': ['required', 'string'],\r\n            'time': ['required'],\r\n        };\r\n        this.columnMap = service.columnMap();\r\n    }\r\n    for(key) {\r\n        const validators = this.validators;\r\n        if (Object.prototype.hasOwnProperty.call(validators, 'key')) {\r\n            return validators[key];\r\n        }\r\n        const column = this.columnMap[key];\r\n        if (!column) {\r\n            throw new GridError('validator', `Can't find column ${key}`);\r\n        }\r\n        const trueResult = this.trueResult;\r\n        const id = column.type;\r\n        const rule = this.rules[id];\r\n        let validate = () => trueResult;\r\n        if (rule) {\r\n            const schema = { [id]: rule };\r\n            validate = function test(value) {\r\n                if (isArray(value)) {\r\n                    const result = [];\r\n                    for (const item of value) {\r\n                        result.push(...test(item));\r\n                    }\r\n                    return result;\r\n                }\r\n                const target = { [id]: value };\r\n                const validator = createValidator(schema);\r\n                const isValid = validator.validate(target);\r\n                if (isValid) {\r\n                    return trueResult;\r\n                }\r\n                const error = validator.getErrors()[id];\r\n                return isArray(error) ? error : [error];\r\n            };\r\n        }\r\n        validators[key] = validate;\r\n        return validate;\r\n    }\r\n}\n\nconst getValue = (line, id, props) => {\r\n    const group = line.get(id);\r\n    if (group) {\r\n        if (group.expressions.length === 1) {\r\n            const expr = group.expressions[0];\r\n            const prop = props.filter(p => Object.prototype.hasOwnProperty.call(expr, p))[0];\r\n            if (prop) {\r\n                const value = expr[prop];\r\n                if (isArray(value) && value.length) {\r\n                    return value[0];\r\n                }\r\n                return value;\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n};\r\nclass WhereSchema {\r\n    constructor(service) {\r\n        this.service = service;\r\n    }\r\n    factory() {\r\n        const service = this.service;\r\n        const suggest = suggestFactory(service, '#field');\r\n        const suggests = suggestsFactory(service, '#field');\r\n        const validator = new Validator(service);\r\n        return this.service.build()\r\n            .node('#logical', function (logical) {\r\n            logical\r\n                .attr('serialize', {\r\n                '#logical-op': ['value'],\r\n            })\r\n                .attr('class', {\r\n                'qb-logical': true,\r\n                'qb-and': function (node) {\r\n                    const op = node.line.get('#logical-op');\r\n                    return op.expressions[0].value === 'AND';\r\n                },\r\n                'qb-or': function (node) {\r\n                    const op = node.line.get('#logical-op');\r\n                    return op.expressions[0].value === 'OR';\r\n                },\r\n            })\r\n                .select('#logical-op', {\r\n                classes: ['qb-operation'],\r\n                options: ['AND', 'OR'],\r\n                value: 'AND',\r\n            })\r\n                .node('#condition', function (condition) {\r\n                condition\r\n                    .attr('serialize', {\r\n                    '#field': ['value'],\r\n                    '#operator': ['value'],\r\n                    '#value': ['value'],\r\n                    '#from': ['value'],\r\n                    '#to': ['value'],\r\n                    '#in-operand': ['values'],\r\n                })\r\n                    .select('#field', {\r\n                    classes: ['qb-field'],\r\n                    options: service.columns().map(c => c.key),\r\n                    value: service.columns().length ? service.columns()[0].key : '',\r\n                    getLabel: function (node, line, key) {\r\n                        const column = service.columns().filter(c => c.key === key)[0];\r\n                        return (column && column.title) || null;\r\n                    },\r\n                    getType: function (node, line, key) {\r\n                        const column = service.columns().filter(c => c.key === key)[0];\r\n                        return (column && column.type) || null;\r\n                    },\r\n                    change: function (node, line) {\r\n                        const field = this.value;\r\n                        const type = this.getType(field);\r\n                        const ops = typeMapping[type] || [];\r\n                        const op = line.get('#operator').expressions[0];\r\n                        if (ops.indexOf(op.value) < 0) {\r\n                            op.value = ops.length ? ops[0] : null;\r\n                            op.change();\r\n                        }\r\n                        else {\r\n                            const operand = line.get('#operand').expressions[0];\r\n                            if (operand.validate) {\r\n                                const result = operand.validate();\r\n                                if (result.length) {\r\n                                    operand.value = null;\r\n                                }\r\n                            }\r\n                            else {\r\n                                operand.value = null;\r\n                            }\r\n                        }\r\n                    },\r\n                })\r\n                    .select('#operator', {\r\n                    classes: ['qb-operator'],\r\n                    getOptions: function (node, line) {\r\n                        const field = line.get('#field').expressions[0];\r\n                        const name = field.value;\r\n                        const type = field.getType(name);\r\n                        return type ? typeMapping[type] : [];\r\n                    },\r\n                    value: 'EQUALS',\r\n                    change: function (node, line) {\r\n                        switch (this.value.toLowerCase()) {\r\n                            case 'equals':\r\n                            case 'not equals':\r\n                            case 'greater than':\r\n                            case 'less than':\r\n                            case 'greater or eq. to':\r\n                            case 'less or eq. to':\r\n                            case 'like':\r\n                            case 'not like':\r\n                            case 'starts with':\r\n                            case 'ends with':\r\n                                line.put('#operand', node, function (schema) {\r\n                                    schema.input('#value', {\r\n                                        classes: {\r\n                                            'qb-operand': true,\r\n                                            'qb-has-value': function () {\r\n                                                return !!this.value;\r\n                                            },\r\n                                            'qb-invalid': function (n) {\r\n                                                return !this.isValid(n);\r\n                                            },\r\n                                        },\r\n                                        value: getValue(line, '#operand', ['value', 'values']),\r\n                                        validate: function () {\r\n                                            const field = line.get('#field').expressions[0].value;\r\n                                            return validator.for(field)(this.value);\r\n                                        },\r\n                                        placeholderText: 'Select value',\r\n                                        suggest: suggest,\r\n                                        options: null,\r\n                                        refresh: function (n, l) {\r\n                                            this.options = this.suggest(n, l);\r\n                                        },\r\n                                    });\r\n                                });\r\n                                break;\r\n                            case 'between':\r\n                                line.put('#operand', node, function (operand) {\r\n                                    operand\r\n                                        .input('#from', {\r\n                                        classes: {\r\n                                            'qb-operand': true,\r\n                                            'qb-has-value': function () {\r\n                                                return !!this.value;\r\n                                            },\r\n                                            'qb-invalid': function (n) {\r\n                                                return !this.isValid(n);\r\n                                            },\r\n                                        },\r\n                                        validate: function () {\r\n                                            const field = line.get('#field').expressions[0].value;\r\n                                            return validator.for(field)(this.value);\r\n                                        },\r\n                                        options: suggest,\r\n                                        value: null,\r\n                                        placeholderText: 'Select value',\r\n                                    })\r\n                                        .label('#and', {\r\n                                        classes: ['qb-operand', 'qb-operand-and-label'],\r\n                                        text: 'AND',\r\n                                    })\r\n                                        .input('#to', {\r\n                                        classes: {\r\n                                            'qb-operand': true,\r\n                                            'qb-has-value': function () {\r\n                                                return !!this.value;\r\n                                            },\r\n                                            'qb-invalid': function (n) {\r\n                                                return !this.isValid(n);\r\n                                            },\r\n                                        },\r\n                                        value: null,\r\n                                        validate: function () {\r\n                                            const field = line.get('#field').expressions[0].value;\r\n                                            return validator.for(field)(this.value);\r\n                                        },\r\n                                        placeholderText: 'Select value',\r\n                                        suggest: suggest,\r\n                                        options: null,\r\n                                        refresh: function (n, l) {\r\n                                            this.options = this.suggest(n, l);\r\n                                        },\r\n                                    });\r\n                                });\r\n                                break;\r\n                            case 'in':\r\n                                line.put('#operand', node, function (schema) {\r\n                                    schema\r\n                                        .label('#in-open', {\r\n                                        text: '(',\r\n                                    })\r\n                                        .multiselect('#in-operand', {\r\n                                        classes: {\r\n                                            'qb-operand': true,\r\n                                            'qb-has-value': function () {\r\n                                                return !!this.values.length;\r\n                                            },\r\n                                            'qb-invalid': function (n) {\r\n                                                return !this.isValid(n);\r\n                                            },\r\n                                        },\r\n                                        validate: function () {\r\n                                            const field = line.get('#field').expressions[0].value;\r\n                                            return validator.for(field)(this.values);\r\n                                        },\r\n                                        values: [],\r\n                                        options: suggests,\r\n                                        placeholderText: 'Select value',\r\n                                        add: function (n, l, v) {\r\n                                            if (v && this.values.indexOf(v) < 0) {\r\n                                                this.values.push(v);\r\n                                            }\r\n                                        },\r\n                                    })\r\n                                        .label('#in-close', {\r\n                                        text: ')',\r\n                                    });\r\n                                });\r\n                                break;\r\n                            case 'is empty':\r\n                            case 'is not empty':\r\n                                line.put('#operand', node, noop);\r\n                                break;\r\n                        }\r\n                    },\r\n                })\r\n                    .group('#operand', function (schema) {\r\n                    schema.autocomplete('#value', {\r\n                        classes: {\r\n                            'qb-operand': true,\r\n                            'qb-has-value': function () {\r\n                                return !!this.value;\r\n                            },\r\n                            'qb-invalid': function (node) {\r\n                                return !this.isValid(node);\r\n                            },\r\n                        },\r\n                        value: null,\r\n                        validate: function (node, line) {\r\n                            const field = line.get('#field').expressions[0].value;\r\n                            return validator.for(field)(this.value);\r\n                        },\r\n                        placeholderText: 'Select value',\r\n                        suggest: suggest,\r\n                        options: null,\r\n                        refresh: function (node, line) {\r\n                            this.options = this.suggest(node, line);\r\n                        },\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    }\r\n}\n\nclass QueryBuilderPanelComponent {\r\n    constructor(focusAfterRender, plugin, nodeService) {\r\n        this.focusAfterRender = focusAfterRender;\r\n        this.plugin = plugin;\r\n        this.nodeService = nodeService;\r\n        this.traverse = new TraverseService();\r\n        this.close = new EventEmitter();\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n        this.addGroup = new Command({\r\n            execute: () => {\r\n                const current = this.nodeService.current;\r\n                const parent = this.findLogicalNode(current);\r\n                const group = parent.clone();\r\n                parent.addChildAfter(group, current.id === '#condition' && current);\r\n                if (current.id === '#condition') {\r\n                    this.nodeService.current = group;\r\n                }\r\n            },\r\n            canExecute: () => !!this.findLogicalNode(this.nodeService.current),\r\n        });\r\n        this.addRule = new Command({\r\n            execute: () => {\r\n                const current = this.nodeService.current;\r\n                const parent = this.findLogicalNode(current);\r\n                const rule = this.plan.materialize('#condition');\r\n                parent.addChildAfter(rule, current.id === '#condition' && current);\r\n                if (current.id === '#condition') {\r\n                    this.nodeService.current = rule;\r\n                }\r\n            },\r\n            canExecute: () => !!this.findLogicalNode(this.nodeService.current),\r\n        });\r\n        this.remove = new Command({\r\n            execute: () => {\r\n                const current = this.nodeService.current;\r\n                if (current.id === '#logical' && current.level === 1) {\r\n                    current.clear();\r\n                }\r\n                else {\r\n                    const previous = this.traverse.findUpSibling(current);\r\n                    this.nodeService.current = previous;\r\n                    current.remove();\r\n                }\r\n            },\r\n            canExecute: () => {\r\n                const current = this.nodeService.current;\r\n                return current && (current.id === '#condition' || (current.level > 1 || current.children.length > 0));\r\n            },\r\n        });\r\n        this.submit = new Command({\r\n            source: 'query-builder.component',\r\n            execute: () => {\r\n                const serializer = new SerializationService();\r\n                const node = serializer.serialize(this.node);\r\n                const by = clone(this.plugin.model.filter().by);\r\n                by.$expression = visit(node);\r\n                const { model } = this.plugin;\r\n                model.filter({ by });\r\n                const qb = model.resolve(QueryBuilderModel);\r\n                qb.state({ node: by.$expression ? node : null });\r\n                this.close.emit();\r\n            },\r\n            canExecute: () => {\r\n                const depth = this.traverse.depth(this.node);\r\n                return depth((memo, expression, line, node) => node.attr('placeholder')\r\n                    ? memo\r\n                    : memo && expression.isValid(), true);\r\n            },\r\n        });\r\n        this.cancel = new Command({\r\n            source: 'query-builder.component',\r\n            execute: () => {\r\n                this.close.emit();\r\n            },\r\n        });\r\n        this.reset = new Command({\r\n            source: 'query-builder.component',\r\n            execute: () => {\r\n                const schema = new WhereSchema(this.queryService);\r\n                const plan = schema.factory();\r\n                this.node = plan.apply();\r\n                const root = this.node.children[0];\r\n                root.clear();\r\n                this.nodeService.current = this.node.children[0];\r\n            },\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        this.queryService = new QueryBuilderService(this.plugin.model);\r\n        const schema = new WhereSchema(this.queryService);\r\n        this.plan = schema.factory();\r\n        this.node = this.plan.apply();\r\n        const serializer = new SerializationService();\r\n        const qb = this.plugin.model.resolve(QueryBuilderModel);\r\n        const { node } = qb.state();\r\n        if (node) {\r\n            this.node = serializer.deserialize(this.plan, node);\r\n        }\r\n        this.nodeService.current = this.node.children[0];\r\n    }\r\n    findLogicalNode(node) {\r\n        return this.traverse.findUp(node, n => n.id === '#logical');\r\n    }\r\n}\r\nQueryBuilderPanelComponent.ɵfac = function QueryBuilderPanelComponent_Factory(t) { return new (t || QueryBuilderPanelComponent)(i0.ɵɵdirectiveInject(FocusAfterRender), i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(EbNodeService)); };\r\nQueryBuilderPanelComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: QueryBuilderPanelComponent, selectors: [[\"q-grid-query-builder-panel\"]], outputs: { close: \"close\" }, features: [i0.ɵɵProvidersFeature([FocusAfterRender, GridPlugin])], decls: 1, vars: 1, consts: [[\"key\", \"plugin-query-builder-panel.tpl.html\", 3, \"context\"]], template: function QueryBuilderPanelComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementContainer(0, 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"context\", ctx.context);\r\n    } }, dependencies: [i1.TemplateDirective], encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QueryBuilderPanelComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-query-builder-panel', providers: [FocusAfterRender, GridPlugin], template: \"<ng-container key=\\\"plugin-query-builder-panel.tpl.html\\\"\\n              [context]=\\\"context\\\">\\n</ng-container>\\n\" }]\r\n    }], function () { return [{ type: FocusAfterRender }, { type: i1.GridPlugin }, { type: EbNodeService }]; }, { close: [{\r\n            type: Output\r\n        }] }); })();\n\nclass QueryBuilderPipe {\r\n    transform(value, service) {\r\n        const node = value;\r\n        if (node) {\r\n            if (!this.visitor) {\r\n                const validator = new Validator(service);\r\n                const columnMap = service.columnMap();\r\n                this.visitor =\r\n                    new MarkupVisitor(k => columnMap[k].title, k => columnMap[k].type, (k, v) => validator.for(k)(v).length === 0);\r\n            }\r\n            const serializer = new SerializationService();\r\n            const filter = serializer.serialize(node);\r\n            const expression = visit(filter);\r\n            if (expression) {\r\n                return this.visitor.visit(expression);\r\n            }\r\n        }\r\n        return 'Please, select a query';\r\n    }\r\n}\r\nQueryBuilderPipe.ɵfac = function QueryBuilderPipe_Factory(t) { return new (t || QueryBuilderPipe)(); };\r\nQueryBuilderPipe.ɵpipe = /*@__PURE__*/ i0.ɵɵdefinePipe({ name: \"qGridQueryBuilderMarkup\", type: QueryBuilderPipe, pure: false });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QueryBuilderPipe, [{\r\n        type: Pipe,\r\n        args: [{\r\n                name: 'qGridQueryBuilderMarkup',\r\n                pure: false,\r\n            }]\r\n    }], null, null); })();\n\nclass QueryBuilderModule {\r\n    constructor(modelBuilder) {\r\n        modelBuilder\r\n            .register('queryBuilder', QueryBuilderModel);\r\n    }\r\n}\r\nQueryBuilderModule.ɵfac = function QueryBuilderModule_Factory(t) { return new (t || QueryBuilderModule)(i0.ɵɵinject(i1.GridModelBuilder)); };\r\nQueryBuilderModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: QueryBuilderModule });\r\nQueryBuilderModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QueryBuilderModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [\r\n                    TemplateModule,\r\n                ],\r\n                exports: [\r\n                    QueryBuilderComponent,\r\n                    QueryBuilderPanelComponent,\r\n                    QueryBuilderPipe,\r\n                ],\r\n                declarations: [\r\n                    QueryBuilderComponent,\r\n                    QueryBuilderPanelComponent,\r\n                    QueryBuilderPipe,\r\n                ],\r\n            }]\r\n    }], function () { return [{ type: i1.GridModelBuilder }]; }, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(QueryBuilderModule, { declarations: [QueryBuilderComponent,\r\n        QueryBuilderPanelComponent,\r\n        QueryBuilderPipe], imports: [TemplateModule], exports: [QueryBuilderComponent,\r\n        QueryBuilderPanelComponent,\r\n        QueryBuilderPipe] }); })();\n\nclass RaiseDirective {\r\n    constructor(element) {\r\n        this.element = element;\r\n        this.type = 'click';\r\n    }\r\n    ngAfterViewInit() {\r\n        const event = new Event(this.type);\r\n        const element = this.element.nativeElement;\r\n        const target = this.target\r\n            ? element.querySelector(this.target)\r\n            : element;\r\n        if (!target) {\r\n            throw new GridError('raise.directive', 'raise target is not found');\r\n        }\r\n        target.dispatchEvent(event);\r\n    }\r\n}\r\nRaiseDirective.ɵfac = function RaiseDirective_Factory(t) { return new (t || RaiseDirective)(i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nRaiseDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: RaiseDirective, selectors: [[\"\", \"q-grid-raise\", \"\"]], inputs: { type: [\"q-grid-raise\", \"type\"], target: [\"q-grid-raise-target\", \"target\"] } });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RaiseDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-raise]',\r\n            }]\r\n    }], function () { return [{ type: i0.ElementRef }]; }, { type: [{\r\n            type: Input,\r\n            args: ['q-grid-raise']\r\n        }], target: [{\r\n            type: Input,\r\n            args: ['q-grid-raise-target']\r\n        }] }); })();\n\nclass RaiseModule {\r\n}\r\nRaiseModule.ɵfac = function RaiseModule_Factory(t) { return new (t || RaiseModule)(); };\r\nRaiseModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: RaiseModule });\r\nRaiseModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RaiseModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    RaiseDirective,\r\n                ],\r\n                exports: [\r\n                    RaiseDirective,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(RaiseModule, { declarations: [RaiseDirective], exports: [RaiseDirective] }); })();\n\nclass ReferenceComponent {\r\n    constructor(modelBuilder, disposable) {\r\n        this.modelBuilder = modelBuilder;\r\n        this.disposable = disposable;\r\n        this.modelChange = new EventEmitter();\r\n        this.valueChange = new EventEmitter();\r\n        this.referenceChange = new EventEmitter();\r\n        this.caption = '';\r\n        this.autofocus = false;\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n    }\r\n    get value() { return this._value; }\r\n    set value(value) {\r\n        if (value !== this._value) {\r\n            this._value = value;\r\n            this.valueChange.emit(value);\r\n        }\r\n    }\r\n    get model() { return this._model; }\r\n    set model(value) {\r\n        if (value !== this._model) {\r\n            this._model = value;\r\n            this.modelChange.emit(value);\r\n        }\r\n    }\r\n    get reference() { return this._reference; }\r\n    set reference(value) {\r\n        if (value !== this._reference) {\r\n            this._reference = value;\r\n            this.referenceChange.emit(value);\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        this.reference = {\r\n            commit: new Command({ execute: e => this.value = e.entries }),\r\n            cancel: new Command(),\r\n            value: this.value,\r\n        };\r\n        if (this.cell.column.editorOptions?.modelFactory) {\r\n            this.model = this.cell.column.editorOptions.modelFactory({\r\n                reference: this.reference,\r\n                row: this.cell.row,\r\n                column: this.cell.column,\r\n                getValue: getValueFactory(this.cell.column),\r\n                createDefaultModel: () => this.modelBuilder.build(),\r\n            });\r\n            const selectionService = new SelectionService(this.model);\r\n            this.disposable.add(this.model.dataChanged.watch((e, off) => {\r\n                if (e.hasChanges('rows') && e.state.rows.length > 0) {\r\n                    off();\r\n                    if (!this.model.selection().items.length) {\r\n                        const { value } = this.reference;\r\n                        if (!isUndefined(value)) {\r\n                            const entries = isArray(value) ? value : [value];\r\n                            const items = selectionService.map(entries);\r\n                            this.model.selection({\r\n                                items,\r\n                            }, {\r\n                                source: 'reference.component',\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }));\r\n            this.disposable.add(this.model\r\n                .selectionChanged\r\n                // TODO: use rx syntax\r\n                .watch(e => {\r\n                // TODO: get rid of this check\r\n                if (e.tag.source === 'reference.component') {\r\n                    return;\r\n                }\r\n                if (e.hasChanges('items')) {\r\n                    const entries = selectionService.lookup(e.state.items);\r\n                    this.value = entries;\r\n                }\r\n            }));\r\n        }\r\n    }\r\n}\r\nReferenceComponent.ɵfac = function ReferenceComponent_Factory(t) { return new (t || ReferenceComponent)(i0.ɵɵdirectiveInject(i1.GridModelBuilder), i0.ɵɵdirectiveInject(i1.Disposable)); };\r\nReferenceComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ReferenceComponent, selectors: [[\"q-grid-reference\"]], inputs: { caption: \"caption\", autofocus: \"autofocus\", cell: \"cell\", value: \"value\", model: \"model\", reference: \"reference\" }, outputs: { modelChange: \"modelChange\", valueChange: \"valueChange\", referenceChange: \"referenceChange\" }, features: [i0.ɵɵProvidersFeature([Disposable])], decls: 1, vars: 1, consts: [[\"key\", \"plugin-reference.tpl.html\", 3, \"context\"]], template: function ReferenceComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementContainer(0, 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"context\", ctx.context);\r\n    } }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ReferenceComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-reference', providers: [Disposable], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-reference.tpl.html\\\"\\n              [context]=\\\"context\\\">\\n</ng-container>\\n\" }]\r\n    }], function () { return [{ type: i1.GridModelBuilder }, { type: i1.Disposable }]; }, { modelChange: [{\r\n            type: Output\r\n        }], valueChange: [{\r\n            type: Output\r\n        }], referenceChange: [{\r\n            type: Output\r\n        }], caption: [{\r\n            type: Input\r\n        }], autofocus: [{\r\n            type: Input\r\n        }], cell: [{\r\n            type: Input\r\n        }], value: [{\r\n            type: Input\r\n        }], model: [{\r\n            type: Input\r\n        }], reference: [{\r\n            type: Input\r\n        }] }); })();\n\nclass ReferenceEditorComponent {\r\n    constructor(disposable) {\r\n        this.disposable = disposable;\r\n        this.valueChange = new EventEmitter();\r\n        this.afterSubmit = new EventEmitter();\r\n        this.afterCancel = new EventEmitter();\r\n        this.caption = '';\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n        this.submit = new Command();\r\n        this.cancel = new Command();\r\n    }\r\n    get value() {\r\n        return this.state;\r\n    }\r\n    set value(value) {\r\n        if (value !== this.state) {\r\n            this.state = value;\r\n            this.valueChange.emit(value);\r\n        }\r\n    }\r\n    ngAfterViewInit() {\r\n        const { model } = this;\r\n        const { commit, cancel } = this.reference;\r\n        const { commitShortcuts, cancelShortcuts } = model.edit();\r\n        const selectionService = new SelectionService(model);\r\n        // TODO: think how to get rid of this shit.\r\n        setTimeout(() => {\r\n            this.submit = new Command({\r\n                shortcut: commitShortcuts.form,\r\n                canExecute: () => {\r\n                    const { items } = model.selection();\r\n                    const entries = selectionService.lookup(items);\r\n                    const context = { items, entries };\r\n                    return commit.canExecute(context);\r\n                },\r\n                execute: () => {\r\n                    const { items } = model.selection();\r\n                    const entries = selectionService.lookup(items);\r\n                    const context = { items, entries };\r\n                    if (commit.execute(context) !== false) {\r\n                        this.afterSubmit.emit();\r\n                    }\r\n                    else {\r\n                        this.afterCancel.emit();\r\n                    }\r\n                    return false;\r\n                },\r\n            });\r\n            this.cancel = new Command({\r\n                shortcut: cancelShortcuts.form || cancelShortcuts.$default,\r\n                canExecute: () => cancel.canExecute(),\r\n                execute: () => {\r\n                    if (cancel.execute() !== false) {\r\n                        this.afterCancel.emit();\r\n                    }\r\n                    return false;\r\n                },\r\n            });\r\n            const { shortcut, manager } = model.action();\r\n            this.disposable.add(shortcut.register(manager, [this.submit, this.cancel]));\r\n        }, 0);\r\n    }\r\n}\r\nReferenceEditorComponent.ɵfac = function ReferenceEditorComponent_Factory(t) { return new (t || ReferenceEditorComponent)(i0.ɵɵdirectiveInject(i1.Disposable)); };\r\nReferenceEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ReferenceEditorComponent, selectors: [[\"q-grid-reference-editor\"]], inputs: { caption: \"caption\", cell: \"cell\", value: \"value\" }, outputs: { valueChange: \"valueChange\", afterSubmit: \"afterSubmit\", afterCancel: \"afterCancel\" }, features: [i0.ɵɵProvidersFeature([Disposable])], decls: 1, vars: 1, consts: [[\"key\", \"plugin-reference-editor.tpl.html\", 3, \"context\"]], template: function ReferenceEditorComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementContainer(0, 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"context\", ctx.context);\r\n    } }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ReferenceEditorComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-reference-editor', providers: [Disposable], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-reference-editor.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\n\" }]\r\n    }], function () { return [{ type: i1.Disposable }]; }, { valueChange: [{\r\n            type: Output\r\n        }], afterSubmit: [{\r\n            type: Output\r\n        }], afterCancel: [{\r\n            type: Output\r\n        }], caption: [{\r\n            type: Input\r\n        }], cell: [{\r\n            type: Input\r\n        }], value: [{\r\n            type: Input\r\n        }] }); })();\n\nclass ReferenceEditorModule {\r\n}\r\nReferenceEditorModule.ɵfac = function ReferenceEditorModule_Factory(t) { return new (t || ReferenceEditorModule)(); };\r\nReferenceEditorModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ReferenceEditorModule });\r\nReferenceEditorModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ReferenceEditorModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    ReferenceEditorComponent,\r\n                    ReferenceComponent,\r\n                ],\r\n                exports: [\r\n                    ReferenceEditorComponent,\r\n                    ReferenceComponent,\r\n                ],\r\n                imports: [\r\n                    TemplateModule,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ReferenceEditorModule, { declarations: [ReferenceEditorComponent,\r\n        ReferenceComponent], imports: [TemplateModule], exports: [ReferenceEditorComponent,\r\n        ReferenceComponent] }); })();\n\nclass RestComponent {\r\n    constructor(http, plugin, stateAccessor) {\r\n        this.http = http;\r\n        this.plugin = plugin;\r\n        this.stateAccessor = stateAccessor;\r\n        this.restState = this.stateAccessor.setter(RestState);\r\n    }\r\n    set restUrl(url) { this.restState({ url }); }\r\n    set restMethod(method) { this.restState({ method }); }\r\n    set restSerialize(serialize) { this.restState({ serialize }); }\r\n    ngOnChanges() {\r\n        const { model } = this.plugin;\r\n        this.stateAccessor.write(model);\r\n    }\r\n    ngOnInit() {\r\n        const rest = new RestPlugin(this.plugin.model, {\r\n            get: (url, params) => this.http.get(url, { params }).toPromise(),\r\n            post: (url, data) => this.http.post(url, { data }).toPromise(),\r\n        });\r\n        this.context = { $implicit: rest };\r\n    }\r\n}\r\nRestComponent.ɵfac = function RestComponent_Factory(t) { return new (t || RestComponent)(i0.ɵɵdirectiveInject(i1$2.HttpClient), i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i1.StateAccessor)); };\r\nRestComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: RestComponent, selectors: [[\"q-grid-rest\"]], inputs: { restUrl: [\"url\", \"restUrl\"], restMethod: [\"method\", \"restMethod\"], restSerialize: [\"serialize\", \"restSerialize\"] }, features: [i0.ɵɵProvidersFeature([GridPlugin, StateAccessor]), i0.ɵɵNgOnChangesFeature], decls: 0, vars: 0, template: function RestComponent_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RestComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'q-grid-rest',\r\n                template: '',\r\n                providers: [GridPlugin, StateAccessor],\r\n                changeDetection: ChangeDetectionStrategy.OnPush,\r\n            }]\r\n    }], function () { return [{ type: i1$2.HttpClient }, { type: i1.GridPlugin }, { type: i1.StateAccessor }]; }, { restUrl: [{\r\n            type: Input,\r\n            args: ['url']\r\n        }], restMethod: [{\r\n            type: Input,\r\n            args: ['method']\r\n        }], restSerialize: [{\r\n            type: Input,\r\n            args: ['serialize']\r\n        }] }); })();\n\nclass RestModule {\r\n}\r\nRestModule.ɵfac = function RestModule_Factory(t) { return new (t || RestModule)(); };\r\nRestModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: RestModule });\r\nRestModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RestModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    RestComponent,\r\n                ],\r\n                exports: [\r\n                    RestComponent,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(RestModule, { declarations: [RestComponent], exports: [RestComponent] }); })();\n\nfunction RuleComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵprojection(0);\r\n} }\r\nconst _c0$1 = [\"*\"];\r\nclass RuleComponent {\r\n    constructor(plugin, templateHost) {\r\n        this.plugin = plugin;\r\n        this.templateHost = templateHost;\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n        this.templateHost.key = () => 'rule';\r\n    }\r\n    ngOnChanges(changes) {\r\n        const rule = {\r\n            for: this.for,\r\n            key: this.key,\r\n        };\r\n        const { model } = this.plugin;\r\n        const validation = model.validation;\r\n        const rules = Array.from(validation().rules);\r\n        Object\r\n            .keys(changes)\r\n            .forEach(key => {\r\n            if (!['for', 'key'].includes(key) && changes[key].firstChange) {\r\n                rule[key] = this[key];\r\n            }\r\n        });\r\n        rules.push(rule);\r\n        validation({ rules });\r\n    }\r\n}\r\nRuleComponent.ɵfac = function RuleComponent_Factory(t) { return new (t || RuleComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i1.TemplateHostService)); };\r\nRuleComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: RuleComponent, selectors: [[\"q-grid-rule\"]], viewQuery: function RuleComponent_Query(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵviewQuery(TemplateRef, 7);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\r\n    } }, inputs: { for: \"for\", key: \"key\", required: \"required\", not_empty_list: [\"notEmptyList\", \"not_empty_list\"], any_object: [\"anyObject\", \"any_object\"], eq: [\"equal\", \"eq\"], string: \"string\", length_between: [\"lengthBetween\", \"length_between\"], length_equal: [\"lengthEqual\", \"length_equal\"], min_length: [\"minLength\", \"min_length\"], max_length: [\"maxLength\", \"max_length\"], one_of: [\"oneOf\", \"one_of\"], like: [\"pattern\", \"like\"], integer: \"integer\", positive_integer: [\"positiveInteger\", \"positive_integer\"], decimal: \"decimal\", positive_decimal: [\"positiveDecimal\", \"positive_decimal\"], max_number: [\"maxNumber\", \"max_number\"], min_number: [\"minNumber\", \"min_number\"], email: \"email\", url: \"url\", iso_date: [\"isoDate\", \"iso_date\"], equal_to_field: [\"equalToField\", \"equal_to_field\"], list_of: [\"listOf\", \"list_of\"] }, features: [i0.ɵɵProvidersFeature([TemplateHostService, GridPlugin]), i0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0$1, decls: 1, vars: 0, template: function RuleComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵprojectionDef();\r\n        i0.ɵɵtemplate(0, RuleComponent_ng_template_0_Template, 1, 0, \"ng-template\");\r\n    } }, encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RuleComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-rule', providers: [TemplateHostService, GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template>\\n\\t<ng-content>\\n\\t</ng-content>\\n</ng-template>\\n\" }]\r\n    }], function () { return [{ type: i1.GridPlugin }, { type: i1.TemplateHostService }]; }, { for: [{\r\n            type: Input\r\n        }], key: [{\r\n            type: Input\r\n        }], required: [{\r\n            type: Input\r\n        }], not_empty_list: [{\r\n            type: Input,\r\n            args: ['notEmptyList']\r\n        }], any_object: [{\r\n            type: Input,\r\n            args: ['anyObject']\r\n        }], eq: [{\r\n            type: Input,\r\n            args: ['equal']\r\n        }], string: [{\r\n            type: Input\r\n        }], length_between: [{\r\n            type: Input,\r\n            args: ['lengthBetween']\r\n        }], length_equal: [{\r\n            type: Input,\r\n            args: ['lengthEqual']\r\n        }], min_length: [{\r\n            type: Input,\r\n            args: ['minLength']\r\n        }], max_length: [{\r\n            type: Input,\r\n            args: ['maxLength']\r\n        }], one_of: [{\r\n            type: Input,\r\n            args: ['oneOf']\r\n        }], like: [{\r\n            type: Input,\r\n            args: ['pattern']\r\n        }], integer: [{\r\n            type: Input\r\n        }], positive_integer: [{\r\n            type: Input,\r\n            args: ['positiveInteger']\r\n        }], decimal: [{\r\n            type: Input\r\n        }], positive_decimal: [{\r\n            type: Input,\r\n            args: ['positiveDecimal']\r\n        }], max_number: [{\r\n            type: Input,\r\n            args: ['maxNumber']\r\n        }], min_number: [{\r\n            type: Input,\r\n            args: ['minNumber']\r\n        }], email: [{\r\n            type: Input\r\n        }], url: [{\r\n            type: Input\r\n        }], iso_date: [{\r\n            type: Input,\r\n            args: ['isoDate']\r\n        }], equal_to_field: [{\r\n            type: Input,\r\n            args: ['equalToField']\r\n        }], list_of: [{\r\n            type: Input,\r\n            args: ['listOf']\r\n        }], templateRef: [{\r\n            type: ViewChild,\r\n            args: [TemplateRef, { static: true }]\r\n        }] }); })();\n\nclass StatusBarComponent {\r\n    constructor(plugin, cd, templateHost) {\r\n        this.plugin = plugin;\r\n        this.cd = cd;\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n        templateHost.key = () => 'plugin-status-bar.tpl.html';\r\n    }\r\n    get rowIndex() {\r\n        return selectRowIndex(this.plugin.model.navigation());\r\n    }\r\n    get columnIndex() {\r\n        return selectColumnIndex(this.plugin.model.navigation());\r\n    }\r\n    ngOnInit() {\r\n        const { model, observe } = this.plugin;\r\n        observe(model.navigationChanged)\r\n            .subscribe(() => this.cd.detectChanges());\r\n    }\r\n}\r\nStatusBarComponent.ɵfac = function StatusBarComponent_Factory(t) { return new (t || StatusBarComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.TemplateHostService)); };\r\nStatusBarComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: StatusBarComponent, selectors: [[\"q-grid-status-bar\"]], features: [i0.ɵɵProvidersFeature([TemplateHostService, GridPlugin])], decls: 1, vars: 1, consts: [[\"key\", \"plugin-status-bar.tpl.html\", 3, \"context\"]], template: function StatusBarComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementContainer(0, 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"context\", ctx.context);\r\n    } }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StatusBarComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-status-bar', providers: [TemplateHostService, GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-status-bar.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\n\" }]\r\n    }], function () { return [{ type: i1.GridPlugin }, { type: i0.ChangeDetectorRef }, { type: i1.TemplateHostService }]; }, null); })();\n\nclass StatusBarModule {\r\n}\r\nStatusBarModule.ɵfac = function StatusBarModule_Factory(t) { return new (t || StatusBarModule)(); };\r\nStatusBarModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: StatusBarModule });\r\nStatusBarModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StatusBarModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    StatusBarComponent,\r\n                ],\r\n                exports: [\r\n                    StatusBarComponent,\r\n                ],\r\n                imports: [\r\n                    TemplateModule,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(StatusBarModule, { declarations: [StatusBarComponent], imports: [TemplateModule], exports: [StatusBarComponent] }); })();\n\nfunction TabTrapComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵprojection(0);\r\n} }\r\nconst _c0 = [\"*\"];\r\nclass TabTrapComponent {\r\n    constructor(plugin, elementRef) {\r\n        this.plugin = plugin;\r\n        this.isActivating = false;\r\n        this.roundTrip = false;\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n        this.traps = new Map();\r\n        const listener = new EventListener(elementRef.nativeElement, new EventManager(this));\r\n        listener.on('keydown', e => {\r\n            const code = Shortcut.translate(e);\r\n            if (code === 'tab' || code === 'shift+tab') {\r\n                e.stopPropagation();\r\n            }\r\n        });\r\n    }\r\n    activate(target) {\r\n        if (this.isActivating) {\r\n            return;\r\n        }\r\n        this.isActivating = true;\r\n        try {\r\n            if (this.roundTrip) {\r\n                this.goRound(target);\r\n            }\r\n            else {\r\n                this.exit(target);\r\n            }\r\n        }\r\n        finally {\r\n            this.isActivating = false;\r\n        }\r\n    }\r\n    exit(target) {\r\n        const e = {\r\n            key: 'Tab',\r\n            keyCode: 9,\r\n            shiftKey: target === 'start',\r\n        };\r\n        const { model } = this.plugin;\r\n        const shortcut = model.action().shortcut;\r\n        shortcut.keyDown(e, 'tab-trap');\r\n    }\r\n    goRound(target) {\r\n        switch (target) {\r\n            case 'start': {\r\n                const end = this.traps.get('end');\r\n                end.focus();\r\n                break;\r\n            }\r\n            case 'end': {\r\n                const start = this.traps.get('start');\r\n                start.focus();\r\n                break;\r\n            }\r\n            default:\r\n                throw new GridError('tab.trap', `Invalid target ${target}`);\r\n        }\r\n    }\r\n}\r\nTabTrapComponent.ɵfac = function TabTrapComponent_Factory(t) { return new (t || TabTrapComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nTabTrapComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TabTrapComponent, selectors: [[\"q-grid-tab-trap\"]], viewQuery: function TabTrapComponent_Query(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵviewQuery(TemplateRef, 7);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\r\n    } }, inputs: { roundTrip: \"roundTrip\" }, features: [i0.ɵɵProvidersFeature([GridPlugin])], ngContentSelectors: _c0, decls: 2, vars: 1, consts: [[\"key\", \"plugin-tab-trap.tpl.html\", 3, \"context\"]], template: function TabTrapComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵprojectionDef();\r\n        i0.ɵɵtemplate(0, TabTrapComponent_ng_template_0_Template, 1, 0, \"ng-template\");\r\n        i0.ɵɵelementContainer(1, 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"context\", ctx.context);\r\n    } }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TabTrapComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-tab-trap', providers: [GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template>\\n    <ng-content></ng-content>\\n</ng-template>\\n\\n<ng-container key=\\\"plugin-tab-trap.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\n\" }]\r\n    }], function () { return [{ type: i1.GridPlugin }, { type: i0.ElementRef }]; }, { template: [{\r\n            type: ViewChild,\r\n            args: [TemplateRef, { static: true }]\r\n        }], roundTrip: [{\r\n            type: Input\r\n        }] }); })();\n\nclass TabTrapInDirective {\r\n    constructor(elementRef) {\r\n        this.elementRef = elementRef;\r\n        elementRef.nativeElement.tabIndex = 0;\r\n        const listener = new EventListener(elementRef.nativeElement, new EventManager(this));\r\n        listener.on('focus', () => this.host.activate(this.target));\r\n    }\r\n    ngOnInit() {\r\n        this.host.traps.set(this.target, this);\r\n    }\r\n    focus() {\r\n        this.elementRef.nativeElement.focus();\r\n    }\r\n}\r\nTabTrapInDirective.ɵfac = function TabTrapInDirective_Factory(t) { return new (t || TabTrapInDirective)(i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nTabTrapInDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: TabTrapInDirective, selectors: [[\"\", \"q-grid-tab-trap-in\", \"\"]], inputs: { target: [\"q-grid-tab-trap-in\", \"target\"], host: [\"q-grid-tab-trap-host\", \"host\"] } });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TabTrapInDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-tab-trap-in]',\r\n            }]\r\n    }], function () { return [{ type: i0.ElementRef }]; }, { target: [{\r\n            type: Input,\r\n            args: ['q-grid-tab-trap-in']\r\n        }], host: [{\r\n            type: Input,\r\n            args: ['q-grid-tab-trap-host']\r\n        }] }); })();\n\nclass TabTrapModule {\r\n}\r\nTabTrapModule.ɵfac = function TabTrapModule_Factory(t) { return new (t || TabTrapModule)(); };\r\nTabTrapModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: TabTrapModule });\r\nTabTrapModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TabTrapModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    TabTrapComponent,\r\n                    TabTrapInDirective,\r\n                ],\r\n                exports: [\r\n                    TabTrapComponent,\r\n                    TabTrapInDirective,\r\n                ],\r\n                imports: [\r\n                    TemplateModule,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(TabTrapModule, { declarations: [TabTrapComponent,\r\n        TabTrapInDirective], imports: [TemplateModule], exports: [TabTrapComponent,\r\n        TabTrapInDirective] }); })();\n\nclass TimeDirective {\r\n    constructor(templateRef, viewContainerRef) {\r\n        this.toMidnight = parseFactory('date');\r\n        viewContainerRef.createEmbeddedView(templateRef, { $implicit: this });\r\n    }\r\n    time(previous, current) {\r\n        if (!previous) {\r\n            previous = new Date();\r\n        }\r\n        const midnight = this.toMidnight(previous);\r\n        const [hours, minutes, seconds, ms,] = current.split(':');\r\n        if (hours && minutes) {\r\n            const time = new Date(midnight.getFullYear(), midnight.getMonth(), midnight.getDate(), +hours, +minutes, seconds ? +seconds : 0, ms ? +ms : 0);\r\n            return time;\r\n        }\r\n        return midnight;\r\n    }\r\n}\r\nTimeDirective.ɵfac = function TimeDirective_Factory(t) { return new (t || TimeDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef)); };\r\nTimeDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: TimeDirective, selectors: [[\"\", \"q-grid-time\", \"\"]] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimeDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[q-grid-time]',\r\n            }]\r\n    }], function () { return [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }]; }, null); })();\n\nclass TimeModule {\r\n}\r\nTimeModule.ɵfac = function TimeModule_Factory(t) { return new (t || TimeModule)(); };\r\nTimeModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: TimeModule });\r\nTimeModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimeModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    TimeDirective,\r\n                ],\r\n                exports: [\r\n                    TimeDirective,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(TimeModule, { declarations: [TimeDirective], exports: [TimeDirective] }); })();\n\nclass ValidationComponent {\r\n}\r\nValidationComponent.ɵfac = function ValidationComponent_Factory(t) { return new (t || ValidationComponent)(); };\r\nValidationComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ValidationComponent, selectors: [[\"q-grid-validation\"]], inputs: { type: \"type\" }, features: [i0.ɵɵProvidersFeature([GridPlugin])], decls: 0, vars: 0, template: function ValidationComponent_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ValidationComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'q-grid-validation',\r\n                template: '',\r\n                providers: [GridPlugin],\r\n                changeDetection: ChangeDetectionStrategy.OnPush,\r\n            }]\r\n    }], null, { type: [{\r\n            type: Input\r\n        }] }); })();\n\nclass ValidatorComponent {\r\n    constructor(plugin, templateHost) {\r\n        this.plugin = plugin;\r\n        this.templateHost = templateHost;\r\n        this.templateHost.key = () => 'validator';\r\n    }\r\n    ngOnInit() {\r\n        const { model } = this.plugin;\r\n        const validator = new ValidatorPlugin(model, this);\r\n        this.context = { $implicit: validator };\r\n    }\r\n}\r\nValidatorComponent.ɵfac = function ValidatorComponent_Factory(t) { return new (t || ValidatorComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i1.TemplateHostService)); };\r\nValidatorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ValidatorComponent, selectors: [[\"q-grid-validator\"]], inputs: { value: \"value\", key: \"key\", type: \"type\" }, features: [i0.ɵɵProvidersFeature([TemplateHostService, GridPlugin])], decls: 1, vars: 1, consts: [[\"key\", \"plugin-validator.tpl.html\", 3, \"context\"]], template: function ValidatorComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementContainer(0, 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"context\", ctx.context);\r\n    } }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ValidatorComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'q-grid-validator', providers: [TemplateHostService, GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-validator.tpl.html\\\"\\n              [context]=\\\"context\\\"></ng-container>\\n\" }]\r\n    }], function () { return [{ type: i1.GridPlugin }, { type: i1.TemplateHostService }]; }, { value: [{\r\n            type: Input\r\n        }], key: [{\r\n            type: Input\r\n        }], type: [{\r\n            type: Input\r\n        }] }); })();\n\nclass ValidationModule {\r\n}\r\nValidationModule.ɵfac = function ValidationModule_Factory(t) { return new (t || ValidationModule)(); };\r\nValidationModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ValidationModule });\r\nValidationModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ValidationModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    ValidationComponent,\r\n                    ValidatorComponent,\r\n                    RuleComponent,\r\n                ],\r\n                exports: [\r\n                    ValidationComponent,\r\n                    ValidatorComponent,\r\n                    RuleComponent,\r\n                ],\r\n                imports: [\r\n                    TemplateModule,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ValidationModule, { declarations: [ValidationComponent,\r\n        ValidatorComponent,\r\n        RuleComponent], imports: [TemplateModule], exports: [ValidationComponent,\r\n        ValidatorComponent,\r\n        RuleComponent] }); })();\n\nclass VisibilityComponent {\r\n    constructor(plugin) {\r\n        this.plugin = plugin;\r\n        this.head = true;\r\n        this.foot = true;\r\n        this.body = true;\r\n        this.toolbarTop = true;\r\n        this.toolbarBottom = true;\r\n        this.toolbarRight = false;\r\n        this.toolbarLeft = false;\r\n        this.pinLeft = false;\r\n        this.pinTop = false;\r\n        this.pinRight = false;\r\n        this.pinBottom = false;\r\n    }\r\n    ngOnChanges() {\r\n        const { model } = this.plugin;\r\n        model.visibility({\r\n            body: this.body,\r\n            foot: this.foot,\r\n            head: this.head,\r\n            toolbar: {\r\n                bottom: this.toolbarBottom,\r\n                left: this.toolbarLeft,\r\n                right: this.toolbarRight,\r\n                top: this.toolbarTop,\r\n            },\r\n            pin: {\r\n                bottom: this.pinBottom,\r\n                left: this.pinLeft,\r\n                right: this.pinRight,\r\n                top: this.pinTop,\r\n            },\r\n        });\r\n    }\r\n}\r\nVisibilityComponent.ɵfac = function VisibilityComponent_Factory(t) { return new (t || VisibilityComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin)); };\r\nVisibilityComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: VisibilityComponent, selectors: [[\"q-grid-visibility\"]], inputs: { head: \"head\", foot: \"foot\", body: \"body\", toolbarTop: \"toolbarTop\", toolbarBottom: \"toolbarBottom\", toolbarRight: \"toolbarRight\", toolbarLeft: \"toolbarLeft\", pinLeft: \"pinLeft\", pinTop: \"pinTop\", pinRight: \"pinRight\", pinBottom: \"pinBottom\" }, features: [i0.ɵɵProvidersFeature([GridPlugin]), i0.ɵɵNgOnChangesFeature], decls: 0, vars: 0, template: function VisibilityComponent_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VisibilityComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'q-grid-visibility',\r\n                template: '',\r\n                providers: [GridPlugin],\r\n                changeDetection: ChangeDetectionStrategy.OnPush,\r\n            }]\r\n    }], function () { return [{ type: i1.GridPlugin }]; }, { head: [{\r\n            type: Input\r\n        }], foot: [{\r\n            type: Input\r\n        }], body: [{\r\n            type: Input\r\n        }], toolbarTop: [{\r\n            type: Input\r\n        }], toolbarBottom: [{\r\n            type: Input\r\n        }], toolbarRight: [{\r\n            type: Input\r\n        }], toolbarLeft: [{\r\n            type: Input\r\n        }], pinLeft: [{\r\n            type: Input\r\n        }], pinTop: [{\r\n            type: Input\r\n        }], pinRight: [{\r\n            type: Input\r\n        }], pinBottom: [{\r\n            type: Input\r\n        }] }); })();\n\nclass VisibilityModule {\r\n}\r\nVisibilityModule.ɵfac = function VisibilityModule_Factory(t) { return new (t || VisibilityModule)(); };\r\nVisibilityModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: VisibilityModule });\r\nVisibilityModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VisibilityModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    VisibilityComponent,\r\n                ],\r\n                exports: [\r\n                    VisibilityComponent,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(VisibilityModule, { declarations: [VisibilityComponent], exports: [VisibilityComponent] }); })();\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { ActionBarComponent, ActionBarModule, ActionComponent, ActionCoreComponent, ActionListComponent, ActionModule, AltComponent, AltModule, ArrayPipe, AutoCompleteEditorComponent, AutoCompleteEditorModule, AutoFocusDirective, BackdropComponent, BackdropDirective, BackdropModule, BackdropService, BlurDirective, BoolEditorComponent, BoolEditorModule, CaptionComponent, CaptionModule, CellEditorComponent, CellEditorModule, CellTooltipComponent, CellTooltipDirective, CellTooltipModule, ColumnChooserComponent, ColumnChooserModule, ColumnChooserTriggerComponent, ColumnChooserTriggerModule, ColumnFilterByComponent, ColumnFilterComponent, ColumnFilterItemDirective, ColumnFilterItemListDirective, ColumnFilterModule, ColumnFilterTriggerComponent, ColumnSortComponent, ColumnSortModule, CommandDirective, CommandModule, ConvertPipe, CurrencyPipe, DataManipulationComponent, DataManipulationModule, DataProviderComponent, DataProviderModule, DateDirective, DateMaskDirective, DateModule, DatePipe, DateService, EbClassDirective, EbExpressionComponent, EbModule, EbNodeComponent, EbNodeService, EditFormComponent, EditFormControlComponent, EditFormModule, EditFormTriggerComponent, ExportComponent, ExportModule, FileDirective, FileModule, FilterPipe, FocusAfterRender, FocusDirective, FocusModule, HighlightPipe, ImportComponent, ImportModule, ItemLabelPipe, LayoutModule, LegendComponent, LegendModule, LiveCellComponent, LiveCellModule, LiveColumnComponent, LiveColumnModule, LiveRowComponent, LiveRowModule, NumberPipe, PagerComponent, PagerModule, PagerTargetComponent, PaneComponent, PaneModule, PersistenceComponent, PersistenceModule, PersistencePanelComponent, PipeModule, PositionDirective, ProgressComponent, ProgressModule, QueryBuilderComponent, QueryBuilderModel, QueryBuilderModule, QueryBuilderPanelComponent, QueryBuilderPipe, QueryBuilderService, RaiseDirective, RaiseModule, ReferenceComponent, ReferenceEditorComponent, ReferenceEditorModule, RestComponent, RestModule, RuleComponent, SerializationService, StatusBarComponent, StatusBarModule, TabTrapComponent, TabTrapInDirective, TabTrapModule, TextPipe, TimeDirective, TimeModule, TimePipe, ValidationComponent, ValidationModule, ValidatorComponent, VisibilityComponent, VisibilityModule };\n//# sourceMappingURL=qgrid-ngx-plugins.mjs.map\n","map":{"version":3,"file":"qgrid-ngx-plugins.mjs","sources":["../../src/lib/action-bar/action-bar.component.ts","../../src/lib/action-bar/action-bar.component.html","../../src/lib/action-bar/action-list.component.ts","../../src/lib/action-bar/action-bar.module.ts","../../src/lib/action/action.component.ts","../../src/lib/action/action-core.component.ts","../../src/lib/action/action-core.component.html","../../src/lib/action/action.module.ts","../../src/lib/alt/alt.component.html","../../src/lib/alt/alt.component.ts","../../src/lib/alt/alt.module.ts","../../src/lib/pipes/array.pipe.ts","../../src/lib/autocomplete-editor/autocomplete-editor.component.ts","../../src/lib/autocomplete-editor/autocomplete-editor.component.html","../../src/lib/autocomplete-editor/autocomplete-editor.module.ts","../../src/lib/focus/autofocus.directive.ts","../../src/lib/backdrop/backdrop.service.ts","../../src/lib/backdrop/backdrop.component.ts","../../src/lib/backdrop/backdrop.component.html","../../src/lib/backdrop/backdrop.directive.ts","../../src/lib/backdrop/backdrop.module.ts","../../src/lib/focus/blur.directive.ts","../../src/lib/bool-editor/bool-editor.component.ts","../../src/lib/bool-editor/bool-editor.component.html","../../src/lib/bool-editor/bool-editor.module.ts","../../src/lib/caption/caption.component.ts","../../src/lib/caption/caption.component.html","../../src/lib/caption/caption.module.ts","../../src/lib/cell-editor/cell-editor.component.html","../../src/lib/cell-editor/cell-editor.component.ts","../../src/lib/cell-editor/cell-editor.module.ts","../../src/lib/cell-tooltip/cell-tooltip.directive.ts","../../src/lib/cell-tooltip/cell-tooltip.component.html","../../src/lib/cell-tooltip/cell-tooltip.component.ts","../../src/lib/cell-tooltip/cell-tooltip.module.ts","../../src/lib/focus/focus.service.ts","../../src/lib/colum-chooser/column-chooser.component.ts","../../src/lib/colum-chooser/column-chooser.component.html","../../src/lib/colum-chooser/column-chooser.module.ts","../../src/lib/column-chooser-trigger/column-chooser-trigger.component.ts","../../src/lib/column-chooser-trigger/column-chooser-trigger.component.html","../../src/lib/column-chooser-trigger/column-chooser-trigger.module.ts","../../src/lib/column-filter/column-filter-by.component.ts","../../src/lib/column-filter/column-filter-by.component.html","../../src/lib/column-filter/column-filter.component.ts","../../src/lib/column-filter/column-filter.component.html","../../src/lib/column-filter/column-filter-item-list.directive.ts","../../src/lib/column-filter/column-filter-item.directive.ts","../../src/lib/column-filter/column-filter-trigger.component.ts","../../src/lib/column-filter/column-filter-trigger.component.html","../../src/lib/column-filter/column-filter.module.ts","../../src/lib/column-sort/column-sort.component.html","../../src/lib/column-sort/column-sort.component.ts","../../src/lib/column-sort/column-sort.module.ts","../../src/lib/command/command.directive.ts","../../src/lib/command/command.module.ts","../../src/lib/pipes/convert.pipe.ts","../../src/lib/pipes/currency.pipe.ts","../../src/lib/data-manipulation/data-manipulation.component.ts","../../src/lib/data-manipulation/data-manipulation.module.ts","../../src/lib/data-provider/data-provider.component.ts","../../src/lib/data-provider/data-provider.module.ts","../../src/lib/date/date-mask.directive.ts","../../src/lib/date/date.service.ts","../../src/lib/date/date.directive.ts","../../src/lib/date/date.module.ts","../../src/lib/pipes/date.pipe.ts","../../src/lib/expression-builder/digest/evaluate.ts","../../src/lib/expression-builder/eb-node.service.ts","../../src/lib/expression-builder/model/node.ts","../../src/lib/expression-builder/eb-node.component.html","../../src/lib/expression-builder/eb-node.component.ts","../../src/lib/expression-builder/eb-class.directive.ts","../../src/lib/expression-builder/digest/watch.ts","../../src/lib/expression-builder/model/expression.ts","../../src/lib/expression-builder/model/line.ts","../../src/lib/expression-builder/eb-expression.component.ts","../../src/lib/expression-builder/eb-expression.component.html","../../src/lib/expression-builder/utility.ts","../../src/lib/expression-builder/serialization.service.ts","../../src/lib/expression-builder/eb.module.ts","../../src/lib/edit-form/edit-form.component.ts","../../src/lib/edit-form/edit-form.component.html","../../src/lib/edit-form/edit-form-control.component.ts","../../src/lib/edit-form/edit-form-control.component.html","../../src/lib/edit-form/edit-form-trigger.component.ts","../../src/lib/edit-form/edit-form-trigger.component.html","../../src/lib/edit-form/edit-form.module.ts","../../src/lib/export/export.component.ts","../../src/lib/export/export.module.ts","../../src/lib/file/file.directive.ts","../../src/lib/file/file.module.ts","../../src/lib/pipes/filter.pipe.ts","../../src/lib/focus/focus.directive.ts","../../src/lib/focus/focus.module.ts","../../src/lib/pipes/highlight.pipe.ts","../../src/lib/import/import.component.ts","../../src/lib/import/import.module.ts","../../src/lib/pipes/item-label.pipe.ts","../../src/lib/layout/position.directive.ts","../../src/lib/layout/layout.module.ts","../../src/lib/legend/legend.component.ts","../../src/lib/legend/legend.component.html","../../src/lib/legend/legend.module.ts","../../src/lib/live-cell/live-cell.tpl.html","../../src/lib/live-cell/live-cell.component.ts","../../src/lib/pipes/time.pipe.ts","../../src/lib/pipes/number.pipe.ts","../../src/lib/pipes/text.pipe.ts","../../src/lib/pipes/pipe.module.ts","../../src/lib/live-cell/live-cell.module.ts","../../src/lib/live-column/live-column.component.ts","../../src/lib/live-column/live-column.module.ts","../../src/lib/live-row/live-row.component.ts","../../src/lib/live-row/live-row.module.ts","../../src/lib/pagination/pager.component.ts","../../src/lib/pagination/pager.component.html","../../src/lib/pagination/pager-target.component.ts","../../src/lib/pagination/pager-target.component.html","../../src/lib/pagination/pager.module.ts","../../src/lib/pane/pane.component.html","../../src/lib/pane/pane.component.ts","../../src/lib/pane/pane.module.ts","../../src/lib/persistence/persistence.component.ts","../../src/lib/persistence/persistence-panel.component.ts","../../src/lib/persistence/persistence-panel.component.html","../../src/lib/persistence/persistence.module.ts","../../src/lib/progress/progress.component.ts","../../src/lib/progress/progress.component.html","../../src/lib/progress/progress.module.ts","../../src/lib/query-builder/query-builder.component.ts","../../src/lib/query-builder/query-builder.component.html","../../src/lib/query-builder/query-builder.model.ts","../../src/lib/expression-builder/traverse.service.ts","../../src/lib/expression-builder/patch.ts","../../src/lib/expression-builder/model/group.schema.ts","../../src/lib/expression-builder/model/node.schema.ts","../../src/lib/expression-builder/model/statement.ts","../../src/lib/expression-builder/model/expression.builder.ts","../../src/lib/query-builder/schema/operator.ts","../../src/lib/query-builder/query-builder.service.ts","../../src/lib/query-builder/schema/converter.ts","../../src/lib/query-builder/schema/suggest.service.ts","../../src/lib/query-builder/schema/validator.ts","../../src/lib/query-builder/schema/where.schema.ts","../../src/lib/query-builder/query-builder-panel.component.ts","../../src/lib/query-builder/query-builder-panel.component.html","../../src/lib/query-builder/query-builder.pipe.ts","../../src/lib/query-builder/query-builder.module.ts","../../src/lib/raise/raise.directive.ts","../../src/lib/raise/raise.module.ts","../../src/lib/reference-editor/reference.component.ts","../../src/lib/reference-editor/reference.component.html","../../src/lib/reference-editor/reference-editor.component.ts","../../src/lib/reference-editor/reference-editor.component.html","../../src/lib/reference-editor/reference-editor.module.ts","../../src/lib/rest/rest.component.ts","../../src/lib/rest/rest.module.ts","../../src/lib/validation/rule.component.html","../../src/lib/validation/rule.component.ts","../../src/lib/status-bar/status-bar.component.ts","../../src/lib/status-bar/status-bar.component.html","../../src/lib/status-bar/status-bar.module.ts","../../src/lib/tab-trap/tab-trap.component.html","../../src/lib/tab-trap/tab-trap.component.ts","../../src/lib/tab-trap/tab-trap-in.directive.ts","../../src/lib/tab-trap/tab-trap.module.ts","../../src/lib/time/time.directive.ts","../../src/lib/time/time.module.ts","../../src/lib/validation/validation.component.ts","../../src/lib/validation/validator.component.ts","../../src/lib/validation/validator.component.html","../../src/lib/validation/validation.module.ts","../../src/lib/visibility/visibility.component.ts","../../src/lib/visibility/visibility.module.ts","../../src/qgrid-ngx-plugins.ts"],"sourcesContent":["import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { Action } from '@qgrid/core';\nimport { GridPlugin } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-action-bar',\n  templateUrl: './action-bar.component.html',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ActionBarComponent implements OnInit {\n\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: ActionBarComponent } = {\n    $implicit: this,\n  };\n\n  get actions(): Action[] {\n    const { model } = this.plugin;\n    return model.action().items;\n  }\n\n  constructor(\n    private plugin: GridPlugin,\n    private cd: ChangeDetectorRef,\n  ) {\n  }\n\n  ngOnInit() {\n    const { model, observeReply } = this.plugin;\n\n    observeReply(model.actionChanged)\n      .subscribe(e => {\n        if (e.hasChanges('items')) {\n          const { items } = e.state;\n          const inRightOrder = this.checkOrder(items);\n\n          if (!inRightOrder) {\n            // todo: make it better\n            model.action({\n              items: items.sort((a: Action, b: Action) => a.command.priority - b.command.priority),\n            });\n          }\n\n          this.cd.markForCheck();\n          this.cd.detectChanges();\n        }\n      });\n  }\n\n  private checkOrder(actions: Action[]): boolean {\n    for (let i = 0; i < actions.length - 1; i++) {\n      const action = actions[i];\n      const nextAction = actions[i + 1];\n      if (action.command.priority > nextAction.command.priority) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n","<ng-container [key]=\"'plugin-action-bar.tpl.html'\"\n\t\t\t\t\t\t\t[context]=\"context\">\n</ng-container>\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'q-grid-actions',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ActionListComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { TemplateModule } from '@qgrid/ngx';\nimport { ActionBarComponent } from './action-bar.component';\nimport { ActionListComponent } from './action-list.component';\n\n@NgModule({\n  declarations: [\n    ActionBarComponent,\n    ActionListComponent,\n  ],\n  exports: [\n    ActionBarComponent,\n    ActionListComponent,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class ActionBarModule { }\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  Input,\n  OnInit,\n  TemplateRef,\n} from '@angular/core';\nimport { Action, Command, guid } from '@qgrid/core';\nimport { GridPlugin, TemplateHostService } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-action',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [GridPlugin, TemplateHostService],\n})\nexport class ActionComponent implements OnInit {\n  @ContentChild(TemplateRef, { static: true }) templateRef: TemplateRef<any>;\n\n  @Input() title: string;\n  @Input() icon: string;\n  @Input() command: Command;\n\n  constructor(\n    private plugin: GridPlugin,\n    private templateHost: TemplateHostService,\n  ) {\n    const id = guid();\n    templateHost.key = source => `action-${source}-${id}.tpl.html`;\n  }\n\n  ngOnInit() {\n    const { model, disposable } = this.plugin;\n    const action = new Action(\n      this.command || new Command(),\n      this.title,\n      this.icon,\n    );\n\n    if (this.templateRef) {\n      action.templateUrl = this.templateHost.key('trigger');\n    }\n\n    model.action({\n      items: model\n        .action()\n        .items\n        .concat([action]),\n    }, {\n      source: 'action.component',\n    });\n\n    disposable.add(() =>\n      model.action({\n        items: model\n          .action()\n          .items\n          .filter(x => x !== action),\n      }),\n    );\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { Action, Command } from '@qgrid/core';\nimport { GridError, GridModel, GridPlugin } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-action-core',\n  templateUrl: './action-core.component.html',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ActionCoreComponent {\n  @Input() action: Action;\n\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: ActionCoreComponent } = {\n    $implicit: this,\n  };\n\n  get model(): GridModel {\n    return this.plugin.model;\n  }\n\n  get command(): Command {\n    const { action } = this;\n    if (!action) {\n      throw new GridError(\n        'action-core.component',\n        'Action is not set',\n      );\n    }\n\n    return action.command;\n  }\n\n  get title() {\n    const { action } = this;\n    if (!action) {\n      throw new GridError(\n        'action-core.component',\n        'Action is not set',\n      );\n    }\n\n    return action.title;\n  }\n\n  get icon() {\n    const { action } = this;\n    if (!action) {\n      throw new GridError(\n        'action-core.component',\n        'Action is not set',\n      );\n    }\n\n    return action.icon;\n  }\n\n  get templateUrl() {\n    const { action } = this;\n    if (!action) {\n      throw new GridError(\n        'action-core.component',\n        'Action is not set',\n      );\n    }\n\n    return action.templateUrl;\n  }\n\n  get mode(): 'template' | 'icon' | 'text' | 'none' {\n    const { action } = this;\n    if (!action) {\n      throw new GridError(\n        'action-core.component',\n        'Action is not set',\n      );\n    }\n\n    if (action.templateUrl) {\n      return 'template';\n    }\n\n    if (action.icon) {\n      return 'icon';\n    }\n\n    if (action.title) {\n      return 'text';\n    }\n\n    return 'none';\n  }\n\n  constructor(\n    private plugin: GridPlugin,\n  ) {\n  }\n}\n","<ng-container key=\"plugin-action-core.tpl.html\"\n              [context]=\"context\">\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { ActionCoreComponent } from './action-core.component';\nimport { ActionComponent } from './action.component';\nimport { TemplateModule } from '@qgrid/ngx';\n\n@NgModule({\n  declarations: [\n    ActionComponent,\n    ActionCoreComponent,\n  ],\n  exports: [\n    ActionComponent,\n    ActionCoreComponent,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class ActionModule { }\n","<ng-template for=\"body-cell-row-number-the-$alt.number.tpl.html\"\n                        let-$cell>\n\t{{$cell.rowIndex}}\n</ng-template>\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ColumnModel } from '@qgrid/core';\nimport { GridPlugin } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-alt',\n  templateUrl: './alt.component.html',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AltComponent implements OnInit {\n  constructor(\n    private plugin: GridPlugin,\n  ) {\n  }\n\n  ngOnInit() {\n    const { model, observe, service } = this.plugin;\n\n    const altColumn: ColumnModel = {\n      key: '$alt.number',\n      type: 'row-number',\n      title: 'Alt',\n      canHighlight: false,\n      canMove: false,\n      canResize: false,\n    };\n\n    model\n      .pagination({\n        size: 10,\n      }, {\n        source: 'alt.component',\n      })\n      .data({\n        columns:\n          [altColumn]\n            .concat(model.data().columns),\n      }, {\n        source: 'alt.component',\n      });\n\n    observe(model.keyboardChanged)\n      .subscribe(e => {\n        const { codes, status } = e.state;\n        if (status === 'down') {\n          switch (codes[0]) {\n            case 'alt': {\n              const rowNo = Number.parseInt(codes[1], 10);\n              if (!Number.isNaN(rowNo)) {\n                const { rows } = model.view();\n                const { current, size } = model.pagination();\n\n                const rowIndex = rowNo + current * size;\n                const altRow = rows[rowIndex];\n                if (altRow) {\n                  model.selection({\n                    items: [altRow],\n                  }, {\n                    source: 'alt.component',\n                  });\n\n                  service.focus(rowIndex);\n                }\n              }\n              break;\n            }\n          }\n        }\n      });\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { TemplateModule } from '@qgrid/ngx';\nimport { AltComponent } from './alt.component';\n\n@NgModule({\n  declarations: [\n    AltComponent,\n  ],\n  exports: [\n    AltComponent,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class AltModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isArray, isUndefined, Log } from '@qgrid/core';\n\n@Pipe({\n  name: 'qGridArray',\n})\nexport class ArrayPipe implements PipeTransform {\n  transform(value: any) {\n    if (isArray(value)) {\n      return value;\n    }\n\n    Log.warn('ArrayPipe', `${value} is not of array type`);\n    return isUndefined(value) || value === null ? [] : [value];\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { isArray, predicateFactory } from '@qgrid/core';\nimport { GridPlugin } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-autocomplete-editor',\n  templateUrl: './autocomplete-editor.component.html',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AutoCompleteEditorComponent {\n  private get cell() {\n    return this.plugin.view.edit.cell;\n  }\n\n  options: any[] = [];\n\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: AutoCompleteEditorComponent } = {\n    $implicit: this,\n  };\n\n  get items() {\n    return (this.cell.fetch as any).result;\n  }\n\n  get title() {\n    return this.cell.column.title;\n  }\n\n  get value() {\n    return this.cell.value;\n  }\n\n  set value(value) {\n    this.cell.value = value;\n  }\n\n  constructor(\n    private plugin: GridPlugin,\n  ) {\n  }\n\n  filter(search: string) {\n    const test = predicateFactory(search);\n    const getLabel = this.itemLabelFactory(this.cell.column);\n    if (isArray(this.items)) {\n      this.options = this.items.filter(item => test(getLabel(item)));\n    }\n  }\n\n  reset() {\n    this.options = [];\n  }\n\n  itemLabelFactory(column) {\n    const { itemLabel } = column;\n    if (itemLabel) {\n      return item => itemLabel(item);\n    }\n\n    return item => item;\n  }\n}\n","<ng-container key=\"plugin-autocomplete-editor.tpl.html\"\n              [context]=\"context\">\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { TemplateModule } from '@qgrid/ngx';\nimport { AutoCompleteEditorComponent } from './autocomplete-editor.component';\n\n@NgModule({\n  declarations: [\n    AutoCompleteEditorComponent,\n  ],\n  exports: [\n    AutoCompleteEditorComponent,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class AutoCompleteEditorModule {\n}\n","import { AfterViewInit, Directive, Input } from '@angular/core';\nimport { GridPlugin } from '@qgrid/ngx';\nimport { AutofocusPlugin } from '@qgrid/plugins';\n\n@Directive({\n  selector: '[q-grid-autofocus]',\n  providers: [GridPlugin],\n})\nexport class AutoFocusDirective implements AfterViewInit {\n  @Input('q-grid-autofocus') enabled: boolean | string;\n\n  constructor(\n    private plugin: GridPlugin,\n  ) { }\n\n  ngAfterViewInit() {\n    if (this.enabled !== false) {\n      new AutofocusPlugin(this.plugin);\n    }\n  }\n}\n","import { ElementRef, Injectable } from '@angular/core';\nimport { Guard } from '@qgrid/core';\n\n@Injectable()\nexport class BackdropService {\n  isActive = true;\n  element: ElementRef;\n\n  hide() {\n    Guard.notNull(this.element, 'element');\n\n    if (this.isActive) {\n      this.element.nativeElement.classList.add('q-grid-backdrop-inactive');\n      this.isActive = false;\n    }\n  }\n\n  reveal() {\n    Guard.notNull(this.element, 'element');\n\n    if (!this.isActive) {\n      this.element.nativeElement.classList.remove('q-grid-backdrop-inactive');\n      this.isActive = true;\n    }\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { BackdropPlugin } from '@qgrid/plugins';\nimport { BackdropService } from './backdrop.service';\n\n@Component({\n  selector: 'q-grid-backdrop',\n  templateUrl: './backdrop.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BackdropComponent implements OnInit, OnDestroy {\n  @ViewChild(TemplateRef, { static: true }) template: TemplateRef<any>;\n  @Output('close') closeEvent = new EventEmitter<any>();\n  @Input() propagate = true;\n\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: BackdropComponent } = {\n    $implicit: this,\n  };\n\n  constructor(private backdropService: BackdropService, elementRef: ElementRef) {\n    backdropService.element = elementRef;\n  }\n\n  ngOnInit() {\n    const context = {\n      element: this.backdropService.element.nativeElement,\n      propagate: this.propagate,\n      onKeyDown: () => { },\n    };\n\n    const backdrop = new BackdropPlugin(context);\n    backdrop.closeEvent.on(() => this.closeEvent.emit());\n  }\n\n  ngOnDestroy() {\n    this.backdropService.element = null;\n  }\n}\n","<ng-container key=\"plugin-backdrop.tpl.html\" [context]=\"context\"></ng-container>\n","import { DOCUMENT } from '@angular/common';\nimport {\n  Directive,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  Output,\n} from '@angular/core';\n\n@Directive({\n  selector: '[q-grid-backdrop]',\n})\nexport class BackdropDirective {\n  private backdrop: HTMLElement;\n\n  @Output('q-grid-backdrop') close = new EventEmitter<any>();\n\n  @Input('q-grid-backdrop-selector') selector = '';\n\n  @Input('q-grid-backdrop-active') set backdropHost(value: any) {\n    if (!value) {\n      if (this.backdrop) {\n        this.backdrop.remove();\n        this.backdrop = null;\n      }\n\n      return;\n    }\n    this.backdrop = this.document.createElement('div');\n    this.backdrop.classList.add('q-grid-backdrop');\n    this.backdrop.style.zIndex = '1000';\n\n    this.zone.runOutsideAngular(() => {\n      this.backdrop.addEventListener('click', () => {\n        if (this.backdrop) {\n          this.backdrop.remove();\n          this.backdrop = null;\n          this.close.emit();\n        }\n      });\n    });\n\n    this.zone.runOutsideAngular(() => {\n      const element = <HTMLElement>document.querySelector(this.selector);\n\n      element.style.zIndex = '1001';\n      element.parentElement.appendChild(this.backdrop);\n    });\n  }\n\n  constructor(private zone: NgZone, @Inject(DOCUMENT) private document: any) {\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BackdropComponent } from './backdrop.component';\nimport { BackdropDirective } from './backdrop.directive';\nimport { BackdropService } from './backdrop.service';\nimport { TemplateModule } from '@qgrid/ngx';\n\n@NgModule({\n  declarations: [\n    BackdropComponent,\n    BackdropDirective,\n  ],\n  exports: [\n    BackdropComponent,\n    BackdropDirective,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n  providers: [\n    BackdropService,\n  ],\n})\nexport class BackdropModule {\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  Renderer2,\n} from '@angular/core';\nimport { noop } from '@qgrid/core';\n\n@Directive({\n  selector: '[q-grid-on-blur]',\n})\nexport class BlurDirective implements OnInit {\n  @Input('q-grid-on-blur') onBlur = noop;\n  @Input('q-grid-on-blur-selector') selector = 'input';\n\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) {\n  }\n\n  ngOnInit() {\n    const element = this.renderer.selectRootElement(this.selector);\n    this.renderer.listen(element, 'blur', this.onBlur);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { BoolColumnModel } from '@qgrid/core';\n\n@Component({\n  selector: 'q-grid-bool-editor',\n  templateUrl: './bool-editor.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BoolEditorComponent implements OnInit {\n  private state: any;\n\n  @Input() autofocus = false;\n  @Input() column: BoolColumnModel;\n  @Input() label: string;\n  @Output() valueChange = new EventEmitter<any>();\n\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: BoolEditorComponent } = {\n    $implicit: this,\n  };\n\n  @Input() get value() {\n    return this.state;\n  }\n\n  set value(value) {\n    if (value !== this.value) {\n      this.state = value;\n      this.valueChange.emit(value);\n    }\n  }\n\n  get isChecked() {\n    return this.column.isChecked(this.value);\n  }\n\n  set isChecked(value: boolean) {\n    this.value = value ? this.trueValue : this.falseValue;\n  }\n\n  get trueValue() {\n    return this.column.trueValue;\n  }\n\n  get falseValue() {\n    return this.column.falseValue;\n  }\n\n  ngOnInit() {\n    // entering edit mode means toggling boolean value\n    if (this.autofocus && this.column.editorOptions.trigger === 'click') {\n      setTimeout(\n        () =>\n          this.value =\n          this.value === this.trueValue\n            ? this.falseValue\n            : this.trueValue\n        , 10);\n    }\n  }\n\n  isIndeterminate() {\n    return this.column.isIndeterminate(this.value);\n  }\n}\n","<ng-container key=\"plugin-bool-editor.tpl.html\" [context]=\"context\"></ng-container>\n","import { NgModule } from '@angular/core';\nimport { BoolEditorComponent } from './bool-editor.component';\nimport { TemplateModule } from '@qgrid/ngx';\n\n@NgModule({\n  declarations: [\n    BoolEditorComponent,\n  ],\n  exports: [\n    BoolEditorComponent,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class BoolEditorModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { GridPlugin } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-caption',\n  templateUrl: './caption.component.html',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CaptionComponent implements OnInit {\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: CaptionComponent } = {\n    $implicit: this,\n  };\n\n  get value() {\n    const { caption, title } = this.plugin.model.grid();\n    return caption || title;\n  }\n\n  constructor(\n    private plugin: GridPlugin,\n    private cd: ChangeDetectorRef,\n  ) {\n  }\n\n  ngOnInit() {\n    const { model, observe } = this.plugin;\n    observe(model.gridChanged)\n      .subscribe(() => this.cd.detectChanges());\n  }\n}\n","<ng-container key=\"plugin-caption.tpl.html\" [context]=\"context\"></ng-container>\n","import { NgModule } from '@angular/core';\nimport { CaptionComponent } from './caption.component';\nimport { TemplateModule } from '@qgrid/ngx';\n\n@NgModule({\n  declarations: [\n    CaptionComponent,\n  ],\n  exports: [\n    CaptionComponent,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class CaptionModule {}\n","<ng-template>\n    <ng-content>\n    </ng-content>\n</ng-template>\n\n<ng-container key=\"plugin-cell-editor.tpl.html\"\n              [context]=\"context\">\n</ng-container>\n","import {\n  Component,\n  TemplateRef,\n  EventEmitter,\n  Output,\n  ViewChild,\n  ChangeDetectionStrategy,\n  OnInit,\n} from '@angular/core';\nimport { GridPlugin } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-cell-editor',\n  templateUrl: './cell-editor.component.html',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CellEditorComponent implements OnInit {\n  @ViewChild(TemplateRef, { static: true }) template: TemplateRef<any>;\n  @Output('close') closeEvent = new EventEmitter<any>();\n\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: CellEditorComponent } = {\n    $implicit: this,\n  };\n\n  constructor(private plugin: GridPlugin) {\n  }\n\n  ngOnInit() {\n    const { view, disposable } = this.plugin;\n    if (this.closeEvent.observers.length) {\n      view.edit.cell.requestClose = () => {\n        this.close();\n        return true;\n      };\n    }\n\n    disposable.add(() => view.edit.cell.requestClose = null);\n  }\n\n  close() {\n    this.closeEvent.emit();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CellEditorComponent } from './cell-editor.component';\nimport { TemplateModule } from '@qgrid/ngx';\n\n@NgModule({\n  declarations: [\n    CellEditorComponent,\n  ],\n  exports: [\n    CellEditorComponent,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class CellEditorModule {\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  Renderer2,\n  SimpleChanges,\n} from '@angular/core';\nimport { GRID_PREFIX, jobLine } from '@qgrid/core';\nimport { GridPlugin, TemplateHostService } from '@qgrid/ngx';\n\n@Directive({\n  selector: '[q-grid-tooltip]',\n  providers: [GridPlugin, TemplateHostService],\n})\n\nexport class CellTooltipDirective implements OnChanges {\n  private job: (job: () => void) => Promise<void>;\n\n  @Input() host: HTMLElement;\n  @Input() showDelay = 1000;\n\n  constructor(\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n  ) {\n    this.job = jobLine(this.showDelay);\n  }\n\n  ngOnChanges(e: SimpleChanges) {\n    if (e.showDelay) {\n      this.job = jobLine(this.showDelay);\n    }\n\n    if (e.host && this.host) {\n      const { top, left, height } = this.host.getBoundingClientRect();\n      const box = this.getBoxRect(this.host);\n      const host = this.elementRef.nativeElement;\n      this.job(() => {\n        this.renderer.setStyle(host, 'top', top - box.top + height + 'px');\n        this.renderer.setStyle(host, 'left', left - box.left + 'px');\n        this.renderer.removeClass(host, 'q-grid-hide');\n      });\n\n    }\n\n  }\n\n  // TODO: Extract to external function\n  private getBoxRect(element: HTMLElement) {\n    let view = element;\n    const marker = `${GRID_PREFIX}-box`;\n    while (view) {\n      if (view.classList && view.classList.contains(marker)) {\n        return view.getBoundingClientRect();\n      }\n\n      view = view.parentNode as HTMLElement;\n    }\n\n    return view.getBoundingClientRect();\n  }\n}\n","<q-grid-layer>\n\t<ng-template for=\"tooltip\">\n\t\t<div class=\"q-grid-cell-tooltip q-grid-hide\"\n\t\t\t*ngIf=\"cellElement\"\n\t\t\tq-grid-tooltip\n\t\t\t[showDelay]=\"showDelay\"\n\t\t\t[host]=\"cellElement\">\n\n\t\t\t<ng-container key=\"body-cell-tooltip.tpl.html\"\n\t\t\t\t\t\t\t[context]=\"context\">\n\t\t\t</ng-container>\n\t\t</div>\n\t</ng-template>\n</q-grid-layer>\n","import {\n  ApplicationRef,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { DomTd, GridPlugin, TemplateHostService } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-cell-tooltip',\n  templateUrl: './cell-tooltip.component.html',\n  providers: [GridPlugin, TemplateHostService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n\nexport class CellTooltipComponent implements OnInit {\n  @Input() showDelay: number;\n\n  context: { $implicit: DomTd } = {\n    $implicit: null,\n  };\n  cellElement: HTMLElement;\n\n  constructor(\n    private plugin: GridPlugin,\n    private cd: ChangeDetectorRef,\n    private appRef: ApplicationRef,\n  ) { }\n\n  ngOnInit() {\n    const { model, observe, table } = this.plugin;\n\n    observe(model.mouseChanged)\n      .subscribe(e => {\n        if (e.state.status !== 'move' && e.state.status !== 'leave') {\n          return;\n        }\n\n        if (e.state.target) {\n          const { rowIndex, columnIndex } = e.state.target;\n          const domCell = table.body.cell(rowIndex, columnIndex);\n\n          if (domCell.model()) {\n            this.context = {\n              $implicit: domCell.model(),\n            };\n            this.cellElement = domCell.element;\n            this.addTooltipLayer();\n          }\n\n        } else {\n          this.cellElement = null;\n        }\n        this.invalidate();\n      });\n  }\n\n  private addTooltipLayer(): void {\n    const tooltipLayer = 'tooltip';\n    const table = this.plugin.table;\n    if (table.view.hasLayer(tooltipLayer)) {\n      table.view.removeLayer(tooltipLayer);\n    }\n\n    table.view.addLayer(tooltipLayer);\n  }\n\n  private invalidate(): void {\n    // ToDo: Investigate how to improve.\n    this.cd.markForCheck();\n    this.cd.detectChanges();\n    this.appRef.tick();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CellTooltipComponent } from './cell-tooltip.component';\nimport { CellTooltipDirective } from './cell-tooltip.directive';\nimport { TemplateModule, LayerModule } from '@qgrid/ngx';\n\n@NgModule({\n  declarations: [\n    CellTooltipComponent,\n    CellTooltipDirective,\n  ],\n  exports: [\n    CellTooltipComponent,\n    CellTooltipDirective,\n  ],\n  imports: [\n    CommonModule,\n    TemplateModule,\n    LayerModule,\n  ],\n})\nexport class CellTooltipModule {}\n","import { Injectable, Optional } from '@angular/core';\nimport { FocusAfterRenderService } from '@qgrid/core';\nimport { GridPlugin } from '@qgrid/ngx';\n\n@Injectable()\nexport class FocusAfterRender {\n  constructor(\n\t\t@Optional() plugin: GridPlugin,\n  ) {\n    if (plugin) {\n      new FocusAfterRenderService(plugin);\n    }\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { Node, noop } from '@qgrid/core';\nimport { GridPlugin, StateAccessor } from '@qgrid/ngx';\nimport { ColumnChooserPlugin, ColumnChooserState } from '@qgrid/plugins';\nimport { FocusAfterRender } from '../focus/focus.service';\n\nconst COLUMN_CHOOSER_NAME = 'qGridColumnChooser';\n\nexport class RootContext {\n  get node(): Node {\n    return this.ctrl.treeView;\n  }\n\n  constructor(public ctrl: ColumnChooserPlugin) {\n  }\n}\n\n@Component({\n  selector: 'q-grid-column-chooser',\n  templateUrl: './column-chooser.component.html',\n  providers: [\n    FocusAfterRender,\n    GridPlugin,\n    StateAccessor,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ColumnChooserComponent implements OnInit, OnChanges {\n  private ccState = this.stateAccessor.setter(ColumnChooserState);\n\n  @Output('submit') submitEvent = new EventEmitter<any>();\n  @Output('cancel') cancelEvent = new EventEmitter<any>();\n\n  context: {\n    $implicit: ColumnChooserPlugin;\n    // eslint-disable-next-line no-use-before-define\n    plugin: ColumnChooserComponent;\n  };\n\n  @Input('canAggregate') set columnChooserCanAggregate(canAggregate: boolean) { this.ccState({ canAggregate }); }\n\n  constructor(\n    public focusAfterRender: FocusAfterRender,\n    private plugin: GridPlugin,\n    private zone: NgZone,\n    private cd: ChangeDetectorRef,\n    private stateAccessor: StateAccessor,\n  ) {\n  }\n\n  root() {\n    return { $implicit: new RootContext(this.context.$implicit) };\n  }\n\n  ngOnChanges() {\n    const { model } = this.plugin;\n    this.stateAccessor.write(model);\n  }\n\n  ngOnInit() {\n    const context = {\n      name: COLUMN_CHOOSER_NAME,\n    };\n\n    const columnChooser = new ColumnChooserPlugin(this.plugin, context);\n    columnChooser.submitEvent.on(() => this.submitEvent.emit());\n    columnChooser.cancelEvent.on(() => this.cancelEvent.emit());\n    columnChooser.dropEvent.on(() => {\n      this.cd.markForCheck();\n      this.zone.run(noop);\n    });\n\n    this.context = { $implicit: columnChooser, plugin: this };\n  }\n}\n","<ng-container key=\"column-chooser.tpl.html\" [context]=\"context\"></ng-container>\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { GridModelBuilder, TemplateModule } from '@qgrid/ngx';\nimport { ColumnChooserState } from '@qgrid/plugins';\nimport { ColumnChooserComponent } from './column-chooser.component';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    TemplateModule,\n  ],\n  exports: [\n    ColumnChooserComponent,\n  ],\n  declarations: [\n    ColumnChooserComponent,\n  ],\n})\nexport class ColumnChooserModule {\n  constructor(modelBuilder: GridModelBuilder) {\n    modelBuilder.register('columnChooser', ColumnChooserState);\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'q-grid-column-chooser-trigger',\n  templateUrl: './column-chooser-trigger.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ColumnChooserTriggerComponent { }\n","<ng-container key=\"plugin-column-chooser-trigger.tpl.html\"></ng-container>\n","import { NgModule } from '@angular/core';\nimport { ColumnChooserTriggerComponent } from './column-chooser-trigger.component';\nimport { TemplateModule } from '@qgrid/ngx';\n\n@NgModule({\n  imports: [\n    TemplateModule,\n  ],\n  exports: [\n    ColumnChooserTriggerComponent,\n  ],\n  declarations: [\n    ColumnChooserTriggerComponent,\n  ],\n})\nexport class ColumnChooserTriggerModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { ColumnModel } from '@qgrid/core';\n\n@Component({\n  selector: 'q-grid-column-filter-by',\n  templateUrl: './column-filter-by.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ColumnFilterByComponent {\n  @Input() column: ColumnModel;\n\n  @Input() by: Set<string>;\n  @Input() byBlanks: boolean;\n  @Output() byBlanksChange = new EventEmitter();\n\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: ColumnFilterByComponent } = {\n    $implicit: this,\n  };\n\n  get isBlanks() {\n    return this.byBlanks;\n  }\n\n  remove(item: string): void {\n    this.by.delete(item);\n  }\n\n  removeByBlanks() {\n    this.byBlanksChange.emit(false);\n  }\n}\n","<ng-container key=\"plugin-column-filter-by.tpl.html\"\n              [context]=\"context\">\n</ng-container>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  ColumnModel,\n  Fetch,\n  flatten,\n  getValue,\n  Guard,\n  uniq,\n} from '@qgrid/core';\nimport {\n  Grid,\n  GridError,\n  GridPlugin,\n  TemplateService,\n  VscrollContext,\n  VscrollService,\n} from '@qgrid/ngx';\nimport { ColumnFilterPlugin, ColumnFilterState } from '@qgrid/plugins';\nimport { FocusAfterRender } from '../focus/focus.service';\n\n@Component({\n  selector: 'q-grid-column-filter',\n  templateUrl: './column-filter.component.html',\n  providers: [FocusAfterRender, GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ColumnFilterComponent implements OnInit {\n  private vscrollContext: VscrollContext;\n\n  @Input() column: ColumnModel;\n  @Input() search = '';\n\n  @Output('submit') submitEvent = new EventEmitter<any>();\n  @Output('cancel') cancelEvent = new EventEmitter<any>();\n\n  context: {\n    $implicit: ColumnFilterPlugin;\n    // eslint-disable-next-line no-use-before-define\n    plugin: ColumnFilterComponent;\n    vscroll: VscrollContext;\n  };\n\n  get operators() {\n    const { model } = this.plugin;\n    return model\n      .filter()\n      .operatorFactory(this.column);\n  }\n\n  get hasOperators() {\n    return this.operators && this.operators.length > 1;\n  }\n\n  constructor(\n    public focusAfterRender: FocusAfterRender,\n    private plugin: GridPlugin,\n    private vscroll: VscrollService,\n    private qgrid: Grid,\n    private cd: ChangeDetectorRef,\n    private templateService: TemplateService,\n  ) {\n  }\n\n  ngOnInit() {\n    const { model } = this.plugin;\n    const { column } = this;\n\n    const context = { column };\n    const columnFilter = model.resolve(ColumnFilterState);\n    const columnFilterPlugin = new ColumnFilterPlugin(this.plugin, context);\n\n    columnFilterPlugin.submitEvent.on(() => this.submitEvent.emit());\n    columnFilterPlugin.cancelEvent.on(() => this.cancelEvent.emit());\n\n    const vscrollContext = this.vscroll.context({\n      emit: f => {\n        f();\n\n        this.cd.markForCheck();\n        this.cd.detectChanges();\n      },\n      threshold: columnFilter.state().threshold,\n      fetch: (skip, take, d) => {\n        const filterState = model.filter();\n        const service = this.qgrid.service(model);\n        // We need to close items property for correct reset behavior\n        const items = columnFilterPlugin.items;\n        if (column.key && filterState.fetch !== this.qgrid.noop) {\n          const cancelBusy = service.busy();\n          const select = filterState\n            .fetch(column.key, {\n              skip,\n              take,\n              value: columnFilterPlugin.getValue,\n              search: '' + this.search,\n\n              // @deprecated\n              filter: '' + this.search,\n            });\n\n          const fetch = new Fetch(select);\n          fetch.run();\n          fetch.busy\n            .then(page => {\n              items.push(...page);\n              d.resolve(items.length + (page.length === take ? take : 0));\n              cancelBusy();\n            })\n            .catch(cancelBusy);\n        } else {\n          const cancelBusy = service.busy();\n          const isBlank = model.filter().assertFactory().isNull;\n          try {\n            if (!items.length) {\n              const source = model[columnFilter.state().source];\n              Guard.notNull(source, 'source');\n\n              const sourceState = source();\n              Guard.hasProperty(sourceState, 'rows');\n\n              let values: any[];\n              if (columnFilterPlugin.column.type === 'array') {\n                values = flatten(sourceState.rows.map(row => getValue(row, column)));\n              } else {\n                values = sourceState.rows.map(columnFilterPlugin.getValue);\n              }\n\n              const uniqValues = uniq(values);\n              const notBlankValues = uniqValues.filter(x => !isBlank(x));\n\n              // TODO: improve search also\n              const search = ('' + this.search).toLowerCase();\n              const filteredItems = search\n                ? notBlankValues.filter(x => ('' + x).toLowerCase().indexOf(search) >= 0)\n                : notBlankValues;\n\n              filteredItems.sort(columnFilterPlugin.column.compare);\n              columnFilterPlugin.items = filteredItems;\n              columnFilterPlugin.hasBlanks =\n                notBlankValues.length !== uniqValues.length &&\n                (!search || 'blanks'.indexOf(search.toLowerCase()) >= 0);\n            }\n\n            d.resolve(columnFilterPlugin.items.length);\n          } finally {\n            cancelBusy();\n          }\n        }\n      },\n    });\n\n    this.vscrollContext = vscrollContext;\n\n    this.context = {\n      $implicit: columnFilterPlugin,\n      plugin: this,\n      vscroll: vscrollContext,\n    };\n  }\n\n  reset() {\n    this.context.$implicit.items = [];\n    this.vscrollContext.container.reset();\n  }\n\n  clear() {\n    this.search = '';\n    this.context.$implicit.reset.execute();\n  }\n\n  getOperatorTemplateKey(op: string) {\n    const keys = this.buildTemplateKeys(op);\n    for (const key of keys) {\n      if (this.templateService.find(key)) {\n        return key;\n      }\n    }\n\n    throw new GridError(\n      'column-filter.component',\n      `Column filter template for operator ${op} is not found`,\n    );\n  }\n\n  private buildTemplateKeys(op: string) {\n    const { key, type } = this.column;\n    const PREFIX = 'plugin-column-filter';\n\n    const keys = [\n      `${PREFIX}-${type}-the-${key}-${op}.tpl.html`,\n      `${PREFIX}-the-${key}-${op}.tpl.html`,\n      `${PREFIX}-the-${key}.tpl.html`,\n      `${PREFIX}-${type}-${op}.tpl.html`,\n      `${PREFIX}-${type}.tpl.html`,\n      `${PREFIX}-${op}.tpl.html`,\n    ];\n\n    switch (op) {\n      case 'isEmpty':\n      case 'isNotEmpty':\n      case 'isNull':\n      case 'isNotNull': {\n        keys.push(`${PREFIX}-${type}-the-${key}-label.tpl.html`);\n        keys.push(`${PREFIX}-${type}-label.tpl.html`);\n        keys.push(`${PREFIX}-label.tpl.html`);\n        break;\n      }\n      case 'like':\n      case 'notLike':\n      case 'startsWith':\n      case 'endsWith':\n      case 'lessThan':\n      case 'lessThanOrEquals':\n      case 'greaterThan':\n      case 'greaterThanOrEquals': {\n        keys.push(`${PREFIX}-${type}-the-${key}-input.tpl.html`);\n        keys.push(`${PREFIX}-${type}-input.tpl.html`);\n        keys.push(`${PREFIX}-input.tpl.html`);\n        break;\n      }\n    }\n\n    keys.push(`${PREFIX}-contains.tpl.html`);\n    return keys;\n  }\n}\n","<ng-container key=\"plugin-column-filter.tpl.html\"\n              [context]=\"context\">\n</ng-container>\n","import { Directive, Input } from '@angular/core';\nimport { ColumnModel } from '@qgrid/core';\nimport { CellTemplateService } from '@qgrid/ngx';\n\n@Directive({\n  selector: '[q-grid-column-filter-item-list]',\n  providers: [CellTemplateService],\n})\nexport class ColumnFilterItemListDirective {\n  @Input('q-grid-column-filter-item-list') column: ColumnModel;\n  @Input('q-grid-column-filter-search') search: string;\n\n  constructor(\n    public cellService: CellTemplateService,\n  ) {\n  }\n}\n","import { Directive, Input, OnInit, ViewContainerRef } from '@angular/core';\nimport { ColumnFilterItemListDirective } from './column-filter-item-list.directive';\n\n@Directive({\n  selector: '[q-grid-column-filter-item]',\n})\nexport class ColumnFilterItemDirective implements OnInit {\n  @Input('q-grid-column-filter-item') value: any;\n\n  $implicit = this;\n\n  constructor(\n    private viewContainerRef: ViewContainerRef,\n    private itemList: ColumnFilterItemListDirective,\n  ) {\n  }\n\n  ngOnInit() {\n    const itemList = this.itemList;\n    const link = itemList.cellService.build('column-filter', itemList.column);\n    link(this.viewContainerRef, this);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { ColumnModel, GRID_PREFIX } from '@qgrid/core';\nimport { GridPlugin } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-column-filter-trigger',\n  templateUrl: './column-filter-trigger.component.html',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ColumnFilterTriggerComponent implements OnInit {\n  @Input() column: ColumnModel;\n\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: ColumnFilterTriggerComponent } = {\n    $implicit: this,\n  };\n\n  constructor(\n    private plugin: GridPlugin,\n    private element: ElementRef,\n  ) {\n  }\n\n  ngOnInit() {\n    const { model, observeReply } = this.plugin;\n\n    observeReply(model.filterChanged)\n      .subscribe(e => {\n        if (e.hasChanges('by')) {\n          if (this.plugin.view.filter.has(this.column)) {\n            this.element.nativeElement.classList.add(`${GRID_PREFIX}-active`);\n          } else {\n            this.element.nativeElement.classList.remove(`${GRID_PREFIX}-active`);\n          }\n        }\n      });\n  }\n}\n","<ng-container key=\"plugin-column-filter-trigger.tpl.html\"\n              [context]=\"context\">\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { GridModelBuilder, TemplateModule } from '@qgrid/ngx';\nimport { ColumnFilterState } from '@qgrid/plugins';\nimport { ColumnFilterByComponent } from './column-filter-by.component';\nimport { ColumnFilterItemListDirective } from './column-filter-item-list.directive';\nimport { ColumnFilterItemDirective } from './column-filter-item.directive';\nimport { ColumnFilterTriggerComponent } from './column-filter-trigger.component';\nimport { ColumnFilterComponent } from './column-filter.component';\n\n@NgModule({\n  declarations: [\n    ColumnFilterComponent,\n    ColumnFilterTriggerComponent,\n    ColumnFilterByComponent,\n    ColumnFilterItemListDirective,\n    ColumnFilterItemDirective,\n  ],\n  exports: [\n    ColumnFilterComponent,\n    ColumnFilterTriggerComponent,\n    ColumnFilterByComponent,\n    ColumnFilterItemListDirective,\n    ColumnFilterItemDirective,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class ColumnFilterModule {\n  constructor(modelBuilder: GridModelBuilder) {\n    modelBuilder.register('columnFilter', ColumnFilterState);\n  }\n}\n","<ng-template>\n    <ng-content></ng-content>\n</ng-template>\n\n<ng-container key=\"plugin-column-sort.tpl.html\"\n              [context]=\"context\">\n</ng-container>\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  NgZone,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { ColumnModel, EventListener, EventManager } from '@qgrid/core';\nimport { GridPlugin } from '@qgrid/ngx';\nimport { ColumnSortPlugin } from '@qgrid/plugins';\nimport { FocusAfterRender } from '../focus/focus.service';\n\n@Component({\n  selector: 'q-grid-column-sort',\n  templateUrl: './column-sort.component.html',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ColumnSortComponent implements AfterViewInit {\n  @ViewChild(TemplateRef, { static: true }) template: TemplateRef<any>;\n  @Input() column: ColumnModel;\n\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: ColumnSortComponent } = {\n    $implicit: this,\n  };\n\n  constructor(\n    private plugin: GridPlugin,\n    private elementRef: ElementRef,\n    private zone: NgZone,\n  ) {\n  }\n\n  ngAfterViewInit() {\n    const { nativeElement } = this.elementRef;\n    const iconAsc = nativeElement.querySelector('.q-grid-asc');\n    const iconDesc = nativeElement.querySelector('.q-grid-desc');\n\n    const columnSort = new ColumnSortPlugin(this.plugin, {\n      element: nativeElement,\n      column: this.column,\n      iconAsc,\n      iconDesc,\n    });\n\n    const listener = new EventListener(nativeElement, new EventManager(this));\n    listener.on('click', () => {\n      if (columnSort.click()) {\n        new FocusAfterRender(this.plugin);\n      }\n    });\n\n    this.zone.runOutsideAngular(() =>\n      listener.on('mouseleave', () => columnSort.mouseLeave()),\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ColumnSortComponent } from './column-sort.component';\nimport { TemplateModule } from '@qgrid/ngx';\n\n@NgModule({\n  declarations: [\n    ColumnSortComponent,\n  ],\n  exports: [\n    ColumnSortComponent,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class ColumnSortModule {\n}\n","/* eslint-disable @angular-eslint/no-conflicting-lifecycle */\n\nimport {\n  AfterViewInit,\n  Directive,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { Command, CommandManager, Shortcut, ShortcutDispatcher } from '@qgrid/core';\nimport { Disposable, GridPlugin } from '@qgrid/ngx';\n\nexport class ZoneCommandManager {\n  constructor(\n    private run: <T>(f: () => T) => T,\n    private manager: CommandManager,\n    private commandArg: any,\n  ) {\n  }\n\n  invoke(commands: Command[]) {\n    return this.run(() =>\n      this.manager.invoke(commands, this.commandArg, 'command.directive'),\n    );\n  }\n\n  filter(commands) {\n    return this.manager.filter(commands);\n  }\n}\n\n@Directive({\n  selector: '[q-grid-command]',\n  providers: [Disposable],\n})\nexport class CommandDirective implements DoCheck, OnChanges, OnInit, AfterViewInit {\n  private isAfterViewInit = false;\n\n  @Input('q-grid-command') command: Command<any>;\n  @Input('q-grid-command-arg') commandArg: any;\n  @Input('q-grid-command-use-shortcut') useCommandShortcut: boolean;\n  @Input('q-grid-command-event') commandEvent = 'click';\n  @Input('q-grid-command-use-zone') useZone: boolean;\n  @Input('q-grid-command-host') host: 'grid' | 'document' = 'grid';\n  @Output('q-grid-command-execute') commandExecute = new EventEmitter<any>();\n\n  constructor(\n    private disposable: Disposable,\n    private elementRef: ElementRef,\n    private zone: NgZone,\n    @Optional() private plugin: GridPlugin,\n  ) {\n  }\n\n  ngOnInit() {\n    const { nativeElement } = this.elementRef;\n\n    this.aroundZone(() =>\n      nativeElement\n        .addEventListener(this.commandEvent, e => this.execute(e)),\n    );\n  }\n\n  ngDoCheck() {\n    if (!this.isAfterViewInit) {\n      return;\n    }\n\n    if (this.command) {\n      this.updateState();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.command) {\n      this.unregister();\n\n      if (this.command) {\n        this.register();\n      }\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.command) {\n      this.updateState();\n    }\n\n    this.isAfterViewInit = true;\n  }\n\n  private register() {\n    const { command, commandArg } = this;\n\n    this.disposable.add(\n      command\n        .canExecuteCheck\n        .subscribe(() => this.updateState()),\n    );\n\n    if (this.useCommandShortcut && command.shortcut) {\n      if (this.plugin && this.host === 'grid') {\n        const { model } = this.plugin;\n        const { shortcut, manager } = model.action();\n\n        const zoneManager = new ZoneCommandManager(\n          f => {\n            const result = this.aroundZone(f);\n            this.afterExecute();\n            return result;\n          },\n          manager,\n          commandArg,\n        );\n\n        this.disposable.add(\n          shortcut.register(zoneManager, [command]),\n        );\n      } else {\n        const manager = new CommandManager(f => {\n          this.aroundZone(f);\n          this.afterExecute();\n        }, commandArg);\n\n        const shortcut = new Shortcut(new ShortcutDispatcher());\n\n        const keyDown = e => {\n          shortcut.keyDown(e);\n        };\n\n        document.addEventListener('keydown', keyDown);\n\n        this.disposable.add(() =>\n          document.removeEventListener('keydown', keyDown),\n        );\n\n        this.disposable.add(\n          shortcut.register(manager, [command]),\n        );\n      }\n    }\n  }\n\n  private execute(e?: MouseEvent) {\n    const { command, commandArg } = this;\n    const result = command.execute(commandArg) === true;\n    if (result && e) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    this.afterExecute();\n  }\n\n  private afterExecute() {\n    const { commandArg } = this;\n    this.commandExecute.emit(commandArg);\n    this.command.canExecuteCheck.next();\n  }\n\n  private unregister() {\n    this.disposable.finalize();\n  }\n\n  private updateState() {\n    const nativeElement = this.elementRef.nativeElement as HTMLElement;\n    if (!nativeElement.setAttribute) {\n      return;\n    }\n\n    const { command, commandArg } = this;\n    const canExecute = command.canExecute(commandArg) === true;\n    if (canExecute) {\n      if (nativeElement.hasAttribute('disabled')) {\n        nativeElement.removeAttribute('disabled');\n        nativeElement.classList.remove('q-grid-disabled');\n      }\n    } else {\n      if (!nativeElement.hasAttribute('!disabled')) {\n        nativeElement.setAttribute('disabled', 'true');\n        nativeElement.classList.add('q-grid-disabled');\n      }\n    }\n  }\n\n  private aroundZone<T>(f: () => T): T {\n    if (this.useZone) {\n      return this.zone.run(f);\n    }\n\n    return this.zone.runOutsideAngular(f);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommandDirective } from './command.directive';\n\n@NgModule({\n  declarations: [\n    CommandDirective,\n  ],\n  exports: [\n    CommandDirective,\n  ],\n})\nexport class CommandModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { parseFactory } from '@qgrid/core';\n\n@Pipe({\n  name: 'qGridConvert',\n})\nexport class ConvertPipe implements PipeTransform {\n  constructor() { }\n\n  transform(value: any, type: string) {\n    const parse = parseFactory(type);\n    const result = parse(value);\n    return result === null ? value : result;\n  }\n}\n","import { CurrencyPipe as NgCurrencyPipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Log } from '@qgrid/core';\n\n@Pipe({\n  name: 'qGridCurrency',\n})\nexport class CurrencyPipe implements PipeTransform {\n  constructor(private pipe: NgCurrencyPipe) { }\n\n  transform(value: any, currencyCode?: string, display?: boolean, digitsInfo?: any, locale?: any) {\n    try {\n      return this.pipe.transform(value, currencyCode, display, digitsInfo, locale);\n    } catch (ex) {\n      Log.warn('DatePipe', ex.message);\n      return value;\n    }\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n} from '@angular/core';\nimport { GridPlugin, StateAccessor } from '@qgrid/ngx';\nimport { DataManipulationPlugin, DataManipulationState } from '@qgrid/plugins';\n\n@Component({\n  selector: 'q-grid-data-manipulation',\n  template: '',\n  providers: [GridPlugin, StateAccessor],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DataManipulationComponent implements OnInit, OnChanges {\n  private dmState = this.stateAccessor.setter(DataManipulationState);\n\n  context: {\n    $implicit: DataManipulationPlugin;\n  };\n\n  @Input('rowFactory') set dataManipulationRowFactory(rowFactory: (x: any) => any) { this.dmState({ rowFactory }); }\n\n  constructor(\n    private plugin: GridPlugin,\n    private stateAccessor: StateAccessor,\n  ) {\n  }\n\n  ngOnChanges() {\n    const { model } = this.plugin;\n    this.stateAccessor.write(model);\n  }\n\n  ngOnInit() {\n    const dm = new DataManipulationPlugin(this.plugin);\n    this.context = { $implicit: dm };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { GridModelBuilder } from '@qgrid/ngx';\nimport { DataManipulationState } from '@qgrid/plugins';\nimport { DataManipulationComponent } from './data-manipulation.component';\n\n@NgModule({\n  declarations: [\n    DataManipulationComponent,\n  ],\n  exports: [\n    DataManipulationComponent,\n  ],\n})\nexport class DataManipulationModule {\n  constructor(modelBuilder: GridModelBuilder) {\n    modelBuilder\n      .register('dataManipulation', DataManipulationState);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { PipeUnit } from '@qgrid/core';\nimport { GridModel, GridPlugin } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-data-provider',\n  template: '',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DataProviderComponent implements OnInit {\n  private next: ((rows: any[]) => void) | null;\n\n  @Output() requestRows = new EventEmitter<GridModel>();\n\n  @Input('rows') set rows(value: any[] | null) {\n    if (Array.isArray(value)) {\n      const next = this.next;\n      if (next) {\n        this.next = null;\n        next(value);\n      }\n    }\n  }\n\n  constructor(\n    private plugin: GridPlugin,\n    private zone: NgZone,\n  ) {\n  }\n\n  ngOnInit() {\n    this.plugin.model.data({\n      pipe: [\n        (data, context, next) =>\n          this.zone.run(() => {\n            this.next = next;\n            this.requestRows.emit(context.model);\n          }),\n        ...PipeUnit.view,\n      ],\n    }, { source: 'data.provider' });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { DataProviderComponent } from './data-provider.component';\n\n@NgModule({\n  declarations: [\n    DataProviderComponent,\n  ],\n  exports: [\n    DataProviderComponent,\n  ],\n})\nexport class DataProviderModule {\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\nimport { Keyboard } from '@qgrid/core';\n\nconst DELIMITER = '/';\n\n@Directive({\n  selector: '[q-grid-date-mask]',\n})\nexport class DateMaskDirective {\n  @Input('q-grid-date-mask') mask: string;\n\n  constructor(private elementRef: ElementRef) {\n  }\n\n  @HostListener('keypress', ['$event'])\n  keyUp(e: KeyboardEvent) {\n    if (!this.mask) {\n      return;\n    }\n\n    const input = this.elementRef.nativeElement as HTMLInputElement;\n    const value = input.value || '';\n    const maskChar = this.mask[value.length];\n    if (!maskChar) {\n      e.preventDefault();\n      return;\n    }\n\n    const code = Keyboard.translate(e.keyCode);\n    if (this.isDigit(code)) {\n      if (maskChar === DELIMITER) {\n        e.preventDefault();\n        input.value += DELIMITER + code;\n        return;\n      }\n\n      const nextMaskChar = this.mask[input.value.length + 1];\n      if (nextMaskChar === DELIMITER) {\n        e.preventDefault();\n        input.value += code + DELIMITER;\n      }\n    }\n  }\n\n  private isDigit(char: string) {\n    return /^[0-9]$/i.test(char);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { isDate, parseFactory } from '@qgrid/core';\n\n@Injectable()\nexport class DateService {\n  private toDateTime: (x: Date | string) => Date = parseFactory('datetime');\n\n  parseDateTime(dateOrText: Date | string, format: string): Date | null {\n    if (!dateOrText) {\n      return null;\n    }\n\n    if (isDate(dateOrText)) {\n      return dateOrText as Date;\n    }\n\n    if (format) {\n      const simpleFormat = format.replace(/[^A-Za-z]/g, '');\n      const justDigitsValue = (dateOrText as string).replace(/[^0-9]/g, '');\n      return this.parseDateText(justDigitsValue, simpleFormat);\n    }\n\n    return this.toDateTime(dateOrText);\n  }\n\n  isValid(dateOrText: Date | string, format: string) {\n    if (!dateOrText) {\n      return true;\n    }\n\n    const result = this.parseDateTime(dateOrText, format);\n    return result && !isNaN(result.getTime());\n  }\n\n  private parseDateText(text: string, format: string): Date | null {\n    let year = '';\n    let month = '';\n    let day = '';\n\n    let cursor = 0;\n    for (const formatKey of format) {\n      switch (formatKey) {\n        case 'y': {\n          const digit = text[cursor++];\n          if (digit) {\n            year += digit;\n          }\n          break;\n        }\n        case 'M': {\n          const digit = text[cursor++];\n          if (digit) {\n            month += digit;\n          }\n          break;\n        }\n        case 'd': {\n          const digit = text[cursor++];\n          if (digit) {\n            day += digit;\n          }\n          break;\n        }\n      }\n    }\n\n    if (year.length < 4 || month.length < 1 || day.length < 1) {\n      return null;\n    }\n\n    month = month.length === 1 ? '0' + month : month;\n    day = day.length === 1 ? '0' + day : day;\n\n    return this.toDateTime(`${year}-${month}-${day}`);\n  }\n}\n","import { Directive, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { parseFactory } from '@qgrid/core';\nimport { DateService } from './date.service';\n\n@Directive({\n  selector: '[q-grid-date]',\n})\nexport class DateDirective {\n  private toMidnight: (x: Date | string) => Date = parseFactory('date');\n\n  constructor(\n    templateRef: TemplateRef<any>,\n    viewContainerRef: ViewContainerRef,\n\t\tprivate dateService: DateService,\n  ) {\n    viewContainerRef.createEmbeddedView(templateRef, { $implicit: this });\n  }\n\n  isValid(dateOrText: Date | string, format: string) {\n    return this.dateService.isValid(dateOrText, format);\n  }\n\n  dateLow(value: Date | string, format: string) {\n    const date = this.dateService.parseDateTime(value, format);\n    if (date) {\n      return this.toMidnight(date);\n    }\n\n    return value;\n  }\n\n  datetime(previous: Date | string, current: Date | string, format: string) {\n    const previousDate = this.dateService.parseDateTime(previous, format);\n    const currentDate = this.dateService.parseDateTime(current, format);\n    if (previousDate && currentDate) {\n      const midnight = this.toMidnight(currentDate);\n      const sameHours = new Date(\n        midnight.getFullYear(),\n        midnight.getMonth(),\n        midnight.getDate(),\n        previousDate.getHours(),\n        previousDate.getMinutes(),\n        previousDate.getSeconds(),\n        previousDate.getMilliseconds(),\n      );\n\n      return sameHours;\n    }\n\n    if (currentDate) {\n      return this.toMidnight(currentDate);\n    }\n\n    return current;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { DateMaskDirective } from './date-mask.directive';\nimport { DateDirective } from './date.directive';\nimport { DateService } from './date.service';\n\n@NgModule({\n  declarations: [\n    DateDirective,\n    DateMaskDirective,\n  ],\n  exports: [\n    DateDirective,\n    DateMaskDirective,\n  ],\n  providers: [\n    DateService,\n  ],\n})\nexport class DateModule {\n}\n","import { DatePipe as NgDatePipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Log } from '@qgrid/core';\n\n@Pipe({\n  name: 'qGridDate',\n})\nexport class DatePipe implements PipeTransform {\n  constructor(private pipe: NgDatePipe) { }\n\n  transform(value: any, format?: any, timezone?: any, locale?: any) {\n    try {\n      // The value expression: a Date object, a number (milliseconds since UTC epoch), or an ISO string\n      return this.pipe.transform(value, format, timezone, locale);\n    } catch (ex) {\n      Log.warn('DatePipe', ex.message);\n      return value;\n    }\n  }\n}\n","import { isArray, isFunction, isObject } from '@qgrid/core';\n\nexport function evaluateFactory(expression, args) {\n  return visit;\n\n  function visit(value) {\n    if (isArray(value)) {\n      return visitArray(value);\n    } else if (isFunction(value)) {\n      return visitFunction(value);\n    } else if (isObject(value)) {\n      return visitObject(value);\n    }\n\n    return value;\n  }\n\n  function visitObject(inst) {\n    const keys = Object.keys(inst);\n    const length = keys.length;\n    const result = {};\n    for (let i = 0; i < length; i++) {\n      const key = keys[i];\n      result[key] = visit(inst[key]);\n    }\n\n    return result;\n  }\n\n  function visitArray(list) {\n    const result = [];\n    for (let i = 0, length = list.length; i < length; i++) {\n      result[i] = visit(list[i]);\n    }\n    return result;\n  }\n\n  function visitFunction(delegate) {\n    return delegate.apply(expression, args);\n  }\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { Node } from './model/node';\n\nexport interface EbNodeServiceEventArg<T> {\n\tnewValue: T;\n\toldValue: T;\n}\n\n@Injectable()\nexport class EbNodeService {\n  private node: Node = null;\n\n  currentChange = new EventEmitter<EbNodeServiceEventArg<Node>>();\n\n  get current() {\n    return this.node;\n  }\n\n  set current(value) {\n    const oldNode = this.node;\n    if (value !== oldNode) {\n      this.node = value;\n      this.currentChange.emit({\n        oldValue: oldNode,\n        newValue: value,\n      });\n    }\n  }\n}\n","import { GridError } from '@qgrid/ngx';\nimport { Line } from './line';\n\nexport class Node {\n  readonly attributes: { [key: string]: any } = {};\n  // eslint-disable-next-line no-use-before-define\n  children: Node[] = [];\n  level: number;\n  line: Line;\n\n  constructor(public id: string, public schema, public parent?: Node) {\n    this.level = parent ? parent.level + 1 : 0;\n  }\n\n  attr(key: string, value?) {\n    if (arguments.length === 2) {\n      this.attributes[key] = value;\n    } else {\n      return this.attributes[key];\n    }\n  }\n\n  classes() {\n  }\n\n  addChildAfter(child: Node, after?: Node) {\n    const index = after ? this.children.indexOf(after) : this.children.length - 1;\n\n    this.children.splice(index + 1, 0, child);\n    child.parent = this;\n    child.level = this.level + 1;\n  }\n\n  addChildBefore(child: Node, before: Node) {\n    const index = before ? this.children.indexOf(before) : 0;\n\n    this.children.splice(index, 0, child);\n    child.parent = this;\n    child.level = this.level + 1;\n  }\n\n  addAfter(child: Node) {\n    if (!this.parent) {\n      throw new GridError('node', 'Can\\'t add after root');\n    }\n    this.parent.addChildAfter(child, this);\n  }\n\n  addBefore(child: Node) {\n    if (!this.parent) {\n      throw new GridError('node', 'Can\\'t add after root');\n    }\n    this.parent.addChildBefore(child, this);\n  }\n\n  clone() {\n    return this.schema.apply(new Node(this.id, this.schema));\n  }\n\n  remove() {\n    if (!this.parent) {\n      throw new GridError('node', 'Root element can\\'t be removed');\n    }\n\n    const index = this.parent.children.indexOf(this);\n    this.parent.children.splice(index, 1);\n  }\n\n  clear() {\n    this.children.forEach(child => child.parent = null);\n    this.children = [];\n  }\n\n  toString(indent = 0) {\n    return Array(indent).join('-') + ' ' + this.level + '\\n' +\n      this.children\n        .map(child => child.toString(indent + 1))\n        .join('\\n');\n  }\n\n  toTraceString() {\n    if (this.parent) {\n      let parent = this.parent;\n      while (null !== parent.parent) {\n        parent = parent.parent;\n      }\n\n      return parent.toString();\n    }\n\n    return this.toString();\n  }\n}\n","<ul class=\"q-grid-eb-node\"\n\t[q-grid-eb-class]=\"model.attr('class')\"\n\t[ngClass]=\"{'q-grid-eb-active': service.current === model}\"\n\t(click)=\"select($event)\">\n\t<li class=\"q-grid-eb-line\">\n\t\t<ul>\n\t\t\t<li *ngFor=\"let expr of model.line.expressions\"\n\t\t\t\t\tclass=\"q-grid-eb-expression\">\n\t\t\t\t<q-grid-eb-expression [model]=\"expr\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[node]=\"model\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[line]=\"model.line\">\n\t\t\t\t</q-grid-eb-expression>\n\t\t\t</li>\n\t\t</ul>\n\t</li>\n\n\t<li class=\"q-grid-eb-children\">\n\t\t<ul>\n\t\t\t<li *ngFor=\"let child of model.children\"\n\t\t\t\t\tclass=\"q-grid-eb-child\">\n\t\t\t\t<q-grid-eb-node [model]=\"child\">\n\t\t\t\t</q-grid-eb-node>\n\t\t\t</li>\n\t\t</ul>\n\t</li>\n</ul>\n\n<ng-template key=\"eb-group.tpl.html\"\n\t\t\tlet-$group\n\t\t\tlet-$node=\"node\"\n\t\t\tlet-$line=\"line\">\n\t<ul class=\"q-grid-eb-group\">\n\t\t<li *ngFor=\"let expr of $group.expressions\"\n\t\t\t\tclass=\"q-grid-eb-expression\">\n\t\t\t<q-grid-eb-expression [model]=\"expr\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[node]=\"$node\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[line]=\"$line\">\n\t\t\t</q-grid-eb-expression>\n\t\t</li>\n\t</ul>\n</ng-template>\n","import { Component, Input } from '@angular/core';\nimport { EbNodeService } from './eb-node.service';\nimport { Node } from './model/node';\n\n@Component({\n  selector: 'q-grid-eb-node',\n  templateUrl: './eb-node.component.html',\n})\nexport class EbNodeComponent {\n  @Input() model: Node;\n\n  constructor(public service: EbNodeService) {\n  }\n\n  select(e) {\n    e.stopPropagation();\n\n    if (this.model.parent) {\n      this.service.current = this.model;\n    }\n  }\n}\n","import {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Input,\n  OnInit,\n  Optional,\n} from '@angular/core';\nimport { isArray } from '@qgrid/core';\nimport { evaluateFactory } from './digest/evaluate';\nimport { EbNodeComponent } from './eb-node.component';\n\n@Directive({\n  selector: '[q-grid-eb-class]',\n})\nexport class EbClassDirective implements OnInit, DoCheck {\n  private evaluate: (value: any) => any;\n  private oldClassList: Array<string> = [];\n\n  @Input('q-grid-eb-class') klass: any;\n  @Input('q-grid-eb-class-model') model: any;\n\n  constructor(private elementRef: ElementRef, @Optional() private node: EbNodeComponent) {\n  }\n\n  ngOnInit() {\n    this.evaluate = evaluateFactory(this.model, [this.node ? this.node.model : null]);\n  }\n\n  ngDoCheck() {\n    const result = this.evaluate(this.klass);\n    if (result) {\n      const classList = this.fetchClasses(result);\n      if (this.oldClassList.length !== classList.length\n        || this.oldClassList.join(' ') !== classList.join(' ')) {\n\n        const element = this.elementRef.nativeElement as HTMLElement;\n        element.classList.remove(...this.oldClassList);\n        element.classList.add(...classList);\n        this.oldClassList = classList;\n      }\n    } else if (this.oldClassList.length) {\n      const element = this.elementRef.nativeElement as HTMLElement;\n      element.classList.remove(...this.oldClassList);\n      this.oldClassList = [];\n    }\n  }\n\n  private fetchClasses(meta) {\n    if (isArray(meta)) {\n      return meta;\n    }\n\n    const keys = Object.keys(meta);\n    const classList = [];\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      if (meta[key]) {\n        classList.push(key);\n      }\n    }\n\n    return classList;\n  }\n}\n","import { evaluateFactory } from './evaluate';\n\nexport class Watcher {\n  private evaluate: (x: any) => any;\n  private oldValue: any;\n  private isFirstRun = true;\n\n  constructor(\n\t\tprivate expression: any,\n\t\tprivate key: string,\n\t\tprivate handler: (context: any, e: any) => void,\n\t\tprivate args = []) {\n\n    this.evaluate = evaluateFactory(expression, args);\n    this.oldValue = this.evaluate(expression[key]);\n  }\n\n  detect() {\n    const inst = this.expression[this.key];\n    const newValue = this.evaluate(inst);\n    if (this.isFirstRun || this.oldValue !== newValue) {\n      this.isFirstRun = false;\n\n      this.handler.apply(this.expression, [newValue, this.oldValue].concat(this.args));\n      this.oldValue = newValue;\n    }\n  }\n}\n","export abstract class Expression {\n  id: string;\n  type: string;\n  templateUrl = '';\n  method: string[] = [];\n}\n\nexport class GroupExpression extends Expression {\n  expressions: Expression[] = [];\n\n  constructor() {\n    super();\n\n    this.type = 'group';\n    this.templateUrl = 'eb-group.tpl.html';\n  }\n}\n\n","import { cloneDeep } from '@qgrid/core';\nimport { GridError } from '@qgrid/ngx';\nimport { Expression, GroupExpression } from './expression';\nimport { GroupSchema } from './group.schema';\nimport { Node } from './node';\n\ninterface ExpressionEntry {\n\tindex: number;\n\texpression: Expression;\n\tparent: GroupExpression;\n}\n\nexport class Line {\n  immutable = true;\n  readonly expressions: Expression[] = [];\n\n  constructor(private GroupSchemaT: typeof GroupSchema) {\n  }\n\n  add(expression: Expression) {\n    this.expressions.push(expression);\n  }\n\n  clone(id: string) {\n    return cloneDeep(this.get(id)) as Expression;\n  }\n\n  get(id: string) {\n    const expression = this.findById(this.expressions, id);\n    if (!expression) {\n      throw new GridError('line', `Expression ${id} not found`);\n    }\n\n    return expression.expression;\n  }\n\n  put(id: string, node: Node, build) {\n    const index = this.getIndex(id);\n    const schema = new this.GroupSchemaT(node, this);\n    const group = new GroupExpression();\n\n    const item = this.findById(this.expressions, id);\n    if (item.expression instanceof GroupExpression) {\n      build(schema);\n      schema.apply(group);\n      group.id = id;\n      this.expressions.splice(index, 1, group);\n      this.immutable = false;\n    } else {\n      throw new GridError('line', 'Unsupported operation: put to expression, that is not a group');\n    }\n  }\n\n  remove(id) {\n    const item = this.findById(this.expressions, id);\n    if (item.expression instanceof GroupExpression) {\n      item.expression.expressions = [];\n    } else {\n      throw new GridError('line', 'Unsupported operation: remove expression, that is not a group');\n    }\n  }\n\n  private getIndex(id: string) {\n    const index = this.expressions.findIndex(item => item.id === id);\n    if (index < 0) {\n      throw new GridError('line', `Expression ${id} not found`);\n    }\n\n    return index;\n  }\n\n  private findById(expressions: Expression[], id: string, parent: GroupExpression = null): ExpressionEntry {\n    for (let index = 0, length = expressions.length; index < length; index++) {\n      const expression = expressions[index];\n      if (expression.id === id) {\n        return { index, expression, parent };\n      }\n      if (expression instanceof GroupExpression) {\n        const group = expression as GroupExpression;\n        const groupChild = this.findById(group.expressions, id, group);\n        if (groupChild) {\n          return groupChild;\n        }\n      }\n    }\n\n    return null;\n  }\n}\n","import { Component, DoCheck, Input, OnInit } from '@angular/core';\nimport { Watcher } from './digest/watch';\nimport { Line } from './model/line';\nimport { Node } from './model/node';\n\n@Component({\n  selector: 'q-grid-eb-expression',\n  templateUrl: './eb-expression.component.html',\n})\nexport class EbExpressionComponent implements OnInit, DoCheck {\n  private watchers: Watcher[];\n\n  @Input() node: Node;\n  @Input() line: Line;\n  @Input() model: any;\n\n  context: { $implicit: any; node: Node; line: Line };\n\n  ngOnInit() {\n    this.context = { $implicit: this.model, node: this.node, line: this.line };\n\n    const $watch = this.model.$watch;\n    if ($watch) {\n      this.watchers =\n        Object\n          .keys($watch)\n          .map(key =>\n            new Watcher(\n              this.model,\n              key,\n              $watch[key],\n              [this.node, this.line]),\n          );\n    }\n  }\n\n  ngDoCheck() {\n    const ws = this.watchers;\n    if (!ws) {\n      return;\n    }\n\n    for (let i = 0, length = ws.length; i < length; i++) {\n      ws[i].detect();\n    }\n  }\n}\n","<ng-container [key]=\"model.templateUrl\" [context]=\"context\">\n</ng-container>\n","import { clone } from '@qgrid/core';\n\nexport function indexOf(array, predicate) {\n  for (let i = 0, length = array.length; i < length; i++) {\n    if (predicate(array[i], i)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nexport function defaults<T>(...args: any[]): T {\n  const dst = args[0];\n  const result = clone(dst) as T;\n\n  for (let i = 1, sourcesLength = args.length; i < sourcesLength; i++) {\n    const source = args[i];\n\n    if (!source) {\n      continue;\n    }\n\n    const keys = Object.keys(source);\n\n    for (let k = 0, keysLength = keys.length; k < keysLength; k++) {\n      const key = keys[k];\n      if (!Object.prototype.hasOwnProperty.call(result, key)) {\n        result[key] = source[key];\n      }\n    }\n  }\n\n  return result;\n}\n\nexport function override(dst, src) {\n  const keys = Object.keys(src);\n  const length = keys.length;\n\n  for (let i = 0; i < length; i++) {\n    const key = keys[i];\n    dst[key] = src[key];\n  }\n\n  return dst;\n}\n","/* eslint-disable no-use-before-define */\nimport { Injectable } from '@angular/core';\nimport { GroupExpression } from './model/expression';\nimport { Line } from './model/line';\nimport { Node } from './model/node';\nimport { INodeSchema } from './model/node.schema';\nimport { indexOf, override } from './utility';\n\nclass Serializer {\n  constructor(private node: Node) {\n  }\n\n  serialize(): ISerializationNode {\n    const groups = this.node.line.expressions.map(expr => this.serializeGroup(expr));\n\n    return {\n      id: this.node.id,\n      attributes: this.serializeAttributes(this.node),\n      children: this.node.children.map(child => new Serializer(child).serialize()),\n      line: groups.filter(group => group.expressions.length),\n    };\n  }\n\n  serializeGroup(group): ISerializationGroup {\n    return {\n      id: group.id,\n      expressions: group.expressions\n        .filter(expr => this.canSerialize(expr))\n        .map(expr => this.serializeExpression(expr)),\n    };\n  }\n\n  serializeExpression(expression): ISerializationExpression {\n    const result = {} as ISerializationExpression;\n\n    const serializeAttr = this.node.attr('serialize');\n    const serializableProps = serializeAttr[expression.id];\n    for (let i = 0, length = serializableProps.length; i < length; i++) {\n      const prop = serializableProps[i];\n      result[prop] = expression[prop];\n    }\n\n    result.id = expression.id;\n    result.type = expression.type;\n    result.method = expression.method;\n\n    return result;\n  }\n\n  serializeAttributes(node: Node) {\n    const serializeAttr = node.attr('serialize');\n    if (serializeAttr && serializeAttr['@attr']) {\n      const props = serializeAttr['@attr'];\n      return props.reduce((memo, attr) => {\n        memo[attr] = node.attr(attr);\n        return memo;\n      }, {});\n    }\n    return {};\n  }\n\n  canSerialize(expression) {\n    const serializeAttr = this.node.attr('serialize');\n    if (!serializeAttr) {\n      return false;\n    }\n\n    const props = serializeAttr[expression.id];\n    return !!(props && props.length);\n  }\n}\n\nclass Deserializer {\n  constructor(private schema: INodeSchema) {\n  }\n\n  deserialize(data: ISerializationNode, parent: Node = null, nodeMap?: { [key: string]: Node }) {\n    nodeMap = nodeMap || {};\n\n    let node: Node;\n    if (!parent) {\n      node = new Node(data.id, this.schema);\n      this.schema.apply(node);\n      traverse(node, nodeMap);\n      node.clear();\n    } else {\n      node = nodeMap[data.id].clone();\n      parent.addChildAfter(node);\n      traverse(parent, nodeMap);\n      node.clear();\n    }\n\n    override(node.attributes, data.attributes);\n\n    this.deserializeLine(node, node.line, data.line);\n\n    const children = data.children;\n    const length = children.length;\n    for (let i = 0; i < length; i++) {\n      const child = children[i];\n      const childSchema = this.schema.schemaMap[child.id];\n      new Deserializer(childSchema).deserialize(child, node, nodeMap);\n    }\n\n    return node;\n  }\n\n  private deserializeLine(node: Node, line: Line, dataGroups: ISerializationGroup[]) {\n    for (let i = 0, length = dataGroups.length; i < length; i++) {\n      const dataGroup = dataGroups[i];\n      const exprGroup = line.get(dataGroup.id) as GroupExpression;\n      this.deserializeGroup(node, line, exprGroup, dataGroup);\n    }\n  }\n\n  private deserializeGroup(node: Node, line: Line, group: GroupExpression, dataGroup: ISerializationGroup) {\n    const dataExpressions = dataGroup.expressions;\n    const length = dataExpressions.length;\n\n    let index;\n    for (let i = 0; i < length; i++) {\n      const dataExp = dataExpressions[i];\n      index = indexOf(group.expressions, expr => expr.id === dataExp.id);\n      override(group.expressions[index], dataExp);\n    }\n\n    for (let i = 0; i < length; i++) {\n      const dataExpr = dataExpressions[i];\n      if (dataExpr.method) {\n        dataExpr.method.forEach(m => {\n          group.expressions[index][m](node, line);\n          group.expressions[index].method = dataExpressions[i].method;\n        });\n      }\n    }\n  }\n}\n\nfunction traverse(node: Node, map: { [key: string]: Node }) {\n  if (!Object.prototype.hasOwnProperty.call(map, node.id)) {\n    map[node.id] = node;\n  }\n\n  for (let i = 0, length = node.children.length; i < length; i++) {\n    const child = node.children[0];\n    traverse(child, map);\n  }\n}\n\nexport declare interface ISerializationNode {\n  id: string;\n  attributes: any;\n  children: ISerializationNode[];\n  line: ISerializationGroup[];\n}\n\nexport declare interface ISerializationGroup {\n  id: string;\n  expressions: ISerializationExpression[];\n}\n\nexport declare interface ISerializationExpression {\n  id: string;\n  type: string;\n  method: Array<string>;\n}\n\n@Injectable()\nexport class SerializationService {\n  serialize(node: Node): ISerializationNode {\n    return new Serializer(node).serialize();\n  }\n\n  deserialize(schema: INodeSchema, data: ISerializationNode): Node {\n    return new Deserializer(schema).deserialize(data);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SerializationService } from './serialization.service';\nimport { EbNodeComponent } from './eb-node.component';\nimport { EbExpressionComponent } from './eb-expression.component';\nimport { EbClassDirective } from './eb-class.directive';\nimport { EbNodeService } from './eb-node.service';\nimport { TemplateModule } from '@qgrid/ngx';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TemplateModule,\n  ],\n  exports: [\n    EbNodeComponent,\n    EbClassDirective,\n  ],\n  declarations: [\n    EbNodeComponent,\n    EbExpressionComponent,\n    EbClassDirective,\n  ],\n  providers: [\n    SerializationService,\n    EbNodeService,\n  ],\n})\nexport class EbModule {\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { GridPlugin } from '@qgrid/ngx';\nimport { EditFormPanelPlugin } from '@qgrid/plugins';\n\n@Component({\n  selector: 'q-grid-edit-form',\n  templateUrl: './edit-form.component.html',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EditFormComponent implements OnInit {\n  @Input() caption: string;\n  @Input() row: any;\n\n  @Output() cancel = new EventEmitter();\n  @Output() reset = new EventEmitter();\n  @Output() submit = new EventEmitter();\n\n  context: { $implicit: EditFormPanelPlugin };\n\n  constructor(\n    private plugin: GridPlugin,\n  ) {\n  }\n\n  ngOnInit() {\n    const context = {\n      row: this.row,\n      caption: this.caption,\n    };\n\n    const editFormPanel = new EditFormPanelPlugin(this.plugin, context);\n    const { service } = this.plugin;\n\n    editFormPanel.cancelEvent.on(() => this.cancel.emit());\n    editFormPanel.resetEvent.on(() => this.reset.emit());\n    editFormPanel.submitEvent.on(() => {\n      this.submit.emit();\n\n      service.invalidate({\n        source: 'edit-form.component',\n        why: 'refresh',\n      });\n    });\n\n    this.context = { $implicit: editFormPanel };\n  }\n}\n","<ng-container key=\"plugin-edit-form.tpl.html\"\n              [context]=\"context\">\n</ng-container>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { CellEditor } from '@qgrid/core';\n\n@Component({\n  selector: 'q-grid-edit-form-control',\n  templateUrl: './edit-form-control.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EditFormControlComponent {\n  @Input() editor: CellEditor;\n\n  get key() {\n    if (this.editor) {\n      const { column } = this.editor.cell;\n      const type = column.editor || column.type;\n      return `edit-form-${type}.tpl.html`;\n    }\n\n    return 'edit-form-text.tpl.html';\n  }\n}\n","<ng-container key=\"{{key}}\"\n              [context]=\"{$implicit: editor}\">\n</ng-container>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'q-grid-edit-form-trigger',\n  templateUrl: './edit-form-trigger.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EditFormTriggerComponent {\n  @Input() caption: string;\n  @Input() row: any;\n\n  context: any = {\n    $implicit: this,\n  };\n}\n","<ng-container key=\"plugin-edit-form-trigger.tpl.html\"\n              [context]=\"context\">\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EditFormTriggerComponent } from './edit-form-trigger.component';\nimport { EditFormComponent } from './edit-form.component';\nimport { EditFormControlComponent } from './edit-form-control.component';\nimport { TemplateModule } from '@qgrid/ngx';\n\n@NgModule({\n  declarations: [\n    EditFormTriggerComponent,\n    EditFormComponent,\n    EditFormControlComponent,\n  ],\n  exports: [\n    EditFormTriggerComponent,\n    EditFormComponent,\n    EditFormControlComponent,\n  ],\n  imports: [\n    CommonModule,\n    TemplateModule,\n  ],\n})\nexport class EditFormModule { }\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  Input,\n  TemplateRef,\n} from '@angular/core';\nimport { Action, Command, Composite } from '@qgrid/core';\nimport { GridPlugin, TemplateHostService } from '@qgrid/ngx';\nimport { ExportPlugin } from '@qgrid/plugins';\n\n@Component({\n  selector: 'q-grid-export',\n  templateUrl: './export.component.html',\n  providers: [TemplateHostService, GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ExportComponent implements AfterViewInit {\n  @Input() type: string;\n  @ContentChild(TemplateRef) templateRef: TemplateRef<any>;\n\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: ExportComponent } = {\n    $implicit: this,\n  };\n\n  constructor(\n    private plugin: GridPlugin,\n    private templateHost: TemplateHostService,\n  ) {\n    this.templateHost.key = () => `export-${this.type}`;\n  }\n\n  ngAfterViewInit() {\n    const { model, disposable } = this.plugin;\n    const exportPlugin = new ExportPlugin(model, this.type);\n    const action = new Action(\n      new Command({\n        execute: () => exportPlugin[this.type].execute(),\n      }),\n      `Export to ${this.type}`,\n      'file_download',\n    );\n\n    if (this.templateRef) {\n      action.templateUrl = this.templateHost.key('trigger');\n    }\n\n    const items = Composite.list([model.action().items, [action]]);\n    model.action({\n      items,\n    }, {\n      source: 'export.component',\n    });\n\n    disposable.add(() => {\n      model.action({\n        items: model\n          .action()\n          .items\n          .filter(x => x !== action),\n      }, {\n        source: 'export.component',\n      });\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ExportComponent } from './export.component';\nimport { TemplateModule } from '@qgrid/ngx';\n\n@NgModule({\n  declarations: [\n    ExportComponent,\n  ],\n  exports: [\n    ExportComponent,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class ExportModule {\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Optional,\n  Output,\n} from '@angular/core';\nimport { EventListener, EventManager, yes } from '@qgrid/core';\nimport { Disposable } from '@qgrid/ngx';\nimport { BackdropService } from '../backdrop/backdrop.service';\n\n@Directive({\n  selector: '[q-grid-file]',\n  providers: [Disposable],\n})\nexport class FileDirective {\n  private reader = new FileReader();\n  private _value: any;\n  private _label: string;\n\n  @Output('q-grid-fileChange') valueChange = new EventEmitter<any>();\n  @Output('q-grid-file-labelChange') labelChange = new EventEmitter<string>();\n\n  @Input('q-grid-file-is-valid') isValid: (name: string) => boolean = yes;\n\n  @Input('q-grid-file') get value() {\n    return this._value;\n  }\n\n  set value(value: any) {\n    if (value !== this._value) {\n      this._value = value;\n      this.valueChange.emit(value);\n    }\n  }\n\n  @Input('q-grid-file-label') get label() {\n    return this._label;\n  }\n\n  set label(value: string) {\n    if (value !== this._label) {\n      this._label = value;\n      this.labelChange.emit(value);\n    }\n  }\n\n  constructor(\n    @Optional() private backdropService: BackdropService,\n    disposable: Disposable,\n    elementRef: ElementRef) {\n\n    const listener = new EventListener(elementRef.nativeElement, new EventManager(this));\n\n    disposable.add(listener.on('change', this.onUpload));\n    disposable.add(listener.on('drop', this.onUpload));\n    disposable.add(listener.on('click', this.hideBackdrop));\n    disposable.add(listener.on('focus', this.revealBackdrop));\n\n    this.reader.onloadend = e => this.onLoadEnd(e);\n  }\n\n  onUpload(e) {\n    const { files } = e.target;\n    const file = files[0];\n    if (file && this.isValid(file.name)) {\n      this.reader.readAsDataURL(file);\n      this.label = file.name;\n    }\n  }\n\n  onLoadEnd(e) {\n    if (e.target.readyState === this.reader.DONE) {\n      this.value = e.target.result;\n    }\n  }\n\n  hideBackdrop() {\n    if (this.backdropService) {\n      this.backdropService.hide();\n    }\n  }\n\n  revealBackdrop() {\n    if (this.backdropService) {\n      if (!this.backdropService.isActive) {\n        setTimeout(() => this.backdropService.reveal(), 300);\n      }\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FileDirective } from './file.directive';\n\n@NgModule({\n  declarations: [\n    FileDirective,\n  ],\n  exports: [\n    FileDirective,\n  ],\n})\nexport class FileModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { filterNode, Node, predicateFactory } from '@qgrid/core';\n\n@Pipe({\n  name: 'qGridFilter',\n})\nexport class FilterPipe implements PipeTransform {\n  transform(items: any[] | Node, { search = null, type = 'plain' }) {\n    if (search || search === 0 || search === false) {\n      const predicate = predicateFactory(search);\n      switch (type) {\n        case 'node': {\n          const root = items as Node;\n          return filterNode(root, predicate);\n        }\n        default: {\n          return (items as any[]).filter(predicate);\n        }\n      }\n    }\n\n    return items;\n  }\n}\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  Input,\n  NgZone,\n} from '@angular/core';\nimport { isFunction, isString } from '@qgrid/core';\nimport { GridError } from '@qgrid/ngx';\n\n@Directive({\n  selector: '[q-grid-focus]',\n})\nexport class FocusDirective implements AfterViewInit {\n  @Input('q-grid-focus') selector;\n  @Input('q-grid-focus-disabled') disabled = false;\n\n  constructor(\n    private elementRef: ElementRef,\n    private zone: NgZone,\n  ) { }\n\n  ngAfterViewInit() {\n    if (this.disabled) {\n      return;\n    }\n\n    const selector = this.selector;\n    const element = selector\n      ? isString(selector) ? this.elementRef.nativeElement.querySelector(selector) : selector\n      : this.elementRef.nativeElement;\n\n    if (!element) {\n      throw new GridError(\n        'focus.directive',\n        `Element ${this.selector} is not found`,\n      );\n    }\n\n    if (!isFunction(element.focus)) {\n      throw new GridError(\n        'focus.directive',\n        `Can't find focus method in ${element}`,\n      );\n    }\n\n    // we need a small timeout to wait, for example, position directive\n    // in other case it will scroll to element before layout\n    this.zone.runOutsideAngular(() =>\n      setTimeout(() => {\n        element.focus();\n      }, 10));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FocusDirective } from './focus.directive';\nimport { AutoFocusDirective } from './autofocus.directive';\nimport { BlurDirective } from './blur.directive';\n\n@NgModule({\n  declarations: [\n    FocusDirective,\n    AutoFocusDirective,\n    BlurDirective,\n  ],\n  exports: [\n    FocusDirective,\n    AutoFocusDirective,\n    BlurDirective,\n  ],\n})\nexport class FocusModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { escapeRegexp, GRID_PREFIX, htmlEncode } from '@qgrid/core';\n\n\n@Pipe({\n  name: 'qGridHighlight',\n})\nexport class HighlightPipe implements PipeTransform {\n  transform(text: string | number, search: string | number): string {\n    if ((text || text === 0) && (search || search === 0)) {\n      text = text.toString();\n      search = search.toString();\n\n      const contains = new RegExp(escapeRegexp(search), 'gi');\n      if (contains.test(text)) {\n        return text.replace(contains,\n          s => `<span class=\"${GRID_PREFIX}-highlight-part\">${htmlEncode(s)}</span>`,\n        );\n      }\n\n      const contained = new RegExp(escapeRegexp(text), 'gi');\n      if (contained.test(search)) {\n        return `<span class=\"${GRID_PREFIX}-highlight-part\">${htmlEncode(text)}</span>`;\n      }\n    }\n\n    return htmlEncode(text as string);\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  ElementRef,\n  Input,\n  TemplateRef,\n} from '@angular/core';\nimport {\n  Action,\n  ColumnModel,\n  Command,\n  Composite,\n  EventListener,\n  EventManager,\n} from '@qgrid/core';\nimport { GridPlugin, TemplateHostService } from '@qgrid/ngx';\nimport { ImportPlugin } from '@qgrid/plugins';\n\n@Component({\n  selector: 'q-grid-import',\n  templateUrl: './import.component.html',\n  providers: [TemplateHostService, GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ImportComponent implements AfterViewInit {\n  @Input() options: any;\n  @ContentChild(TemplateRef) templateRef: TemplateRef<any>;\n\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: ImportComponent } = {\n    $implicit: this,\n  };\n\n  get rows() {\n    return this.plugin.model.data().rows;\n  }\n\n  get columns(): ColumnModel[] {\n    return this.plugin.model.columnList().line;\n  }\n\n  get id() {\n    return this.plugin.model.grid().id;\n  }\n\n  constructor(\n    private plugin: GridPlugin,\n    private templateHost: TemplateHostService,\n    private hostElement: ElementRef,\n  ) {\n    this.templateHost.key = () => 'import';\n  }\n\n  ngAfterViewInit() {\n    const { model, disposable } = this.plugin;\n    const { nativeElement } = this.hostElement;\n\n    const eventListener = new EventListener(nativeElement, new EventManager(this));\n    const importPlugin = new ImportPlugin(model, nativeElement, this.options);\n\n    eventListener.on('change', e => importPlugin.load(e));\n\n    const action = new Action(\n      new Command({\n        execute: () => importPlugin.upload(),\n      }),\n      'Import data',\n      'file_upload',\n    );\n\n    if (this.templateRef) {\n      action.templateUrl = this.templateHost.key('trigger');\n    }\n\n    const items = Composite.list([model.action().items, [action]]);\n\n    model.action({\n      items,\n    }, {\n      source: 'import.component',\n    });\n\n    disposable.add(() => {\n      // notImportItems\n      model.action({\n        items: model\n          .action()\n          .items\n          .filter(x => x !== action),\n      }, {\n        source: 'import.component',\n      });\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ImportComponent } from './import.component';\nimport { TemplateModule } from '@qgrid/ngx';\n\n@NgModule({\n  declarations: [\n    ImportComponent,\n  ],\n  exports: [\n    ImportComponent,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class ImportModule {\n}\n","import { PipeTransform, Pipe } from '@angular/core';\n\n@Pipe({\n  name: 'qGridItemLabel',\n})\nexport class ItemLabelPipe implements PipeTransform {\n  constructor() { }\n\n  transform(value: any, itemLabel: (x: any) => string) {\n    if (itemLabel) {\n      return itemLabel(value);\n    }\n\n    return value;\n  }\n}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\nimport { Disposable } from '@qgrid/ngx';\nimport { PositionPlugin } from '@qgrid/plugins';\n\n@Directive({\n  selector: '[q-grid-position]',\n  providers: [Disposable],\n})\nexport class PositionDirective implements OnInit {\n  @Input('q-grid-position') target = '';\n\n  constructor(\n    private elementRef: ElementRef,\n    private disposable: Disposable,\n  ) {\n  }\n\n  ngOnInit() {\n    const position = new PositionPlugin(\n      {\n        element: this.elementRef.nativeElement,\n        targetName: this.target,\n      },\n      this.disposable,\n    );\n\n    position.invalidate();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PositionDirective } from './position.directive';\n\n@NgModule({\n  declarations: [\n    PositionDirective,\n  ],\n  exports: [\n    PositionDirective,\n  ],\n})\nexport class LayoutModule {\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { TemplateHostService } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-legend',\n  templateUrl: './legend.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [TemplateHostService],\n})\nexport class LegendComponent {\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: LegendComponent } = {\n    $implicit: this,\n  };\n\n  constructor(templateHost: TemplateHostService) {\n    templateHost.key = () => 'plugin-legend-core.tpl.html';\n  }\n}\n","<ng-container key=\"plugin-legend-core.tpl.html\"\n              [context]=\"context\">\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { LegendComponent } from './legend.component';\nimport { TemplateModule as TemplateModule } from '@qgrid/ngx';\n\n@NgModule({\n  declarations: [\n    LegendComponent,\n  ],\n  exports: [\n    LegendComponent,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class LegendModule {\n}\n","<ng-container *ngTemplateOutlet=\"getTemplate()\"></ng-container>\n\n<ng-template #currency>\n  <span class=\"q-grid-live-cell-arrow\">\n    <i *ngIf=\"getDifference(cell.changes) > 0\"\n       class=\"q-grid-icon q-grid-asc\">\n      &uarr;\n    </i>\n    <i *ngIf=\"getDifference(cell.changes) < 0\"\n       class=\"q-grid-icon q-grid-desc\">\n      &darr;\n    </i>\n  </span>\n  <span class=\"q-grid-live-cell-diff\">{{ getDifference(cell.changes) | qGridCurrency: cell.column.code}}</span>\n  <span class=\"q-grid-live-cell-prev\">{{ cell.changes.previousValue | qGridCurrency: cell.column.code}}</span>\n  <span class=\"q-grid-live-cell-curr\">{{ cell.label | qGridCurrency: cell.column.code}}</span>\n</ng-template>\n\n<ng-template #number>\n  <span class=\"q-grid-live-cell-curr\">{{ cell.label }}</span>\n  <span class=\"q-grid-live-cell-prev\">{{ cell.changes.previousValue }}</span>\n  <span class=\"q-grid-live-cell-diff\">{{ getDifference(cell.changes) }}</span>\n  <span class=\"q-grid-live-cell-arrow\">\n    <i *ngIf=\"getDifference(cell.changes) > 0\"\n       class=\"q-grid-icon q-grid-asc\">\n      &uarr;\n    </i>\n    <i *ngIf=\"getDifference(cell.changes) < 0\"\n       class=\"q-grid-icon q-grid-desc\">\n      &darr;\n    </i>\n  </span>\n</ng-template>\n\n<ng-template #time>\n  <span class=\"q-grid-live-cell-prev\">{{ cell.changes.previousValue }}</span>\n  <span class=\"q-grid-live-cell-curr\">{{ cell.label }}</span>\n</ng-template>\n\n<ng-template #text>\n  <span class=\"q-grid-live-cell-prev\">{{ cell.changes.previousValue }}</span>\n  <span class=\"q-grid-live-cell-curr\">{{ cell.label }}</span>\n</ng-template>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  SimpleChange,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { GridError, TdCoreDirective, TemplateHostService } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-live-cell',\n  templateUrl: './live-cell.tpl.html',\n  providers: [TemplateHostService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LiveCellComponent implements OnInit, OnDestroy {\n  @Input() cell: TdCoreDirective;\n  @Input() duration = 500;\n\n  @HostBinding('class') class: string;\n\n  @ViewChild('currency', { static: true }) currencyTemplate: TemplateRef<any>;\n  @ViewChild('number', { static: true }) numberTemplate: TemplateRef<any>;\n  @ViewChild('time', { static: true }) timeTemplate: TemplateRef<any>;\n  @ViewChild('text', { static: true }) textTemplate: TemplateRef<any>;\n\n  timeoutId: any = null;\n\n  constructor(private zone: NgZone) {\n  }\n\n  ngOnInit() {\n    if (!this.cell.changes) {\n      throw new GridError('live-cell.component', 'No changes found');\n    }\n    this.class = `q-grid-live-cell q-grid-live-cell-${this.cell.column.type} `;\n\n    if (this.getDifference(this.cell.changes)) {\n      this.class += this.getDifference(this.cell.changes) > 0 ? 'q-grid-live-cell-up ' : 'q-grid-live-cell-down ';\n    }\n    this.zone.runOutsideAngular(() => {\n      this.timeoutId = setTimeout(() => {\n        this.cell.mode('view');\n      }, this.duration);\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n    }\n  }\n\n  getDifference(value: SimpleChange) {\n    switch (this.cell.column.type) {\n      case 'number':\n      case 'currency':\n        return +value.currentValue - +value.previousValue;\n      default:\n        return null;\n    }\n  }\n\n  getTemplate() {\n    switch (this.cell.column.type) {\n      case 'currency':\n        return this.currencyTemplate;\n      case 'time':\n        return this.timeTemplate;\n      case 'number':\n        return this.numberTemplate;\n      default:\n        return this.textTemplate;\n    }\n  }\n}\n","import { DatePipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Log } from '@qgrid/core';\n\n@Pipe({\n  name: 'qGridTime',\n})\nexport class TimePipe implements PipeTransform {\n  constructor(private pipe: DatePipe) { }\n\n  transform(value: any, format?: any, timezone?: any, locale?: any) {\n    try {\n      return this.pipe.transform(value, format, timezone, locale);\n    } catch (ex) {\n      Log.warn('TimePipe', ex.message);\n      return value;\n    }\n  }\n}\n","import { DecimalPipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Log } from '@qgrid/core';\n\n@Pipe({\n  name: 'qGridNumber',\n})\nexport class NumberPipe implements PipeTransform {\n  constructor(private pipe: DecimalPipe) { }\n\n  transform(value: any, digitsInfo?: any, locale?: any) {\n    try {\n      return this.pipe.transform(value, digitsInfo, locale);\n    } catch (ex) {\n      Log.warn('NumberPipe', ex.message);\n      return value;\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { GridError } from '@qgrid/ngx';\n\n@Pipe({\n  name: 'qGridText',\n})\nexport class TextPipe implements PipeTransform {\n  transform(item: string, format: 'fromCamelCase'): string {\n    switch (format) {\n      case 'fromCamelCase': {\n        return item.replace(/([a-z])([A-Z])/g, '$1 $2').toLowerCase();\n      }\n      default: {\n        throw new GridError('text.pipe', `Unknown input format type '${format}'`);\n      }\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { HighlightPipe } from './highlight.pipe';\nimport { FilterPipe } from './filter.pipe';\nimport { TimePipe } from './time.pipe';\nimport { NumberPipe } from './number.pipe';\nimport { DatePipe } from './date.pipe';\nimport { TextPipe } from './text.pipe';\nimport { CurrencyPipe } from './currency.pipe';\nimport { ArrayPipe } from './array.pipe';\nimport { ItemLabelPipe } from './item-label.pipe';\nimport { ConvertPipe } from './convert.pipe';\n\n@NgModule({\n  declarations: [\n    ArrayPipe,\n    ConvertPipe,\n    CurrencyPipe,\n    DatePipe,\n    FilterPipe,\n    HighlightPipe,\n    ItemLabelPipe,\n    NumberPipe,\n    TextPipe,\n    TimePipe,\n  ],\n  exports: [\n    ArrayPipe,\n    ConvertPipe,\n    CurrencyPipe,\n    DatePipe,\n    FilterPipe,\n    HighlightPipe,\n    ItemLabelPipe,\n    NumberPipe,\n    TextPipe,\n    TimePipe,\n  ],\n})\nexport class PipeModule {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TemplateModule } from '@qgrid/ngx';\nimport { PipeModule } from '../pipes/pipe.module';\nimport { LiveCellComponent } from './live-cell.component';\n\n@NgModule({\n  declarations: [\n    LiveCellComponent,\n  ],\n  exports: [\n    LiveCellComponent,\n  ],\n  imports: [\n    TemplateModule,\n    CommonModule,\n    PipeModule,\n  ],\n})\nexport class LiveCellModule {\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  NgZone,\n  OnInit,\n} from '@angular/core';\nimport { Fastdom, GRID_PREFIX } from '@qgrid/core';\nimport { GridPlugin } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-live-columns',\n  template: '',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LiveColumnComponent implements OnInit {\n  @Input('duration') duration = 500;\n\n  constructor(private plugin: GridPlugin, private zone: NgZone) { }\n\n  ngOnInit() {\n    let startPos: number;\n    let endPos: number;\n    const { model } = this.plugin;\n    let currentColumns: any[];\n\n    model.animation({\n      apply: model.animation().apply.concat((memo, context, complete) => {\n        const previousColumns = currentColumns;\n        currentColumns = memo.columns ? memo.columns[0] : currentColumns;\n\n        if (!previousColumns || !memo.columns) {\n          complete(0);\n          return;\n        }\n\n        const { columnId } = model.data();\n        const animations = [];\n\n        startPos = currentColumns.length;\n        endPos = 0;\n\n        for (let columnIndex = 0, length = previousColumns.length; columnIndex < length; columnIndex++) {\n          const newColumnIndex = currentColumns.findIndex((column, i) =>\n            columnId(i, column.model) === columnId(columnIndex, previousColumns[columnIndex].model));\n\n          if (newColumnIndex !== columnIndex) {\n            startPos = Math.min(Math.min(columnIndex, newColumnIndex), startPos);\n            endPos = Math.max(Math.max(columnIndex, newColumnIndex), endPos);\n          }\n        }\n\n        for (let columnIndex = 0, length = previousColumns.length; columnIndex < length; columnIndex++) {\n          const newColumnIndex = currentColumns.findIndex((column, i) =>\n            columnId(i, column.model) === columnId(columnIndex, previousColumns[columnIndex].model));\n\n          if (newColumnIndex !== columnIndex) {\n            animations.push(this.moveColumn(columnIndex, newColumnIndex, startPos, endPos));\n          }\n        }\n\n        this.zone.runOutsideAngular(() => {\n          Promise.all(animations)\n            .then(complete);\n        });\n      }),\n    });\n  }\n\n  private moveColumn(from: number, to: number, startPos: number, endPos: number) {\n    const { table } = this.plugin;\n\n    return new Promise((animationEnd, animationError) => {\n      const oldColumn = table.body.column(from);\n      const newColumn = table.body.column(to);\n      const startColumn = table.body.column(startPos);\n      const endColumn = table.body.column(endPos);\n\n      if (!oldColumn.model() || !newColumn.model()) {\n        const errorIndex = oldColumn.model() ? to : from;\n        animationError(`Can't find model for column ${errorIndex}`);\n        return;\n      }\n\n      Fastdom.measure(() => {\n        const newRect = newColumn.cells()[0].rect();\n        const oldRect = oldColumn.cells()[0].rect();\n        const startRect = startColumn.cells()[0].rect();\n        const endRect = endColumn.cells()[0].rect();\n        let offset = 0;\n\n        if (from < to) {\n          offset = (Math.abs(from - to) > 1) ? newRect.left - oldRect.right + endRect.width : endRect.width;\n        } else {\n          offset = (Math.abs(from - to) > 1) ? newRect.left - oldRect.left : -1 * startRect.width;\n        }\n\n        Fastdom.mutate(() => {\n          const animatedCells = [];\n          oldColumn.addClass(`${GRID_PREFIX}-live-column`);\n          oldColumn.cells().forEach(cell => animatedCells.push(\n            new Promise(columnAnimationEnd => {\n              const animation = cell.model().element.animate(\n                [{ transform: 'translateX(0px)' }, { transform: `translateX(${offset}px)` }],\n                { duration: this.duration },\n              );\n\n              animation.onfinish = () => Fastdom.mutate(() => {\n                oldColumn.removeClass(`${GRID_PREFIX}-live-column`);\n                oldColumn.removeClass(`${GRID_PREFIX}-drag`);\n                columnAnimationEnd(null);\n              });\n            })));\n\n          Promise.all(animatedCells).finally(() => animationEnd(null));\n        });\n      });\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LiveColumnComponent } from './live-column.component';\n\n@NgModule({\n  declarations: [\n    LiveColumnComponent,\n  ],\n  exports: [\n    LiveColumnComponent,\n  ],\n  imports: [\n    CommonModule,\n  ],\n})\nexport class LiveColumnModule {\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  NgZone,\n  OnInit,\n} from '@angular/core';\nimport { Fastdom, GRID_PREFIX } from '@qgrid/core';\nimport { GridPlugin } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-live-rows',\n  template: '',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LiveRowComponent implements OnInit {\n  @Input('duration') duration = 400;\n\n  constructor(private plugin: GridPlugin, private zone: NgZone) { }\n\n  ngOnInit() {\n    const { model } = this.plugin;\n    let currentRows: any[];\n\n    model.animation({\n      apply: model.animation().apply.concat((memo, context, complete) => {\n        const previousRows = currentRows;\n        currentRows = memo.rows ? memo.rows : currentRows;\n\n        if (!previousRows || !currentRows) {\n          complete(0);\n          return;\n        }\n\n        const { rowId } = model.data();\n        const animations = [];\n\n        for (let rowIndex = 0, length = previousRows.length; rowIndex < length; rowIndex++) {\n          const newRowIndex = currentRows.findIndex((row, i) => rowId(i, row) === rowId(rowIndex, previousRows[rowIndex]));\n          if (newRowIndex < 0) {\n            animations.push(this.fadeOutRow(rowIndex));\n          } else if (newRowIndex !== rowIndex) {\n            animations.push(this.moveRow(rowIndex, newRowIndex));\n          }\n        }\n\n        this.zone.runOutsideAngular(() => {\n          Promise.all(animations)\n            .then(complete);\n        });\n      }),\n    });\n  }\n\n  private fadeOutRow(index: number) {\n    return new Promise((resolve, reject) => {\n      const tr = this.plugin.table.body.row(index);\n      if (!tr.model()) {\n        reject(`Can't find model for row ${index}`);\n        return;\n      }\n\n      Fastdom.mutate(() => {\n        const animation = tr.model().tr.element.animate(\n          [{ opacity: '1' }, { opacity: '0' }],\n          { duration: this.duration },\n        );\n\n        animation.onfinish = () => resolve(null);\n      });\n    });\n  }\n\n  private moveRow(from: number, to: number) {\n    const { table } = this.plugin;\n\n    return new Promise((animationEnd, animationError) => {\n      const oldTr = table.body.row(from);\n      const newTr = table.body.row(to);\n\n      if (!oldTr.model() || !newTr.model()) {\n        const errorIndex = oldTr.model() ? to : from;\n        animationError(`Can't find model for row ${errorIndex}`);\n        return;\n      }\n\n      Fastdom.measure(() => {\n        const offset = newTr.rect().top - oldTr.rect().top;\n\n        Fastdom.mutate(() => {\n          const animatedRows = [];\n          oldTr.addClass(`${GRID_PREFIX}-live-row`);\n          (oldTr.getElement() as any)\n            .elements\n            .forEach(rowElement =>\n              animatedRows.push(\n                new Promise(animationRowEnd => {\n                  const animation = rowElement.animate(\n                    [{ transform: 'translateY(0px)' }, { transform: `translateY(${offset}px)` }],\n                    { duration: this.duration },\n                  );\n\n                  animation.onfinish = () => Fastdom.mutate(() => {\n                    oldTr.removeClass(`${GRID_PREFIX}-live-row`);\n                    oldTr.removeClass(`${GRID_PREFIX}-drag`);\n                    animationRowEnd(null);\n                  });\n                })),\n            );\n\n          Promise.all(animatedRows).finally(() => animationEnd(null));\n        });\n      });\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LiveRowComponent } from './live-row.component';\n\n@NgModule({\n  declarations: [\n    LiveRowComponent,\n  ],\n  exports: [\n    LiveRowComponent,\n  ],\n  imports: [\n    CommonModule,\n  ],\n})\nexport class LiveRowModule {\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n} from '@angular/core';\nimport { PaginationState, PaginationStateMode } from '@qgrid/core';\nimport { GridPlugin, StateAccessor } from '@qgrid/ngx';\nimport { PagerPlugin } from '@qgrid/plugins';\n\n@Component({\n  selector: 'q-grid-pager',\n  templateUrl: './pager.component.html',\n  providers: [GridPlugin, StateAccessor],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PagerComponent implements OnInit, OnChanges {\n  private pagerState = this.stateAccessor.setter(PaginationState);\n\n  context: { $implicit: PagerPlugin };\n\n  @Input('size') set size(size: number) { this.pagerState({ size }); }\n  @Input('sizeList') set sizeList(sizeList: number[]) { this.pagerState({ sizeList }); }\n  @Input('mode') set mode(mode: PaginationStateMode) { this.pagerState({ mode }); }\n\n  constructor(\n    private plugin: GridPlugin,\n    private cd: ChangeDetectorRef,\n    private stateAccessor: StateAccessor,\n  ) {\n  }\n\n  ngOnChanges() {\n    const { model } = this.plugin;\n    this.stateAccessor.write(model);\n  }\n\n  ngOnInit() {\n    const { model, observe } = this.plugin;\n\n    const pager = new PagerPlugin(this.plugin);\n    this.context = { $implicit: pager };\n\n    observe(model.paginationChanged)\n      .subscribe(() => this.cd.detectChanges());\n  }\n}\n","<ng-container key=\"plugin-pager.tpl.html\" [context]=\"context\"></ng-container>\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Shortcut } from '@qgrid/core';\nimport { GridPlugin } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-pager-target',\n  templateUrl: './pager-target.component.html',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PagerTargetComponent implements OnInit {\n  private value: number;\n\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: PagerTargetComponent } = {\n    $implicit: this,\n  };\n\n  get current() {\n    return this.plugin.model.pagination().current + 1;\n  }\n\n  get total() {\n    const { count, size } = this.plugin.model.pagination();\n    return size === 0 ? 0 : Math.max(1, Math.ceil(count / size));\n  }\n\n  constructor(private plugin: GridPlugin) {\n  }\n\n  ngOnInit() {\n    this.value = this.current;\n  }\n\n  keyDown(e: KeyboardEvent) {\n    let code = Shortcut.translate(e);\n    if (code.startsWith('numpad')) {\n      code = code.slice(6);\n    }\n\n    const value = this.value || 0;\n\n    switch (code) {\n      case 'enter': {\n        if (value) {\n          const current = value - 1;\n          if (this.plugin.model.pagination().current !== current) {\n            // new FocusAfterRender(this.plugin);\n            this.plugin.model.pagination({\n              current,\n            }, {\n              source: 'pager-target.component',\n            });\n          }\n        }\n        break;\n      }\n      case 'up': {\n        if (value < this.total) {\n          this.value = value + 1;\n        }\n        break;\n      }\n      case 'down': {\n        if (value > 1) {\n          this.value = value - 1;\n        }\n        break;\n      }\n      case 'left':\n      case 'right':\n      case 'backspace': {\n        break;\n      }\n      default: {\n        const digit = Number.parseInt(code, 10);\n        const page = Number.parseInt('' + value + digit, 10);\n        const min = 1;\n        const max = this.total;\n        const isValid = page >= min && page <= max && !isNaN(digit);\n\n        if (!isValid) {\n          this.value = page > this.total ? max : min;\n          e.preventDefault();\n        }\n      }\n    }\n  }\n}\n","<ng-container key=\"plugin-pager-target.tpl.html\" [context]=\"context\"></ng-container>\n","import { NgModule } from '@angular/core';\nimport { PagerComponent } from './pager.component';\nimport { PagerTargetComponent } from './pager-target.component';\nimport { TemplateModule } from '@qgrid/ngx';\n\n@NgModule({\n  declarations: [\n    PagerComponent,\n    PagerTargetComponent,\n  ],\n  exports: [\n    PagerComponent,\n    PagerTargetComponent,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class PagerModule {\n}\n","<q-grid-layer>\n    <ng-template for=\"pane-right\">\n        <div class=\"q-grid-pane q-grid-pane-right\">\n            <ng-container key=\"plugin-pane-right.tpl.html\"\n                          [context]=\"context.right\">\n            </ng-container>\n        </div>\n    </ng-template>\n    <ng-template for=\"pane-left\">\n        <div class=\"q-grid-pane q-grid-pane-left\">\n            <ng-container key=\"plugin-pane-left.tpl.html\"\n                          [context]=\"context.left\">\n            </ng-container>\n        </div>\n    </ng-template>\n</q-grid-layer>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { isUndefined } from '@qgrid/core';\nimport { GridError, GridEventArg, GridPlugin, TemplateHostService } from '@qgrid/ngx';\n\ntype PaneSide = 'left' | 'right';\nconst DEFAULT_SIDE: PaneSide = 'right';\n\n@Component({\n  selector: 'q-grid-pane',\n  templateUrl: './pane.component.html',\n  providers: [GridPlugin, TemplateHostService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaneComponent implements OnInit {\n  @Input() trigger: string;\n\n  context: {\n    [side in PaneSide]?: {\n      // eslint-disable-next-line no-use-before-define\n      $implicit: PaneComponent;\n      value: any;\n    }\n  };\n\n  constructor(\n    private plugin: GridPlugin,\n    private cd: ChangeDetectorRef,\n    templateHost: TemplateHostService,\n  ) {\n    templateHost.key = source => `plugin-pane-${source}.tpl.html`;\n\n    this.context = {\n      left: {\n        $implicit: this,\n        value: null,\n      },\n      right: {\n        $implicit: this,\n        value: null,\n      },\n    };\n  }\n\n  ngOnInit() {\n    const { model, observeReply } = this.plugin;\n    const scope = this.parse();\n    if (scope) {\n      const [state, prop] = scope;\n      observeReply(model[`${state}Changed`])\n        .subscribe((e: GridEventArg<any>) => {\n          if (!prop || e.hasChanges(prop)) {\n            this.open(DEFAULT_SIDE);\n          }\n        });\n    }\n  }\n\n  open(side: PaneSide = DEFAULT_SIDE, value?: any) {\n    const { table, model } = this.plugin;\n\n    const scope = this.parse();\n    if (scope && isUndefined(value)) {\n      const [state, prop] = scope;\n      value = model[state]()[prop];\n    }\n\n    this.context[side] = { $implicit: this, value };\n\n    const paneLayer = `pane-${side}`;\n    if (table.view.hasLayer(paneLayer)) {\n      table.view.removeLayer(paneLayer);\n    }\n    table.view.addLayer(paneLayer);\n\n    this.invalidate();\n  }\n\n  close(side: PaneSide = DEFAULT_SIDE) {\n    const { table } = this.plugin;\n\n    table.view.removeLayer(`pane-${side}`);\n\n    this.context[side] = null;\n\n    this.invalidate();\n  }\n\n  private invalidate(): void {\n    this.cd.markForCheck();\n    this.cd.detectChanges();\n  }\n\n  private parse() {\n    const { model } = this.plugin;\n    const parts = this.trigger ? this.trigger.split('.') : [];\n    if (parts.length > 0) {\n      const [state, prop] = parts;\n      if (!model[state]) {\n        throw new GridError('pane.component', `Trigger ${state} not found`);\n      }\n      return [state, prop];\n    }\n\n    return null;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TemplateModule, LayerModule } from '@qgrid/ngx';\nimport { PaneComponent } from './pane.component';\n\n@NgModule({\n  declarations: [\n    PaneComponent,\n  ],\n  exports: [\n    PaneComponent,\n  ],\n  imports: [\n    CommonModule,\n    TemplateModule,\n    LayerModule,\n  ],\n})\nexport class PaneModule { }\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n} from '@angular/core';\nimport {\n  Action,\n  Command,\n  Composite,\n  filter,\n  PersistenceSchedule,\n  PersistenceService,\n  PersistenceState,\n  PersistenceStorage,\n  takeOnce,\n} from '@qgrid/core';\nimport { GridEvent, GridModelBuilder, GridPlugin, StateAccessor } from '@qgrid/ngx';\nimport { PersistenceItem } from '@qgrid/plugins';\n\n@Component({\n  selector: 'q-grid-persistence',\n  template: '',\n  providers: [GridPlugin, StateAccessor],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PersistenceComponent implements OnInit, OnChanges {\n  private persistenceState = this.stateAccessor.setter(PersistenceState);\n  private service: PersistenceService | null = null;\n\n  @Input('schedule') set schedule(schedule: PersistenceSchedule) { this.persistenceState({ schedule }); }\n  @Input('storage') set storage(storage: PersistenceStorage) { this.persistenceState({ storage }); }\n\n  constructor(\n    private plugin: GridPlugin,\n    private modelBuilder: GridModelBuilder,\n    private stateAccessor: StateAccessor,\n  ) {\n  }\n\n  ngOnChanges() {\n    const { model } = this.plugin;\n    this.stateAccessor.write(model);\n  }\n\n  ngOnInit() {\n    const { model, disposable, observe, observeReply } = this.plugin;\n\n    const id = `q-grid:${model.grid().id}:persistence-list`;\n    model.persistence({ id });\n\n    this.service = new PersistenceService(model, () => this.modelBuilder.build());\n\n    observeReply(model.dataChanged)\n      .pipe(\n        filter(e => {\n          if (e.hasChanges('rows') || e.hasChanges('columns')) {\n            const { rows, columns } = e.state;\n            if (rows.length > 0 && columns.length > 0) {\n              return true;\n            }\n          }\n\n          return false;\n        }),\n        takeOnce(),\n      )\n      .subscribe(() =>\n        model.persistence()\n          .storage\n          .getItem<PersistenceItem[]>(id)\n          .then((items: PersistenceItem[]) => {\n            if (!items || items.length === 0) {\n              return;\n            }\n\n            const defaultItem = items.find(item => item.isDefault);\n            if (defaultItem) {\n              this.service.load(defaultItem.model);\n            }\n          }),\n      );\n\n    switch (model.persistence().schedule) {\n      case 'onDemand': {\n        const historyAction =\n          new Action(\n            new Command(),\n            'Save/Load',\n            'history',\n          );\n\n        historyAction.templateUrl = 'plugin-persistence.tpl.html';\n\n        const items = Composite.list([model.action().items, [historyAction]]);\n        model.action({ items }, { source: 'persistence.component' });\n\n        disposable.add(() => {\n          const notPersistenceActions = model.action().items.filter(x => x !== historyAction);\n          model.action({ items: notPersistenceActions }, { source: 'persistence.component' });\n        });\n\n        break;\n      }\n      case 'onStateChange': {\n        const { settings, storage, defaultGroup } = model.persistence();\n        for (const state of Object.keys(settings)) {\n          for (const key of settings[state]) {\n            observe(model[state + 'Changed'] as GridEvent<any>)\n              .pipe(\n                // TODO: get rid of e.tag.source check\n                filter(e => e.hasChanges(key) && e.tag.source !== 'persistence.service'),\n              )\n              .subscribe(() => {\n                const currentModel = this.service.save();\n                const item = {\n                  title: `auto-save: ${state}.${key} changed`,\n                  modified: Date.now(),\n                  group: defaultGroup,\n                  model: currentModel,\n                  isDefault: true,\n                  canEdit: false,\n                };\n\n                storage.setItem(id, [item]);\n              });\n          }\n        }\n\n        break;\n      }\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { GridModelBuilder, GridPlugin } from '@qgrid/ngx';\nimport { PersistencePlugin } from '@qgrid/plugins';\n\n@Component({\n  selector: 'q-grid-persistence-panel',\n  templateUrl: './persistence-panel.component.html',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PersistencePanelComponent implements OnInit {\n  context: {\n\t\t$implicit: PersistencePlugin;\n\t};\n\n  constructor(\n\t\tprivate plugin: GridPlugin,\n\t\tprivate modelBuilder: GridModelBuilder,\n  ) {\n  }\n\n  ngOnInit() {\n    const persistence = new PersistencePlugin(this.plugin, () => this.modelBuilder.build());\n    this.context = { $implicit: persistence };\n  }\n}\n","<ng-container key=\"plugin-persistence-panel.tpl.html\" [context]=\"context\"></ng-container>\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { PersistenceComponent } from './persistence.component';\nimport { PersistencePanelComponent } from './persistence-panel.component';\nimport { TemplateModule } from '@qgrid/ngx';\n\n@NgModule({\r\n    imports: [\r\n        FormsModule,\r\n        TemplateModule,\r\n    ],\r\n    exports: [\r\n        PersistenceComponent,\r\n        PersistencePanelComponent,\r\n    ],\r\n    declarations: [\r\n        PersistenceComponent,\r\n        PersistencePanelComponent,\r\n    ]\r\n})\nexport class PersistenceModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { GridPlugin } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-progress',\n  templateUrl: './progress.component.html',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProgressComponent implements OnInit {\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: ProgressComponent } = {\n    $implicit: this,\n  };\n\n  get isBusy() {\n    const { isBusy, queue } = this.plugin.model.progress();\n    return isBusy || queue.length;\n  }\n\n  constructor(\n    private plugin: GridPlugin,\n    private cd: ChangeDetectorRef,\n  ) {\n  }\n\n  ngOnInit() {\n    const { model, observeReply } = this.plugin;\n\n    observeReply(model.progressChanged)\n      .subscribe(() => this.cd.detectChanges());\n  }\n}\n","<ng-container key=\"plugin-progress.tpl.html\" [context]=\"context\"></ng-container>\n","import { NgModule } from '@angular/core';\nimport { ProgressComponent } from './progress.component';\nimport { TemplateModule } from '@qgrid/ngx';\n\n@NgModule({\n  declarations: [\n    ProgressComponent,\n  ],\n  exports: [\n    ProgressComponent,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class ProgressModule {\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Action, Command, Composite } from '@qgrid/core';\nimport { GridPlugin } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-query-builder',\n  templateUrl: './query-builder.component.html',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class QueryBuilderComponent implements OnInit {\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: QueryBuilderComponent } = {\n    $implicit: this,\n  };\n\n  constructor(\n    private plugin: GridPlugin,\n  ) {\n  }\n\n  ngOnInit() {\n    const { model, disposable } = this.plugin;\n    const action =\n      new Action(\n        new Command(),\n        'Query Builder',\n        'filter',\n      );\n\n    action.templateUrl = 'plugin-query-builder.tpl.html';\n\n    const items = Composite.list([model.action().items, [action]]);\n    model.action({\n      items,\n    }, {\n      source: 'query-builder.component',\n    });\n\n    disposable.add(() => {\n      model.action({\n        items: model\n          .action()\n          .items\n          .filter(x => x !== action),\n      }, {\n        source: 'query-builder.component',\n      });\n    });\n  }\n}\n","<ng-container key=\"plugin-query-builder.tpl.html\"\n              [context]=\"context\">\n</ng-container>\n","import { ISerializationNode } from '../expression-builder/serialization.service';\n\nexport class QueryBuilderModel {\n  node: ISerializationNode = null;\n}\n","import { Node } from './model/node';\n\nexport class TraverseService {\n  findUp(node: Node, test: (foundNode: Node) => boolean) {\n    while (node) {\n      if (test(node)) {\n        return node;\n      }\n\n      node = node.parent;\n    }\n\n    return null;\n  }\n\n  findUpSibling(node: Node) {\n    if (node.parent) {\n      const children = node.parent.children;\n      const index = children.indexOf(node);\n      if (index >= 0) {\n        if (index > 0) {\n          return children[index - 1];\n        }\n\n        return node.parent;\n      }\n    }\n\n    return null;\n  }\n\n  depth(root: Node): (reduce: any, memo: any) => any {\n    return (reduce, memo) => {\n      memo = this.visitLine(reduce, memo, root, root.line);\n\n      const children = root.children;\n      const length = children.length;\n\n      for (let i = 0; i < length; i++) {\n        memo = this.depth(children[i])(reduce, memo);\n      }\n\n      return memo;\n    };\n  }\n\n  private visitLine(reduce, memo, node, line) {\n    const groups = line.expressions;\n    const length = groups.length;\n\n    for (let i = 0; i < length; i++) {\n      memo = this.visitGroup(reduce, memo, node, line, groups[i]);\n    }\n\n    return memo;\n  }\n\n  private visitGroup(reduce, memo, node, line, group) {\n    const expressions = group.expressions;\n    const length = expressions.length;\n\n    for (let i = 0; i < length; i++) {\n      memo = reduce(memo, expressions[i], line, node);\n    }\n\n    return memo;\n  }\n}\n","import { isFunction } from '@qgrid/core';\n\nexport function method(inst: any, key: string) {\n  const sourceFn = inst[key];\n\n  return {\n    with: withFactory(inst, key, sourceFn),\n  };\n}\n\nexport function methodsOf(inst: any) {\n  const keys = Object.keys(inst);\n  const length = keys.length;\n  const patch = {};\n\n  for (let i = 0; i < length; i++) {\n    const key = keys[i];\n    if (isFunction(inst[key])) {\n      patch[key] = method(inst, key);\n    }\n  }\n\n  return {\n    with: (...args) => {\n      const patchKeys = Object.keys(patch);\n      const patchLength = patchKeys.length;\n\n      for (let i = 0; i < patchLength; i++) {\n        const key = patchKeys[i];\n\n        inst.action = key;\n        patch[key].with.apply(inst, args);\n      }\n    },\n  };\n}\n\nexport function withFactory(inst, key, sourceFn) {\n  const withFn = (...withArgs) =>\n    inst[key] = (...keyArgs) =>\n      sourceFn.apply(inst, withArgs.concat(keyArgs));\n\n  (withFn as any).decorator = (...args) => {\n    const decorate = args[0];\n    args = args.slice(1);\n\n    inst[key] = () => decorate.apply(inst, [\n      sourceFn,\n      inst,\n      key,\n    ].concat(args));\n  };\n\n  return withFn;\n}\n","import { Line } from './line';\nimport { Node } from './node';\nimport { GroupExpression } from './expression';\n\nexport class GroupSchema {\n  plan: Array<(node: Node, line: Line, group: GroupExpression) => void> = [];\n\n  constructor(public node: Node, public line: Line) {\n  }\n\n  apply(group: GroupExpression) {\n    this.plan.forEach(p => p(this.node, this.line, group));\n  }\n}\n","import { GridError } from '@qgrid/ngx';\nimport { GroupExpression } from './expression';\nimport { GroupSchema } from './group.schema';\nimport { Line } from './line';\nimport { Node } from './node';\n\nexport interface INodeSchema {\n\tschemaMap: { [key: string]: INodeSchema };\n\n\tapply(node?: Node): Node;\n\tattr(key: string, value: any): INodeSchema;\n\tnode(id: string, build: (schema: INodeSchema) => void): INodeSchema;\n\tgroup(id: string, build: (schema: GroupSchema) => void): INodeSchema;\n\tget(id: string): INodeSchema;\n\tmaterialize(id: string): Node;\n}\n\nexport function nodeSchema(GroupSchemaT: typeof GroupSchema): any {\n  return class NodeSchema implements INodeSchema {\n    plan = [];\n    planMap = {};\n\n    constructor(public schemaMap = {}) {\n    }\n\n    clone(): INodeSchema {\n      const schema = new NodeSchema({ ...this.schemaMap });\n      schema.plan = [...this.plan];\n      schema.planMap = { ...this.planMap };\n      return schema;\n    }\n\n    attr(key: string, value: any) {\n      this.plan.push(node => node.attr(key, value));\n      return this;\n    }\n\n    apply(node?: Node): Node {\n      node = node || new Node('#root', this);\n\n      const line = new Line(GroupSchemaT);\n      node.line = line;\n\n      this.plan.forEach(p => p(node, line));\n\n      return node;\n    }\n\n    node(id: string, build: (schema: INodeSchema) => void) {\n      if (!build) {\n        throw new GridError('node.schema', 'Build function is not defined');\n      }\n\n      this.plan.push(node => {\n        const schema = new NodeSchema(this.schemaMap);\n        build(schema);\n\n        const newNode = new Node(id, schema, node);\n        schema.apply(newNode);\n        node.addChildAfter(newNode);\n        this.schemaMap[id] = schema;\n\n        return node;\n      });\n\n      return this;\n    }\n\n    group(id: string, build: (schema: GroupSchema) => void) {\n      if (!build) {\n        throw new GridError('node.schema', 'Build function is not defined');\n      }\n\n      const buildGroup = (node, line) => {\n        const group = new GroupExpression();\n        group.id = id;\n\n        const schema = new GroupSchemaT(node, line);\n        build(schema);\n        schema.apply(group);\n        line.add(group);\n\n        return node;\n      };\n\n      this.plan.push(buildGroup);\n      this.planMap[id] = buildGroup;\n\n      return this;\n    }\n\n    get(id: string) {\n      const schema = this.schemaMap[id];\n      if (!schema) {\n        throw new GridError('node.schema', `Schema ${id} is not found`);\n      }\n\n      return schema;\n    }\n\n    materialize(id: string): Node {\n      const schema = this.get(id);\n      return schema.apply(new Node(id, schema));\n    }\n  };\n}\n","export interface IStatement {\n\ttype: string;\n\ttemplateKey: string;\n\tdefaults?: any;\n}\n\nexport class EmptyStatement implements IStatement {\n  type = 'empty';\n  templateKey = 'eb-empty.tpl.html';\n}\n","import { guid, isFunction } from '@qgrid/core';\nimport * as patch from '../patch';\nimport * as utility from '../utility';\nimport { Expression, GroupExpression } from './expression';\nimport { GroupSchema } from './group.schema';\nimport { Line } from './line';\nimport { Node } from './node';\nimport { nodeSchema } from './node.schema';\nimport { EmptyStatement, IStatement } from './statement';\n\n\nexport class ExpressionBuilder {\n  constructor(private settings) {\n  }\n\n  build<T>(statements: Array<IStatement>): T {\n    const NodeSchemaT = nodeSchema(GroupSchema);\n\n    const settings = this.settings;\n    statements\n      .concat([new EmptyStatement()])\n      .forEach(statement => {\n        const factory = function (...args) {\n          let id = guid();\n          let sampleExpression: Expression;\n          if (args.length > 1) {\n            id = args[0];\n            sampleExpression = args[1];\n          } else if (args.length === 1) {\n            sampleExpression = args[0];\n          }\n\n          const build = function (node: Node, line: Line) {\n            const expression =\n              utility.defaults<Expression>(\n                sampleExpression,\n                statement.defaults,\n                settings.defaults,\n              );\n\n            expression.id = id;\n            expression.type = statement.type;\n            expression.templateUrl = statement.templateKey;\n\n            const group = new GroupExpression();\n            group.id = id;\n            group.expressions.push(expression);\n\n            line.add(group);\n            patch.methodsOf(expression).with(node, line);\n\n            const keys = Object.keys(expression);\n\n            keys.forEach(key => {\n              const sourceFunction = expression[key];\n\n              if (isFunction(sourceFunction)) {\n                expression[key] = (...context) => {\n                  const result = sourceFunction.apply(expression, context);\n\n                  // TODO add decorator for mutable methods instead of trigger\n                  if (!line.immutable) {\n                    expression.method = expression.method || [];\n                    if (expression.method.indexOf(key) < 0) {\n                      expression.method.push(key);\n                    }\n\n                    line.immutable = true;\n                  }\n                  return result;\n                };\n              }\n            });\n\n            return node;\n          };\n\n          this.plan.push(build);\n          this.planMap[id] = build;\n\n          return this;\n        };\n\n        const groupFactory = function (...args) {\n          let id = guid();\n          let sampleExpression: Expression;\n          if (args.length > 1) {\n            id = args[0];\n            sampleExpression = args[1];\n          } else if (args.length === 1) {\n            sampleExpression = args[0];\n          }\n\n          const build = function (node, line, expressionGroup) {\n            const expression =\n              utility.defaults<Expression>(\n                sampleExpression,\n                statement.defaults,\n                settings.defaults,\n              );\n\n            expression.id = id;\n            expression.type = statement.type;\n            expression.templateUrl = statement.templateKey;\n            expressionGroup.expressions.push(expression);\n\n            patch.methodsOf(expression).with(node, line);\n\n            return node;\n          };\n\n          this.plan.push(build);\n\n          return this;\n        };\n\n        NodeSchemaT.prototype[statement.type] = factory;\n        GroupSchema.prototype[statement.type] = groupFactory;\n      });\n\n    // TODO: think how to avoid this\n    return new NodeSchemaT() as T;\n  }\n}\n","function swap(inst: { [key: string]: string }): { [key: string]: string } {\n  const result = {};\n  for (const prop in inst) {\n    if (Object.prototype.hasOwnProperty.call(inst, prop)) {\n      result[inst[prop]] = prop;\n    }\n  }\n\n  return result;\n}\n\nconst commonOperators = [\n  'EQUALS',\n  'NOT EQUALS',\n  'IN',\n  'IS EMPTY',\n  'IS NOT EMPTY',\n];\n\nconst oneToOneCommonOperators = ['EQUALS', 'NOT EQUALS'];\n\nconst textOperators = [\n  'LIKE',\n  'NOT LIKE',\n  'STARTS WITH',\n  'ENDS WITH',\n];\n\nconst numberOperators = [\n  'BETWEEN',\n  'GREATER THAN',\n  'LESS THAN',\n  'GREATER OR EQ. TO',\n  'LESS OR EQ. TO',\n];\n\nconst oneToOneNumberOperators = [\n  'GREATER THAN',\n  'LESS THAN',\n  'GREATER OR EQ. TO',\n  'LESS OR EQ. TO',\n];\n\nexport const camelCaseMapping = {\n  'IS EMPTY': 'isNull',\n  'IS NOT EMPTY': 'isNotNull',\n  'EQUALS': 'equals',\n  'NOT EQUALS': 'notEquals',\n  'GREATER OR EQ. TO': 'greaterThanOrEquals',\n  'LESS OR EQ. TO': 'lessThanOrEquals',\n  'GREATER THAN': 'greaterThan',\n  'LESS THAN': 'lessThan',\n  'LIKE': 'like',\n  'NOT LIKE': 'notLike',\n  'STARTS WITH': 'startsWith',\n  'ENDS WITH': 'endsWith',\n  'IN': 'in',\n  'BETWEEN': 'between',\n};\n\nexport const typeMapping = {\n  bool: oneToOneCommonOperators,\n  id: commonOperators.concat(textOperators),\n  text: commonOperators.concat(textOperators),\n  email: commonOperators.concat(textOperators),\n  url: commonOperators.concat(textOperators),\n  password: commonOperators.concat(textOperators),\n  number: commonOperators.concat(numberOperators),\n  date: commonOperators.concat(numberOperators),\n  time: commonOperators.concat(numberOperators),\n  currency: commonOperators.concat(numberOperators),\n};\n\nexport const oneToOneMapping = {\n  bool: oneToOneCommonOperators,\n  id: oneToOneCommonOperators.concat(textOperators),\n  text: oneToOneCommonOperators.concat(textOperators),\n  email: oneToOneCommonOperators.concat(textOperators),\n  url: oneToOneCommonOperators.concat(textOperators),\n  password: oneToOneCommonOperators.concat(textOperators),\n  number: oneToOneCommonOperators.concat(oneToOneNumberOperators),\n  date: oneToOneCommonOperators.concat(oneToOneNumberOperators),\n  time: oneToOneCommonOperators.concat(oneToOneNumberOperators),\n  currency: oneToOneCommonOperators.concat(oneToOneNumberOperators),\n};\n\nexport const labelMapping = swap(camelCaseMapping);\n","import * as columnService from '@qgrid/core';\nimport { getValueFactory, isUndefined, uniq } from '@qgrid/core';\nimport { GridError, GridModel } from '@qgrid/ngx';\nimport { ExpressionBuilder } from '../expression-builder/model/expression.builder';\nimport { Node } from '../expression-builder/model/node';\nimport { typeMapping } from './schema/operator';\n\nexport interface Column {\n\tkey: string; title: string; type: string;\n}\n\nexport interface ColumnMap {\n\t[key: string]: Column;\n}\n\nexport interface IQueryBuilderSchema {\n\tapply(node?: Node): Node;\n\tattr(key: string, value: any): IQueryBuilderSchema;\n\tnode(id: string, build: (schema: IQueryBuilderSchema) => void): IQueryBuilderSchema;\n\tgroup(id: string, build: (schema: IQueryBuilderSchema) => void): IQueryBuilderSchema;\n\tget(id: string): IQueryBuilderSchema;\n\tmaterialize(id: string): Node;\n\n\tautocomplete(id: string, settings?: any): IQueryBuilderSchema;\n\tbutton(id: string, settings?: any): IQueryBuilderSchema;\n\tinput(id: string, settings?: any): IQueryBuilderSchema;\n\ticonButton(id: string, settings?: any): IQueryBuilderSchema;\n\tlabel(id: string, settings?: any): IQueryBuilderSchema;\n\tmultiselect(id: string, settings?: any): IQueryBuilderSchema;\n\tselect(id: string, settings?: any): IQueryBuilderSchema;\n}\n\nexport class QueryBuilderService {\n  constructor(private model: GridModel) {\n  }\n\n  columns(): Array<Column> {\n    const model = this.model;\n    return model\n      .columnList()\n      .line\n      .filter(column => Object.prototype.hasOwnProperty.call(typeMapping, column.type))\n      .map(column => ({\n        key: column.key,\n        title: column.title,\n        type: column.type,\n      }));\n  }\n\n  columnMap(): ColumnMap {\n    return this.columns().reduce((memo, column) => {\n      memo[column.key] = column;\n      return memo;\n    }, {});\n  }\n\n  submit(expression) {\n    const model = this.model;\n    model.filter({\n      by: expression,\n    }, {\n      source: 'query-builder.service',\n    });\n  }\n\n  suggest(key, skip, take, search, selection?: Array<string>): Promise<string[]> {\n    selection = (selection || []).map(item => ('' + item).toLowerCase());\n\n    const model = this.model;\n    const columnMap = columnService.mapColumns(model.columnList().line);\n    const column = columnMap[key];\n    if (!column) {\n      throw new GridError('query-builder.service', `Column ${key} is not found`);\n    }\n\n    const getValue = getValueFactory(column);\n    return new Promise(resolve => {\n      const view = model\n        .data()\n        .rows\n        .map(getValue)\n        .filter(item =>\n          !isUndefined(item) &&\n\t\t\t\t\titem !== '' &&\n\t\t\t\t\titem !== null &&\n\t\t\t\t\tselection.indexOf(('' + item).toLowerCase()) < 0,\n        );\n\n      const uniqueView = uniq(view);\n      const sortedView = uniqueView.sort();\n      const searchText = ('' + search).toLowerCase();\n      const filterView = searchText\n        ? sortedView.filter(x => ('' + x).toLowerCase().indexOf(searchText) >= 0)\n        : sortedView;\n\n      const toggleView = filterView.length ? filterView : sortedView;\n      const pageView = toggleView.slice(skip, take);\n      resolve(pageView);\n    });\n  }\n\n  build(): IQueryBuilderSchema {\n    const statements = [\n      {\n        type: 'label',\n        templateKey: 'plugin-eb-label.tpl.html',\n      },\n      {\n        type: 'input',\n        templateKey: 'plugin-eb-input.tpl.html',\n      },\n      {\n        type: 'select',\n        templateKey: 'plugin-eb-select.tpl.html',\n      },\n      {\n        type: 'button',\n        templateKey: 'plugin-eb-button.tpl.html',\n      },\n      {\n        type: 'iconButton',\n        templateKey: 'plugin-eb-icon-button.tpl.html',\n      },\n      {\n        type: 'autocomplete',\n        templateKey: 'plugin-eb-autocomplete.tpl.html',\n      },\n      {\n        type: 'multiselect',\n        templateKey: 'plugin-eb-multiselect.tpl.html',\n      },\n    ];\n\n    const settings = {\n      defaults: {\n        isValid: function () {\n          return !this.validate || !(this.state = this.validate()).length;\n        },\n      },\n    };\n\n    return new ExpressionBuilder(settings)\n      .build<IQueryBuilderSchema>(statements);\n  }\n}\n","import { cloneDeep } from '@qgrid/core';\nimport { GridError } from '@qgrid/ngx';\nimport { camelCaseMapping } from './operator';\n\nexport function visit(item) {\n  switch (item.id) {\n    case '#root':\n      return visit(item.children[0]);\n    case '#logical': {\n      const group = visitGroup(item);\n      if (group) {\n        if (!(group.left || group.right)) {\n          return null;\n        }\n      }\n\n      return group;\n    }\n    case '#condition':\n      return visitCondition(item);\n    default:\n      throw new GridError('converter', `Invalid kind ${item.kind}`);\n  }\n}\n\nfunction visitGroup(node) {\n  const line = node.line;\n  const opExpr = find(line, '#logical-op', '#logical-op');\n  const children = node.children.filter(notPlaceholder).map(visit);\n\n  if (children.length === 0) {\n    return null;\n  }\n\n  if (children.length === 1) {\n    return {\n      kind: 'group',\n      op: opExpr.value.toLowerCase(),\n      left: children[0],\n      right: null,\n    };\n  }\n\n  return children\n    .slice(1)\n    .reduce((memo, item) => ({\n      kind: 'group',\n      op: opExpr.value.toLowerCase(),\n      left: memo,\n      right: item,\n    }), children[0]);\n}\n\nfunction visitCondition(node) {\n  const line = node.line;\n  const opExpr = find(line, '#operator', '#operator');\n  const value = opExpr.value.toUpperCase();\n\n  let condition;\n  switch (value) {\n    case 'IS NOT EMPTY':\n    case 'IS EMPTY':\n      condition = visitUnary(line, opExpr.value);\n      break;\n    case 'EQUALS':\n    case 'NOT EQUALS':\n    case 'GREATER OR EQ. TO':\n    case 'GREATER THAN':\n    case 'LESS OR EQ. TO':\n    case 'LESS THAN':\n    case 'LIKE':\n    case 'NOT LIKE':\n    case 'STARTS WITH':\n    case 'ENDS WITH':\n      condition = visitBinary(line, opExpr.value);\n      break;\n    case 'BETWEEN':\n      condition = visitBetween(line);\n      break;\n    case 'IN':\n      condition = visitIn(line);\n      break;\n    default:\n      throw new GridError('converter', `Invalid operation ${value}`);\n  }\n\n  condition.kind = 'condition';\n  return condition;\n}\n\nfunction visitUnary(line, op) {\n  const left = visitField(line);\n\n  return {\n    left: left.value,\n    op: camelCaseMapping[op.toUpperCase()],\n  };\n}\n\nfunction visitBinary(line, op) {\n  const left = visitField(line);\n  const right = find(line, '#operand', '#value') || find(line, '#fieldRight');\n\n  return {\n    left: left.value,\n    op: camelCaseMapping[op.toUpperCase()],\n    right: right.value,\n  };\n}\n\nfunction visitIn(line) {\n  const left = visitField(line);\n  const right = find(line, '#operand', '#in-operand') || find(line, '#fieldRight');\n\n  return {\n    left: left.value,\n    op: 'in',\n    right: cloneDeep(right.values) || right.value,\n  };\n}\n\nfunction visitBetween(line) {\n  const left = visitField(line);\n  const from = find(line, '#operand', '#from') || find(line, '#fieldFrom');\n  const to = find(line, '#operand', '#to') || find(line, '#fieldTo');\n\n  return {\n    left: left.value,\n    op: 'between',\n    right: [from.value, to.value],\n  };\n}\n\nfunction visitField(line) {\n  return find(line, '#field') || find(line, '#fieldLeft');\n}\n\nfunction notPlaceholder(node) {\n  return !node.attributes.placeholder;\n}\n\nfunction find(line, groupId: string, exprId?: string) {\n  const group = findById(line, groupId);\n  if (!group) {\n    return null;\n  }\n\n  return findById(group.expressions, exprId || groupId);\n}\n\nfunction findById(items, id: string) {\n  const result = items.filter(item => item.id === id);\n  const length = result.length;\n\n  if (length === 1) {\n    return result[0];\n  }\n\n  if (length > 1) {\n    throw new GridError('converter', `Ambiguous id ${id}`);\n  }\n\n  return null;\n}\n","import { QueryBuilderService } from '../query-builder.service';\n\nexport function suggestFactory(service: QueryBuilderService, name: string) {\n  return function (node, line) {\n    const search = (this.value || '').toLowerCase();\n    const field = line.get(name).expressions[0].value;\n    return service.suggest(field, 0, 10, search);\n  };\n}\n\nexport function suggestsFactory(service: QueryBuilderService, name: string) {\n  return function (node, line) {\n    const search = this.search;\n    const field = line.get(name).expressions[0].value;\n    const selection =\n      (this.values || [])\n        .map(item => ('' + item).toLowerCase());\n\n    return new Promise((resolve, reject) =>\n      service\n        .suggest(field, 0, 10, search, selection)\n        .then(items => {\n          const result = selection.length\n            ? items.filter(item => selection.indexOf(('' + item).toLowerCase()) < 0)\n            : items;\n          resolve(result);\n        })\n        .catch(ex => reject(ex)),\n    );\n  };\n}\n","import { createValidator, isArray } from '@qgrid/core';\nimport { GridError } from '@qgrid/ngx';\nimport { ColumnMap, QueryBuilderService } from '../query-builder.service';\n\nexport class Validator {\n  private columnMap: ColumnMap;\n  private trueResult: Array<string> = [];\n  private validators: { [key: string]: (value: any) => Array<string> } = {};\n  private rules = {\n    'bool': ['required'],\n    'currency': ['required', 'decimal'],\n    'date': ['required', 'iso_date'],\n    'email': ['required'],\n    'file': ['required'],\n    'id': ['required'],\n    'image': ['required'],\n    'number': ['required', 'decimal'],\n    'password': ['required'],\n    'url': ['required'],\n    'reference': ['required'],\n    'text': ['required', 'string'],\n    'time': ['required'],\n  };\n\n  constructor(service: QueryBuilderService) {\n    this.columnMap = service.columnMap();\n  }\n\n  for(key: string) {\n    const validators = this.validators;\n    if (Object.prototype.hasOwnProperty.call(validators, 'key')) {\n      return validators[key];\n    }\n\n    const column = this.columnMap[key];\n    if (!column) {\n      throw new GridError('validator', `Can't find column ${key}`);\n    }\n\n    const trueResult = this.trueResult;\n    const id = column.type;\n    const rule = this.rules[id];\n    let validate: ((value: any) => string[]) = () => trueResult;\n    if (rule) {\n      const schema = { [id]: rule };\n      validate = function test(value): Array<string> {\n        if (isArray(value)) {\n          const result = [];\n          for (const item of value) {\n            result.push(...test(item));\n          }\n\n          return result;\n        }\n\n        const target = { [id]: value };\n        const validator = createValidator(schema);\n        const isValid = validator.validate(target);\n        if (isValid) {\n          return trueResult;\n        }\n\n        const error = validator.getErrors()[id];\n        return isArray(error) ? error : [error];\n      };\n    }\n\n    validators[key] = validate;\n    return validate;\n  }\n}\n","import { isArray, noop } from '@qgrid/core';\nimport { IQueryBuilderSchema, QueryBuilderService } from '../query-builder.service';\nimport { typeMapping } from './operator';\nimport { suggestFactory, suggestsFactory } from './suggest.service';\nimport { Validator } from './validator';\n\nexport const getValue = (line, id, props) => {\n  const group = line.get(id);\n  if (group) {\n    if (group.expressions.length === 1) {\n      const expr = group.expressions[0];\n      const prop = props.filter(p => Object.prototype.hasOwnProperty.call(expr, p))[0];\n      if (prop) {\n        const value = expr[prop];\n        if (isArray(value) && value.length) {\n          return value[0];\n        }\n\n        return value;\n      }\n    }\n  }\n\n  return null;\n};\n\nexport class WhereSchema {\n  constructor(private service: QueryBuilderService) {\n  }\n\n  factory(): IQueryBuilderSchema {\n    const service = this.service;\n    const suggest = suggestFactory(service, '#field');\n    const suggests = suggestsFactory(service, '#field');\n    const validator = new Validator(service);\n\n    return this.service.build()\n      .node('#logical', function (logical) {\n        logical\n          .attr('serialize', {\n            '#logical-op': ['value'],\n          })\n          .attr('class', {\n            'qb-logical': true,\n            'qb-and': function (node) {\n              const op = node.line.get('#logical-op');\n              return op.expressions[0].value === 'AND';\n            },\n            'qb-or': function (node) {\n              const op = node.line.get('#logical-op');\n              return op.expressions[0].value === 'OR';\n            },\n          })\n          .select('#logical-op', {\n            classes: ['qb-operation'],\n            options: ['AND', 'OR'],\n            value: 'AND',\n          })\n          .node('#condition', function (condition) {\n            condition\n              .attr('serialize', {\n                '#field': ['value'],\n                '#operator': ['value'],\n                '#value': ['value'],\n                '#from': ['value'],\n                '#to': ['value'],\n                '#in-operand': ['values'],\n              })\n              .select('#field', {\n                classes: ['qb-field'],\n                options: service.columns().map(c => c.key),\n                value: service.columns().length ? service.columns()[0].key : '',\n                getLabel: function (node, line, key) {\n                  const column = service.columns().filter(c => c.key === key)[0];\n                  return (column && column.title) || null;\n                },\n                getType: function (node, line, key) {\n                  const column = service.columns().filter(c => c.key === key)[0];\n                  return (column && column.type) || null;\n                },\n                change: function (node, line) {\n                  const field = this.value;\n                  const type = this.getType(field);\n                  const ops = typeMapping[type] || [];\n                  const op = line.get('#operator').expressions[0];\n\n                  if (ops.indexOf(op.value) < 0) {\n                    op.value = ops.length ? ops[0] : null;\n                    op.change();\n                  } else {\n                    const operand = line.get('#operand').expressions[0];\n                    if (operand.validate) {\n                      const result = operand.validate();\n                      if (result.length) {\n                        operand.value = null;\n                      }\n                    } else {\n                      operand.value = null;\n                    }\n                  }\n                },\n              })\n              .select('#operator', {\n                classes: ['qb-operator'],\n                getOptions: function (node, line) {\n                  const field = line.get('#field').expressions[0];\n                  const name = field.value;\n                  const type = field.getType(name);\n\n                  return type ? typeMapping[type] : [];\n                },\n                value: 'EQUALS',\n                change: function (node, line) {\n                  switch (this.value.toLowerCase()) {\n                    case 'equals':\n                    case 'not equals':\n                    case 'greater than':\n                    case 'less than':\n                    case 'greater or eq. to':\n                    case 'less or eq. to':\n                    case 'like':\n                    case 'not like':\n                    case 'starts with':\n                    case 'ends with':\n                      line.put('#operand', node, function (schema) {\n                        schema.input('#value', {\n                          classes: {\n                            'qb-operand': true,\n                            'qb-has-value': function () {\n                              return !!this.value;\n                            },\n                            'qb-invalid': function (n) {\n                              return !this.isValid(n);\n                            },\n                          },\n                          value: getValue(line, '#operand', ['value', 'values']),\n                          validate: function () {\n                            const field = line.get('#field').expressions[0].value;\n                            return validator.for(field)(this.value);\n                          },\n                          placeholderText: 'Select value',\n                          suggest: suggest,\n                          options: null,\n                          refresh: function (n, l) {\n                            this.options = this.suggest(n, l);\n                          },\n                        });\n                      });\n                      break;\n                    case 'between':\n                      line.put('#operand', node, function (operand) {\n                        operand\n                          .input('#from', {\n                            classes: {\n                              'qb-operand': true,\n                              'qb-has-value': function () {\n                                return !!this.value;\n                              },\n                              'qb-invalid': function (n) {\n                                return !this.isValid(n);\n                              },\n                            },\n                            validate: function () {\n                              const field = line.get('#field').expressions[0].value;\n                              return validator.for(field)(this.value);\n                            },\n                            options: suggest,\n                            value: null,\n                            placeholderText: 'Select value',\n                          })\n                          .label('#and', {\n                            classes: ['qb-operand', 'qb-operand-and-label'],\n                            text: 'AND',\n                          })\n                          .input('#to', {\n                            classes: {\n                              'qb-operand': true,\n                              'qb-has-value': function () {\n                                return !!this.value;\n                              },\n                              'qb-invalid': function (n) {\n                                return !this.isValid(n);\n                              },\n                            },\n                            value: null,\n                            validate: function () {\n                              const field = line.get('#field').expressions[0].value;\n                              return validator.for(field)(this.value);\n                            },\n                            placeholderText: 'Select value',\n                            suggest: suggest,\n                            options: null,\n                            refresh: function (n, l) {\n                              this.options = this.suggest(n, l);\n                            },\n                          });\n                      });\n                      break;\n                    case 'in':\n                      line.put('#operand', node, function (schema) {\n                        schema\n                          .label('#in-open', {\n                            text: '(',\n                          })\n                          .multiselect('#in-operand', {\n                            classes: {\n                              'qb-operand': true,\n                              'qb-has-value': function () {\n                                return !!this.values.length;\n                              },\n                              'qb-invalid': function (n) {\n                                return !this.isValid(n);\n                              },\n                            },\n                            validate: function () {\n                              const field = line.get('#field').expressions[0].value;\n                              return validator.for(field)(this.values);\n                            },\n                            values: [],\n                            options: suggests,\n                            placeholderText: 'Select value',\n                            add: function (n, l, v) {\n                              if (v && this.values.indexOf(v) < 0) {\n                                this.values.push(v);\n                              }\n                            },\n                          })\n                          .label('#in-close', {\n                            text: ')',\n                          });\n                      });\n                      break;\n                    case 'is empty':\n                    case 'is not empty':\n                      line.put('#operand', node, noop);\n                      break;\n                  }\n                },\n              })\n              .group('#operand', function (schema) {\n                schema.autocomplete('#value', {\n                  classes: {\n                    'qb-operand': true,\n                    'qb-has-value': function () {\n                      return !!this.value;\n                    },\n                    'qb-invalid': function (node) {\n                      return !this.isValid(node);\n                    },\n                  },\n                  value: null,\n                  validate: function (node, line) {\n                    const field = line.get('#field').expressions[0].value;\n                    return validator.for(field)(this.value);\n                  },\n                  placeholderText: 'Select value',\n                  suggest: suggest,\n                  options: null,\n                  refresh: function (node, line) {\n                    this.options = this.suggest(node, line);\n                  },\n                });\n              });\n          });\n      });\n  }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { clone, Command } from '@qgrid/core';\nimport { GridPlugin } from '@qgrid/ngx';\nimport { EbNodeService } from '../expression-builder/eb-node.service';\nimport { Node } from '../expression-builder/model/node';\nimport { INodeSchema } from '../expression-builder/model/node.schema';\nimport { SerializationService } from '../expression-builder/serialization.service';\nimport { TraverseService } from '../expression-builder/traverse.service';\nimport { FocusAfterRender } from '../focus/focus.service';\nimport { QueryBuilderModel } from './query-builder.model';\nimport { QueryBuilderService } from './query-builder.service';\nimport * as converter from './schema/converter';\nimport { WhereSchema } from './schema/where.schema';\n\n@Component({\n  selector: 'q-grid-query-builder-panel',\n  templateUrl: './query-builder-panel.component.html',\n  providers: [FocusAfterRender, GridPlugin],\n})\nexport class QueryBuilderPanelComponent implements OnInit {\n  private traverse = new TraverseService();\n  private plan: INodeSchema;\n\n  @Output() close = new EventEmitter<any>();\n\n  node: Node;\n  queryService: QueryBuilderService;\n\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: QueryBuilderPanelComponent } = {\n    $implicit: this,\n  };\n\n  addGroup = new Command({\n    execute: () => {\n      const current = this.nodeService.current;\n      const parent = this.findLogicalNode(current);\n      const group = parent.clone();\n      parent.addChildAfter(group, current.id === '#condition' && current);\n      if (current.id === '#condition') {\n        this.nodeService.current = group;\n      }\n    },\n    canExecute: () => !!this.findLogicalNode(this.nodeService.current),\n  });\n\n  addRule = new Command({\n    execute: () => {\n      const current = this.nodeService.current;\n      const parent = this.findLogicalNode(current);\n      const rule = this.plan.materialize('#condition');\n      parent.addChildAfter(rule, current.id === '#condition' && current);\n      if (current.id === '#condition') {\n        this.nodeService.current = rule;\n      }\n    },\n    canExecute: () => !!this.findLogicalNode(this.nodeService.current),\n  });\n\n  remove = new Command({\n    execute: () => {\n      const current = this.nodeService.current;\n      if (current.id === '#logical' && current.level === 1) {\n        current.clear();\n      } else {\n        const previous = this.traverse.findUpSibling(current);\n        this.nodeService.current = previous;\n        current.remove();\n      }\n    },\n    canExecute: () => {\n      const current = this.nodeService.current;\n      return current && (current.id === '#condition' || (current.level > 1 || current.children.length > 0));\n    },\n  });\n\n  submit = new Command({\n    source: 'query-builder.component',\n    execute: () => {\n      const serializer = new SerializationService();\n      const node = serializer.serialize(this.node);\n\n      const by = clone(this.plugin.model.filter().by);\n      by.$expression = converter.visit(node);\n\n      const { model } = this.plugin;\n      model.filter({ by });\n      const qb = model.resolve(QueryBuilderModel);\n      qb.state({ node: by.$expression ? node : null });\n\n      this.close.emit();\n    },\n    canExecute: () => {\n      const depth = this.traverse.depth(this.node);\n      return depth(\n        (memo, expression, line, node) =>\n          node.attr('placeholder')\n            ? memo\n            : memo && expression.isValid()\n        , true);\n    },\n  });\n\n  cancel = new Command({\n    source: 'query-builder.component',\n    execute: () => {\n      this.close.emit();\n    },\n  });\n\n  reset = new Command({\n    source: 'query-builder.component',\n    execute: () => {\n      const schema = new WhereSchema(this.queryService);\n      const plan = schema.factory();\n      this.node = plan.apply();\n\n      const root = this.node.children[0];\n      root.clear();\n\n      this.nodeService.current = this.node.children[0];\n\n    },\n  });\n\n  constructor(\n    public focusAfterRender: FocusAfterRender,\n    private plugin: GridPlugin,\n    private nodeService: EbNodeService,\n  ) {\n  }\n\n  ngOnInit() {\n    this.queryService = new QueryBuilderService(this.plugin.model);\n\n    const schema = new WhereSchema(this.queryService);\n    this.plan = schema.factory() as any;\n    this.node = this.plan.apply();\n\n    const serializer = new SerializationService();\n    const qb = this.plugin.model.resolve(QueryBuilderModel);\n    const { node } = qb.state();\n    if (node) {\n      this.node = serializer.deserialize(this.plan, node);\n    }\n\n    this.nodeService.current = this.node.children[0];\n  }\n\n  private findLogicalNode(node: Node) {\n    return this.traverse.findUp(node, n => n.id === '#logical');\n  }\n}\n","<ng-container key=\"plugin-query-builder-panel.tpl.html\"\n              [context]=\"context\">\n</ng-container>\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { MarkupVisitor } from '@qgrid/core';\nimport { Node } from '../expression-builder/model/node';\nimport { SerializationService } from '../expression-builder/serialization.service';\nimport { QueryBuilderService } from './query-builder.service';\nimport * as converter from './schema/converter';\nimport { Validator } from './schema/validator';\n\n@Pipe({\n  name: 'qGridQueryBuilderMarkup',\n  pure: false,\n})\nexport class QueryBuilderPipe implements PipeTransform {\n  visitor: MarkupVisitor;\n\n  transform(value: any, service: QueryBuilderService): any {\n    const node = value as Node;\n    if (node) {\n      if (!this.visitor) {\n        const validator = new Validator(service);\n        const columnMap = service.columnMap();\n        this.visitor =\n          new MarkupVisitor(\n            k => columnMap[k].title,\n            k => columnMap[k].type,\n            (k, v) => validator.for(k)(v).length === 0,\n          );\n      }\n\n      const serializer = new SerializationService();\n      const filter = serializer.serialize(node);\n      const expression = converter.visit(filter);\n      if (expression) {\n        return this.visitor.visit(expression);\n      }\n    }\n\n    return 'Please, select a query';\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { TemplateModule, GridModelBuilder } from '@qgrid/ngx';\nimport { QueryBuilderComponent } from './query-builder.component';\nimport { QueryBuilderPanelComponent } from './query-builder-panel.component';\nimport { QueryBuilderPipe } from './query-builder.pipe';\nimport { QueryBuilderModel } from './query-builder.model';\n\n@NgModule({\n  imports: [\n    TemplateModule,\n  ],\n  exports: [\n    QueryBuilderComponent,\n    QueryBuilderPanelComponent,\n    QueryBuilderPipe,\n  ],\n  declarations: [\n    QueryBuilderComponent,\n    QueryBuilderPanelComponent,\n    QueryBuilderPipe,\n  ],\n})\nexport class QueryBuilderModule {\n  constructor(modelBuilder: GridModelBuilder) {\n    modelBuilder\n      .register('queryBuilder', QueryBuilderModel);\n  }\n}\n","import { AfterViewInit, Directive, ElementRef, Input } from '@angular/core';\nimport { GridError } from '@qgrid/ngx';\n\n@Directive({\n  selector: '[q-grid-raise]',\n})\nexport class RaiseDirective implements AfterViewInit {\n  @Input('q-grid-raise') type = 'click';\n  @Input('q-grid-raise-target') target: string;\n\n  constructor(private element: ElementRef) { }\n\n  ngAfterViewInit() {\n    const event = new Event(this.type);\n    const element = this.element.nativeElement;\n\n    const target = this.target\n      ? element.querySelector(this.target)\n      : element;\n\n    if (!target) {\n      throw new GridError('raise.directive', 'raise target is not found');\n    }\n\n    target.dispatchEvent(event);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RaiseDirective } from './raise.directive';\n\n@NgModule({\n  declarations: [\n    RaiseDirective,\n  ],\n  exports: [\n    RaiseDirective,\n  ],\n})\nexport class RaiseModule {\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  CellView,\n  Command,\n  getValueFactory,\n  isArray,\n  isUndefined,\n  SelectionService,\n} from '@qgrid/core';\nimport { Disposable, GridModel, GridModelBuilder } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-reference',\n  templateUrl: './reference.component.html',\n  providers: [Disposable],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReferenceComponent implements OnInit {\n  private _value: any;\n  private _model: GridModel;\n  private _reference: {\n    commit: Command<{ entries: any[]; items: any[] }>;\n    cancel: Command;\n    value: any;\n  };\n\n  @Output() modelChange = new EventEmitter<GridModel>();\n  @Output() valueChange = new EventEmitter<any>();\n  @Output() referenceChange = new EventEmitter<{ commit: ReferenceComponent['reference']['commit']; cancel: Command; value: any }>();\n\n  @Input() caption = '';\n  @Input() autofocus = false;\n  @Input() cell: CellView;\n\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: ReferenceComponent } = {\n    $implicit: this,\n  };\n\n  get value() { return this._value; }\n  @Input() set value(value) {\n    if (value !== this._value) {\n      this._value = value;\n      this.valueChange.emit(value);\n    }\n  }\n\n  get model() { return this._model; }\n  @Input() set model(value) {\n    if (value !== this._model) {\n      this._model = value;\n      this.modelChange.emit(value);\n    }\n  }\n\n  get reference() { return this._reference; }\n  @Input() set reference(value) {\n    if (value !== this._reference) {\n      this._reference = value;\n      this.referenceChange.emit(value);\n    }\n  }\n\n  constructor(\n    private modelBuilder: GridModelBuilder,\n    private disposable: Disposable,\n  ) {\n  }\n\n  ngOnInit() {\n    this.reference = {\n      commit: new Command({ execute: e => this.value = e.entries }),\n      cancel: new Command(),\n      value: this.value,\n    };\n\n    if (this.cell.column.editorOptions?.modelFactory) {\n      this.model = this.cell.column.editorOptions.modelFactory({\n        reference: this.reference,\n        row: this.cell.row,\n        column: this.cell.column,\n        getValue: getValueFactory(this.cell.column),\n        createDefaultModel: () => this.modelBuilder.build(),\n      });\n\n      const selectionService = new SelectionService(this.model);\n      this.disposable.add(\n        this.model.dataChanged.watch((e, off) => {\n          if (e.hasChanges('rows') && e.state.rows.length > 0) {\n            off();\n\n            if (!this.model.selection().items.length) {\n              const { value } = this.reference;\n              if (!isUndefined(value)) {\n                const entries = isArray(value) ? value : [value];\n                const items = selectionService.map(entries);\n                this.model.selection({\n                  items,\n                }, {\n                  source: 'reference.component',\n                });\n              }\n            }\n          }\n        }),\n      );\n\n      this.disposable.add(\n        this.model\n          .selectionChanged\n          // TODO: use rx syntax\n          .watch(e => {\n            // TODO: get rid of this check\n            if (e.tag.source === 'reference.component') {\n              return;\n            }\n\n            if (e.hasChanges('items')) {\n              const entries = selectionService.lookup(e.state.items);\n              this.value = entries;\n            }\n          }),\n      );\n    }\n  }\n}\n","<ng-container key=\"plugin-reference.tpl.html\"\n              [context]=\"context\">\n</ng-container>\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { CellView, Command, SelectionService } from '@qgrid/core';\nimport { Disposable, GridModel } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-reference-editor',\n  templateUrl: './reference-editor.component.html',\n  providers: [Disposable],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReferenceEditorComponent implements AfterViewInit {\n  private state: any;\n\n  @Output() valueChange = new EventEmitter<any>();\n  @Output() afterSubmit = new EventEmitter();\n  @Output() afterCancel = new EventEmitter();\n\n  @Input() caption = '';\n  @Input() cell: CellView;\n\n  reference: { commit: Command; cancel: Command };\n  model: GridModel;\n\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: ReferenceEditorComponent } = {\n    $implicit: this,\n  };\n\n  submit = new Command();\n  cancel = new Command();\n\n  @Input() get value() {\n    return this.state;\n  }\n  set value(value) {\n    if (value !== this.state) {\n      this.state = value;\n      this.valueChange.emit(value);\n    }\n  }\n\n  constructor(private disposable: Disposable) { }\n\n  ngAfterViewInit() {\n    const { model } = this;\n    const { commit, cancel } = this.reference;\n\n    const { commitShortcuts, cancelShortcuts } = model.edit();\n    const selectionService = new SelectionService(model);\n\n    // TODO: think how to get rid of this shit.\n    setTimeout(() => {\n      this.submit = new Command({\n        shortcut: commitShortcuts.form,\n        canExecute: () => {\n          const { items } = model.selection();\n          const entries = selectionService.lookup(items);\n          const context = { items, entries };\n\n          return commit.canExecute(context);\n        },\n        execute: () => {\n          const { items } = model.selection();\n          const entries = selectionService.lookup(items);\n          const context = { items, entries };\n          if (commit.execute(context) !== false) {\n            this.afterSubmit.emit();\n          } else {\n            this.afterCancel.emit();\n          }\n\n          return false;\n        },\n      });\n\n      this.cancel = new Command({\n        shortcut: cancelShortcuts.form || cancelShortcuts.$default,\n        canExecute: () => cancel.canExecute(),\n        execute: () => {\n          if (cancel.execute() !== false) {\n            this.afterCancel.emit();\n          }\n\n          return false;\n        },\n      });\n\n      const { shortcut, manager } = model.action();\n      this.disposable.add(\n        shortcut.register(manager, [this.submit, this.cancel]),\n      );\n    }, 0);\n  }\n}\n","<ng-container key=\"plugin-reference-editor.tpl.html\" [context]=\"context\"></ng-container>\n","import { NgModule } from '@angular/core';\nimport { ReferenceEditorComponent } from './reference-editor.component';\nimport { ReferenceComponent } from './reference.component';\nimport { TemplateModule } from '@qgrid/ngx';\n\n@NgModule({\n  declarations: [\n    ReferenceEditorComponent,\n    ReferenceComponent,\n  ],\n  exports: [\n    ReferenceEditorComponent,\n    ReferenceComponent,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class ReferenceEditorModule {}\n","import { HttpClient } from '@angular/common/http';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n} from '@angular/core';\nimport { RestState } from '@qgrid/core';\nimport { GridPlugin, StateAccessor } from '@qgrid/ngx';\nimport { RestPlugin } from '@qgrid/plugins';\n\n@Component({\n  selector: 'q-grid-rest',\n  template: '',\n  providers: [GridPlugin, StateAccessor],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RestComponent implements OnInit, OnChanges {\n  private restState = this.stateAccessor.setter(RestState);\n\n  context: { $implicit: RestPlugin };\n\n  @Input('url') set restUrl(url: string) { this.restState({ url }); }\n  @Input('method') set restMethod(method: string) { this.restState({ method }); }\n  @Input('serialize') set restSerialize(serialize: (x: any) => any) { this.restState({ serialize }); }\n\n  constructor(\n    private http: HttpClient,\n    private plugin: GridPlugin,\n    private stateAccessor: StateAccessor,\n  ) {\n  }\n\n  ngOnChanges() {\n    const { model } = this.plugin;\n    this.stateAccessor.write(model);\n  }\n\n  ngOnInit() {\n    const rest = new RestPlugin(\n      this.plugin.model,\n      {\n        get: (url, params) => this.http.get(url, { params }).toPromise(),\n        post: (url, data) => this.http.post(url, { data }).toPromise(),\n      },\n    );\n\n    this.context = { $implicit: rest };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RestComponent } from './rest.component';\n\n@NgModule({\n  declarations: [\n    RestComponent,\n  ],\n  exports: [\n    RestComponent,\n  ],\n})\nexport class RestModule {\n}\n","<ng-template>\n\t<ng-content>\n\t</ng-content>\n</ng-template>\n","import {\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { GridPlugin } from '@qgrid/ngx';\nimport { TemplateHostService } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-rule',\n  templateUrl: './rule.component.html',\n  providers: [TemplateHostService, GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RuleComponent implements OnChanges {\n  @Input() for: string;\n  @Input() key: string;\n\n  // Common Rules\n  @Input() required: string;\n  @Input('notEmptyList') not_empty_list: string;\n  @Input('anyObject') any_object: string;\n\n  // String Rules\n  @Input('equal') eq: string;\n  @Input() string: string;\n  @Input('lengthBetween') length_between: number[];\n  @Input('lengthEqual') length_equal: number;\n  @Input('minLength') min_length: number;\n  @Input('maxLength') max_length: number;\n  @Input('oneOf') one_of: string[];\n  @Input('pattern') like: string;\n\n  // Numeric Rules\n  @Input() integer: string;\n  @Input('positiveInteger') positive_integer: string;\n  @Input() decimal: string;\n  @Input('positiveDecimal') positive_decimal: string;\n  @Input('maxNumber') max_number: number;\n  @Input('minNumber') min_number: number;\n\n  // Special Rules\n  @Input() email: string;\n  @Input() url: string;\n  @Input('isoDate') iso_date: string;\n  @Input('equalToField') equal_to_field: string;\n  @Input('listOf') list_of: string[];\n\n  @ViewChild(TemplateRef, { static: true }) templateRef: TemplateRef<any>;\n\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: RuleComponent } = {\n    $implicit: this,\n  };\n\n  constructor(\n    private plugin: GridPlugin,\n    private templateHost: TemplateHostService,\n  ) {\n    this.templateHost.key = () => 'rule';\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const rule = {\n      for: this.for,\n      key: this.key,\n    };\n\n    const { model } = this.plugin;\n    const validation = model.validation;\n    const rules = Array.from(validation().rules);\n\n    Object\n      .keys(changes)\n      .forEach(key => {\n        if (!['for', 'key'].includes(key) && changes[key].firstChange) {\n          rule[key] = this[key];\n        }\n      });\n\n    rules.push(rule);\n    validation({ rules });\n  }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { selectColumnIndex, selectRowIndex } from '@qgrid/core';\nimport { GridPlugin, TemplateHostService } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-status-bar',\n  templateUrl: './status-bar.component.html',\n  providers: [TemplateHostService, GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StatusBarComponent implements OnInit {\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: StatusBarComponent } = {\n    $implicit: this,\n  };\n\n  get rowIndex() {\n    return selectRowIndex(this.plugin.model.navigation());\n  }\n\n  get columnIndex() {\n    return selectColumnIndex(this.plugin.model.navigation());\n  }\n\n  constructor(\n    private plugin: GridPlugin,\n    private cd: ChangeDetectorRef,\n    templateHost: TemplateHostService) {\n    templateHost.key = () => 'plugin-status-bar.tpl.html';\n  }\n\n  ngOnInit() {\n    const { model, observe } = this.plugin;\n    observe(model.navigationChanged)\n      .subscribe(() => this.cd.detectChanges());\n  }\n}\n","<ng-container key=\"plugin-status-bar.tpl.html\" [context]=\"context\"></ng-container>\n","import { NgModule } from '@angular/core';\nimport { TemplateModule } from '@qgrid/ngx';\nimport { StatusBarComponent } from './status-bar.component';\n\n@NgModule({\n  declarations: [\n    StatusBarComponent,\n  ],\n  exports: [\n    StatusBarComponent,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class StatusBarModule {\n}\n","<ng-template>\n    <ng-content></ng-content>\n</ng-template>\n\n<ng-container key=\"plugin-tab-trap.tpl.html\" [context]=\"context\"></ng-container>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { EventListener, EventManager, Shortcut } from '@qgrid/core';\nimport { GridError, GridPlugin } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-tab-trap',\n  templateUrl: './tab-trap.component.html',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TabTrapComponent {\n  private isActivating = false;\n\n  @ViewChild(TemplateRef, { static: true }) template: TemplateRef<any>;\n  @Input() roundTrip = false;\n\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: TabTrapComponent } = {\n    $implicit: this,\n  };\n\n  traps = new Map<string, any>();\n\n  constructor(private plugin: GridPlugin, elementRef: ElementRef) {\n    const listener = new EventListener(elementRef.nativeElement, new EventManager(this));\n    listener.on('keydown', e => {\n      const code = Shortcut.translate(e);\n      if (code === 'tab' || code === 'shift+tab') {\n        e.stopPropagation();\n      }\n    });\n  }\n\n  activate(target) {\n    if (this.isActivating) {\n      return;\n    }\n\n    this.isActivating = true;\n    try {\n      if (this.roundTrip) {\n        this.goRound(target);\n      } else {\n        this.exit(target);\n      }\n    } finally {\n      this.isActivating = false;\n    }\n  }\n\n  exit(target) {\n    const e = {\n      key: 'Tab',\n      keyCode: 9,\n      shiftKey: target === 'start',\n    };\n\n    const { model } = this.plugin;\n    const shortcut = model.action().shortcut;\n    shortcut.keyDown(e, 'tab-trap');\n  }\n\n  goRound(target) {\n    switch (target) {\n      case 'start': {\n        const end = this.traps.get('end');\n        end.focus();\n        break;\n      }\n      case 'end': {\n        const start = this.traps.get('start');\n        start.focus();\n        break;\n      }\n      default:\n        throw new GridError('tab.trap', `Invalid target ${target}`);\n    }\n  }\n}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\nimport { EventListener, EventManager } from '@qgrid/core';\nimport { TabTrapComponent } from './tab-trap.component';\n\n@Directive({\n  selector: '[q-grid-tab-trap-in]',\n})\nexport class TabTrapInDirective implements OnInit {\n  @Input('q-grid-tab-trap-in') target;\n  @Input('q-grid-tab-trap-host') host: TabTrapComponent;\n\n  constructor(private elementRef: ElementRef) {\n    elementRef.nativeElement.tabIndex = 0;\n\n    const listener = new EventListener(elementRef.nativeElement, new EventManager(this));\n    listener.on('focus', () => this.host.activate(this.target));\n  }\n\n  ngOnInit() {\n    this.host.traps.set(this.target, this);\n  }\n\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { TabTrapComponent } from './tab-trap.component';\nimport { TemplateModule } from '@qgrid/ngx';\nimport { TabTrapInDirective } from './tab-trap-in.directive';\n\n@NgModule({\n  declarations: [\n    TabTrapComponent,\n    TabTrapInDirective,\n  ],\n  exports: [\n    TabTrapComponent,\n    TabTrapInDirective,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class TabTrapModule {\n}\n","import { Directive, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { parseFactory } from '@qgrid/core';\n\n@Directive({\n  selector: '[q-grid-time]',\n})\nexport class TimeDirective {\n  private toMidnight: (x: Date | string) => Date = parseFactory('date');\n\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    viewContainerRef.createEmbeddedView(templateRef, { $implicit: this });\n  }\n\n  time(previous, current) {\n    if (!previous) {\n      previous = new Date();\n    }\n\n    const midnight = this.toMidnight(previous);\n    const [\n      hours,\n      minutes,\n      seconds,\n      ms,\n    ] = current.split(':');\n\n    if (hours && minutes) {\n      const time = new Date(\n        midnight.getFullYear(),\n        midnight.getMonth(),\n        midnight.getDate(),\n        +hours,\n        +minutes,\n        seconds ? +seconds : 0,\n        ms ? +ms : 0,\n      );\n\n      return time;\n    }\n\n    return midnight;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { TimeDirective } from './time.directive';\n\n@NgModule({\n  declarations: [\n    TimeDirective,\n  ],\n  exports: [\n    TimeDirective,\n  ],\n})\nexport class TimeModule {\n}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { GridPlugin } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-validation',\n  template: '',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ValidationComponent {\n\t@Input() type: string;\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { GridPlugin, TemplateHostService } from '@qgrid/ngx';\nimport { ValidatorPlugin } from '@qgrid/plugins';\n\n@Component({\n  selector: 'q-grid-validator',\n  templateUrl: './validator.component.html',\n  providers: [TemplateHostService, GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ValidatorComponent implements OnInit {\n  @Input() value: string;\n  @Input() key: string;\n  @Input() type: string;\n  context: { $implicit: ValidatorPlugin };\n\n  constructor(\n    private plugin: GridPlugin,\n    private templateHost: TemplateHostService,\n  ) {\n    this.templateHost.key = () => 'validator';\n  }\n\n  ngOnInit() {\n    const { model } = this.plugin;\n    const validator = new ValidatorPlugin(model, this);\n    this.context = { $implicit: validator };\n  }\n}\n","<ng-container key=\"plugin-validator.tpl.html\"\n              [context]=\"context\"></ng-container>\n","import { NgModule } from '@angular/core';\nimport { ValidatorComponent } from './validator.component';\nimport { RuleComponent } from './rule.component';\nimport { ValidationComponent } from './validation.component';\nimport { TemplateModule } from '@qgrid/ngx';\n\n@NgModule({\n  declarations: [\n    ValidationComponent,\n    ValidatorComponent,\n    RuleComponent,\n  ],\n  exports: [\n    ValidationComponent,\n    ValidatorComponent,\n    RuleComponent,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class ValidationModule {\n}\n","import { Component, Input, OnChanges, ChangeDetectionStrategy } from '@angular/core';\nimport { GridPlugin } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-visibility',\n  template: '',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VisibilityComponent implements OnChanges {\n  @Input() head = true;\n  @Input() foot = true;\n  @Input() body = true;\n  @Input() toolbarTop = true;\n  @Input() toolbarBottom = true;\n  @Input() toolbarRight = false;\n  @Input() toolbarLeft = false;\n\n  @Input() pinLeft = false;\n  @Input() pinTop = false;\n  @Input() pinRight = false;\n  @Input() pinBottom = false;\n\n  constructor(private plugin: GridPlugin) {\n  }\n\n  ngOnChanges() {\n    const { model } = this.plugin;\n    model.visibility({\n      body: this.body,\n      foot: this.foot,\n      head: this.head,\n      toolbar: {\n        bottom: this.toolbarBottom,\n        left: this.toolbarLeft,\n        right: this.toolbarRight,\n        top: this.toolbarTop,\n      },\n      pin: {\n        bottom: this.pinBottom,\n        left: this.pinLeft,\n        right: this.pinRight,\n        top: this.pinTop,\n      },\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { VisibilityComponent } from './visibility.component';\n\n@NgModule({\n  declarations: [\n    VisibilityComponent,\n  ],\n  exports: [\n    VisibilityComponent,\n  ],\n})\nexport class VisibilityModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.BackdropService","_c0","i1.FocusAfterRender","i2","getValue","i1.ColumnFilterItemListDirective","i1","i1.DateService","i1.EbNodeService","i1.EbNodeComponent","utility.defaults","patch.methodsOf","converter.visit","i3.EbNodeService"],"mappings":";;;;;;;;;;;;MAUa,kBAAkB,CAAA;IAY7B,WACU,CAAA,MAAkB,EAClB,EAAqB,EAAA;QADrB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;QAClB,IAAE,CAAA,EAAA,GAAF,EAAE,CAAmB;;AAX/B,QAAA,IAAA,CAAA,OAAO,GAAsC;AAC3C,YAAA,SAAS,EAAE,IAAI;SAChB,CAAC;KAWD;AATD,IAAA,IAAI,OAAO,GAAA;AACT,QAAA,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;AAC9B,QAAA,OAAO,KAAK,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC;KAC7B;IAQD,QAAQ,GAAA;QACN,MAAM,EAAE,KAAK,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;AAE5C,QAAA,YAAY,CAAC,KAAK,CAAC,aAAa,CAAC;aAC9B,SAAS,CAAC,CAAC,IAAG;AACb,YAAA,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;AACzB,gBAAA,MAAM,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC;gBAC1B,MAAM,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAE5C,IAAI,CAAC,YAAY,EAAE;;oBAEjB,KAAK,CAAC,MAAM,CAAC;wBACX,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAS,EAAE,CAAS,KAAK,CAAC,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC;AACrF,qBAAA,CAAC,CAAC;AACJ,iBAAA;AAED,gBAAA,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;AACvB,gBAAA,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;AACzB,aAAA;AACH,SAAC,CAAC,CAAC;KACN;AAEO,IAAA,UAAU,CAAC,OAAiB,EAAA;AAClC,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAC3C,YAAA,MAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YAC1B,MAAM,UAAU,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAClC,IAAI,MAAM,CAAC,OAAO,CAAC,QAAQ,GAAG,UAAU,CAAC,OAAO,CAAC,QAAQ,EAAE;AACzD,gBAAA,OAAO,KAAK,CAAC;AACd,aAAA;AACF,SAAA;AAED,QAAA,OAAO,IAAI,CAAC;KACb;;oFAlDU,kBAAkB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,iBAAA,CAAA,CAAA,CAAA,EAAA,CAAA;qEAAlB,kBAAkB,EAAA,SAAA,EAAA,CAAA,CAAA,mBAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAHlB,CAAC,UAAU,CAAC,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,KAAA,EAAA,SAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,2BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QCPzB,EAEe,CAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;;AAFD,QAAA,EAAA,CAAA,UAAA,CAAA,KAAA,EAAA,4BAAA,CAAoC,CAAA,SAAA,EAAA,GAAA,CAAA,OAAA,CAAA,CAAA;;uFDUrC,kBAAkB,EAAA,CAAA;cAN9B,SAAS;AACE,QAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,mBAAmB,aAElB,CAAC,UAAU,CAAC,EACN,eAAA,EAAA,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,+GAAA,EAAA,CAAA;;;MEDpC,mBAAmB,CAAA;;sFAAnB,mBAAmB,GAAA,CAAA,EAAA,CAAA;sEAAnB,mBAAmB,EAAA,SAAA,EAAA,CAAA,CAAA,gBAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,SAAA,4BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,CAAA,EAAA,CAAA,CAAA;uFAAnB,mBAAmB,EAAA,CAAA;cAL/B,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,gBAAgB;AAC1B,gBAAA,QAAQ,EAAE,EAAE;gBACZ,eAAe,EAAE,uBAAuB,CAAC,MAAM;AAChD,aAAA,CAAA;;;MCYY,eAAe,CAAA;;8EAAf,eAAe,GAAA,CAAA,EAAA,CAAA;iEAAf,eAAe,EAAA,CAAA,CAAA;qEAHxB,cAAc,CAAA,EAAA,CAAA,CAAA;uFAGL,eAAe,EAAA,CAAA;cAb3B,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,kBAAkB;oBAClB,mBAAmB;AACpB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,kBAAkB;oBAClB,mBAAmB;AACpB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,cAAc;AACf,iBAAA;AACF,aAAA,CAAA;;AACY,CAAA,YAAA,EAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,eAAe,mBAXxB,kBAAkB;QAClB,mBAAmB,CAAA,EAAA,OAAA,EAAA,CAOnB,cAAc,CAAA,EAAA,OAAA,EAAA,CAJd,kBAAkB;QAClB,mBAAmB,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;MCKV,eAAe,CAAA;IAO1B,WACU,CAAA,MAAkB,EAClB,YAAiC,EAAA;QADjC,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;QAClB,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAqB;AAEzC,QAAA,MAAM,EAAE,GAAG,IAAI,EAAE,CAAC;AAClB,QAAA,YAAY,CAAC,GAAG,GAAG,MAAM,IAAI,CAAA,OAAA,EAAU,MAAM,CAAA,CAAA,EAAI,EAAE,CAAA,SAAA,CAAW,CAAC;KAChE;IAED,QAAQ,GAAA;QACN,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1C,MAAM,MAAM,GAAG,IAAI,MAAM,CACvB,IAAI,CAAC,OAAO,IAAI,IAAI,OAAO,EAAE,EAC7B,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,IAAI,CACV,CAAC;QAEF,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AACvD,SAAA;QAED,KAAK,CAAC,MAAM,CAAC;AACX,YAAA,KAAK,EAAE,KAAK;AACT,iBAAA,MAAM,EAAE;iBACR,KAAK;AACL,iBAAA,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC;SACpB,EAAE;AACD,YAAA,MAAM,EAAE,kBAAkB;AAC3B,SAAA,CAAC,CAAC;QAEH,UAAU,CAAC,GAAG,CAAC,MACb,KAAK,CAAC,MAAM,CAAC;AACX,YAAA,KAAK,EAAE,KAAK;AACT,iBAAA,MAAM,EAAE;iBACR,KAAK;iBACL,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,MAAM,CAAC;AAC7B,SAAA,CAAC,CACH,CAAC;KACH;;8EA5CU,eAAe,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,mBAAA,CAAA,CAAA,CAAA,EAAA,CAAA;kEAAf,eAAe,EAAA,SAAA,EAAA,CAAA,CAAA,eAAA,CAAA,CAAA,EAAA,cAAA,EAAA,SAAA,8BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,QAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;oCACZ,WAAW,EAAA,CAAA,CAAA,CAAA;;;;wGAHd,CAAC,UAAU,EAAE,mBAAmB,CAAC,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,SAAA,wBAAA,CAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,CAAA,EAAA,CAAA,CAAA;uFAEjC,eAAe,EAAA,CAAA;cAN3B,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,eAAe;AACzB,gBAAA,QAAQ,EAAE,EAAE;gBACZ,eAAe,EAAE,uBAAuB,CAAC,MAAM;AAC/C,gBAAA,SAAS,EAAE,CAAC,UAAU,EAAE,mBAAmB,CAAC;AAC7C,aAAA,CAAA;+FAE8C,WAAW,EAAA,CAAA;kBAAvD,YAAY;AAAC,YAAA,IAAA,EAAA,CAAA,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;YAElC,KAAK,EAAA,CAAA;kBAAb,KAAK;YACG,IAAI,EAAA,CAAA;kBAAZ,KAAK;YACG,OAAO,EAAA,CAAA;kBAAf,KAAK;;;MCZK,mBAAmB,CAAA;AAoF9B,IAAA,WAAA,CACU,MAAkB,EAAA;QAAlB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;;AAjF5B,QAAA,IAAA,CAAA,OAAO,GAAuC;AAC5C,YAAA,SAAS,EAAE,IAAI;SAChB,CAAC;KAiFD;AA/ED,IAAA,IAAI,KAAK,GAAA;AACP,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;KAC1B;AAED,IAAA,IAAI,OAAO,GAAA;AACT,QAAA,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,MAAM,EAAE;AACX,YAAA,MAAM,IAAI,SAAS,CACjB,uBAAuB,EACvB,mBAAmB,CACpB,CAAC;AACH,SAAA;QAED,OAAO,MAAM,CAAC,OAAO,CAAC;KACvB;AAED,IAAA,IAAI,KAAK,GAAA;AACP,QAAA,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,MAAM,EAAE;AACX,YAAA,MAAM,IAAI,SAAS,CACjB,uBAAuB,EACvB,mBAAmB,CACpB,CAAC;AACH,SAAA;QAED,OAAO,MAAM,CAAC,KAAK,CAAC;KACrB;AAED,IAAA,IAAI,IAAI,GAAA;AACN,QAAA,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,MAAM,EAAE;AACX,YAAA,MAAM,IAAI,SAAS,CACjB,uBAAuB,EACvB,mBAAmB,CACpB,CAAC;AACH,SAAA;QAED,OAAO,MAAM,CAAC,IAAI,CAAC;KACpB;AAED,IAAA,IAAI,WAAW,GAAA;AACb,QAAA,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,MAAM,EAAE;AACX,YAAA,MAAM,IAAI,SAAS,CACjB,uBAAuB,EACvB,mBAAmB,CACpB,CAAC;AACH,SAAA;QAED,OAAO,MAAM,CAAC,WAAW,CAAC;KAC3B;AAED,IAAA,IAAI,IAAI,GAAA;AACN,QAAA,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,MAAM,EAAE;AACX,YAAA,MAAM,IAAI,SAAS,CACjB,uBAAuB,EACvB,mBAAmB,CACpB,CAAC;AACH,SAAA;QAED,IAAI,MAAM,CAAC,WAAW,EAAE;AACtB,YAAA,OAAO,UAAU,CAAC;AACnB,SAAA;QAED,IAAI,MAAM,CAAC,IAAI,EAAE;AACf,YAAA,OAAO,MAAM,CAAC;AACf,SAAA;QAED,IAAI,MAAM,CAAC,KAAK,EAAE;AAChB,YAAA,OAAO,MAAM,CAAC;AACf,SAAA;AAED,QAAA,OAAO,MAAM,CAAC;KACf;;sFAlFU,mBAAmB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,CAAA,CAAA,EAAA,CAAA;sEAAnB,mBAAmB,EAAA,SAAA,EAAA,CAAA,CAAA,oBAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAHnB,CAAC,UAAU,CAAC,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,KAAA,EAAA,6BAAA,EAAA,CAAA,EAAA,SAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,4BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QCPzB,EAEe,CAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;;QADD,EAAmB,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,OAAA,CAAA,CAAA;;uFDSpB,mBAAmB,EAAA,CAAA;cAN/B,SAAS;AACE,QAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,oBAAoB,aAEnB,CAAC,UAAU,CAAC,EACN,eAAA,EAAA,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,4GAAA,EAAA,CAAA;6DAGtC,MAAM,EAAA,CAAA;kBAAd,KAAK;;;MEOK,YAAY,CAAA;;wEAAZ,YAAY,GAAA,CAAA,EAAA,CAAA;8DAAZ,YAAY,EAAA,CAAA,CAAA;kEAHrB,cAAc,CAAA,EAAA,CAAA,CAAA;uFAGL,YAAY,EAAA,CAAA;cAbxB,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,eAAe;oBACf,mBAAmB;AACpB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,eAAe;oBACf,mBAAmB;AACpB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,cAAc;AACf,iBAAA;AACF,aAAA,CAAA;;AACY,CAAA,YAAA,EAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,YAAY,mBAXrB,eAAe;QACf,mBAAmB,CAAA,EAAA,OAAA,EAAA,CAOnB,cAAc,CAAA,EAAA,OAAA,EAAA,CAJd,eAAe;QACf,mBAAmB,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;;ICVtB,EACD,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;;;IADC,EACD,CAAA,kBAAA,CAAA,GAAA,EAAA,QAAA,CAAA,QAAA,EAAA,IAAA,CAAA,CAAA;;MCOa,YAAY,CAAA;AACvB,IAAA,WAAA,CACU,MAAkB,EAAA;QAAlB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;KAE3B;IAED,QAAQ,GAAA;QACN,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;AAEhD,QAAA,MAAM,SAAS,GAAgB;AAC7B,YAAA,GAAG,EAAE,aAAa;AAClB,YAAA,IAAI,EAAE,YAAY;AAClB,YAAA,KAAK,EAAE,KAAK;AACZ,YAAA,YAAY,EAAE,KAAK;AACnB,YAAA,OAAO,EAAE,KAAK;AACd,YAAA,SAAS,EAAE,KAAK;SACjB,CAAC;QAEF,KAAK;AACF,aAAA,UAAU,CAAC;AACV,YAAA,IAAI,EAAE,EAAE;SACT,EAAE;AACD,YAAA,MAAM,EAAE,eAAe;SACxB,CAAC;AACD,aAAA,IAAI,CAAC;YACJ,OAAO,EACL,CAAC,SAAS,CAAC;AACR,iBAAA,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC;SAClC,EAAE;AACD,YAAA,MAAM,EAAE,eAAe;AACxB,SAAA,CAAC,CAAC;AAEL,QAAA,OAAO,CAAC,KAAK,CAAC,eAAe,CAAC;aAC3B,SAAS,CAAC,CAAC,IAAG;YACb,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC;YAClC,IAAI,MAAM,KAAK,MAAM,EAAE;AACrB,gBAAA,QAAQ,KAAK,CAAC,CAAC,CAAC;oBACd,KAAK,KAAK,EAAE;AACV,wBAAA,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAC5C,wBAAA,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;4BACxB,MAAM,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;4BAC9B,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC,UAAU,EAAE,CAAC;AAE7C,4BAAA,MAAM,QAAQ,GAAG,KAAK,GAAG,OAAO,GAAG,IAAI,CAAC;AACxC,4BAAA,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC9B,4BAAA,IAAI,MAAM,EAAE;gCACV,KAAK,CAAC,SAAS,CAAC;oCACd,KAAK,EAAE,CAAC,MAAM,CAAC;iCAChB,EAAE;AACD,oCAAA,MAAM,EAAE,eAAe;AACxB,iCAAA,CAAC,CAAC;AAEH,gCAAA,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AACzB,6BAAA;AACF,yBAAA;wBACD,MAAM;AACP,qBAAA;AACF,iBAAA;AACF,aAAA;AACH,SAAC,CAAC,CAAC;KAEN;;wEA7DU,YAAY,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,CAAA,CAAA,EAAA,CAAA;+DAAZ,YAAY,EAAA,SAAA,EAAA,CAAA,CAAA,YAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAHZ,CAAC,UAAU,CAAC,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,KAAA,EAAA,+CAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,qBAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QDPzB,EAGc,CAAA,UAAA,CAAA,CAAA,EAAA,mCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,CAAA,CAAA,CAAA;;uFCOD,YAAY,EAAA,CAAA;cANxB,SAAS;AACE,QAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,YAAY,aAEX,CAAC,UAAU,CAAC,EACN,eAAA,EAAA,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,gJAAA,EAAA,CAAA;;;MCOpC,SAAS,CAAA;;kEAAT,SAAS,GAAA,CAAA,EAAA,CAAA;2DAAT,SAAS,EAAA,CAAA,CAAA;+DAHlB,cAAc,CAAA,EAAA,CAAA,CAAA;uFAGL,SAAS,EAAA,CAAA;cAXrB,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,YAAY;AACb,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,YAAY;AACb,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,cAAc;AACf,iBAAA;AACF,aAAA,CAAA;;AACY,CAAA,YAAA,EAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,SAAS,EATlB,EAAA,YAAA,EAAA,CAAA,YAAY,CAMZ,EAAA,OAAA,EAAA,CAAA,cAAc,aAHd,YAAY,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;MCHH,SAAS,CAAA;AACpB,IAAA,SAAS,CAAC,KAAU,EAAA;AAClB,QAAA,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;AAClB,YAAA,OAAO,KAAK,CAAC;AACd,SAAA;QAED,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,CAAG,EAAA,KAAK,CAAuB,qBAAA,CAAA,CAAC,CAAC;AACvD,QAAA,OAAO,WAAW,CAAC,KAAK,CAAC,IAAI,KAAK,KAAK,IAAI,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;KAC5D;;kEARU,SAAS,GAAA,CAAA,EAAA,CAAA;4EAAT,SAAS,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,CAAA;uFAAT,SAAS,EAAA,CAAA;cAHrB,IAAI;AAAC,QAAA,IAAA,EAAA,CAAA;AACJ,gBAAA,IAAI,EAAE,YAAY;AACnB,aAAA,CAAA;;;MCKY,2BAA2B,CAAA;AA4BtC,IAAA,WAAA,CACU,MAAkB,EAAA;QAAlB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;QAxB5B,IAAO,CAAA,OAAA,GAAU,EAAE,CAAC;;AAGpB,QAAA,IAAA,CAAA,OAAO,GAA+C;AACpD,YAAA,SAAS,EAAE,IAAI;SAChB,CAAC;KAqBD;AA9BD,IAAA,IAAY,IAAI,GAAA;QACd,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;KACnC;AASD,IAAA,IAAI,KAAK,GAAA;AACP,QAAA,OAAQ,IAAI,CAAC,IAAI,CAAC,KAAa,CAAC,MAAM,CAAC;KACxC;AAED,IAAA,IAAI,KAAK,GAAA;AACP,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;KAC/B;AAED,IAAA,IAAI,KAAK,GAAA;AACP,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;KACxB;IAED,IAAI,KAAK,CAAC,KAAK,EAAA;AACb,QAAA,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACzB;AAOD,IAAA,MAAM,CAAC,MAAc,EAAA;AACnB,QAAA,MAAM,IAAI,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAC;AACtC,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACzD,QAAA,IAAI,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YACvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAChE,SAAA;KACF;IAED,KAAK,GAAA;AACH,QAAA,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;KACnB;AAED,IAAA,gBAAgB,CAAC,MAAM,EAAA;AACrB,QAAA,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,CAAC;AAC7B,QAAA,IAAI,SAAS,EAAE;YACb,OAAO,IAAI,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC;AAChC,SAAA;AAED,QAAA,OAAO,IAAI,IAAI,IAAI,CAAC;KACrB;;sGApDU,2BAA2B,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,CAAA,CAAA,EAAA,CAAA;8EAA3B,2BAA2B,EAAA,SAAA,EAAA,CAAA,CAAA,4BAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAH3B,CAAC,UAAU,CAAC,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,KAAA,EAAA,qCAAA,EAAA,CAAA,EAAA,SAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,oCAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QCPzB,EAEe,CAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;;QADD,EAAmB,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,OAAA,CAAA,CAAA;;uFDSpB,2BAA2B,EAAA,CAAA;cANvC,SAAS;AACE,QAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,4BAA4B,aAE3B,CAAC,UAAU,CAAC,EACN,eAAA,EAAA,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,oHAAA,EAAA,CAAA;;;MEOpC,wBAAwB,CAAA;;gGAAxB,wBAAwB,GAAA,CAAA,EAAA,CAAA;0EAAxB,wBAAwB,EAAA,CAAA,CAAA;8EAHjC,cAAc,CAAA,EAAA,CAAA,CAAA;uFAGL,wBAAwB,EAAA,CAAA;cAXpC,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,2BAA2B;AAC5B,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,2BAA2B;AAC5B,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,cAAc;AACf,iBAAA;AACF,aAAA,CAAA;;AACY,CAAA,YAAA,EAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,wBAAwB,EATjC,EAAA,YAAA,EAAA,CAAA,2BAA2B,CAM3B,EAAA,OAAA,EAAA,CAAA,cAAc,aAHd,2BAA2B,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;MCDlB,kBAAkB,CAAA;AAG7B,IAAA,WAAA,CACU,MAAkB,EAAA;QAAlB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;KACvB;IAEL,eAAe,GAAA;AACb,QAAA,IAAI,IAAI,CAAC,OAAO,KAAK,KAAK,EAAE;AAC1B,YAAA,IAAI,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAClC,SAAA;KACF;;oFAXU,kBAAkB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,CAAA,CAAA,EAAA,CAAA;qEAAlB,kBAAkB,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAA,kBAAA,EAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,CAAA,kBAAA,EAAA,SAAA,CAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAFlB,CAAC,UAAU,CAAC,CAAA,CAAA,EAAA,CAAA,CAAA;uFAEZ,kBAAkB,EAAA,CAAA;cAJ9B,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,oBAAoB;gBAC9B,SAAS,EAAE,CAAC,UAAU,CAAC;AACxB,aAAA,CAAA;6DAE4B,OAAO,EAAA,CAAA;kBAAjC,KAAK;mBAAC,kBAAkB,CAAA;;;MCLd,eAAe,CAAA;AAD5B,IAAA,WAAA,GAAA;QAEE,IAAQ,CAAA,QAAA,GAAG,IAAI,CAAC;AAoBjB,KAAA;IAjBC,IAAI,GAAA;QACF,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QAEvC,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;AACrE,YAAA,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AACvB,SAAA;KACF;IAED,MAAM,GAAA;QACJ,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;AAEvC,QAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,0BAA0B,CAAC,CAAC;AACxE,YAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACtB,SAAA;KACF;;8EApBU,eAAe,GAAA,CAAA,EAAA,CAAA;AAAf,eAAA,CAAA,KAAA,iBAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,KAAA,EAAA,eAAe,WAAf,eAAe,CAAA,IAAA,EAAA,CAAA,CAAA;uFAAf,eAAe,EAAA,CAAA;cAD3B,UAAU;;;MCiBE,iBAAiB,CAAA;IAU5B,WAAoB,CAAA,eAAgC,EAAE,UAAsB,EAAA;QAAxD,IAAe,CAAA,eAAA,GAAf,eAAe,CAAiB;AARnC,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,YAAY,EAAO,CAAC;QAC7C,IAAS,CAAA,SAAA,GAAG,IAAI,CAAC;;AAG1B,QAAA,IAAA,CAAA,OAAO,GAAqC;AAC1C,YAAA,SAAS,EAAE,IAAI;SAChB,CAAC;AAGA,QAAA,eAAe,CAAC,OAAO,GAAG,UAAU,CAAC;KACtC;IAED,QAAQ,GAAA;AACN,QAAA,MAAM,OAAO,GAAG;AACd,YAAA,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,aAAa;YACnD,SAAS,EAAE,IAAI,CAAC,SAAS;AACzB,YAAA,SAAS,EAAE,MAAK,GAAI;SACrB,CAAC;AAEF,QAAA,MAAM,QAAQ,GAAG,IAAI,cAAc,CAAC,OAAO,CAAC,CAAC;AAC7C,QAAA,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;KACtD;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,eAAe,CAAC,OAAO,GAAG,IAAI,CAAC;KACrC;;kFA3BU,iBAAiB,EAAA,EAAA,CAAA,iBAAA,CAAAA,eAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,CAAA,CAAA,EAAA,CAAA;oEAAjB,iBAAiB,EAAA,SAAA,EAAA,CAAA,CAAA,iBAAA,CAAA,CAAA,EAAA,SAAA,EAAA,SAAA,uBAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;uBACjB,WAAW,EAAA,CAAA,CAAA,CAAA;;;;;QCrBxB,EAAgF,CAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;;QAAnC,EAAmB,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,OAAA,CAAA,CAAA;;uFDoBnD,iBAAiB,EAAA,CAAA;cAL7B,SAAS;2BACE,iBAAiB,EAAA,eAAA,EAEV,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,wFAAA,EAAA,CAAA;wFAGL,QAAQ,EAAA,CAAA;kBAAjD,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;YACvB,UAAU,EAAA,CAAA;kBAA1B,MAAM;mBAAC,OAAO,CAAA;YACN,SAAS,EAAA,CAAA;kBAAjB,KAAK;;;MEVK,iBAAiB,CAAA;IAsC5B,WAAoB,CAAA,IAAY,EAA4B,QAAa,EAAA;QAArD,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAQ;QAA4B,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAK;AAnC9C,QAAA,IAAA,CAAA,KAAK,GAAG,IAAI,YAAY,EAAO,CAAC;QAExB,IAAQ,CAAA,QAAA,GAAG,EAAE,CAAC;KAkChD;IAhCD,IAAqC,YAAY,CAAC,KAAU,EAAA;QAC1D,IAAI,CAAC,KAAK,EAAE;YACV,IAAI,IAAI,CAAC,QAAQ,EAAE;AACjB,gBAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;AACvB,gBAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACtB,aAAA;YAED,OAAO;AACR,SAAA;QACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACnD,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAC/C,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;AAEpC,QAAA,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAK;YAC/B,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,MAAK;gBAC3C,IAAI,IAAI,CAAC,QAAQ,EAAE;AACjB,oBAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;AACvB,oBAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACrB,oBAAA,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;AACnB,iBAAA;AACH,aAAC,CAAC,CAAC;AACL,SAAC,CAAC,CAAC;AAEH,QAAA,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAK;YAC/B,MAAM,OAAO,GAAgB,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAEnE,YAAA,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;YAC9B,OAAO,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACnD,SAAC,CAAC,CAAC;KACJ;;AApCU,iBAAA,CAAA,IAAA,GAAA,SAAA,yBAAA,CAAA,CAAA,EAAA,EAAA,OAAA,KAAA,CAAA,IAAA,iBAAiB,wDAsCc,QAAQ,CAAA,CAAA,CAAA,EAAA,CAAA;oEAtCvC,iBAAiB,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAA,iBAAA,EAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,QAAA,EAAA,CAAA,0BAAA,EAAA,UAAA,CAAA,EAAA,YAAA,EAAA,CAAA,wBAAA,EAAA,cAAA,CAAA,EAAA,EAAA,OAAA,EAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,EAAA,CAAA,CAAA;uFAAjB,iBAAiB,EAAA,CAAA;cAH7B,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,mBAAmB;AAC9B,aAAA,CAAA;;sBAuCoC,MAAM;uBAAC,QAAQ,CAAA;wBAnCvB,KAAK,EAAA,CAAA;kBAA/B,MAAM;mBAAC,iBAAiB,CAAA;YAEU,QAAQ,EAAA,CAAA;kBAA1C,KAAK;mBAAC,0BAA0B,CAAA;YAEI,YAAY,EAAA,CAAA;kBAAhD,KAAK;mBAAC,wBAAwB,CAAA;;;MCEpB,cAAc,CAAA;;4EAAd,cAAc,GAAA,CAAA,EAAA,CAAA;gEAAd,cAAc,EAAA,CAAA,CAAA;AAJd,cAAA,CAAA,IAAA,iBAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,SAAA,EAAA;QACT,eAAe;AAChB,KAAA,EAAA,OAAA,EAAA,CAJC,cAAc,CAAA,EAAA,CAAA,CAAA;uFAML,cAAc,EAAA,CAAA;cAhB1B,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,iBAAiB;oBACjB,iBAAiB;AAClB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,iBAAiB;oBACjB,iBAAiB;AAClB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,cAAc;AACf,iBAAA;AACD,gBAAA,SAAS,EAAE;oBACT,eAAe;AAChB,iBAAA;AACF,aAAA,CAAA;;AACY,CAAA,YAAA,EAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,cAAc,mBAdvB,iBAAiB;QACjB,iBAAiB,CAAA,EAAA,OAAA,EAAA,CAOjB,cAAc,CAAA,EAAA,OAAA,EAAA,CAJd,iBAAiB;QACjB,iBAAiB,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;MCDR,aAAa,CAAA;IAIxB,WAAoB,CAAA,QAAmB,EAAU,UAAsB,EAAA;QAAnD,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAW;QAAU,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;QAH9C,IAAM,CAAA,MAAA,GAAG,IAAI,CAAC;QACL,IAAQ,CAAA,QAAA,GAAG,OAAO,CAAC;KAGpD;IAED,QAAQ,GAAA;AACN,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC/D,QAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;KACpD;;0EAVU,aAAa,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,CAAA,CAAA,EAAA,CAAA;gEAAb,aAAa,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAA,gBAAA,EAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,MAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,CAAA,EAAA,QAAA,EAAA,CAAA,yBAAA,EAAA,UAAA,CAAA,EAAA,EAAA,CAAA,CAAA;uFAAb,aAAa,EAAA,CAAA;cAHzB,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,kBAAkB;AAC7B,aAAA,CAAA;qFAE0B,MAAM,EAAA,CAAA;kBAA9B,KAAK;mBAAC,gBAAgB,CAAA;YACW,QAAQ,EAAA,CAAA;kBAAzC,KAAK;mBAAC,yBAAyB,CAAA;;;MCCrB,mBAAmB,CAAA;AALhC,IAAA,WAAA,GAAA;QAQW,IAAS,CAAA,SAAA,GAAG,KAAK,CAAC;AAGjB,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,YAAY,EAAO,CAAC;;AAGhD,QAAA,IAAA,CAAA,OAAO,GAAuC;AAC5C,YAAA,SAAS,EAAE,IAAI;SAChB,CAAC;AA6CH,KAAA;AA3CC,IAAA,IAAa,KAAK,GAAA;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IAED,IAAI,KAAK,CAAC,KAAK,EAAA;AACb,QAAA,IAAI,KAAK,KAAK,IAAI,CAAC,KAAK,EAAE;AACxB,YAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACnB,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9B,SAAA;KACF;AAED,IAAA,IAAI,SAAS,GAAA;QACX,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC1C;IAED,IAAI,SAAS,CAAC,KAAc,EAAA;AAC1B,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;KACvD;AAED,IAAA,IAAI,SAAS,GAAA;AACX,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;KAC9B;AAED,IAAA,IAAI,UAAU,GAAA;AACZ,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;KAC/B;IAED,QAAQ,GAAA;;AAEN,QAAA,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,KAAK,OAAO,EAAE;AACnE,YAAA,UAAU,CACR,MACE,IAAI,CAAC,KAAK;AACV,gBAAA,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,SAAS;sBACzB,IAAI,CAAC,UAAU;AACjB,sBAAE,IAAI,CAAC,SAAS,EAClB,EAAE,CAAC,CAAC;AACT,SAAA;KACF;IAED,eAAe,GAAA;QACb,OAAO,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAChD;;sFAvDU,mBAAmB,GAAA,CAAA,EAAA,CAAA;sEAAnB,mBAAmB,EAAA,SAAA,EAAA,CAAA,CAAA,oBAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,SAAA,EAAA,WAAA,EAAA,MAAA,EAAA,QAAA,EAAA,KAAA,EAAA,OAAA,EAAA,KAAA,EAAA,OAAA,EAAA,EAAA,OAAA,EAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,KAAA,EAAA,6BAAA,EAAA,CAAA,EAAA,SAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,4BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QCfhC,EAAmF,CAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;;QAAnC,EAAmB,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,OAAA,CAAA,CAAA;;uFDetD,mBAAmB,EAAA,CAAA;cAL/B,SAAS;2BACE,oBAAoB,EAAA,eAAA,EAEb,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,2FAAA,EAAA,CAAA;gBAKtC,SAAS,EAAA,CAAA;kBAAjB,KAAK;YACG,MAAM,EAAA,CAAA;kBAAd,KAAK;YACG,KAAK,EAAA,CAAA;kBAAb,KAAK;YACI,WAAW,EAAA,CAAA;kBAApB,MAAM;YAOM,KAAK,EAAA,CAAA;kBAAjB,KAAK;;;MEbK,gBAAgB,CAAA;;gFAAhB,gBAAgB,GAAA,CAAA,EAAA,CAAA;kEAAhB,gBAAgB,EAAA,CAAA,CAAA;sEAHzB,cAAc,CAAA,EAAA,CAAA,CAAA;uFAGL,gBAAgB,EAAA,CAAA;cAX5B,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,mBAAmB;AACpB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,mBAAmB;AACpB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,cAAc;AACf,iBAAA;AACF,aAAA,CAAA;;AACY,CAAA,YAAA,EAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,gBAAgB,EATzB,EAAA,YAAA,EAAA,CAAA,mBAAmB,CAMnB,EAAA,OAAA,EAAA,CAAA,cAAc,aAHd,mBAAmB,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;MCAV,gBAAgB,CAAA;IAW3B,WACU,CAAA,MAAkB,EAClB,EAAqB,EAAA;QADrB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;QAClB,IAAE,CAAA,EAAA,GAAF,EAAE,CAAmB;;AAX/B,QAAA,IAAA,CAAA,OAAO,GAAoC;AACzC,YAAA,SAAS,EAAE,IAAI;SAChB,CAAC;KAWD;AATD,IAAA,IAAI,KAAK,GAAA;AACP,QAAA,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QACpD,OAAO,OAAO,IAAI,KAAK,CAAC;KACzB;IAQD,QAAQ,GAAA;QACN,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;AACvC,QAAA,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC;aACvB,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC;KAC7C;;gFArBU,gBAAgB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,iBAAA,CAAA,CAAA,CAAA,EAAA,CAAA;mEAAhB,gBAAgB,EAAA,SAAA,EAAA,CAAA,CAAA,gBAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAHhB,CAAC,UAAU,CAAC,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,KAAA,EAAA,yBAAA,EAAA,CAAA,EAAA,SAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,yBAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QCNzB,EAA+E,CAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;;QAAnC,EAAmB,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,OAAA,CAAA,CAAA;;uFDSlD,gBAAgB,EAAA,CAAA;cAN5B,SAAS;AACE,QAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,gBAAgB,aAEf,CAAC,UAAU,CAAC,EACN,eAAA,EAAA,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,uFAAA,EAAA,CAAA;;;MEQpC,aAAa,CAAA;;0EAAb,aAAa,GAAA,CAAA,EAAA,CAAA;+DAAb,aAAa,EAAA,CAAA,CAAA;mEAHtB,cAAc,CAAA,EAAA,CAAA,CAAA;uFAGL,aAAa,EAAA,CAAA;cAXzB,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,gBAAgB;AACjB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,gBAAgB;AACjB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,cAAc;AACf,iBAAA;AACF,aAAA,CAAA;;AACY,CAAA,YAAA,EAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,aAAa,EATtB,EAAA,YAAA,EAAA,CAAA,gBAAgB,CAMhB,EAAA,OAAA,EAAA,CAAA,cAAc,aAHd,gBAAgB,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;;ICRhB,EACa,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA;;;MCeJ,mBAAmB,CAAA;AAS9B,IAAA,WAAA,CAAoB,MAAkB,EAAA;QAAlB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;AAPrB,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,YAAY,EAAO,CAAC;;AAGtD,QAAA,IAAA,CAAA,OAAO,GAAuC;AAC5C,YAAA,SAAS,EAAE,IAAI;SAChB,CAAC;KAGD;IAED,QAAQ,GAAA;QACN,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;AACzC,QAAA,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,EAAE;YACpC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,MAAK;gBACjC,IAAI,CAAC,KAAK,EAAE,CAAC;AACb,gBAAA,OAAO,IAAI,CAAC;AACd,aAAC,CAAC;AACH,SAAA;AAED,QAAA,UAAU,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,CAAC;KAC1D;IAED,KAAK,GAAA;AACH,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;KACxB;;sFA1BU,mBAAmB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,CAAA,CAAA,EAAA,CAAA;sEAAnB,mBAAmB,EAAA,SAAA,EAAA,CAAA,CAAA,oBAAA,CAAA,CAAA,EAAA,SAAA,EAAA,SAAA,yBAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;uBACnB,WAAW,EAAA,CAAA,CAAA,CAAA;;;;AAJX,KAAA,EAAA,EAAA,OAAA,EAAA,EAAA,UAAA,EAAA,OAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAAA,CAAC,UAAU,CAAC,CAAA,CAAA,EAAA,kBAAA,EAAAC,KAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,KAAA,EAAA,6BAAA,EAAA,CAAA,EAAA,SAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,4BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;;QDdzB,EAGc,CAAA,UAAA,CAAA,CAAA,EAAA,0CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,aAAA,CAAA,CAAA;QAEd,EAEe,CAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;;QADD,EAAmB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAAnB,EAAmB,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,OAAA,CAAA,CAAA;;uFCWpB,mBAAmB,EAAA,CAAA;cAN/B,SAAS;AACE,QAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,oBAAoB,aAEnB,CAAC,UAAU,CAAC,EACN,eAAA,EAAA,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,kLAAA,EAAA,CAAA;6DAGL,QAAQ,EAAA,CAAA;kBAAjD,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;YACvB,UAAU,EAAA,CAAA;kBAA1B,MAAM;mBAAC,OAAO,CAAA;;;MCJJ,gBAAgB,CAAA;;gFAAhB,gBAAgB,GAAA,CAAA,EAAA,CAAA;kEAAhB,gBAAgB,EAAA,CAAA,CAAA;sEAHzB,cAAc,CAAA,EAAA,CAAA,CAAA;uFAGL,gBAAgB,EAAA,CAAA;cAX5B,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,mBAAmB;AACpB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,mBAAmB;AACpB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,cAAc;AACf,iBAAA;AACF,aAAA,CAAA;;AACY,CAAA,YAAA,EAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,gBAAgB,EATzB,EAAA,YAAA,EAAA,CAAA,mBAAmB,CAMnB,EAAA,OAAA,EAAA,CAAA,cAAc,aAHd,mBAAmB,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;MCOV,oBAAoB,CAAA;IAM/B,WACU,CAAA,UAAsB,EACtB,QAAmB,EAAA;QADnB,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;QACtB,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAW;QAJpB,IAAS,CAAA,SAAA,GAAG,IAAI,CAAC;QAMxB,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KACpC;AAED,IAAA,WAAW,CAAC,CAAgB,EAAA;QAC1B,IAAI,CAAC,CAAC,SAAS,EAAE;YACf,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACpC,SAAA;AAED,QAAA,IAAI,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE;AACvB,YAAA,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAChE,MAAM,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACvC,YAAA,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;AAC3C,YAAA,IAAI,CAAC,GAAG,CAAC,MAAK;AACZ,gBAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,MAAM,GAAG,IAAI,CAAC,CAAC;AACnE,gBAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;gBAC7D,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;AACjD,aAAC,CAAC,CAAC;AAEJ,SAAA;KAEF;;AAGO,IAAA,UAAU,CAAC,OAAoB,EAAA;QACrC,IAAI,IAAI,GAAG,OAAO,CAAC;AACnB,QAAA,MAAM,MAAM,GAAG,CAAG,EAAA,WAAW,MAAM,CAAC;AACpC,QAAA,OAAO,IAAI,EAAE;AACX,YAAA,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;AACrD,gBAAA,OAAO,IAAI,CAAC,qBAAqB,EAAE,CAAC;AACrC,aAAA;AAED,YAAA,IAAI,GAAG,IAAI,CAAC,UAAyB,CAAC;AACvC,SAAA;AAED,QAAA,OAAO,IAAI,CAAC,qBAAqB,EAAE,CAAC;KACrC;;wFA7CU,oBAAoB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,SAAA,CAAA,CAAA,CAAA,EAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,iBAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,IAAA,EAAA,oBAAoB,EAHpB,SAAA,EAAA,CAAA,CAAA,EAAA,EAAA,gBAAA,EAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,SAAA,EAAA,WAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAAA,CAAC,UAAU,EAAE,mBAAmB,CAAC,CAAA,EAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,CAAA,CAAA;uFAGjC,oBAAoB,EAAA,CAAA;cALhC,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,kBAAkB;AAC5B,gBAAA,SAAS,EAAE,CAAC,UAAU,EAAE,mBAAmB,CAAC;AAC7C,aAAA,CAAA;qFAKU,IAAI,EAAA,CAAA;kBAAZ,KAAK;YACG,SAAS,EAAA,CAAA;kBAAjB,KAAK;;;;IClBN,EAIsB,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;IAErB,EAEe,CAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;IAChB,EAAM,CAAA,YAAA,EAAA,CAAA;;;AANL,IAAA,EAAA,CAAA,UAAA,CAAA,WAAA,EAAA,MAAA,CAAA,SAAA,CAAuB,CAAA,MAAA,EAAA,MAAA,CAAA,WAAA,CAAA,CAAA;IAInB,EAAmB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAnB,EAAmB,CAAA,UAAA,CAAA,SAAA,EAAA,MAAA,CAAA,OAAA,CAAA,CAAA;;;IAPxB,EASM,CAAA,UAAA,CAAA,CAAA,EAAA,iDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;;;IARJ,EAAiB,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,WAAA,CAAA,CAAA;;MCcR,oBAAoB,CAAA;AAQ/B,IAAA,WAAA,CACU,MAAkB,EAClB,EAAqB,EACrB,MAAsB,EAAA;QAFtB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;QAClB,IAAE,CAAA,EAAA,GAAF,EAAE,CAAmB;QACrB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAgB;AARhC,QAAA,IAAA,CAAA,OAAO,GAAyB;AAC9B,YAAA,SAAS,EAAE,IAAI;SAChB,CAAC;KAOG;IAEL,QAAQ,GAAA;QACN,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;AAE9C,QAAA,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC;aACxB,SAAS,CAAC,CAAC,IAAG;AACb,YAAA,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,MAAM,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,OAAO,EAAE;gBAC3D,OAAO;AACR,aAAA;AAED,YAAA,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE;gBAClB,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC;AACjD,gBAAA,MAAM,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;AAEvD,gBAAA,IAAI,OAAO,CAAC,KAAK,EAAE,EAAE;oBACnB,IAAI,CAAC,OAAO,GAAG;AACb,wBAAA,SAAS,EAAE,OAAO,CAAC,KAAK,EAAE;qBAC3B,CAAC;AACF,oBAAA,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC;oBACnC,IAAI,CAAC,eAAe,EAAE,CAAC;AACxB,iBAAA;AAEF,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AACzB,aAAA;YACD,IAAI,CAAC,UAAU,EAAE,CAAC;AACpB,SAAC,CAAC,CAAC;KACN;IAEO,eAAe,GAAA;QACrB,MAAM,YAAY,GAAG,SAAS,CAAC;AAC/B,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;QAChC,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE;AACrC,YAAA,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;AACtC,SAAA;AAED,QAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;KACnC;IAEO,UAAU,GAAA;;AAEhB,QAAA,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;AACvB,QAAA,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;AACxB,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;KACpB;;wFAzDU,oBAAoB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,cAAA,CAAA,CAAA,CAAA,EAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,iBAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,IAAA,EAAA,oBAAoB,EAJpB,SAAA,EAAA,CAAA,CAAA,qBAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,SAAA,EAAA,WAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAAA,CAAC,UAAU,EAAE,mBAAmB,CAAC,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,KAAA,EAAA,SAAA,CAAA,EAAA,CAAA,OAAA,EAAA,iCAAA,EAAA,gBAAA,EAAA,EAAA,EAAA,CAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,CAAA,EAAA,qBAAA,EAAA,aAAA,EAAA,CAAA,EAAA,WAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,EAAA,4BAAA,EAAA,CAAA,EAAA,SAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,6BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QDb9C,EAAc,CAAA,cAAA,CAAA,CAAA,EAAA,cAAA,CAAA,CAAA;QACb,EAWc,CAAA,UAAA,CAAA,CAAA,EAAA,2CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,CAAA,CAAA,CAAA;QACf,EAAe,CAAA,YAAA,EAAA,CAAA;;uFCIF,oBAAoB,EAAA,CAAA;cAPhC,SAAS;2BACE,qBAAqB,EAAA,SAAA,EAEpB,CAAC,UAAU,EAAE,mBAAmB,CAAC,EAAA,eAAA,EAC3B,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,gYAAA,EAAA,CAAA;0HAItC,SAAS,EAAA,CAAA;kBAAjB,KAAK;;;MCGK,iBAAiB,CAAA;;kFAAjB,iBAAiB,GAAA,CAAA,EAAA,CAAA;mEAAjB,iBAAiB,EAAA,CAAA,CAAA;uEAL1B,YAAY;QACZ,cAAc;QACd,WAAW,CAAA,EAAA,CAAA,CAAA;uFAGF,iBAAiB,EAAA,CAAA;cAf7B,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,oBAAoB;oBACpB,oBAAoB;AACrB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,oBAAoB;oBACpB,oBAAoB;AACrB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,YAAY;oBACZ,cAAc;oBACd,WAAW;AACZ,iBAAA;AACF,aAAA,CAAA;;AACY,CAAA,YAAA,EAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,iBAAiB,mBAb1B,oBAAoB;AACpB,QAAA,oBAAoB,aAOpB,YAAY;QACZ,cAAc;AACd,QAAA,WAAW,aANX,oBAAoB;QACpB,oBAAoB,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;MCRX,gBAAgB,CAAA;AAC3B,IAAA,WAAA,CACY,MAAkB,EAAA;AAE5B,QAAA,IAAI,MAAM,EAAE;AACV,YAAA,IAAI,uBAAuB,CAAC,MAAM,CAAC,CAAC;AACrC,SAAA;KACF;;gFAPU,gBAAgB,EAAA,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,UAAA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA;AAAhB,gBAAA,CAAA,KAAA,iBAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,KAAA,EAAA,gBAAgB,WAAhB,gBAAgB,CAAA,IAAA,EAAA,CAAA,CAAA;uFAAhB,gBAAgB,EAAA,CAAA;cAD5B,UAAU;;sBAGR,QAAQ;;;ACSX,MAAM,mBAAmB,GAAG,oBAAoB,CAAC;MAEpC,WAAW,CAAA;AAKtB,IAAA,WAAA,CAAmB,IAAyB,EAAA;QAAzB,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAqB;KAC3C;AALD,IAAA,IAAI,IAAI,GAAA;AACN,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;KAC3B;AAIF,CAAA;MAYY,sBAAsB,CAAA;IAcjC,WACS,CAAA,gBAAkC,EACjC,MAAkB,EAClB,IAAY,EACZ,EAAqB,EACrB,aAA4B,EAAA;QAJ7B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QACjC,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;QAClB,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAQ;QACZ,IAAE,CAAA,EAAA,GAAF,EAAE,CAAmB;QACrB,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAlB9B,IAAO,CAAA,OAAA,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;AAE9C,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,YAAY,EAAO,CAAC;AACtC,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,YAAY,EAAO,CAAC;KAiBvD;AATD,IAAA,IAA2B,yBAAyB,CAAC,YAAqB,EAAA,EAAI,IAAI,CAAC,OAAO,CAAC,EAAE,YAAY,EAAE,CAAC,CAAC,EAAE;IAW/G,IAAI,GAAA;AACF,QAAA,OAAO,EAAE,SAAS,EAAE,IAAI,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC;KAC/D;IAED,WAAW,GAAA;AACT,QAAA,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;AAC9B,QAAA,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KACjC;IAED,QAAQ,GAAA;AACN,QAAA,MAAM,OAAO,GAAG;AACd,YAAA,IAAI,EAAE,mBAAmB;SAC1B,CAAC;QAEF,MAAM,aAAa,GAAG,IAAI,mBAAmB,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AACpE,QAAA,aAAa,CAAC,WAAW,CAAC,EAAE,CAAC,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC;AAC5D,QAAA,aAAa,CAAC,WAAW,CAAC,EAAE,CAAC,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC;AAC5D,QAAA,aAAa,CAAC,SAAS,CAAC,EAAE,CAAC,MAAK;AAC9B,YAAA,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;AACvB,YAAA,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACtB,SAAC,CAAC,CAAC;AAEH,QAAA,IAAI,CAAC,OAAO,GAAG,EAAE,SAAS,EAAE,aAAa,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;KAC3D;;4FA9CU,sBAAsB,EAAA,EAAA,CAAA,iBAAA,CAAAC,gBAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAAC,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAAA,EAAA,CAAA,aAAA,CAAA,CAAA,CAAA,EAAA,CAAA;AAAtB,sBAAA,CAAA,IAAA,iBAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,IAAA,EAAA,sBAAsB,EAPtB,SAAA,EAAA,CAAA,CAAA,uBAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,yBAAA,EAAA,CAAA,cAAA,EAAA,2BAAA,CAAA,EAAA,EAAA,OAAA,EAAA,EAAA,WAAA,EAAA,QAAA,EAAA,WAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAAA;YACT,gBAAgB;YAChB,UAAU;YACV,aAAa;AACd,SAAA,CAAA,EAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,KAAA,EAAA,yBAAA,EAAA,CAAA,EAAA,SAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,+BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QClCH,EAA+E,CAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;;QAAnC,EAAmB,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,OAAA,CAAA,CAAA;;uFDqClD,sBAAsB,EAAA,CAAA;cAVlC,SAAS;AACE,QAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,uBAAuB,EAEtB,SAAA,EAAA;oBACT,gBAAgB;oBAChB,UAAU;oBACV,aAAa;iBACd,EACgB,eAAA,EAAA,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,uFAAA,EAAA,CAAA;0KAK7B,WAAW,EAAA,CAAA;kBAA5B,MAAM;mBAAC,QAAQ,CAAA;YACE,WAAW,EAAA,CAAA;kBAA5B,MAAM;mBAAC,QAAQ,CAAA;YAQW,yBAAyB,EAAA,CAAA;kBAAnD,KAAK;mBAAC,cAAc,CAAA;;;ME/BV,mBAAmB,CAAA;AAC9B,IAAA,WAAA,CAAY,YAA8B,EAAA;AACxC,QAAA,YAAY,CAAC,QAAQ,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC;KAC5D;;sFAHU,mBAAmB,EAAA,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,gBAAA,CAAA,CAAA,CAAA,EAAA,CAAA;qEAAnB,mBAAmB,EAAA,CAAA,CAAA;yEAV5B,WAAW;QACX,cAAc,CAAA,EAAA,CAAA,CAAA;uFASL,mBAAmB,EAAA,CAAA;cAZ/B,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,OAAO,EAAE;oBACP,WAAW;oBACX,cAAc;AACf,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,sBAAsB;AACvB,iBAAA;AACD,gBAAA,YAAY,EAAE;oBACZ,sBAAsB;AACvB,iBAAA;AACF,aAAA,CAAA;;wFACY,mBAAmB,EAAA,EAAA,YAAA,EAAA,CAH5B,sBAAsB,CAAA,EAAA,OAAA,EAAA,CAPtB,WAAW;AACX,QAAA,cAAc,aAGd,sBAAsB,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;MCLb,6BAA6B,CAAA;;0GAA7B,6BAA6B,GAAA,CAAA,EAAA,CAAA;gFAA7B,6BAA6B,EAAA,SAAA,EAAA,CAAA,CAAA,+BAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,KAAA,EAAA,wCAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,sCAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QCP1C,EAA0E,CAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;;uFDO7D,6BAA6B,EAAA,CAAA;cALzC,SAAS;2BACE,+BAA+B,EAAA,eAAA,EAExB,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,gFAAA,EAAA,CAAA;;;MEUpC,0BAA0B,CAAA;;oGAA1B,0BAA0B,GAAA,CAAA,EAAA,CAAA;4EAA1B,0BAA0B,EAAA,CAAA,CAAA;gFATnC,cAAc,CAAA,EAAA,CAAA,CAAA;uFASL,0BAA0B,EAAA,CAAA;cAXtC,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,OAAO,EAAE;oBACP,cAAc;AACf,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,6BAA6B;AAC9B,iBAAA;AACD,gBAAA,YAAY,EAAE;oBACZ,6BAA6B;AAC9B,iBAAA;AACF,aAAA,CAAA;;AACY,CAAA,YAAA,EAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,0BAA0B,EAHnC,EAAA,YAAA,EAAA,CAAA,6BAA6B,CAN7B,EAAA,OAAA,EAAA,CAAA,cAAc,aAGd,6BAA6B,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;MCKpB,uBAAuB,CAAA;AALpC,IAAA,WAAA,GAAA;AAUY,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,YAAY,EAAE,CAAC;;AAG9C,QAAA,IAAA,CAAA,OAAO,GAA2C;AAChD,YAAA,SAAS,EAAE,IAAI;SAChB,CAAC;AAaH,KAAA;AAXC,IAAA,IAAI,QAAQ,GAAA;QACV,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;AAED,IAAA,MAAM,CAAC,IAAY,EAAA;AACjB,QAAA,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KACtB;IAED,cAAc,GAAA;AACZ,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACjC;;8FAtBU,uBAAuB,GAAA,CAAA,EAAA,CAAA;0EAAvB,uBAAuB,EAAA,SAAA,EAAA,CAAA,CAAA,yBAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,QAAA,EAAA,UAAA,EAAA,EAAA,OAAA,EAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,KAAA,EAAA,kCAAA,EAAA,CAAA,EAAA,SAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,gCAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QCdpC,EAEe,CAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;;QADD,EAAmB,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,OAAA,CAAA,CAAA;;uFDapB,uBAAuB,EAAA,CAAA;cALnC,SAAS;2BACE,yBAAyB,EAAA,eAAA,EAElB,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,iHAAA,EAAA,CAAA;gBAGtC,MAAM,EAAA,CAAA;kBAAd,KAAK;YAEG,EAAE,EAAA,CAAA;kBAAV,KAAK;YACG,QAAQ,EAAA,CAAA;kBAAhB,KAAK;YACI,cAAc,EAAA,CAAA;kBAAvB,MAAM;;;MEeI,qBAAqB,CAAA;IA2BhC,WACS,CAAA,gBAAkC,EACjC,MAAkB,EAClB,OAAuB,EACvB,KAAW,EACX,EAAqB,EACrB,eAAgC,EAAA;QALjC,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QACjC,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;QAClB,IAAO,CAAA,OAAA,GAAP,OAAO,CAAgB;QACvB,IAAK,CAAA,KAAA,GAAL,KAAK,CAAM;QACX,IAAE,CAAA,EAAA,GAAF,EAAE,CAAmB;QACrB,IAAe,CAAA,eAAA,GAAf,eAAe,CAAiB;QA7BjC,IAAM,CAAA,MAAA,GAAG,EAAE,CAAC;AAEH,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,YAAY,EAAO,CAAC;AACtC,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,YAAY,EAAO,CAAC;KA4BvD;AAnBD,IAAA,IAAI,SAAS,GAAA;AACX,QAAA,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;AAC9B,QAAA,OAAO,KAAK;AACT,aAAA,MAAM,EAAE;AACR,aAAA,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACjC;AAED,IAAA,IAAI,YAAY,GAAA;QACd,OAAO,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;KACpD;IAYD,QAAQ,GAAA;AACN,QAAA,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;AAC9B,QAAA,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;AAExB,QAAA,MAAM,OAAO,GAAG,EAAE,MAAM,EAAE,CAAC;QAC3B,MAAM,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;QACtD,MAAM,kBAAkB,GAAG,IAAI,kBAAkB,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AAExE,QAAA,kBAAkB,CAAC,WAAW,CAAC,EAAE,CAAC,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC;AACjE,QAAA,kBAAkB,CAAC,WAAW,CAAC,EAAE,CAAC,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC;AAEjE,QAAA,MAAM,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;YAC1C,IAAI,EAAE,CAAC,IAAG;AACR,gBAAA,CAAC,EAAE,CAAC;AAEJ,gBAAA,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;AACvB,gBAAA,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;aACzB;AACD,YAAA,SAAS,EAAE,YAAY,CAAC,KAAK,EAAE,CAAC,SAAS;YACzC,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,KAAI;AACvB,gBAAA,MAAM,WAAW,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;gBACnC,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;;AAE1C,gBAAA,MAAM,KAAK,GAAG,kBAAkB,CAAC,KAAK,CAAC;AACvC,gBAAA,IAAI,MAAM,CAAC,GAAG,IAAI,WAAW,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;AACvD,oBAAA,MAAM,UAAU,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;oBAClC,MAAM,MAAM,GAAG,WAAW;AACvB,yBAAA,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE;wBACjB,IAAI;wBACJ,IAAI;wBACJ,KAAK,EAAE,kBAAkB,CAAC,QAAQ;AAClC,wBAAA,MAAM,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM;;AAGxB,wBAAA,MAAM,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM;AACzB,qBAAA,CAAC,CAAC;AAEL,oBAAA,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;oBAChC,KAAK,CAAC,GAAG,EAAE,CAAC;AACZ,oBAAA,KAAK,CAAC,IAAI;yBACP,IAAI,CAAC,IAAI,IAAG;AACX,wBAAA,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;wBACpB,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;AAC5D,wBAAA,UAAU,EAAE,CAAC;AACf,qBAAC,CAAC;yBACD,KAAK,CAAC,UAAU,CAAC,CAAC;AACtB,iBAAA;AAAM,qBAAA;AACL,oBAAA,MAAM,UAAU,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;oBAClC,MAAM,OAAO,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,aAAa,EAAE,CAAC,MAAM,CAAC;oBACtD,IAAI;AACF,wBAAA,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;4BACjB,MAAM,MAAM,GAAG,KAAK,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC;AAClD,4BAAA,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;AAEhC,4BAAA,MAAM,WAAW,GAAG,MAAM,EAAE,CAAC;AAC7B,4BAAA,KAAK,CAAC,WAAW,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;AAEvC,4BAAA,IAAI,MAAa,CAAC;AAClB,4BAAA,IAAI,kBAAkB,CAAC,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE;gCAC9C,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAIC,UAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;AACtE,6BAAA;AAAM,iCAAA;gCACL,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;AAC5D,6BAAA;AAED,4BAAA,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;AAChC,4BAAA,MAAM,cAAc,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;;AAG3D,4BAAA,MAAM,MAAM,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,WAAW,EAAE,CAAC;4BAChD,MAAM,aAAa,GAAG,MAAM;kCACxB,cAAc,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,WAAW,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;kCACvE,cAAc,CAAC;4BAEnB,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AACtD,4BAAA,kBAAkB,CAAC,KAAK,GAAG,aAAa,CAAC;AACzC,4BAAA,kBAAkB,CAAC,SAAS;AAC1B,gCAAA,cAAc,CAAC,MAAM,KAAK,UAAU,CAAC,MAAM;AAC3C,qCAAC,CAAC,MAAM,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;AAC5D,yBAAA;wBAED,CAAC,CAAC,OAAO,CAAC,kBAAkB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AAC5C,qBAAA;AAAS,4BAAA;AACR,wBAAA,UAAU,EAAE,CAAC;AACd,qBAAA;AACF,iBAAA;aACF;AACF,SAAA,CAAC,CAAC;AAEH,QAAA,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QAErC,IAAI,CAAC,OAAO,GAAG;AACb,YAAA,SAAS,EAAE,kBAAkB;AAC7B,YAAA,MAAM,EAAE,IAAI;AACZ,YAAA,OAAO,EAAE,cAAc;SACxB,CAAC;KACH;IAED,KAAK,GAAA;QACH,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,GAAG,EAAE,CAAC;AAClC,QAAA,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;KACvC;IAED,KAAK,GAAA;AACH,QAAA,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;KACxC;AAED,IAAA,sBAAsB,CAAC,EAAU,EAAA;QAC/B,MAAM,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;AACxC,QAAA,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;YACtB,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AAClC,gBAAA,OAAO,GAAG,CAAC;AACZ,aAAA;AACF,SAAA;QAED,MAAM,IAAI,SAAS,CACjB,yBAAyB,EACzB,CAAuC,oCAAA,EAAA,EAAE,CAAe,aAAA,CAAA,CACzD,CAAC;KACH;AAEO,IAAA,iBAAiB,CAAC,EAAU,EAAA;QAClC,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;QAClC,MAAM,MAAM,GAAG,sBAAsB,CAAC;AAEtC,QAAA,MAAM,IAAI,GAAG;AACX,YAAA,CAAA,EAAG,MAAM,CAAI,CAAA,EAAA,IAAI,QAAQ,GAAG,CAAA,CAAA,EAAI,EAAE,CAAW,SAAA,CAAA;AAC7C,YAAA,CAAA,EAAG,MAAM,CAAA,KAAA,EAAQ,GAAG,CAAA,CAAA,EAAI,EAAE,CAAW,SAAA,CAAA;YACrC,CAAG,EAAA,MAAM,CAAQ,KAAA,EAAA,GAAG,CAAW,SAAA,CAAA;AAC/B,YAAA,CAAA,EAAG,MAAM,CAAA,CAAA,EAAI,IAAI,CAAA,CAAA,EAAI,EAAE,CAAW,SAAA,CAAA;YAClC,CAAG,EAAA,MAAM,CAAI,CAAA,EAAA,IAAI,CAAW,SAAA,CAAA;YAC5B,CAAG,EAAA,MAAM,CAAI,CAAA,EAAA,EAAE,CAAW,SAAA,CAAA;SAC3B,CAAC;AAEF,QAAA,QAAQ,EAAE;AACR,YAAA,KAAK,SAAS,CAAC;AACf,YAAA,KAAK,YAAY,CAAC;AAClB,YAAA,KAAK,QAAQ,CAAC;YACd,KAAK,WAAW,EAAE;gBAChB,IAAI,CAAC,IAAI,CAAC,CAAG,EAAA,MAAM,CAAI,CAAA,EAAA,IAAI,CAAQ,KAAA,EAAA,GAAG,CAAiB,eAAA,CAAA,CAAC,CAAC;gBACzD,IAAI,CAAC,IAAI,CAAC,CAAA,EAAG,MAAM,CAAI,CAAA,EAAA,IAAI,CAAiB,eAAA,CAAA,CAAC,CAAC;AAC9C,gBAAA,IAAI,CAAC,IAAI,CAAC,GAAG,MAAM,CAAA,eAAA,CAAiB,CAAC,CAAC;gBACtC,MAAM;AACP,aAAA;AACD,YAAA,KAAK,MAAM,CAAC;AACZ,YAAA,KAAK,SAAS,CAAC;AACf,YAAA,KAAK,YAAY,CAAC;AAClB,YAAA,KAAK,UAAU,CAAC;AAChB,YAAA,KAAK,UAAU,CAAC;AAChB,YAAA,KAAK,kBAAkB,CAAC;AACxB,YAAA,KAAK,aAAa,CAAC;YACnB,KAAK,qBAAqB,EAAE;gBAC1B,IAAI,CAAC,IAAI,CAAC,CAAG,EAAA,MAAM,CAAI,CAAA,EAAA,IAAI,CAAQ,KAAA,EAAA,GAAG,CAAiB,eAAA,CAAA,CAAC,CAAC;gBACzD,IAAI,CAAC,IAAI,CAAC,CAAA,EAAG,MAAM,CAAI,CAAA,EAAA,IAAI,CAAiB,eAAA,CAAA,CAAC,CAAC;AAC9C,gBAAA,IAAI,CAAC,IAAI,CAAC,GAAG,MAAM,CAAA,eAAA,CAAiB,CAAC,CAAC;gBACtC,MAAM;AACP,aAAA;AACF,SAAA;AAED,QAAA,IAAI,CAAC,IAAI,CAAC,GAAG,MAAM,CAAA,kBAAA,CAAoB,CAAC,CAAC;AACzC,QAAA,OAAO,IAAI,CAAC;KACb;;0FAtMU,qBAAqB,EAAA,EAAA,CAAA,iBAAA,CAAAF,gBAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAAC,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAAA,EAAA,CAAA,eAAA,CAAA,CAAA,CAAA,EAAA,CAAA;AAArB,qBAAA,CAAA,IAAA,iBAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,IAAA,EAAA,qBAAqB,EAHrB,SAAA,EAAA,CAAA,CAAA,sBAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,OAAA,EAAA,EAAA,WAAA,EAAA,QAAA,EAAA,WAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAAA,CAAC,gBAAgB,EAAE,UAAU,CAAC,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,KAAA,EAAA,+BAAA,EAAA,CAAA,EAAA,SAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,8BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QC/B3C,EAEe,CAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;;QADD,EAAmB,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,OAAA,CAAA,CAAA;;uFDiCpB,qBAAqB,EAAA,CAAA;cANjC,SAAS;2BACE,sBAAsB,EAAA,SAAA,EAErB,CAAC,gBAAgB,EAAE,UAAU,CAAC,EAAA,eAAA,EACxB,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,8GAAA,EAAA,CAAA;uMAKtC,MAAM,EAAA,CAAA;kBAAd,KAAK;YACG,MAAM,EAAA,CAAA;kBAAd,KAAK;YAEY,WAAW,EAAA,CAAA;kBAA5B,MAAM;mBAAC,QAAQ,CAAA;YACE,WAAW,EAAA,CAAA;kBAA5B,MAAM;mBAAC,QAAQ,CAAA;;;MEjCL,6BAA6B,CAAA;AAIxC,IAAA,WAAA,CACS,WAAgC,EAAA;QAAhC,IAAW,CAAA,WAAA,GAAX,WAAW,CAAqB;KAExC;;0GAPU,6BAA6B,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,mBAAA,CAAA,CAAA,CAAA,EAAA,CAAA;gFAA7B,6BAA6B,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAA,gCAAA,EAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,MAAA,EAAA,CAAA,gCAAA,EAAA,QAAA,CAAA,EAAA,MAAA,EAAA,CAAA,6BAAA,EAAA,QAAA,CAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAF7B,CAAC,mBAAmB,CAAC,CAAA,CAAA,EAAA,CAAA,CAAA;uFAErB,6BAA6B,EAAA,CAAA;cAJzC,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,kCAAkC;gBAC5C,SAAS,EAAE,CAAC,mBAAmB,CAAC;AACjC,aAAA,CAAA;sEAE0C,MAAM,EAAA,CAAA;kBAA9C,KAAK;mBAAC,gCAAgC,CAAA;YACD,MAAM,EAAA,CAAA;kBAA3C,KAAK;mBAAC,6BAA6B,CAAA;;;MCJzB,yBAAyB,CAAA;IAKpC,WACU,CAAA,gBAAkC,EAClC,QAAuC,EAAA;QADvC,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAClC,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAA+B;QAJjD,IAAS,CAAA,SAAA,GAAG,IAAI,CAAC;KAMhB;IAED,QAAQ,GAAA;AACN,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;AAC/B,QAAA,MAAM,IAAI,GAAG,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,eAAe,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC1E,QAAA,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;KACnC;;kGAfU,yBAAyB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAAE,6BAAA,CAAA,CAAA,CAAA,EAAA,CAAA;4EAAzB,yBAAyB,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAA,2BAAA,EAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,KAAA,EAAA,CAAA,2BAAA,EAAA,OAAA,CAAA,EAAA,EAAA,CAAA,CAAA;uFAAzB,yBAAyB,EAAA,CAAA;cAHrC,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,6BAA6B;AACxC,aAAA,CAAA;4GAEqC,KAAK,EAAA,CAAA;kBAAxC,KAAK;mBAAC,2BAA2B,CAAA;;;MCSvB,4BAA4B,CAAA;IAQvC,WACU,CAAA,MAAkB,EAClB,OAAmB,EAAA;QADnB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;QAClB,IAAO,CAAA,OAAA,GAAP,OAAO,CAAY;;AAN7B,QAAA,IAAA,CAAA,OAAO,GAAgD;AACrD,YAAA,SAAS,EAAE,IAAI;SAChB,CAAC;KAMD;IAED,QAAQ,GAAA;QACN,MAAM,EAAE,KAAK,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;AAE5C,QAAA,YAAY,CAAC,KAAK,CAAC,aAAa,CAAC;aAC9B,SAAS,CAAC,CAAC,IAAG;AACb,YAAA,IAAI,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;AACtB,gBAAA,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;AAC5C,oBAAA,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA,EAAG,WAAW,CAAA,OAAA,CAAS,CAAC,CAAC;AACnE,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA,EAAG,WAAW,CAAA,OAAA,CAAS,CAAC,CAAC;AACtE,iBAAA;AACF,aAAA;AACH,SAAC,CAAC,CAAC;KACN;;wGA3BU,4BAA4B,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,CAAA,CAAA,EAAA,CAAA;+EAA5B,4BAA4B,EAAA,SAAA,EAAA,CAAA,CAAA,8BAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAH5B,CAAC,UAAU,CAAC,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,KAAA,EAAA,uCAAA,EAAA,CAAA,EAAA,SAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,qCAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QCbzB,EAEe,CAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;;QADD,EAAmB,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,OAAA,CAAA,CAAA;;uFDepB,4BAA4B,EAAA,CAAA;cANxC,SAAS;AACE,QAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,8BAA8B,aAE7B,CAAC,UAAU,CAAC,EACN,eAAA,EAAA,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,sHAAA,EAAA,CAAA;sFAGtC,MAAM,EAAA,CAAA;kBAAd,KAAK;;;MEWK,kBAAkB,CAAA;AAC7B,IAAA,WAAA,CAAY,YAA8B,EAAA;AACxC,QAAA,YAAY,CAAC,QAAQ,CAAC,cAAc,EAAE,iBAAiB,CAAC,CAAC;KAC1D;;oFAHU,kBAAkB,EAAA,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,gBAAA,CAAA,CAAA,CAAA,EAAA,CAAA;oEAAlB,kBAAkB,EAAA,CAAA,CAAA;wEAH3B,cAAc,CAAA,EAAA,CAAA,CAAA;uFAGL,kBAAkB,EAAA,CAAA;cAnB9B,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,qBAAqB;oBACrB,4BAA4B;oBAC5B,uBAAuB;oBACvB,6BAA6B;oBAC7B,yBAAyB;AAC1B,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,qBAAqB;oBACrB,4BAA4B;oBAC5B,uBAAuB;oBACvB,6BAA6B;oBAC7B,yBAAyB;AAC1B,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,cAAc;AACf,iBAAA;AACF,aAAA,CAAA;;AACY,CAAA,YAAA,EAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,kBAAkB,mBAjB3B,qBAAqB;QACrB,4BAA4B;QAC5B,uBAAuB;QACvB,6BAA6B;QAC7B,yBAAyB,CAAA,EAAA,OAAA,EAAA,CAUzB,cAAc,CAAA,EAAA,OAAA,EAAA,CAPd,qBAAqB;QACrB,4BAA4B;QAC5B,uBAAuB;QACvB,6BAA6B;QAC7B,yBAAyB,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;;ICrBzB,EAAyB,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA;;;MCoBhB,mBAAmB,CAAA;AAS9B,IAAA,WAAA,CACU,MAAkB,EAClB,UAAsB,EACtB,IAAY,EAAA;QAFZ,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;QAClB,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;QACtB,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAQ;;AAPtB,QAAA,IAAA,CAAA,OAAO,GAAuC;AAC5C,YAAA,SAAS,EAAE,IAAI;SAChB,CAAC;KAOD;IAED,eAAe,GAAA;AACb,QAAA,MAAM,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC;QAC1C,MAAM,OAAO,GAAG,aAAa,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;QAC3D,MAAM,QAAQ,GAAG,aAAa,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QAE7D,MAAM,UAAU,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE;AACnD,YAAA,OAAO,EAAE,aAAa;YACtB,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,OAAO;YACP,QAAQ;AACT,SAAA,CAAC,CAAC;AAEH,QAAA,MAAM,QAAQ,GAAG,IAAI,aAAa,CAAC,aAAa,EAAE,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;AAC1E,QAAA,QAAQ,CAAC,EAAE,CAAC,OAAO,EAAE,MAAK;AACxB,YAAA,IAAI,UAAU,CAAC,KAAK,EAAE,EAAE;AACtB,gBAAA,IAAI,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACnC,aAAA;AACH,SAAC,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAC1B,QAAQ,CAAC,EAAE,CAAC,YAAY,EAAE,MAAM,UAAU,CAAC,UAAU,EAAE,CAAC,CACzD,CAAC;KACH;;sFAtCU,mBAAmB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA;sEAAnB,mBAAmB,EAAA,SAAA,EAAA,CAAA,CAAA,oBAAA,CAAA,CAAA,EAAA,SAAA,EAAA,SAAA,yBAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;uBACnB,WAAW,EAAA,CAAA,CAAA,CAAA;;;;AAJX,KAAA,EAAA,EAAA,MAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAAA,CAAC,UAAU,CAAC,CAAA,CAAA,EAAA,kBAAA,EAAAJ,KAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,KAAA,EAAA,6BAAA,EAAA,CAAA,EAAA,SAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,4BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;;QDlBzB,EAEc,CAAA,UAAA,CAAA,CAAA,EAAA,0CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,aAAA,CAAA,CAAA;QAEd,EAEe,CAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;;QADD,EAAmB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAAnB,EAAmB,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,OAAA,CAAA,CAAA;;uFCgBpB,mBAAmB,EAAA,CAAA;cAN/B,SAAS;AACE,QAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,oBAAoB,aAEnB,CAAC,UAAU,CAAC,EACN,eAAA,EAAA,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,4KAAA,EAAA,CAAA;2GAGL,QAAQ,EAAA,CAAA;kBAAjD,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;YAC/B,MAAM,EAAA,CAAA;kBAAd,KAAK;;;MCRK,gBAAgB,CAAA;;gFAAhB,gBAAgB,GAAA,CAAA,EAAA,CAAA;kEAAhB,gBAAgB,EAAA,CAAA,CAAA;sEAHzB,cAAc,CAAA,EAAA,CAAA,CAAA;uFAGL,gBAAgB,EAAA,CAAA;cAX5B,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,mBAAmB;AACpB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,mBAAmB;AACpB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,cAAc;AACf,iBAAA;AACF,aAAA,CAAA;;AACY,CAAA,YAAA,EAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,gBAAgB,EATzB,EAAA,YAAA,EAAA,CAAA,mBAAmB,CAMnB,EAAA,OAAA,EAAA,CAAA,cAAc,aAHd,mBAAmB,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;ACTvB;MAmBa,kBAAkB,CAAA;AAC7B,IAAA,WAAA,CACU,GAAyB,EACzB,OAAuB,EACvB,UAAe,EAAA;QAFf,IAAG,CAAA,GAAA,GAAH,GAAG,CAAsB;QACzB,IAAO,CAAA,OAAA,GAAP,OAAO,CAAgB;QACvB,IAAU,CAAA,UAAA,GAAV,UAAU,CAAK;KAExB;AAED,IAAA,MAAM,CAAC,QAAmB,EAAA;QACxB,OAAO,IAAI,CAAC,GAAG,CAAC,MACd,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,mBAAmB,CAAC,CACpE,CAAC;KACH;AAED,IAAA,MAAM,CAAC,QAAQ,EAAA;QACb,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;KACtC;AACF,CAAA;MAMY,gBAAgB,CAAA;AAW3B,IAAA,WAAA,CACU,UAAsB,EACtB,UAAsB,EACtB,IAAY,EACA,MAAkB,EAAA;QAH9B,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;QACtB,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;QACtB,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAQ;QACA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;QAdhC,IAAe,CAAA,eAAA,GAAG,KAAK,CAAC;QAKD,IAAY,CAAA,YAAA,GAAG,OAAO,CAAC;QAExB,IAAI,CAAA,IAAA,GAAwB,MAAM,CAAC;AAC/B,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,YAAY,EAAO,CAAC;KAQ1E;IAED,QAAQ,GAAA;AACN,QAAA,MAAM,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC;AAE1C,QAAA,IAAI,CAAC,UAAU,CAAC,MACd,aAAa;AACV,aAAA,gBAAgB,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAC7D,CAAC;KACH;IAED,SAAS,GAAA;AACP,QAAA,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YACzB,OAAO;AACR,SAAA;QAED,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,WAAW,EAAE,CAAC;AACpB,SAAA;KACF;AAED,IAAA,WAAW,CAAC,OAAsB,EAAA;QAChC,IAAI,OAAO,CAAC,OAAO,EAAE;YACnB,IAAI,CAAC,UAAU,EAAE,CAAC;YAElB,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,QAAQ,EAAE,CAAC;AACjB,aAAA;AACF,SAAA;KACF;IAED,eAAe,GAAA;QACb,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,WAAW,EAAE,CAAC;AACpB,SAAA;AAED,QAAA,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;KAC7B;IAEO,QAAQ,GAAA;AACd,QAAA,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC;AAErC,QAAA,IAAI,CAAC,UAAU,CAAC,GAAG,CACjB,OAAO;aACJ,eAAe;aACf,SAAS,CAAC,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC,CACvC,CAAC;AAEF,QAAA,IAAI,IAAI,CAAC,kBAAkB,IAAI,OAAO,CAAC,QAAQ,EAAE;YAC/C,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,EAAE;AACvC,gBAAA,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC9B,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;AAE7C,gBAAA,MAAM,WAAW,GAAG,IAAI,kBAAkB,CACxC,CAAC,IAAG;oBACF,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBAClC,IAAI,CAAC,YAAY,EAAE,CAAC;AACpB,oBAAA,OAAO,MAAM,CAAC;AAChB,iBAAC,EACD,OAAO,EACP,UAAU,CACX,CAAC;AAEF,gBAAA,IAAI,CAAC,UAAU,CAAC,GAAG,CACjB,QAAQ,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,CAAC,CAC1C,CAAC;AACH,aAAA;AAAM,iBAAA;AACL,gBAAA,MAAM,OAAO,GAAG,IAAI,cAAc,CAAC,CAAC,IAAG;AACrC,oBAAA,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBACnB,IAAI,CAAC,YAAY,EAAE,CAAC;iBACrB,EAAE,UAAU,CAAC,CAAC;gBAEf,MAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC,IAAI,kBAAkB,EAAE,CAAC,CAAC;AAExD,gBAAA,MAAM,OAAO,GAAG,CAAC,IAAG;AAClB,oBAAA,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACtB,iBAAC,CAAC;AAEF,gBAAA,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AAE9C,gBAAA,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAClB,QAAQ,CAAC,mBAAmB,CAAC,SAAS,EAAE,OAAO,CAAC,CACjD,CAAC;AAEF,gBAAA,IAAI,CAAC,UAAU,CAAC,GAAG,CACjB,QAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,CAAC,CACtC,CAAC;AACH,aAAA;AACF,SAAA;KACF;AAEO,IAAA,OAAO,CAAC,CAAc,EAAA;AAC5B,QAAA,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC;QACrC,MAAM,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,IAAI,CAAC;QACpD,IAAI,MAAM,IAAI,CAAC,EAAE;YACf,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,CAAC,CAAC,eAAe,EAAE,CAAC;AACrB,SAAA;QAED,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB;IAEO,YAAY,GAAA;AAClB,QAAA,MAAM,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC;AAC5B,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACrC,QAAA,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;KACrC;IAEO,UAAU,GAAA;AAChB,QAAA,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;KAC5B;IAEO,WAAW,GAAA;AACjB,QAAA,MAAM,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,aAA4B,CAAC;AACnE,QAAA,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE;YAC/B,OAAO;AACR,SAAA;AAED,QAAA,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC;QACrC,MAAM,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,IAAI,CAAC;AAC3D,QAAA,IAAI,UAAU,EAAE;AACd,YAAA,IAAI,aAAa,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE;AAC1C,gBAAA,aAAa,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;AAC1C,gBAAA,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;AACnD,aAAA;AACF,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,WAAW,CAAC,EAAE;AAC5C,gBAAA,aAAa,CAAC,YAAY,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;AAC/C,gBAAA,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;AAChD,aAAA;AACF,SAAA;KACF;AAEO,IAAA,UAAU,CAAI,CAAU,EAAA;QAC9B,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACzB,SAAA;QAED,OAAO,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;KACvC;;gFA5JU,gBAAgB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA;mEAAhB,gBAAgB,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAA,gBAAA,EAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,CAAA,gBAAA,EAAA,SAAA,CAAA,EAAA,UAAA,EAAA,CAAA,oBAAA,EAAA,YAAA,CAAA,EAAA,kBAAA,EAAA,CAAA,6BAAA,EAAA,oBAAA,CAAA,EAAA,YAAA,EAAA,CAAA,sBAAA,EAAA,cAAA,CAAA,EAAA,OAAA,EAAA,CAAA,yBAAA,EAAA,SAAA,CAAA,EAAA,IAAA,EAAA,CAAA,qBAAA,EAAA,MAAA,CAAA,EAAA,EAAA,OAAA,EAAA,EAAA,cAAA,EAAA,wBAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAFhB,CAAC,UAAU,CAAC,CAAA,EAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,CAAA,CAAA;uFAEZ,gBAAgB,EAAA,CAAA;cAJ5B,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,kBAAkB;gBAC5B,SAAS,EAAE,CAAC,UAAU,CAAC;AACxB,aAAA,CAAA;;sBAgBI,QAAQ;wBAZc,OAAO,EAAA,CAAA;kBAA/B,KAAK;mBAAC,gBAAgB,CAAA;YACM,UAAU,EAAA,CAAA;kBAAtC,KAAK;mBAAC,oBAAoB,CAAA;YACW,kBAAkB,EAAA,CAAA;kBAAvD,KAAK;mBAAC,6BAA6B,CAAA;YACL,YAAY,EAAA,CAAA;kBAA1C,KAAK;mBAAC,sBAAsB,CAAA;YACK,OAAO,EAAA,CAAA;kBAAxC,KAAK;mBAAC,yBAAyB,CAAA;YACF,IAAI,EAAA,CAAA;kBAAjC,KAAK;mBAAC,qBAAqB,CAAA;YACM,cAAc,EAAA,CAAA;kBAA/C,MAAM;mBAAC,wBAAwB,CAAA;;;MCxCrB,aAAa,CAAA;;0EAAb,aAAa,GAAA,CAAA,EAAA,CAAA;+DAAb,aAAa,EAAA,CAAA,CAAA;;uFAAb,aAAa,EAAA,CAAA;cARzB,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,gBAAgB;AACjB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,gBAAgB;AACjB,iBAAA;AACF,aAAA,CAAA;;wFACY,aAAa,EAAA,EAAA,YAAA,EAAA,CANtB,gBAAgB,CAAA,EAAA,OAAA,EAAA,CAGhB,gBAAgB,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;MCFP,WAAW,CAAA;AACtB,IAAA,WAAA,GAAA,GAAiB;IAEjB,SAAS,CAAC,KAAU,EAAE,IAAY,EAAA;AAChC,QAAA,MAAM,KAAK,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;AACjC,QAAA,MAAM,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;QAC5B,OAAO,MAAM,KAAK,IAAI,GAAG,KAAK,GAAG,MAAM,CAAC;KACzC;;sEAPU,WAAW,GAAA,CAAA,EAAA,CAAA;gFAAX,WAAW,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,CAAA;uFAAX,WAAW,EAAA,CAAA;cAHvB,IAAI;AAAC,QAAA,IAAA,EAAA,CAAA;AACJ,gBAAA,IAAI,EAAE,cAAc;AACrB,aAAA,CAAA;;;MCEY,YAAY,CAAA;AACvB,IAAA,WAAA,CAAoB,IAAoB,EAAA;QAApB,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAgB;KAAK;IAE7C,SAAS,CAAC,KAAU,EAAE,YAAqB,EAAE,OAAiB,EAAE,UAAgB,EAAE,MAAY,EAAA;QAC5F,IAAI;AACF,YAAA,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,YAAY,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;AAC9E,SAAA;AAAC,QAAA,OAAO,EAAE,EAAE;YACX,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,CAAC,OAAO,CAAC,CAAC;AACjC,YAAA,OAAO,KAAK,CAAC;AACd,SAAA;KACF;;wEAVU,YAAY,EAAA,EAAA,CAAA,iBAAA,CAAAK,IAAA,CAAA,YAAA,EAAA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA;kFAAZ,YAAY,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,CAAA;uFAAZ,YAAY,EAAA,CAAA;cAHxB,IAAI;AAAC,QAAA,IAAA,EAAA,CAAA;AACJ,gBAAA,IAAI,EAAE,eAAe;AACtB,aAAA,CAAA;;;MCUY,yBAAyB,CAAA;IASpC,WACU,CAAA,MAAkB,EAClB,aAA4B,EAAA;QAD5B,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;QAClB,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAV9B,IAAO,CAAA,OAAA,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC;KAYlE;AAND,IAAA,IAAyB,0BAA0B,CAAC,UAA2B,EAAA,EAAI,IAAI,CAAC,OAAO,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC,EAAE;IAQlH,WAAW,GAAA;AACT,QAAA,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;AAC9B,QAAA,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KACjC;IAED,QAAQ,GAAA;QACN,MAAM,EAAE,GAAG,IAAI,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACnD,IAAI,CAAC,OAAO,GAAG,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC;KAClC;;kGAvBU,yBAAyB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,aAAA,CAAA,CAAA,CAAA,EAAA,CAAA;AAAzB,yBAAA,CAAA,IAAA,iBAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,IAAA,EAAA,yBAAyB,EAHzB,SAAA,EAAA,CAAA,CAAA,0BAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,0BAAA,EAAA,CAAA,YAAA,EAAA,4BAAA,CAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAAA,CAAC,UAAU,EAAE,aAAa,CAAC,CAAA,EAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,SAAA,kCAAA,CAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,CAAA,EAAA,CAAA,CAAA;uFAG3B,yBAAyB,EAAA,CAAA;cANrC,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,0BAA0B;AACpC,gBAAA,QAAQ,EAAE,EAAE;AACZ,gBAAA,SAAS,EAAE,CAAC,UAAU,EAAE,aAAa,CAAC;gBACtC,eAAe,EAAE,uBAAuB,CAAC,MAAM;AAChD,aAAA,CAAA;yFAQ0B,0BAA0B,EAAA,CAAA;kBAAlD,KAAK;mBAAC,YAAY,CAAA;;;MCVR,sBAAsB,CAAA;AACjC,IAAA,WAAA,CAAY,YAA8B,EAAA;QACxC,YAAY;AACT,aAAA,QAAQ,CAAC,kBAAkB,EAAE,qBAAqB,CAAC,CAAC;KACxD;;4FAJU,sBAAsB,EAAA,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,gBAAA,CAAA,CAAA,CAAA,EAAA,CAAA;wEAAtB,sBAAsB,EAAA,CAAA,CAAA;;uFAAtB,sBAAsB,EAAA,CAAA;cARlC,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,yBAAyB;AAC1B,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,yBAAyB;AAC1B,iBAAA;AACF,aAAA,CAAA;;wFACY,sBAAsB,EAAA,EAAA,YAAA,EAAA,CAN/B,yBAAyB,CAAA,EAAA,OAAA,EAAA,CAGzB,yBAAyB,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;MCQhB,qBAAqB,CAAA;IAehC,WACU,CAAA,MAAkB,EAClB,IAAY,EAAA;QADZ,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;QAClB,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAQ;AAdZ,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,YAAY,EAAa,CAAC;KAgBrD;IAdD,IAAmB,IAAI,CAAC,KAAmB,EAAA;AACzC,QAAA,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AACxB,YAAA,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACvB,YAAA,IAAI,IAAI,EAAE;AACR,gBAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,IAAI,CAAC,KAAK,CAAC,CAAC;AACb,aAAA;AACF,SAAA;KACF;IAQD,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC;AACrB,YAAA,IAAI,EAAE;AACJ,gBAAA,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,KAClB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAK;AACjB,oBAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;oBACjB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AACvC,iBAAC,CAAC;gBACJ,GAAG,QAAQ,CAAC,IAAI;AACjB,aAAA;AACF,SAAA,EAAE,EAAE,MAAM,EAAE,eAAe,EAAE,CAAC,CAAC;KACjC;;0FAhCU,qBAAqB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA;wEAArB,qBAAqB,EAAA,SAAA,EAAA,CAAA,CAAA,sBAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAHrB,CAAC,UAAU,CAAC,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,SAAA,8BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,CAAA,EAAA,CAAA,CAAA;uFAGZ,qBAAqB,EAAA,CAAA;cANjC,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,sBAAsB;AAChC,gBAAA,QAAQ,EAAE,EAAE;gBACZ,SAAS,EAAE,CAAC,UAAU,CAAC;gBACvB,eAAe,EAAE,uBAAuB,CAAC,MAAM;AAChD,aAAA,CAAA;kFAIW,WAAW,EAAA,CAAA;kBAApB,MAAM;YAEY,IAAI,EAAA,CAAA;kBAAtB,KAAK;mBAAC,MAAM,CAAA;;;MCZF,kBAAkB,CAAA;;oFAAlB,kBAAkB,GAAA,CAAA,EAAA,CAAA;oEAAlB,kBAAkB,EAAA,CAAA,CAAA;;uFAAlB,kBAAkB,EAAA,CAAA;cAR9B,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,qBAAqB;AACtB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,qBAAqB;AACtB,iBAAA;AACF,aAAA,CAAA;;wFACY,kBAAkB,EAAA,EAAA,YAAA,EAAA,CAN3B,qBAAqB,CAAA,EAAA,OAAA,EAAA,CAGrB,qBAAqB,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;ACLzB,MAAM,SAAS,GAAG,GAAG,CAAC;MAKT,iBAAiB,CAAA;AAG5B,IAAA,WAAA,CAAoB,UAAsB,EAAA;QAAtB,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;KACzC;AAGD,IAAA,KAAK,CAAC,CAAgB,EAAA;AACpB,QAAA,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,OAAO;AACR,SAAA;AAED,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,aAAiC,CAAC;AAChE,QAAA,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,IAAI,EAAE,CAAC;QAChC,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACzC,IAAI,CAAC,QAAQ,EAAE;YACb,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,OAAO;AACR,SAAA;QAED,MAAM,IAAI,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;AAC3C,QAAA,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACtB,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC1B,CAAC,CAAC,cAAc,EAAE,CAAC;AACnB,gBAAA,KAAK,CAAC,KAAK,IAAI,SAAS,GAAG,IAAI,CAAC;gBAChC,OAAO;AACR,aAAA;AAED,YAAA,MAAM,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACvD,IAAI,YAAY,KAAK,SAAS,EAAE;gBAC9B,CAAC,CAAC,cAAc,EAAE,CAAC;AACnB,gBAAA,KAAK,CAAC,KAAK,IAAI,IAAI,GAAG,SAAS,CAAC;AACjC,aAAA;AACF,SAAA;KACF;AAEO,IAAA,OAAO,CAAC,IAAY,EAAA;AAC1B,QAAA,OAAO,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC9B;;kFAtCU,iBAAiB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,CAAA,CAAA,EAAA,CAAA;oEAAjB,iBAAiB,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAA,kBAAA,EAAA,EAAA,CAAA,CAAA,EAAA,YAAA,EAAA,SAAA,8BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;0GAAjB,GAAa,CAAA,KAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA,CAAA;;uFAAb,iBAAiB,EAAA,CAAA;cAH7B,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,oBAAoB;AAC/B,aAAA,CAAA;6DAE4B,IAAI,EAAA,CAAA;kBAA9B,KAAK;mBAAC,kBAAkB,CAAA;YAMzB,KAAK,EAAA,CAAA;kBADJ,YAAY;mBAAC,UAAU,EAAE,CAAC,QAAQ,CAAC,CAAA;;;MCVzB,WAAW,CAAA;AADxB,IAAA,WAAA,GAAA;AAEU,QAAA,IAAA,CAAA,UAAU,GAA+B,YAAY,CAAC,UAAU,CAAC,CAAC;AAsE3E,KAAA;IApEC,aAAa,CAAC,UAAyB,EAAE,MAAc,EAAA;QACrD,IAAI,CAAC,UAAU,EAAE;AACf,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;AAED,QAAA,IAAI,MAAM,CAAC,UAAU,CAAC,EAAE;AACtB,YAAA,OAAO,UAAkB,CAAC;AAC3B,SAAA;AAED,QAAA,IAAI,MAAM,EAAE;YACV,MAAM,YAAY,GAAG,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;YACtD,MAAM,eAAe,GAAI,UAAqB,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;YACtE,OAAO,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,YAAY,CAAC,CAAC;AAC1D,SAAA;AAED,QAAA,OAAO,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;KACpC;IAED,OAAO,CAAC,UAAyB,EAAE,MAAc,EAAA;QAC/C,IAAI,CAAC,UAAU,EAAE;AACf,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;QAED,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;QACtD,OAAO,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC;KAC3C;IAEO,aAAa,CAAC,IAAY,EAAE,MAAc,EAAA;QAChD,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,IAAI,GAAG,GAAG,EAAE,CAAC;QAEb,IAAI,MAAM,GAAG,CAAC,CAAC;AACf,QAAA,KAAK,MAAM,SAAS,IAAI,MAAM,EAAE;AAC9B,YAAA,QAAQ,SAAS;gBACf,KAAK,GAAG,EAAE;AACR,oBAAA,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AAC7B,oBAAA,IAAI,KAAK,EAAE;wBACT,IAAI,IAAI,KAAK,CAAC;AACf,qBAAA;oBACD,MAAM;AACP,iBAAA;gBACD,KAAK,GAAG,EAAE;AACR,oBAAA,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AAC7B,oBAAA,IAAI,KAAK,EAAE;wBACT,KAAK,IAAI,KAAK,CAAC;AAChB,qBAAA;oBACD,MAAM;AACP,iBAAA;gBACD,KAAK,GAAG,EAAE;AACR,oBAAA,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AAC7B,oBAAA,IAAI,KAAK,EAAE;wBACT,GAAG,IAAI,KAAK,CAAC;AACd,qBAAA;oBACD,MAAM;AACP,iBAAA;AACF,aAAA;AACF,SAAA;AAED,QAAA,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;AACzD,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;AAED,QAAA,KAAK,GAAG,KAAK,CAAC,MAAM,KAAK,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,KAAK,CAAC;AACjD,QAAA,GAAG,GAAG,GAAG,CAAC,MAAM,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAEzC,QAAA,OAAO,IAAI,CAAC,UAAU,CAAC,CAAG,EAAA,IAAI,CAAI,CAAA,EAAA,KAAK,CAAI,CAAA,EAAA,GAAG,CAAE,CAAA,CAAC,CAAC;KACnD;;sEAtEU,WAAW,GAAA,CAAA,EAAA,CAAA;AAAX,WAAA,CAAA,KAAA,iBAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,KAAA,EAAA,WAAW,WAAX,WAAW,CAAA,IAAA,EAAA,CAAA,CAAA;uFAAX,WAAW,EAAA,CAAA;cADvB,UAAU;;;MCIE,aAAa,CAAA;AAGxB,IAAA,WAAA,CACE,WAA6B,EAC7B,gBAAkC,EAC5B,WAAwB,EAAA;QAAxB,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;AALxB,QAAA,IAAA,CAAA,UAAU,GAA+B,YAAY,CAAC,MAAM,CAAC,CAAC;QAOpE,gBAAgB,CAAC,kBAAkB,CAAC,WAAW,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;KACvE;IAED,OAAO,CAAC,UAAyB,EAAE,MAAc,EAAA;QAC/C,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;KACrD;IAED,OAAO,CAAC,KAAoB,EAAE,MAAc,EAAA;AAC1C,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AAC3D,QAAA,IAAI,IAAI,EAAE;AACR,YAAA,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AAC9B,SAAA;AAED,QAAA,OAAO,KAAK,CAAC;KACd;AAED,IAAA,QAAQ,CAAC,QAAuB,EAAE,OAAsB,EAAE,MAAc,EAAA;AACtE,QAAA,MAAM,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;AACtE,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QACpE,IAAI,YAAY,IAAI,WAAW,EAAE;YAC/B,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;AAC9C,YAAA,MAAM,SAAS,GAAG,IAAI,IAAI,CACxB,QAAQ,CAAC,WAAW,EAAE,EACtB,QAAQ,CAAC,QAAQ,EAAE,EACnB,QAAQ,CAAC,OAAO,EAAE,EAClB,YAAY,CAAC,QAAQ,EAAE,EACvB,YAAY,CAAC,UAAU,EAAE,EACzB,YAAY,CAAC,UAAU,EAAE,EACzB,YAAY,CAAC,eAAe,EAAE,CAC/B,CAAC;AAEF,YAAA,OAAO,SAAS,CAAC;AAClB,SAAA;AAED,QAAA,IAAI,WAAW,EAAE;AACf,YAAA,OAAO,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;AACrC,SAAA;AAED,QAAA,OAAO,OAAO,CAAC;KAChB;;0EA/CU,aAAa,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAAC,WAAA,CAAA,CAAA,CAAA,EAAA,CAAA;gEAAb,aAAa,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAA,aAAA,EAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA;uFAAb,aAAa,EAAA,CAAA;cAHzB,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,eAAe;AAC1B,aAAA,CAAA;;;MCYY,UAAU,CAAA;;oEAAV,UAAU,GAAA,CAAA,EAAA,CAAA;4DAAV,UAAU,EAAA,CAAA,CAAA;AAJV,UAAA,CAAA,IAAA,iBAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,SAAA,EAAA;QACT,WAAW;AACZ,KAAA,EAAA,CAAA,CAAA;uFAEU,UAAU,EAAA,CAAA;cAbtB,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,aAAa;oBACb,iBAAiB;AAClB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,aAAa;oBACb,iBAAiB;AAClB,iBAAA;AACD,gBAAA,SAAS,EAAE;oBACT,WAAW;AACZ,iBAAA;AACF,aAAA,CAAA;;AACY,CAAA,YAAA,EAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,UAAU,mBAXnB,aAAa;AACb,QAAA,iBAAiB,aAGjB,aAAa;QACb,iBAAiB,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;MCLR,QAAQ,CAAA;AACnB,IAAA,WAAA,CAAoB,IAAgB,EAAA;QAAhB,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;KAAK;AAEzC,IAAA,SAAS,CAAC,KAAU,EAAE,MAAY,EAAE,QAAc,EAAE,MAAY,EAAA;QAC9D,IAAI;;AAEF,YAAA,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;AAC7D,SAAA;AAAC,QAAA,OAAO,EAAE,EAAE;YACX,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,CAAC,OAAO,CAAC,CAAC;AACjC,YAAA,OAAO,KAAK,CAAC;AACd,SAAA;KACF;;gEAXU,QAAQ,EAAA,EAAA,CAAA,iBAAA,CAAAD,IAAA,CAAA,QAAA,EAAA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA;0EAAR,QAAQ,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,CAAA;uFAAR,QAAQ,EAAA,CAAA;cAHpB,IAAI;AAAC,QAAA,IAAA,EAAA,CAAA;AACJ,gBAAA,IAAI,EAAE,WAAW;AAClB,aAAA,CAAA;;;ACJe,SAAA,eAAe,CAAC,UAAU,EAAE,IAAI,EAAA;AAC9C,IAAA,OAAO,KAAK,CAAC;IAEb,SAAS,KAAK,CAAC,KAAK,EAAA;AAClB,QAAA,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;AAClB,YAAA,OAAO,UAAU,CAAC,KAAK,CAAC,CAAC;AAC1B,SAAA;AAAM,aAAA,IAAI,UAAU,CAAC,KAAK,CAAC,EAAE;AAC5B,YAAA,OAAO,aAAa,CAAC,KAAK,CAAC,CAAC;AAC7B,SAAA;AAAM,aAAA,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;AAC1B,YAAA,OAAO,WAAW,CAAC,KAAK,CAAC,CAAC;AAC3B,SAAA;AAED,QAAA,OAAO,KAAK,CAAC;KACd;IAED,SAAS,WAAW,CAAC,IAAI,EAAA;QACvB,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/B,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3B,MAAM,MAAM,GAAG,EAAE,CAAC;QAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;AAC/B,YAAA,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACpB,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AAChC,SAAA;AAED,QAAA,OAAO,MAAM,CAAC;KACf;IAED,SAAS,UAAU,CAAC,IAAI,EAAA;QACtB,MAAM,MAAM,GAAG,EAAE,CAAC;AAClB,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YACrD,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,SAAA;AACD,QAAA,OAAO,MAAM,CAAC;KACf;IAED,SAAS,aAAa,CAAC,QAAQ,EAAA;QAC7B,OAAO,QAAQ,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;KACzC;AACH;;MC/Ba,aAAa,CAAA;AAD1B,IAAA,WAAA,GAAA;QAEU,IAAI,CAAA,IAAA,GAAS,IAAI,CAAC;AAE1B,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,YAAY,EAA+B,CAAC;AAgBjE,KAAA;AAdC,IAAA,IAAI,OAAO,GAAA;QACT,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;IAED,IAAI,OAAO,CAAC,KAAK,EAAA;AACf,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;QAC1B,IAAI,KAAK,KAAK,OAAO,EAAE;AACrB,YAAA,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AAClB,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;AACtB,gBAAA,QAAQ,EAAE,OAAO;AACjB,gBAAA,QAAQ,EAAE,KAAK;AAChB,aAAA,CAAC,CAAC;AACJ,SAAA;KACF;;0EAlBU,aAAa,GAAA,CAAA,EAAA,CAAA;AAAb,aAAA,CAAA,KAAA,iBAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,KAAA,EAAA,aAAa,WAAb,aAAa,CAAA,IAAA,EAAA,CAAA,CAAA;uFAAb,aAAa,EAAA,CAAA;cADzB,UAAU;;;MCLE,IAAI,CAAA;AAOf,IAAA,WAAA,CAAmB,EAAU,EAAS,MAAM,EAAS,MAAa,EAAA;QAA/C,IAAE,CAAA,EAAA,GAAF,EAAE,CAAQ;QAAS,IAAM,CAAA,MAAA,GAAN,MAAM,CAAA;QAAS,IAAM,CAAA,MAAA,GAAN,MAAM,CAAO;QANzD,IAAU,CAAA,UAAA,GAA2B,EAAE,CAAC;;QAEjD,IAAQ,CAAA,QAAA,GAAW,EAAE,CAAC;AAKpB,QAAA,IAAI,CAAC,KAAK,GAAG,MAAM,GAAG,MAAM,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;KAC5C;IAED,IAAI,CAAC,GAAW,EAAE,KAAM,EAAA;AACtB,QAAA,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;AAC1B,YAAA,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AAC9B,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;AAC7B,SAAA;KACF;IAED,OAAO,GAAA;KACN;IAED,aAAa,CAAC,KAAW,EAAE,KAAY,EAAA;QACrC,MAAM,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;AAE9E,QAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;AAC1C,QAAA,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;QACpB,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;KAC9B;IAED,cAAc,CAAC,KAAW,EAAE,MAAY,EAAA;AACtC,QAAA,MAAM,KAAK,GAAG,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAEzD,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;AACtC,QAAA,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;QACpB,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;KAC9B;AAED,IAAA,QAAQ,CAAC,KAAW,EAAA;AAClB,QAAA,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAChB,YAAA,MAAM,IAAI,SAAS,CAAC,MAAM,EAAE,uBAAuB,CAAC,CAAC;AACtD,SAAA;QACD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;KACxC;AAED,IAAA,SAAS,CAAC,KAAW,EAAA;AACnB,QAAA,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAChB,YAAA,MAAM,IAAI,SAAS,CAAC,MAAM,EAAE,uBAAuB,CAAC,CAAC;AACtD,SAAA;QACD,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;KACzC;IAED,KAAK,GAAA;AACH,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;KAC1D;IAED,MAAM,GAAA;AACJ,QAAA,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAChB,YAAA,MAAM,IAAI,SAAS,CAAC,MAAM,EAAE,gCAAgC,CAAC,CAAC;AAC/D,SAAA;AAED,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;KACvC;IAED,KAAK,GAAA;AACH,QAAA,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;AACpD,QAAA,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;KACpB;IAED,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAA;AACjB,QAAA,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI;AACtD,YAAA,IAAI,CAAC,QAAQ;AACV,iBAAA,GAAG,CAAC,KAAK,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;iBACxC,IAAI,CAAC,IAAI,CAAC,CAAC;KACjB;IAED,aAAa,GAAA;QACX,IAAI,IAAI,CAAC,MAAM,EAAE;AACf,YAAA,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AACzB,YAAA,OAAO,IAAI,KAAK,MAAM,CAAC,MAAM,EAAE;AAC7B,gBAAA,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AACxB,aAAA;AAED,YAAA,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC;AAC1B,SAAA;AAED,QAAA,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;KACxB;AACF;;;ICtFE,EAC+B,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;IAC9B,EAGuB,CAAA,SAAA,CAAA,CAAA,EAAA,sBAAA,EAAA,CAAA,CAAA,CAAA;IACxB,EAAK,CAAA,YAAA,EAAA,CAAA;;;;IAJkB,EAAc,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;AAAd,IAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,OAAA,CAAc,sBAAA,CAAA,MAAA,EAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,CAAA;;;IAUrC,EAC0B,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;IACzB,EACiB,CAAA,SAAA,CAAA,CAAA,EAAA,gBAAA,EAAA,CAAA,CAAA,CAAA;IAClB,EAAK,CAAA,YAAA,EAAA,CAAA;;;IAFY,EAAe,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAf,EAAe,CAAA,UAAA,CAAA,OAAA,EAAA,QAAA,CAAA,CAAA;;;IAYjC,EAC+B,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;IAC9B,EAGuB,CAAA,SAAA,CAAA,CAAA,EAAA,sBAAA,EAAA,CAAA,CAAA,CAAA;IACxB,EAAK,CAAA,YAAA,EAAA,CAAA;;;;;;IAJkB,EAAc,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;AAAd,IAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,OAAA,CAAc,kBAAA,CAAA,MAAA,EAAA,QAAA,CAAA,CAAA;;;IAHtC,EAA4B,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,CAAA;IAC3B,EAMK,CAAA,UAAA,CAAA,CAAA,EAAA,2CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;IACN,EAAK,CAAA,YAAA,EAAA,CAAA;;;IAPiB,EAAqB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAArB,EAAqB,CAAA,UAAA,CAAA,SAAA,EAAA,SAAA,CAAA,WAAA,CAAA,CAAA;;;MCxB/B,eAAe,CAAA;AAG1B,IAAA,WAAA,CAAmB,OAAsB,EAAA;QAAtB,IAAO,CAAA,OAAA,GAAP,OAAO,CAAe;KACxC;AAED,IAAA,MAAM,CAAC,CAAC,EAAA;QACN,CAAC,CAAC,eAAe,EAAE,CAAC;AAEpB,QAAA,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YACrB,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC;AACnC,SAAA;KACF;;8EAZU,eAAe,EAAA,EAAA,CAAA,iBAAA,CAAAE,aAAA,CAAA,CAAA,CAAA,EAAA,CAAA;kEAAf,eAAe,EAAA,SAAA,EAAA,CAAA,CAAA,gBAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,KAAA,EAAA,OAAA,EAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,gBAAA,EAAA,CAAA,EAAA,iBAAA,EAAA,SAAA,EAAA,OAAA,CAAA,EAAA,CAAA,CAAA,EAAA,gBAAA,CAAA,EAAA,CAAA,OAAA,EAAA,sBAAA,EAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,oBAAA,CAAA,EAAA,CAAA,OAAA,EAAA,iBAAA,EAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,KAAA,EAAA,mBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,sBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,EAAA,MAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,iBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,CAAA,EAAA,CAAA,CAAA,EAAA,iBAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,wBAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QDR5B,EAG0B,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;AAAzB,QAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,4CAAA,CAAA,MAAA,EAAA,EAAA,OAAS,kBAAc,CAAC,EAAA,CAAA,CAAA;AACxB,QAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAA2B,CAAA,CAAA,EAAA,IAAA,CAAA,CAAA;QAEzB,EAMK,CAAA,UAAA,CAAA,CAAA,EAAA,6BAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;AACN,QAAA,EAAA,CAAA,YAAA,EAAK,EAAA,CAAA;AAGN,QAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAA+B,CAAA,CAAA,EAAA,IAAA,CAAA,CAAA;QAE7B,EAIK,CAAA,UAAA,CAAA,CAAA,EAAA,6BAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;AACN,QAAA,EAAA,CAAA,YAAA,EAAK,EAAA,EAAA,CAAA;QAIP,EAac,CAAA,UAAA,CAAA,CAAA,EAAA,sCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,CAAA,CAAA,CAAA;;AAvCb,QAAA,EAAA,CAAA,UAAA,CAAA,iBAAA,EAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CAAuC,CAAA,SAAA,EAAA,EAAA,CAAA,eAAA,CAAA,CAAA,EAAAP,KAAA,EAAA,GAAA,CAAA,OAAA,CAAA,OAAA,KAAA,GAAA,CAAA,KAAA,CAAA,CAAA,CAAA;QAKhB,EAAyB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAAzB,EAAyB,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA,WAAA,CAAA,CAAA;QAYxB,EAAiB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAAjB,EAAiB,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA;;uFCV7B,eAAe,EAAA,CAAA;cAJ3B,SAAS;2BACE,gBAAgB,EAAA,QAAA,EAAA,ysCAAA,EAAA,CAAA;6DAIjB,KAAK,EAAA,CAAA;kBAAb,KAAK;;;MCMK,gBAAgB,CAAA;IAO3B,WAAoB,CAAA,UAAsB,EAAsB,IAAqB,EAAA;QAAjE,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;QAAsB,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAiB;QAL7E,IAAY,CAAA,YAAA,GAAkB,EAAE,CAAC;KAMxC;IAED,QAAQ,GAAA;QACN,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;KACnF;IAED,SAAS,GAAA;QACP,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACzC,QAAA,IAAI,MAAM,EAAE;YACV,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YAC5C,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,SAAS,CAAC,MAAM;AAC5C,mBAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AAExD,gBAAA,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,aAA4B,CAAC;gBAC7D,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;gBAC/C,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,CAAC;AACpC,gBAAA,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;AAC/B,aAAA;AACF,SAAA;AAAM,aAAA,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;AACnC,YAAA,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,aAA4B,CAAC;YAC7D,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;AAC/C,YAAA,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;AACxB,SAAA;KACF;AAEO,IAAA,YAAY,CAAC,IAAI,EAAA;AACvB,QAAA,IAAI,OAAO,CAAC,IAAI,CAAC,EAAE;AACjB,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;QAED,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/B,MAAM,SAAS,GAAG,EAAE,CAAC;AACrB,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;AACrD,YAAA,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACpB,YAAA,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE;AACb,gBAAA,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACrB,aAAA;AACF,SAAA;AAED,QAAA,OAAO,SAAS,CAAC;KAClB;;gFAhDU,gBAAgB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAAQ,eAAA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA;mEAAhB,gBAAgB,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAA,iBAAA,EAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,KAAA,EAAA,CAAA,iBAAA,EAAA,OAAA,CAAA,EAAA,KAAA,EAAA,CAAA,uBAAA,EAAA,OAAA,CAAA,EAAA,EAAA,CAAA,CAAA;uFAAhB,gBAAgB,EAAA,CAAA;cAH5B,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,mBAAmB;AAC9B,aAAA,CAAA;;sBAQ8C,QAAQ;wBAH3B,KAAK,EAAA,CAAA;kBAA9B,KAAK;mBAAC,iBAAiB,CAAA;YACQ,KAAK,EAAA,CAAA;kBAApC,KAAK;mBAAC,uBAAuB,CAAA;;;MClBnB,OAAO,CAAA;AAKlB,IAAA,WAAA,CACQ,UAAe,EACf,GAAW,EACX,OAAuC,EACvC,OAAO,EAAE,EAAA;QAHT,IAAU,CAAA,UAAA,GAAV,UAAU,CAAK;QACf,IAAG,CAAA,GAAA,GAAH,GAAG,CAAQ;QACX,IAAO,CAAA,OAAA,GAAP,OAAO,CAAgC;QACvC,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAK;QANT,IAAU,CAAA,UAAA,GAAG,IAAI,CAAC;QAQxB,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;AAClD,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;KAChD;IAED,MAAM,GAAA;QACJ,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACvC,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,QAAQ,KAAK,QAAQ,EAAE;AACjD,YAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAExB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACjF,YAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC1B,SAAA;KACF;AACF;;MC3BqB,UAAU,CAAA;AAAhC,IAAA,WAAA,GAAA;QAGE,IAAW,CAAA,WAAA,GAAG,EAAE,CAAC;QACjB,IAAM,CAAA,MAAA,GAAa,EAAE,CAAC;KACvB;AAAA,CAAA;AAEK,MAAO,eAAgB,SAAQ,UAAU,CAAA;AAG7C,IAAA,WAAA,GAAA;AACE,QAAA,KAAK,EAAE,CAAC;QAHV,IAAW,CAAA,WAAA,GAAiB,EAAE,CAAC;AAK7B,QAAA,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;AACpB,QAAA,IAAI,CAAC,WAAW,GAAG,mBAAmB,CAAC;KACxC;AACF;;MCJY,IAAI,CAAA;AAIf,IAAA,WAAA,CAAoB,YAAgC,EAAA;QAAhC,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAoB;QAHpD,IAAS,CAAA,SAAA,GAAG,IAAI,CAAC;QACR,IAAW,CAAA,WAAA,GAAiB,EAAE,CAAC;KAGvC;AAED,IAAA,GAAG,CAAC,UAAsB,EAAA;AACxB,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KACnC;AAED,IAAA,KAAK,CAAC,EAAU,EAAA;QACd,OAAO,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAe,CAAC;KAC9C;AAED,IAAA,GAAG,CAAC,EAAU,EAAA;AACZ,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;QACvD,IAAI,CAAC,UAAU,EAAE;YACf,MAAM,IAAI,SAAS,CAAC,MAAM,EAAE,CAAc,WAAA,EAAA,EAAE,CAAY,UAAA,CAAA,CAAC,CAAC;AAC3D,SAAA;QAED,OAAO,UAAU,CAAC,UAAU,CAAC;KAC9B;AAED,IAAA,GAAG,CAAC,EAAU,EAAE,IAAU,EAAE,KAAK,EAAA;QAC/B,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,MAAM,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACjD,QAAA,MAAM,KAAK,GAAG,IAAI,eAAe,EAAE,CAAC;AAEpC,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;AACjD,QAAA,IAAI,IAAI,CAAC,UAAU,YAAY,eAAe,EAAE;YAC9C,KAAK,CAAC,MAAM,CAAC,CAAC;AACd,YAAA,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACpB,YAAA,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC;YACd,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;AACzC,YAAA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACxB,SAAA;AAAM,aAAA;AACL,YAAA,MAAM,IAAI,SAAS,CAAC,MAAM,EAAE,+DAA+D,CAAC,CAAC;AAC9F,SAAA;KACF;AAED,IAAA,MAAM,CAAC,EAAE,EAAA;AACP,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;AACjD,QAAA,IAAI,IAAI,CAAC,UAAU,YAAY,eAAe,EAAE;AAC9C,YAAA,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,EAAE,CAAC;AAClC,SAAA;AAAM,aAAA;AACL,YAAA,MAAM,IAAI,SAAS,CAAC,MAAM,EAAE,+DAA+D,CAAC,CAAC;AAC9F,SAAA;KACF;AAEO,IAAA,QAAQ,CAAC,EAAU,EAAA;AACzB,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QACjE,IAAI,KAAK,GAAG,CAAC,EAAE;YACb,MAAM,IAAI,SAAS,CAAC,MAAM,EAAE,CAAc,WAAA,EAAA,EAAE,CAAY,UAAA,CAAA,CAAC,CAAC;AAC3D,SAAA;AAED,QAAA,OAAO,KAAK,CAAC;KACd;AAEO,IAAA,QAAQ,CAAC,WAAyB,EAAE,EAAU,EAAE,SAA0B,IAAI,EAAA;AACpF,QAAA,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,MAAM,GAAG,WAAW,CAAC,MAAM,EAAE,KAAK,GAAG,MAAM,EAAE,KAAK,EAAE,EAAE;AACxE,YAAA,MAAM,UAAU,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;AACtC,YAAA,IAAI,UAAU,CAAC,EAAE,KAAK,EAAE,EAAE;AACxB,gBAAA,OAAO,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;AACtC,aAAA;YACD,IAAI,UAAU,YAAY,eAAe,EAAE;gBACzC,MAAM,KAAK,GAAG,UAA6B,CAAC;AAC5C,gBAAA,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;AAC/D,gBAAA,IAAI,UAAU,EAAE;AACd,oBAAA,OAAO,UAAU,CAAC;AACnB,iBAAA;AACF,aAAA;AACF,SAAA;AAED,QAAA,OAAO,IAAI,CAAC;KACb;AACF;;MC/EY,qBAAqB,CAAA;IAShC,QAAQ,GAAA;QACN,IAAI,CAAC,OAAO,GAAG,EAAE,SAAS,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC;AAE3E,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;AACjC,QAAA,IAAI,MAAM,EAAE;AACV,YAAA,IAAI,CAAC,QAAQ;gBACX,MAAM;qBACH,IAAI,CAAC,MAAM,CAAC;AACZ,qBAAA,GAAG,CAAC,GAAG,IACN,IAAI,OAAO,CACT,IAAI,CAAC,KAAK,EACV,GAAG,EACH,MAAM,CAAC,GAAG,CAAC,EACX,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAC1B,CAAC;AACP,SAAA;KACF;IAED,SAAS,GAAA;AACP,QAAA,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;QACzB,IAAI,CAAC,EAAE,EAAE;YACP,OAAO;AACR,SAAA;AAED,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;AACnD,YAAA,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;AAChB,SAAA;KACF;;0FApCU,qBAAqB,GAAA,CAAA,EAAA,CAAA;wEAArB,qBAAqB,EAAA,SAAA,EAAA,CAAA,CAAA,sBAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,MAAA,EAAA,KAAA,EAAA,OAAA,EAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,KAAA,EAAA,SAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,8BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QCTlC,EACe,CAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;;AADD,QAAA,EAAA,CAAA,UAAA,CAAA,KAAA,EAAA,GAAA,CAAA,KAAA,CAAA,WAAA,CAAyB,CAAA,SAAA,EAAA,GAAA,CAAA,OAAA,CAAA,CAAA;;uFDS1B,qBAAqB,EAAA,CAAA;cAJjC,SAAS;2BACE,sBAAsB,EAAA,QAAA,EAAA,qFAAA,EAAA,CAAA;gBAMvB,IAAI,EAAA,CAAA;kBAAZ,KAAK;YACG,IAAI,EAAA,CAAA;kBAAZ,KAAK;YACG,KAAK,EAAA,CAAA;kBAAb,KAAK;;;AEZQ,SAAA,OAAO,CAAC,KAAK,EAAE,SAAS,EAAA;AACtC,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;QACtD,IAAI,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;AAC1B,YAAA,OAAO,CAAC,CAAC;AACV,SAAA;AACF,KAAA;IACD,OAAO,CAAC,CAAC,CAAC;AACZ,CAAC;AAEe,SAAA,QAAQ,CAAI,GAAG,IAAW,EAAA;AACxC,IAAA,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACpB,IAAA,MAAM,MAAM,GAAG,KAAK,CAAC,GAAG,CAAM,CAAC;AAE/B,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,aAAa,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,aAAa,EAAE,CAAC,EAAE,EAAE;AACnE,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QAEvB,IAAI,CAAC,MAAM,EAAE;YACX,SAAS;AACV,SAAA;QAED,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAEjC,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,UAAU,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;AAC7D,YAAA,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACpB,YAAA,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE;gBACtD,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AAC3B,aAAA;AACF,SAAA;AACF,KAAA;AAED,IAAA,OAAO,MAAM,CAAC;AAChB,CAAC;AAEe,SAAA,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAA;IAC/B,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC9B,IAAA,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IAE3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;AAC/B,QAAA,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACpB,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;AACrB,KAAA;AAED,IAAA,OAAO,GAAG,CAAC;AACb;;AC7CA;AAQA,MAAM,UAAU,CAAA;AACd,IAAA,WAAA,CAAoB,IAAU,EAAA;QAAV,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAM;KAC7B;IAED,SAAS,GAAA;QACP,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;QAEjF,OAAO;AACL,YAAA,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE;YAChB,UAAU,EAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC;YAC/C,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,UAAU,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;AAC5E,YAAA,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC;SACvD,CAAC;KACH;AAED,IAAA,cAAc,CAAC,KAAK,EAAA;QAClB,OAAO;YACL,EAAE,EAAE,KAAK,CAAC,EAAE;YACZ,WAAW,EAAE,KAAK,CAAC,WAAW;iBAC3B,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;iBACvC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;SAC/C,CAAC;KACH;AAED,IAAA,mBAAmB,CAAC,UAAU,EAAA;QAC5B,MAAM,MAAM,GAAG,EAA8B,CAAC;QAE9C,MAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAClD,MAAM,iBAAiB,GAAG,aAAa,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;AACvD,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,iBAAiB,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;AAClE,YAAA,MAAM,IAAI,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;AACjC,SAAA;AAED,QAAA,MAAM,CAAC,EAAE,GAAG,UAAU,CAAC,EAAE,CAAC;AAC1B,QAAA,MAAM,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;AAC9B,QAAA,MAAM,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;AAElC,QAAA,OAAO,MAAM,CAAC;KACf;AAED,IAAA,mBAAmB,CAAC,IAAU,EAAA;QAC5B,MAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC7C,QAAA,IAAI,aAAa,IAAI,aAAa,CAAC,OAAO,CAAC,EAAE;AAC3C,YAAA,MAAM,KAAK,GAAG,aAAa,CAAC,OAAO,CAAC,CAAC;YACrC,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,IAAI,KAAI;gBACjC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC7B,gBAAA,OAAO,IAAI,CAAC;aACb,EAAE,EAAE,CAAC,CAAC;AACR,SAAA;AACD,QAAA,OAAO,EAAE,CAAC;KACX;AAED,IAAA,YAAY,CAAC,UAAU,EAAA;QACrB,MAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAClD,IAAI,CAAC,aAAa,EAAE;AAClB,YAAA,OAAO,KAAK,CAAC;AACd,SAAA;QAED,MAAM,KAAK,GAAG,aAAa,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAC3C,OAAO,CAAC,EAAE,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;KAClC;AACF,CAAA;AAED,MAAM,YAAY,CAAA;AAChB,IAAA,WAAA,CAAoB,MAAmB,EAAA;QAAnB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAa;KACtC;AAED,IAAA,WAAW,CAAC,IAAwB,EAAE,MAAe,GAAA,IAAI,EAAE,OAAiC,EAAA;AAC1F,QAAA,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;AAExB,QAAA,IAAI,IAAU,CAAC;QACf,IAAI,CAAC,MAAM,EAAE;AACX,YAAA,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AACtC,YAAA,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACxB,YAAA,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;YACxB,IAAI,CAAC,KAAK,EAAE,CAAC;AACd,SAAA;AAAM,aAAA;YACL,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC;AAChC,YAAA,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AAC3B,YAAA,QAAQ,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;YAC1B,IAAI,CAAC,KAAK,EAAE,CAAC;AACd,SAAA;QAED,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AAE3C,QAAA,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;AAEjD,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;AAC/B,QAAA,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;QAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;AAC/B,YAAA,MAAM,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC1B,YAAA,MAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AACpD,YAAA,IAAI,YAAY,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;AACjE,SAAA;AAED,QAAA,OAAO,IAAI,CAAC;KACb;AAEO,IAAA,eAAe,CAAC,IAAU,EAAE,IAAU,EAAE,UAAiC,EAAA;AAC/E,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;AAC3D,YAAA,MAAM,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;YAChC,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAoB,CAAC;YAC5D,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;AACzD,SAAA;KACF;AAEO,IAAA,gBAAgB,CAAC,IAAU,EAAE,IAAU,EAAE,KAAsB,EAAE,SAA8B,EAAA;AACrG,QAAA,MAAM,eAAe,GAAG,SAAS,CAAC,WAAW,CAAC;AAC9C,QAAA,MAAM,MAAM,GAAG,eAAe,CAAC,MAAM,CAAC;AAEtC,QAAA,IAAI,KAAK,CAAC;QACV,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;AAC/B,YAAA,MAAM,OAAO,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;AACnC,YAAA,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,IAAI,IAAI,CAAC,EAAE,KAAK,OAAO,CAAC,EAAE,CAAC,CAAC;YACnE,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC;AAC7C,SAAA;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;AAC/B,YAAA,MAAM,QAAQ,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;YACpC,IAAI,QAAQ,CAAC,MAAM,EAAE;AACnB,gBAAA,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAG;AAC1B,oBAAA,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACxC,oBAAA,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AAC9D,iBAAC,CAAC,CAAC;AACJ,aAAA;AACF,SAAA;KACF;AACF,CAAA;AAED,SAAS,QAAQ,CAAC,IAAU,EAAE,GAA4B,EAAA;AACxD,IAAA,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE;AACvD,QAAA,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;AACrB,KAAA;AAED,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;QAC9D,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC/B,QAAA,QAAQ,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AACtB,KAAA;AACH,CAAC;MAqBY,oBAAoB,CAAA;AAC/B,IAAA,SAAS,CAAC,IAAU,EAAA;QAClB,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC;KACzC;IAED,WAAW,CAAC,MAAmB,EAAE,IAAwB,EAAA;QACvD,OAAO,IAAI,YAAY,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;KACnD;;wFAPU,oBAAoB,GAAA,CAAA,EAAA,CAAA;AAApB,oBAAA,CAAA,KAAA,iBAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,KAAA,EAAA,oBAAoB,WAApB,oBAAoB,CAAA,IAAA,EAAA,CAAA,CAAA;uFAApB,oBAAoB,EAAA,CAAA;cADhC,UAAU;;;MC3IE,QAAQ,CAAA;;gEAAR,QAAQ,GAAA,CAAA,EAAA,CAAA;0DAAR,QAAQ,EAAA,CAAA,CAAA;AALR,QAAA,CAAA,IAAA,iBAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,SAAA,EAAA;QACT,oBAAoB;QACpB,aAAa;AACd,KAAA,EAAA,OAAA,EAAA,CAfC,YAAY;QACZ,cAAc,CAAA,EAAA,CAAA,CAAA;uFAgBL,QAAQ,EAAA,CAAA;cAnBpB,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,OAAO,EAAE;oBACP,YAAY;oBACZ,cAAc;AACf,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,eAAe;oBACf,gBAAgB;AACjB,iBAAA;AACD,gBAAA,YAAY,EAAE;oBACZ,eAAe;oBACf,qBAAqB;oBACrB,gBAAgB;AACjB,iBAAA;AACD,gBAAA,SAAS,EAAE;oBACT,oBAAoB;oBACpB,aAAa;AACd,iBAAA;AACF,aAAA,CAAA;;AACY,CAAA,YAAA,EAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,QAAQ,mBATjB,eAAe;QACf,qBAAqB;AACrB,QAAA,gBAAgB,aAVhB,YAAY;AACZ,QAAA,cAAc,aAGd,eAAe;QACf,gBAAgB,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA,CAAA;AAGhB,EAAA,CAAA,mBAAA,CAAA,eAAe,yDAAf,eAAe;IACf,qBAAqB;IACrB,gBAAgB,CAAA,EAAA,EAAA,CAAA;;MCJP,iBAAiB,CAAA;AAU5B,IAAA,WAAA,CACU,MAAkB,EAAA;QAAlB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;AAPlB,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;AAC5B,QAAA,IAAA,CAAA,KAAK,GAAG,IAAI,YAAY,EAAE,CAAC;AAC3B,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;KAOrC;IAED,QAAQ,GAAA;AACN,QAAA,MAAM,OAAO,GAAG;YACd,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,OAAO,EAAE,IAAI,CAAC,OAAO;SACtB,CAAC;QAEF,MAAM,aAAa,GAAG,IAAI,mBAAmB,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AACpE,QAAA,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;AAEhC,QAAA,aAAa,CAAC,WAAW,CAAC,EAAE,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;AACvD,QAAA,aAAa,CAAC,UAAU,CAAC,EAAE,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;AACrD,QAAA,aAAa,CAAC,WAAW,CAAC,EAAE,CAAC,MAAK;AAChC,YAAA,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YAEnB,OAAO,CAAC,UAAU,CAAC;AACjB,gBAAA,MAAM,EAAE,qBAAqB;AAC7B,gBAAA,GAAG,EAAE,SAAS;AACf,aAAA,CAAC,CAAC;AACL,SAAC,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,GAAG,EAAE,SAAS,EAAE,aAAa,EAAE,CAAC;KAC7C;;kFApCU,iBAAiB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,CAAA,CAAA,EAAA,CAAA;oEAAjB,iBAAiB,EAAA,SAAA,EAAA,CAAA,CAAA,kBAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,SAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,KAAA,EAAA,OAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAHjB,CAAC,UAAU,CAAC,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,KAAA,EAAA,2BAAA,EAAA,CAAA,EAAA,SAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,0BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QCdzB,EAEe,CAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;;QADD,EAAmB,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,OAAA,CAAA,CAAA;;uFDgBpB,iBAAiB,EAAA,CAAA;cAN7B,SAAS;AACE,QAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,kBAAkB,aAEjB,CAAC,UAAU,CAAC,EACN,eAAA,EAAA,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,0GAAA,EAAA,CAAA;6DAGtC,OAAO,EAAA,CAAA;kBAAf,KAAK;YACG,GAAG,EAAA,CAAA;kBAAX,KAAK;YAEI,MAAM,EAAA,CAAA;kBAAf,MAAM;YACG,KAAK,EAAA,CAAA;kBAAd,MAAM;YACG,MAAM,EAAA,CAAA;kBAAf,MAAM;;;;MEfI,wBAAwB,CAAA;AAGnC,IAAA,IAAI,GAAG,GAAA;QACL,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YACpC,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC;YAC1C,OAAO,CAAA,UAAA,EAAa,IAAI,CAAA,SAAA,CAAW,CAAC;AACrC,SAAA;AAED,QAAA,OAAO,yBAAyB,CAAC;KAClC;;gGAXU,wBAAwB,GAAA,CAAA,EAAA,CAAA;2EAAxB,wBAAwB,EAAA,SAAA,EAAA,CAAA,CAAA,0BAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,KAAA,EAAA,SAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,iCAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QCRrC,EAEe,CAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;;QAFD,EAAa,CAAA,qBAAA,CAAA,KAAA,EAAA,GAAA,CAAA,GAAA,CAAA,CAAA;QACb,EAA+B,CAAA,UAAA,CAAA,SAAA,EAAA,EAAA,CAAA,eAAA,CAAA,CAAA,EAAAR,KAAA,EAAA,GAAA,CAAA,MAAA,CAAA,CAAA,CAAA;;uFDOhC,wBAAwB,EAAA,CAAA;cALpC,SAAS;2BACE,0BAA0B,EAAA,eAAA,EAEnB,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,oGAAA,EAAA,CAAA;gBAGtC,MAAM,EAAA,CAAA;kBAAd,KAAK;;;MEFK,wBAAwB,CAAA;AALrC,IAAA,WAAA,GAAA;AASE,QAAA,IAAA,CAAA,OAAO,GAAQ;AACb,YAAA,SAAS,EAAE,IAAI;SAChB,CAAC;AACH,KAAA;;gGAPY,wBAAwB,GAAA,CAAA,EAAA,CAAA;2EAAxB,wBAAwB,EAAA,SAAA,EAAA,CAAA,CAAA,0BAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,SAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,KAAA,EAAA,mCAAA,EAAA,CAAA,EAAA,SAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,iCAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QCPrC,EAEe,CAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;;QADD,EAAmB,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,OAAA,CAAA,CAAA;;uFDMpB,wBAAwB,EAAA,CAAA;cALpC,SAAS;2BACE,0BAA0B,EAAA,eAAA,EAEnB,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,kHAAA,EAAA,CAAA;gBAGtC,OAAO,EAAA,CAAA;kBAAf,KAAK;YACG,GAAG,EAAA,CAAA;kBAAX,KAAK;;;MEeK,cAAc,CAAA;;4EAAd,cAAc,GAAA,CAAA,EAAA,CAAA;gEAAd,cAAc,EAAA,CAAA,CAAA;oEAJvB,YAAY;QACZ,cAAc,CAAA,EAAA,CAAA,CAAA;uFAGL,cAAc,EAAA,CAAA;cAhB1B,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,wBAAwB;oBACxB,iBAAiB;oBACjB,wBAAwB;AACzB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,wBAAwB;oBACxB,iBAAiB;oBACjB,wBAAwB;AACzB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,YAAY;oBACZ,cAAc;AACf,iBAAA;AACF,aAAA,CAAA;;AACY,CAAA,YAAA,EAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,cAAc,mBAdvB,wBAAwB;QACxB,iBAAiB;AACjB,QAAA,wBAAwB,aAQxB,YAAY;AACZ,QAAA,cAAc,aANd,wBAAwB;QACxB,iBAAiB;QACjB,wBAAwB,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;MCCf,eAAe,CAAA;IAS1B,WACU,CAAA,MAAkB,EAClB,YAAiC,EAAA;QADjC,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;QAClB,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAqB;;AAN3C,QAAA,IAAA,CAAA,OAAO,GAAmC;AACxC,YAAA,SAAS,EAAE,IAAI;SAChB,CAAC;AAMA,QAAA,IAAI,CAAC,YAAY,CAAC,GAAG,GAAG,MAAM,CAAU,OAAA,EAAA,IAAI,CAAC,IAAI,EAAE,CAAC;KACrD;IAED,eAAe,GAAA;QACb,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1C,MAAM,YAAY,GAAG,IAAI,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;AACxD,QAAA,MAAM,MAAM,GAAG,IAAI,MAAM,CACvB,IAAI,OAAO,CAAC;AACV,YAAA,OAAO,EAAE,MAAM,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE;SACjD,CAAC,EACF,aAAa,IAAI,CAAC,IAAI,CAAE,CAAA,EACxB,eAAe,CAChB,CAAC;QAEF,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AACvD,SAAA;AAED,QAAA,MAAM,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC/D,KAAK,CAAC,MAAM,CAAC;YACX,KAAK;SACN,EAAE;AACD,YAAA,MAAM,EAAE,kBAAkB;AAC3B,SAAA,CAAC,CAAC;AAEH,QAAA,UAAU,CAAC,GAAG,CAAC,MAAK;YAClB,KAAK,CAAC,MAAM,CAAC;AACX,gBAAA,KAAK,EAAE,KAAK;AACT,qBAAA,MAAM,EAAE;qBACR,KAAK;qBACL,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,MAAM,CAAC;aAC7B,EAAE;AACD,gBAAA,MAAM,EAAE,kBAAkB;AAC3B,aAAA,CAAC,CAAC;AACL,SAAC,CAAC,CAAC;KACJ;;8EAhDU,eAAe,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,mBAAA,CAAA,CAAA,CAAA,EAAA,CAAA;kEAAf,eAAe,EAAA,SAAA,EAAA,CAAA,CAAA,eAAA,CAAA,CAAA,EAAA,cAAA,EAAA,SAAA,8BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,QAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;oCAEZ,WAAW,EAAA,CAAA,CAAA,CAAA;;;;oEALd,CAAC,mBAAmB,EAAE,UAAU,CAAC,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,SAAA,wBAAA,CAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,CAAA,EAAA,CAAA,CAAA;uFAGjC,eAAe,EAAA,CAAA;cAN3B,SAAS;2BACE,eAAe,EAAA,SAAA,EAEd,CAAC,mBAAmB,EAAE,UAAU,CAAC,EAAA,eAAA,EAC3B,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA;+FAGtC,IAAI,EAAA,CAAA;kBAAZ,KAAK;YACqB,WAAW,EAAA,CAAA;kBAArC,YAAY;mBAAC,WAAW,CAAA;;;MCLd,YAAY,CAAA;;wEAAZ,YAAY,GAAA,CAAA,EAAA,CAAA;8DAAZ,YAAY,EAAA,CAAA,CAAA;kEAHrB,cAAc,CAAA,EAAA,CAAA,CAAA;uFAGL,YAAY,EAAA,CAAA;cAXxB,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,eAAe;AAChB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,eAAe;AAChB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,cAAc;AACf,iBAAA;AACF,aAAA,CAAA;;AACY,CAAA,YAAA,EAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,YAAY,EATrB,EAAA,YAAA,EAAA,CAAA,eAAe,CAMf,EAAA,OAAA,EAAA,CAAA,cAAc,aAHd,eAAe,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;MCON,aAAa,CAAA;AAgCxB,IAAA,WAAA,CACsB,eAAgC,EACpD,UAAsB,EACtB,UAAsB,EAAA;QAFF,IAAe,CAAA,eAAA,GAAf,eAAe,CAAiB;AAhC9C,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;AAIL,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,YAAY,EAAO,CAAC;AAChC,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,YAAY,EAAU,CAAC;QAE7C,IAAO,CAAA,OAAA,GAA8B,GAAG,CAAC;AA6BtE,QAAA,MAAM,QAAQ,GAAG,IAAI,aAAa,CAAC,UAAU,CAAC,aAAa,EAAE,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;AAErF,QAAA,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;AACrD,QAAA,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;AACnD,QAAA,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;AACxD,QAAA,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;AAE1D,QAAA,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;KAChD;AAnCD,IAAA,IAA0B,KAAK,GAAA;QAC7B,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IAED,IAAI,KAAK,CAAC,KAAU,EAAA;AAClB,QAAA,IAAI,KAAK,KAAK,IAAI,CAAC,MAAM,EAAE;AACzB,YAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACpB,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9B,SAAA;KACF;AAED,IAAA,IAAgC,KAAK,GAAA;QACnC,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IAED,IAAI,KAAK,CAAC,KAAa,EAAA;AACrB,QAAA,IAAI,KAAK,KAAK,IAAI,CAAC,MAAM,EAAE;AACzB,YAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACpB,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9B,SAAA;KACF;AAiBD,IAAA,QAAQ,CAAC,CAAC,EAAA;AACR,QAAA,MAAM,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC;AAC3B,QAAA,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QACtB,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AACnC,YAAA,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AAChC,YAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;AACxB,SAAA;KACF;AAED,IAAA,SAAS,CAAC,CAAC,EAAA;QACT,IAAI,CAAC,CAAC,MAAM,CAAC,UAAU,KAAK,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;YAC5C,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;AAC9B,SAAA;KACF;IAED,YAAY,GAAA;QACV,IAAI,IAAI,CAAC,eAAe,EAAE;AACxB,YAAA,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;AAC7B,SAAA;KACF;IAED,cAAc,GAAA;QACZ,IAAI,IAAI,CAAC,eAAe,EAAE;AACxB,YAAA,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE;AAClC,gBAAA,UAAU,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,EAAE,GAAG,CAAC,CAAC;AACtD,aAAA;AACF,SAAA;KACF;;0EA1EU,aAAa,EAAA,EAAA,CAAA,iBAAA,CAAAD,eAAA,EAAA,CAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAAG,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,CAAA,CAAA,EAAA,CAAA;gEAAb,aAAa,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAA,aAAA,EAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,CAAA,sBAAA,EAAA,SAAA,CAAA,EAAA,KAAA,EAAA,CAAA,aAAA,EAAA,OAAA,CAAA,EAAA,KAAA,EAAA,CAAA,mBAAA,EAAA,OAAA,CAAA,EAAA,EAAA,OAAA,EAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,WAAA,EAAA,yBAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAFb,CAAC,UAAU,CAAC,CAAA,CAAA,EAAA,CAAA,CAAA;uFAEZ,aAAa,EAAA,CAAA;cAJzB,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,eAAe;gBACzB,SAAS,EAAE,CAAC,UAAU,CAAC;AACxB,aAAA,CAAA;;sBAkCI,QAAQ;0EA5BkB,WAAW,EAAA,CAAA;kBAAvC,MAAM;mBAAC,mBAAmB,CAAA;YACQ,WAAW,EAAA,CAAA;kBAA7C,MAAM;mBAAC,yBAAyB,CAAA;YAEF,OAAO,EAAA,CAAA;kBAArC,KAAK;mBAAC,sBAAsB,CAAA;YAEH,KAAK,EAAA,CAAA;kBAA9B,KAAK;mBAAC,aAAa,CAAA;YAWY,KAAK,EAAA,CAAA;kBAApC,KAAK;mBAAC,mBAAmB,CAAA;;;MC1Bf,UAAU,CAAA;;oEAAV,UAAU,GAAA,CAAA,EAAA,CAAA;4DAAV,UAAU,EAAA,CAAA,CAAA;;uFAAV,UAAU,EAAA,CAAA;cARtB,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,aAAa;AACd,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,aAAa;AACd,iBAAA;AACF,aAAA,CAAA;;wFACY,UAAU,EAAA,EAAA,YAAA,EAAA,CANnB,aAAa,CAAA,EAAA,OAAA,EAAA,CAGb,aAAa,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;MCFJ,UAAU,CAAA;IACrB,SAAS,CAAC,KAAmB,EAAE,EAAE,MAAM,GAAG,IAAI,EAAE,IAAI,GAAG,OAAO,EAAE,EAAA;QAC9D,IAAI,MAAM,IAAI,MAAM,KAAK,CAAC,IAAI,MAAM,KAAK,KAAK,EAAE;AAC9C,YAAA,MAAM,SAAS,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAC;AAC3C,YAAA,QAAQ,IAAI;gBACV,KAAK,MAAM,EAAE;oBACX,MAAM,IAAI,GAAG,KAAa,CAAC;AAC3B,oBAAA,OAAO,UAAU,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AACpC,iBAAA;AACD,gBAAA,SAAS;AACP,oBAAA,OAAQ,KAAe,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AAC3C,iBAAA;AACF,aAAA;AACF,SAAA;AAED,QAAA,OAAO,KAAK,CAAC;KACd;;oEAhBU,UAAU,GAAA,CAAA,EAAA,CAAA;8EAAV,UAAU,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,CAAA;uFAAV,UAAU,EAAA,CAAA;cAHtB,IAAI;AAAC,QAAA,IAAA,EAAA,CAAA;AACJ,gBAAA,IAAI,EAAE,aAAa;AACpB,aAAA,CAAA;;;MCQY,cAAc,CAAA;IAIzB,WACU,CAAA,UAAsB,EACtB,IAAY,EAAA;QADZ,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;QACtB,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAQ;QAJU,IAAQ,CAAA,QAAA,GAAG,KAAK,CAAC;KAK5C;IAEL,eAAe,GAAA;QACb,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO;AACR,SAAA;AAED,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/B,MAAM,OAAO,GAAG,QAAQ;cACpB,QAAQ,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,QAAQ;AACvF,cAAE,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;QAElC,IAAI,CAAC,OAAO,EAAE;YACZ,MAAM,IAAI,SAAS,CACjB,iBAAiB,EACjB,CAAW,QAAA,EAAA,IAAI,CAAC,QAAQ,CAAe,aAAA,CAAA,CACxC,CAAC;AACH,SAAA;AAED,QAAA,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YAC9B,MAAM,IAAI,SAAS,CACjB,iBAAiB,EACjB,CAA8B,2BAAA,EAAA,OAAO,CAAE,CAAA,CACxC,CAAC;AACH,SAAA;;;QAID,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAC1B,UAAU,CAAC,MAAK;YACd,OAAO,CAAC,KAAK,EAAE,CAAC;AAClB,SAAC,EAAE,EAAE,CAAC,CAAC,CAAC;KACX;;4EAvCU,cAAc,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA;iEAAd,cAAc,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAA,cAAA,EAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,QAAA,EAAA,CAAA,cAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,uBAAA,EAAA,UAAA,CAAA,EAAA,EAAA,CAAA,CAAA;uFAAd,cAAc,EAAA,CAAA;cAH1B,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,gBAAgB;AAC3B,aAAA,CAAA;kFAEwB,QAAQ,EAAA,CAAA;kBAA9B,KAAK;mBAAC,cAAc,CAAA;YACW,QAAQ,EAAA,CAAA;kBAAvC,KAAK;mBAAC,uBAAuB,CAAA;;;MCEnB,WAAW,CAAA;;sEAAX,WAAW,GAAA,CAAA,EAAA,CAAA;6DAAX,WAAW,EAAA,CAAA,CAAA;;uFAAX,WAAW,EAAA,CAAA;cAZvB,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,cAAc;oBACd,kBAAkB;oBAClB,aAAa;AACd,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,cAAc;oBACd,kBAAkB;oBAClB,aAAa;AACd,iBAAA;AACF,aAAA,CAAA;;AACY,CAAA,YAAA,EAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,WAAW,mBAVpB,cAAc;QACd,kBAAkB;AAClB,QAAA,aAAa,aAGb,cAAc;QACd,kBAAkB;QAClB,aAAa,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;MCPJ,aAAa,CAAA;IACxB,SAAS,CAAC,IAAqB,EAAE,MAAuB,EAAA;AACtD,QAAA,IAAI,CAAC,IAAI,IAAI,IAAI,KAAK,CAAC,MAAM,MAAM,IAAI,MAAM,KAAK,CAAC,CAAC,EAAE;AACpD,YAAA,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;AACvB,YAAA,MAAM,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;AAE3B,YAAA,MAAM,QAAQ,GAAG,IAAI,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC;AACxD,YAAA,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AACvB,gBAAA,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,EAC1B,CAAC,IAAI,CAAgB,aAAA,EAAA,WAAW,oBAAoB,UAAU,CAAC,CAAC,CAAC,CAAA,OAAA,CAAS,CAC3E,CAAC;AACH,aAAA;AAED,YAAA,MAAM,SAAS,GAAG,IAAI,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;AACvD,YAAA,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;gBAC1B,OAAO,CAAA,aAAA,EAAgB,WAAW,CAAoB,iBAAA,EAAA,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC;AACjF,aAAA;AACF,SAAA;AAED,QAAA,OAAO,UAAU,CAAC,IAAc,CAAC,CAAC;KACnC;;0EApBU,aAAa,GAAA,CAAA,EAAA,CAAA;oFAAb,aAAa,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,CAAA;uFAAb,aAAa,EAAA,CAAA;cAHzB,IAAI;AAAC,QAAA,IAAA,EAAA,CAAA;AACJ,gBAAA,IAAI,EAAE,gBAAgB;AACvB,aAAA,CAAA;;;MCoBY,eAAe,CAAA;AAqB1B,IAAA,WAAA,CACU,MAAkB,EAClB,YAAiC,EACjC,WAAuB,EAAA;QAFvB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;QAClB,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAqB;QACjC,IAAW,CAAA,WAAA,GAAX,WAAW,CAAY;;AAnBjC,QAAA,IAAA,CAAA,OAAO,GAAmC;AACxC,YAAA,SAAS,EAAE,IAAI;SAChB,CAAC;QAmBA,IAAI,CAAC,YAAY,CAAC,GAAG,GAAG,MAAM,QAAQ,CAAC;KACxC;AAlBD,IAAA,IAAI,IAAI,GAAA;QACN,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC;KACtC;AAED,IAAA,IAAI,OAAO,GAAA;QACT,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC;KAC5C;AAED,IAAA,IAAI,EAAE,GAAA;QACJ,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC;KACpC;IAUD,eAAe,GAAA;QACb,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;AAC1C,QAAA,MAAM,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;AAE3C,QAAA,MAAM,aAAa,GAAG,IAAI,aAAa,CAAC,aAAa,EAAE,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;AAC/E,QAAA,MAAM,YAAY,GAAG,IAAI,YAAY,CAAC,KAAK,EAAE,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;AAE1E,QAAA,aAAa,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAEtD,QAAA,MAAM,MAAM,GAAG,IAAI,MAAM,CACvB,IAAI,OAAO,CAAC;AACV,YAAA,OAAO,EAAE,MAAM,YAAY,CAAC,MAAM,EAAE;AACrC,SAAA,CAAC,EACF,aAAa,EACb,aAAa,CACd,CAAC;QAEF,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AACvD,SAAA;AAED,QAAA,MAAM,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAE/D,KAAK,CAAC,MAAM,CAAC;YACX,KAAK;SACN,EAAE;AACD,YAAA,MAAM,EAAE,kBAAkB;AAC3B,SAAA,CAAC,CAAC;AAEH,QAAA,UAAU,CAAC,GAAG,CAAC,MAAK;;YAElB,KAAK,CAAC,MAAM,CAAC;AACX,gBAAA,KAAK,EAAE,KAAK;AACT,qBAAA,MAAM,EAAE;qBACR,KAAK;qBACL,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,MAAM,CAAC;aAC7B,EAAE;AACD,gBAAA,MAAM,EAAE,kBAAkB;AAC3B,aAAA,CAAC,CAAC;AACL,SAAC,CAAC,CAAC;KACJ;;8EArEU,eAAe,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,CAAA,CAAA,EAAA,CAAA;kEAAf,eAAe,EAAA,SAAA,EAAA,CAAA,CAAA,eAAA,CAAA,CAAA,EAAA,cAAA,EAAA,SAAA,8BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,QAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;oCAEZ,WAAW,EAAA,CAAA,CAAA,CAAA;;;;0EALd,CAAC,mBAAmB,EAAE,UAAU,CAAC,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,SAAA,wBAAA,CAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,CAAA,EAAA,CAAA,CAAA;uFAGjC,eAAe,EAAA,CAAA;cAN3B,SAAS;2BACE,eAAe,EAAA,SAAA,EAEd,CAAC,mBAAmB,EAAE,UAAU,CAAC,EAAA,eAAA,EAC3B,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA;wHAGtC,OAAO,EAAA,CAAA;kBAAf,KAAK;YACqB,WAAW,EAAA,CAAA;kBAArC,YAAY;mBAAC,WAAW,CAAA;;;MCbd,YAAY,CAAA;;wEAAZ,YAAY,GAAA,CAAA,EAAA,CAAA;8DAAZ,YAAY,EAAA,CAAA,CAAA;kEAHrB,cAAc,CAAA,EAAA,CAAA,CAAA;uFAGL,YAAY,EAAA,CAAA;cAXxB,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,eAAe;AAChB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,eAAe;AAChB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,cAAc;AACf,iBAAA;AACF,aAAA,CAAA;;AACY,CAAA,YAAA,EAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,YAAY,EATrB,EAAA,YAAA,EAAA,CAAA,eAAe,CAMf,EAAA,OAAA,EAAA,CAAA,cAAc,aAHd,eAAe,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;MCJN,aAAa,CAAA;AACxB,IAAA,WAAA,GAAA,GAAiB;IAEjB,SAAS,CAAC,KAAU,EAAE,SAA6B,EAAA;AACjD,QAAA,IAAI,SAAS,EAAE;AACb,YAAA,OAAO,SAAS,CAAC,KAAK,CAAC,CAAC;AACzB,SAAA;AAED,QAAA,OAAO,KAAK,CAAC;KACd;;0EATU,aAAa,GAAA,CAAA,EAAA,CAAA;oFAAb,aAAa,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,CAAA;uFAAb,aAAa,EAAA,CAAA;cAHzB,IAAI;AAAC,QAAA,IAAA,EAAA,CAAA;AACJ,gBAAA,IAAI,EAAE,gBAAgB;AACvB,aAAA,CAAA;;;MCIY,iBAAiB,CAAA;IAG5B,WACU,CAAA,UAAsB,EACtB,UAAsB,EAAA;QADtB,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;QACtB,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;QAJN,IAAM,CAAA,MAAA,GAAG,EAAE,CAAC;KAMrC;IAED,QAAQ,GAAA;AACN,QAAA,MAAM,QAAQ,GAAG,IAAI,cAAc,CACjC;AACE,YAAA,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,aAAa;YACtC,UAAU,EAAE,IAAI,CAAC,MAAM;AACxB,SAAA,EACD,IAAI,CAAC,UAAU,CAChB,CAAC;QAEF,QAAQ,CAAC,UAAU,EAAE,CAAC;KACvB;;kFAnBU,iBAAiB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,CAAA,CAAA,EAAA,CAAA;oEAAjB,iBAAiB,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAA,iBAAA,EAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,CAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAFjB,CAAC,UAAU,CAAC,CAAA,CAAA,EAAA,CAAA,CAAA;uFAEZ,iBAAiB,EAAA,CAAA;cAJ7B,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,mBAAmB;gBAC7B,SAAS,EAAE,CAAC,UAAU,CAAC;AACxB,aAAA,CAAA;sFAE2B,MAAM,EAAA,CAAA;kBAA/B,KAAK;mBAAC,iBAAiB,CAAA;;;MCEb,YAAY,CAAA;;wEAAZ,YAAY,GAAA,CAAA,EAAA,CAAA;8DAAZ,YAAY,EAAA,CAAA,CAAA;;uFAAZ,YAAY,EAAA,CAAA;cARxB,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,iBAAiB;AAClB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,iBAAiB;AAClB,iBAAA;AACF,aAAA,CAAA;;wFACY,YAAY,EAAA,EAAA,YAAA,EAAA,CANrB,iBAAiB,CAAA,EAAA,OAAA,EAAA,CAGjB,iBAAiB,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;MCCR,eAAe,CAAA;AAM1B,IAAA,WAAA,CAAY,YAAiC,EAAA;;AAJ7C,QAAA,IAAA,CAAA,OAAO,GAAmC;AACxC,YAAA,SAAS,EAAE,IAAI;SAChB,CAAC;AAGA,QAAA,YAAY,CAAC,GAAG,GAAG,MAAM,6BAA6B,CAAC;KACxD;;8EARU,eAAe,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,mBAAA,CAAA,CAAA,CAAA,EAAA,CAAA;kEAAf,eAAe,EAAA,SAAA,EAAA,CAAA,CAAA,eAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAFf,CAAC,mBAAmB,CAAC,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,KAAA,EAAA,6BAAA,EAAA,CAAA,EAAA,SAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,wBAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QCPlC,EAEe,CAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;;QADD,EAAmB,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,OAAA,CAAA,CAAA;;uFDQpB,eAAe,EAAA,CAAA;cAN3B,SAAS;AACE,QAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,eAAe,mBAER,uBAAuB,CAAC,MAAM,EACpC,SAAA,EAAA,CAAC,mBAAmB,CAAC,EAAA,QAAA,EAAA,4GAAA,EAAA,CAAA;;;MEQrB,YAAY,CAAA;;wEAAZ,YAAY,GAAA,CAAA,EAAA,CAAA;8DAAZ,YAAY,EAAA,CAAA,CAAA;kEAHrB,cAAc,CAAA,EAAA,CAAA,CAAA;uFAGL,YAAY,EAAA,CAAA;cAXxB,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,eAAe;AAChB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,eAAe;AAChB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,cAAc;AACf,iBAAA;AACF,aAAA,CAAA;;AACY,CAAA,YAAA,EAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,YAAY,EATrB,EAAA,YAAA,EAAA,CAAA,eAAe,CAMf,EAAA,OAAA,EAAA,CAAA,cAAc,aAHd,eAAe,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;;;;;;ICTnB,EAA+D,CAAA,kBAAA,CAAA,CAAA,CAAA,CAAA;;;IAI3D,EACkC,CAAA,cAAA,CAAA,CAAA,EAAA,GAAA,EAAA,EAAA,CAAA,CAAA;IAChC,EACF,CAAA,MAAA,CAAA,CAAA,EAAA,UAAA,CAAA,CAAA;IAAA,EAAI,CAAA,YAAA,EAAA,CAAA;;;IACJ,EACmC,CAAA,cAAA,CAAA,CAAA,EAAA,GAAA,EAAA,EAAA,CAAA,CAAA;IACjC,EACF,CAAA,MAAA,CAAA,CAAA,EAAA,UAAA,CAAA,CAAA;IAAA,EAAI,CAAA,YAAA,EAAA,CAAA;;;IARN,EAAqC,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;IACnC,EAGI,CAAA,UAAA,CAAA,CAAA,EAAA,4CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA,CAAA,CAAA;IACJ,EAGI,CAAA,UAAA,CAAA,CAAA,EAAA,4CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA,CAAA,CAAA;IACN,EAAO,CAAA,YAAA,EAAA,CAAA;IACP,EAAoC,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;IAAA,EAAkE,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;;IAAA,EAAO,CAAA,YAAA,EAAA,CAAA;IAC7G,EAAoC,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;IAAA,EAAiE,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;;IAAA,EAAO,CAAA,YAAA,EAAA,CAAA;IAC5G,EAAoC,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,CAAA;IAAA,EAAiD,CAAA,MAAA,CAAA,EAAA,CAAA,CAAA;;IAAA,EAAO,CAAA,YAAA,EAAA,CAAA;;;IAXtF,EAAqC,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAArC,EAAqC,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,aAAA,CAAA,MAAA,CAAA,IAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,CAAA;IAIrC,EAAqC,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAArC,EAAqC,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,aAAA,CAAA,MAAA,CAAA,IAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,CAAA;IAKP,EAAkE,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAlE,EAAkE,CAAA,iBAAA,CAAA,EAAA,CAAA,WAAA,CAAA,CAAA,EAAA,CAAA,EAAA,MAAA,CAAA,aAAA,CAAA,MAAA,CAAA,IAAA,CAAA,OAAA,CAAA,EAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA;IAClE,EAAiE,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAjE,EAAiE,CAAA,iBAAA,CAAA,EAAA,CAAA,WAAA,CAAA,CAAA,EAAA,CAAA,EAAA,MAAA,CAAA,IAAA,CAAA,OAAA,CAAA,aAAA,EAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA;IACjE,EAAiD,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAjD,EAAiD,CAAA,iBAAA,CAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,EAAA,MAAA,CAAA,IAAA,CAAA,KAAA,EAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA;;;IAQnF,EACkC,CAAA,cAAA,CAAA,CAAA,EAAA,GAAA,EAAA,EAAA,CAAA,CAAA;IAChC,EACF,CAAA,MAAA,CAAA,CAAA,EAAA,UAAA,CAAA,CAAA;IAAA,EAAI,CAAA,YAAA,EAAA,CAAA;;;IACJ,EACmC,CAAA,cAAA,CAAA,CAAA,EAAA,GAAA,EAAA,EAAA,CAAA,CAAA;IACjC,EACF,CAAA,MAAA,CAAA,CAAA,EAAA,UAAA,CAAA,CAAA;IAAA,EAAI,CAAA,YAAA,EAAA,CAAA;;;IAXN,EAAoC,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,CAAA;IAAA,EAAgB,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;IAAA,EAAO,CAAA,YAAA,EAAA,CAAA;IAC3D,EAAoC,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;IAAA,EAAgC,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;IAAA,EAAO,CAAA,YAAA,EAAA,CAAA;IAC3E,EAAoC,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;IAAA,EAAiC,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;IAAA,EAAO,CAAA,YAAA,EAAA,CAAA;IAC5E,EAAqC,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;IACnC,EAGI,CAAA,UAAA,CAAA,CAAA,EAAA,4CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA,CAAA,CAAA;IACJ,EAGI,CAAA,UAAA,CAAA,CAAA,EAAA,4CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA,CAAA,CAAA;IACN,EAAO,CAAA,YAAA,EAAA,CAAA;;;IAZ6B,EAAgB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAhB,EAAgB,CAAA,iBAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA;IAChB,EAAgC,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAhC,EAAgC,CAAA,iBAAA,CAAA,MAAA,CAAA,IAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;IAChC,EAAiC,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAjC,EAAiC,CAAA,iBAAA,CAAA,MAAA,CAAA,aAAA,CAAA,MAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CAAA,CAAA;IAE/D,EAAqC,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAArC,EAAqC,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,aAAA,CAAA,MAAA,CAAA,IAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,CAAA;IAIrC,EAAqC,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAArC,EAAqC,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,aAAA,CAAA,MAAA,CAAA,IAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,CAAA;;;IAQ3C,EAAoC,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;IAAA,EAAgC,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;IAAA,EAAO,CAAA,YAAA,EAAA,CAAA;IAC3E,EAAoC,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,CAAA;IAAA,EAAgB,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;IAAA,EAAO,CAAA,YAAA,EAAA,CAAA;;;IADvB,EAAgC,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAhC,EAAgC,CAAA,iBAAA,CAAA,MAAA,CAAA,IAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;IAChC,EAAgB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAhB,EAAgB,CAAA,iBAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA;;;IAIpD,EAAoC,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;IAAA,EAAgC,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;IAAA,EAAO,CAAA,YAAA,EAAA,CAAA;IAC3E,EAAoC,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,CAAA;IAAA,EAAgB,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;IAAA,EAAO,CAAA,YAAA,EAAA,CAAA;;;IADvB,EAAgC,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAhC,EAAgC,CAAA,iBAAA,CAAA,MAAA,CAAA,IAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;IAChC,EAAgB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAhB,EAAgB,CAAA,iBAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA;;MCrBzC,iBAAiB,CAAA;AAa5B,IAAA,WAAA,CAAoB,IAAY,EAAA;QAAZ,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAQ;QAXvB,IAAQ,CAAA,QAAA,GAAG,GAAG,CAAC;QASxB,IAAS,CAAA,SAAA,GAAQ,IAAI,CAAC;KAGrB;IAED,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AACtB,YAAA,MAAM,IAAI,SAAS,CAAC,qBAAqB,EAAE,kBAAkB,CAAC,CAAC;AAChE,SAAA;AACD,QAAA,IAAI,CAAC,KAAK,GAAG,CAAA,kCAAA,EAAqC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAA,CAAA,CAAG,CAAC;QAE3E,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YACzC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,sBAAsB,GAAG,wBAAwB,CAAC;AAC7G,SAAA;AACD,QAAA,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAK;AAC/B,YAAA,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC,MAAK;AAC/B,gBAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACzB,aAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AACpB,SAAC,CAAC,CAAC;KACJ;IAED,WAAW,GAAA;QACT,IAAI,IAAI,CAAC,SAAS,EAAE;AAClB,YAAA,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC9B,SAAA;KACF;AAED,IAAA,aAAa,CAAC,KAAmB,EAAA;AAC/B,QAAA,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI;AAC3B,YAAA,KAAK,QAAQ,CAAC;AACd,YAAA,KAAK,UAAU;gBACb,OAAO,CAAC,KAAK,CAAC,YAAY,GAAG,CAAC,KAAK,CAAC,aAAa,CAAC;AACpD,YAAA;AACE,gBAAA,OAAO,IAAI,CAAC;AACf,SAAA;KACF;IAED,WAAW,GAAA;AACT,QAAA,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI;AAC3B,YAAA,KAAK,UAAU;gBACb,OAAO,IAAI,CAAC,gBAAgB,CAAC;AAC/B,YAAA,KAAK,MAAM;gBACT,OAAO,IAAI,CAAC,YAAY,CAAC;AAC3B,YAAA,KAAK,QAAQ;gBACX,OAAO,IAAI,CAAC,cAAc,CAAC;AAC7B,YAAA;gBACE,OAAO,IAAI,CAAC,YAAY,CAAC;AAC5B,SAAA;KACF;;kFA3DU,iBAAiB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA;oEAAjB,iBAAiB,EAAA,SAAA,EAAA,CAAA,CAAA,kBAAA,CAAA,CAAA,EAAA,SAAA,EAAA,SAAA,uBAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;;;;;;;;;;;;;AAHjB,KAAA,EAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,QAAA,EAAA,UAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAAA,CAAC,mBAAmB,CAAC,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,kBAAA,CAAA,EAAA,CAAA,UAAA,EAAA,EAAA,CAAA,EAAA,CAAA,QAAA,EAAA,EAAA,CAAA,EAAA,CAAA,MAAA,EAAA,EAAA,CAAA,EAAA,CAAA,MAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA,wBAAA,CAAA,EAAA,CAAA,OAAA,EAAA,wBAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,OAAA,EAAA,yBAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,uBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,uBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,uBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,aAAA,EAAA,YAAA,CAAA,EAAA,CAAA,CAAA,EAAA,aAAA,EAAA,aAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,0BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QDjBlC,EAA+D,CAAA,UAAA,CAAA,CAAA,EAAA,yCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,cAAA,EAAA,CAAA,CAAA,CAAA;QAE/D,EAcc,CAAA,UAAA,CAAA,CAAA,EAAA,wCAAA,EAAA,EAAA,EAAA,EAAA,EAAA,aAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,sBAAA,CAAA,CAAA;QAEd,EAcc,CAAA,UAAA,CAAA,CAAA,EAAA,wCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,sBAAA,CAAA,CAAA;QAEd,EAGc,CAAA,UAAA,CAAA,CAAA,EAAA,wCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,sBAAA,CAAA,CAAA;QAEd,EAGc,CAAA,UAAA,CAAA,CAAA,EAAA,wCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,sBAAA,CAAA,CAAA;;QA1CC,EAA+B,CAAA,UAAA,CAAA,kBAAA,EAAA,GAAA,CAAA,WAAA,EAAA,CAAA,CAAA;;uFCoBjC,iBAAiB,EAAA,CAAA;cAN7B,SAAS;AACE,QAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,kBAAkB,aAEjB,CAAC,mBAAmB,CAAC,EACf,eAAA,EAAA,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,onDAAA,EAAA,CAAA;yDAGtC,IAAI,EAAA,CAAA;kBAAZ,KAAK;YACG,QAAQ,EAAA,CAAA;kBAAhB,KAAK;YAEgB,KAAK,EAAA,CAAA;kBAA1B,WAAW;mBAAC,OAAO,CAAA;YAEqB,gBAAgB,EAAA,CAAA;kBAAxD,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA,UAAU,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;YACA,cAAc,EAAA,CAAA;kBAApD,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA,QAAQ,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;YACA,YAAY,EAAA,CAAA;kBAAhD,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA,MAAM,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;YACE,YAAY,EAAA,CAAA;kBAAhD,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA,MAAM,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;;;MCtBxB,QAAQ,CAAA;AACnB,IAAA,WAAA,CAAoB,IAAc,EAAA;QAAd,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAU;KAAK;AAEvC,IAAA,SAAS,CAAC,KAAU,EAAE,MAAY,EAAE,QAAc,EAAE,MAAY,EAAA;QAC9D,IAAI;AACF,YAAA,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;AAC7D,SAAA;AAAC,QAAA,OAAO,EAAE,EAAE;YACX,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,CAAC,OAAO,CAAC,CAAC;AACjC,YAAA,OAAO,KAAK,CAAC;AACd,SAAA;KACF;;gEAVU,QAAQ,EAAA,EAAA,CAAA,iBAAA,CAAAG,IAAA,CAAA,QAAA,EAAA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA;0EAAR,QAAQ,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,CAAA;uFAAR,QAAQ,EAAA,CAAA;cAHpB,IAAI;AAAC,QAAA,IAAA,EAAA,CAAA;AACJ,gBAAA,IAAI,EAAE,WAAW;AAClB,aAAA,CAAA;;;MCCY,UAAU,CAAA;AACrB,IAAA,WAAA,CAAoB,IAAiB,EAAA;QAAjB,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAa;KAAK;AAE1C,IAAA,SAAS,CAAC,KAAU,EAAE,UAAgB,EAAE,MAAY,EAAA;QAClD,IAAI;AACF,YAAA,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;AACvD,SAAA;AAAC,QAAA,OAAO,EAAE,EAAE;YACX,GAAG,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,CAAC,OAAO,CAAC,CAAC;AACnC,YAAA,OAAO,KAAK,CAAC;AACd,SAAA;KACF;;oEAVU,UAAU,EAAA,EAAA,CAAA,iBAAA,CAAAA,IAAA,CAAA,WAAA,EAAA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA;8EAAV,UAAU,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,CAAA;uFAAV,UAAU,EAAA,CAAA;cAHtB,IAAI;AAAC,QAAA,IAAA,EAAA,CAAA;AACJ,gBAAA,IAAI,EAAE,aAAa;AACpB,aAAA,CAAA;;;MCAY,QAAQ,CAAA;IACnB,SAAS,CAAC,IAAY,EAAE,MAAuB,EAAA;AAC7C,QAAA,QAAQ,MAAM;YACZ,KAAK,eAAe,EAAE;gBACpB,OAAO,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;AAC/D,aAAA;AACD,YAAA,SAAS;gBACP,MAAM,IAAI,SAAS,CAAC,WAAW,EAAE,CAA8B,2BAAA,EAAA,MAAM,CAAG,CAAA,CAAA,CAAC,CAAC;AAC3E,aAAA;AACF,SAAA;KACF;;gEAVU,QAAQ,GAAA,CAAA,EAAA,CAAA;0EAAR,QAAQ,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,CAAA;uFAAR,QAAQ,EAAA,CAAA;cAHpB,IAAI;AAAC,QAAA,IAAA,EAAA,CAAA;AACJ,gBAAA,IAAI,EAAE,WAAW;AAClB,aAAA,CAAA;;;MCiCY,UAAU,CAAA;;oEAAV,UAAU,GAAA,CAAA,EAAA,CAAA;4DAAV,UAAU,EAAA,CAAA,CAAA;;uFAAV,UAAU,EAAA,CAAA;cA1BtB,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,SAAS;oBACT,WAAW;oBACX,YAAY;oBACZ,QAAQ;oBACR,UAAU;oBACV,aAAa;oBACb,aAAa;oBACb,UAAU;oBACV,QAAQ;oBACR,QAAQ;AACT,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,SAAS;oBACT,WAAW;oBACX,YAAY;oBACZ,QAAQ;oBACR,UAAU;oBACV,aAAa;oBACb,aAAa;oBACb,UAAU;oBACV,QAAQ;oBACR,QAAQ;AACT,iBAAA;AACF,aAAA,CAAA;;AACY,CAAA,YAAA,EAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,UAAU,mBAxBnB,SAAS;QACT,WAAW;QACX,YAAY;QACZ,QAAQ;QACR,UAAU;QACV,aAAa;QACb,aAAa;QACb,UAAU;QACV,QAAQ;AACR,QAAA,QAAQ,aAGR,SAAS;QACT,WAAW;QACX,YAAY;QACZ,QAAQ;QACR,UAAU;QACV,aAAa;QACb,aAAa;QACb,UAAU;QACV,QAAQ;QACR,QAAQ,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;MChBC,cAAc,CAAA;;4EAAd,cAAc,GAAA,CAAA,EAAA,CAAA;gEAAd,cAAc,EAAA,CAAA,CAAA;oEALvB,cAAc;QACd,YAAY;QACZ,UAAU,CAAA,EAAA,CAAA,CAAA;uFAGD,cAAc,EAAA,CAAA;cAb1B,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,iBAAiB;AAClB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,iBAAiB;AAClB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,cAAc;oBACd,YAAY;oBACZ,UAAU;AACX,iBAAA;AACF,aAAA,CAAA;;wFACY,cAAc,EAAA,EAAA,YAAA,EAAA,CAXvB,iBAAiB,CAAA,EAAA,OAAA,EAAA,CAMjB,cAAc;QACd,YAAY;AACZ,QAAA,UAAU,aALV,iBAAiB,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;MCKR,mBAAmB,CAAA;IAG9B,WAAoB,CAAA,MAAkB,EAAU,IAAY,EAAA;QAAxC,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;QAAU,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAQ;QAFzC,IAAQ,CAAA,QAAA,GAAG,GAAG,CAAC;KAE+B;IAEjE,QAAQ,GAAA;AACN,QAAA,IAAI,QAAgB,CAAC;AACrB,QAAA,IAAI,MAAc,CAAC;AACnB,QAAA,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;AAC9B,QAAA,IAAI,cAAqB,CAAC;QAE1B,KAAK,CAAC,SAAS,CAAC;AACd,YAAA,KAAK,EAAE,KAAK,CAAC,SAAS,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,KAAI;gBAChE,MAAM,eAAe,GAAG,cAAc,CAAC;AACvC,gBAAA,cAAc,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC;AAEjE,gBAAA,IAAI,CAAC,eAAe,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;oBACrC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACZ,OAAO;AACR,iBAAA;gBAED,MAAM,EAAE,QAAQ,EAAE,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;gBAClC,MAAM,UAAU,GAAG,EAAE,CAAC;AAEtB,gBAAA,QAAQ,GAAG,cAAc,CAAC,MAAM,CAAC;gBACjC,MAAM,GAAG,CAAC,CAAC;AAEX,gBAAA,KAAK,IAAI,WAAW,GAAG,CAAC,EAAE,MAAM,GAAG,eAAe,CAAC,MAAM,EAAE,WAAW,GAAG,MAAM,EAAE,WAAW,EAAE,EAAE;AAC9F,oBAAA,MAAM,cAAc,GAAG,cAAc,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,CAAC,KACxD,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,KAAK,QAAQ,CAAC,WAAW,EAAE,eAAe,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBAE3F,IAAI,cAAc,KAAK,WAAW,EAAE;AAClC,wBAAA,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,cAAc,CAAC,EAAE,QAAQ,CAAC,CAAC;AACrE,wBAAA,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,cAAc,CAAC,EAAE,MAAM,CAAC,CAAC;AAClE,qBAAA;AACF,iBAAA;AAED,gBAAA,KAAK,IAAI,WAAW,GAAG,CAAC,EAAE,MAAM,GAAG,eAAe,CAAC,MAAM,EAAE,WAAW,GAAG,MAAM,EAAE,WAAW,EAAE,EAAE;AAC9F,oBAAA,MAAM,cAAc,GAAG,cAAc,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,CAAC,KACxD,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,KAAK,QAAQ,CAAC,WAAW,EAAE,eAAe,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBAE3F,IAAI,cAAc,KAAK,WAAW,EAAE;AAClC,wBAAA,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,cAAc,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;AACjF,qBAAA;AACF,iBAAA;AAED,gBAAA,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAK;AAC/B,oBAAA,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;yBACpB,IAAI,CAAC,QAAQ,CAAC,CAAC;AACpB,iBAAC,CAAC,CAAC;AACL,aAAC,CAAC;AACH,SAAA,CAAC,CAAC;KACJ;AAEO,IAAA,UAAU,CAAC,IAAY,EAAE,EAAU,EAAE,QAAgB,EAAE,MAAc,EAAA;AAC3E,QAAA,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;QAE9B,OAAO,IAAI,OAAO,CAAC,CAAC,YAAY,EAAE,cAAc,KAAI;YAClD,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC1C,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YACxC,MAAM,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAChD,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAE5C,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,EAAE;AAC5C,gBAAA,MAAM,UAAU,GAAG,SAAS,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;AACjD,gBAAA,cAAc,CAAC,CAAA,4BAAA,EAA+B,UAAU,CAAA,CAAE,CAAC,CAAC;gBAC5D,OAAO;AACR,aAAA;AAED,YAAA,OAAO,CAAC,OAAO,CAAC,MAAK;AACnB,gBAAA,MAAM,OAAO,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;AAC5C,gBAAA,MAAM,OAAO,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;AAC5C,gBAAA,MAAM,SAAS,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;AAChD,gBAAA,MAAM,OAAO,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;gBAC5C,IAAI,MAAM,GAAG,CAAC,CAAC;gBAEf,IAAI,IAAI,GAAG,EAAE,EAAE;AACb,oBAAA,MAAM,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;AACnG,iBAAA;AAAM,qBAAA;AACL,oBAAA,MAAM,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC;AACzF,iBAAA;AAED,gBAAA,OAAO,CAAC,MAAM,CAAC,MAAK;oBAClB,MAAM,aAAa,GAAG,EAAE,CAAC;AACzB,oBAAA,SAAS,CAAC,QAAQ,CAAC,GAAG,WAAW,CAAA,YAAA,CAAc,CAAC,CAAC;AACjD,oBAAA,SAAS,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,IAAI,IAAI,aAAa,CAAC,IAAI,CAClD,IAAI,OAAO,CAAC,kBAAkB,IAAG;AAC/B,wBAAA,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,OAAO,CAC5C,CAAC,EAAE,SAAS,EAAE,iBAAiB,EAAE,EAAE,EAAE,SAAS,EAAE,CAAA,WAAA,EAAc,MAAM,CAAA,GAAA,CAAK,EAAE,CAAC,EAC5E,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAC5B,CAAC;wBAEF,SAAS,CAAC,QAAQ,GAAG,MAAM,OAAO,CAAC,MAAM,CAAC,MAAK;AAC7C,4BAAA,SAAS,CAAC,WAAW,CAAC,GAAG,WAAW,CAAA,YAAA,CAAc,CAAC,CAAC;AACpD,4BAAA,SAAS,CAAC,WAAW,CAAC,GAAG,WAAW,CAAA,KAAA,CAAO,CAAC,CAAC;4BAC7C,kBAAkB,CAAC,IAAI,CAAC,CAAC;AAC3B,yBAAC,CAAC,CAAC;qBACJ,CAAC,CAAC,CAAC,CAAC;AAEP,oBAAA,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,MAAM,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;AAC/D,iBAAC,CAAC,CAAC;AACL,aAAC,CAAC,CAAC;AACL,SAAC,CAAC,CAAC;KACJ;;sFAvGU,mBAAmB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA;sEAAnB,mBAAmB,EAAA,SAAA,EAAA,CAAA,CAAA,qBAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,QAAA,EAAA,UAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAHnB,CAAC,UAAU,CAAC,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,SAAA,4BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,CAAA,EAAA,CAAA,CAAA;uFAGZ,mBAAmB,EAAA,CAAA;cAN/B,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,qBAAqB;AAC/B,gBAAA,QAAQ,EAAE,EAAE;gBACZ,SAAS,EAAE,CAAC,UAAU,CAAC;gBACvB,eAAe,EAAE,uBAAuB,CAAC,MAAM;AAChD,aAAA,CAAA;kFAEoB,QAAQ,EAAA,CAAA;kBAA1B,KAAK;mBAAC,UAAU,CAAA;;;MCFN,gBAAgB,CAAA;;gFAAhB,gBAAgB,GAAA,CAAA,EAAA,CAAA;kEAAhB,gBAAgB,EAAA,CAAA,CAAA;sEAHzB,YAAY,CAAA,EAAA,CAAA,CAAA;uFAGH,gBAAgB,EAAA,CAAA;cAX5B,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,mBAAmB;AACpB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,mBAAmB;AACpB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,YAAY;AACb,iBAAA;AACF,aAAA,CAAA;;AACY,CAAA,YAAA,EAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,gBAAgB,EATzB,EAAA,YAAA,EAAA,CAAA,mBAAmB,CAMnB,EAAA,OAAA,EAAA,CAAA,YAAY,aAHZ,mBAAmB,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;MCOV,gBAAgB,CAAA;IAG3B,WAAoB,CAAA,MAAkB,EAAU,IAAY,EAAA;QAAxC,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;QAAU,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAQ;QAFzC,IAAQ,CAAA,QAAA,GAAG,GAAG,CAAC;KAE+B;IAEjE,QAAQ,GAAA;AACN,QAAA,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;AAC9B,QAAA,IAAI,WAAkB,CAAC;QAEvB,KAAK,CAAC,SAAS,CAAC;AACd,YAAA,KAAK,EAAE,KAAK,CAAC,SAAS,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,KAAI;gBAChE,MAAM,YAAY,GAAG,WAAW,CAAC;AACjC,gBAAA,WAAW,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;AAElD,gBAAA,IAAI,CAAC,YAAY,IAAI,CAAC,WAAW,EAAE;oBACjC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACZ,OAAO;AACR,iBAAA;gBAED,MAAM,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;gBAC/B,MAAM,UAAU,GAAG,EAAE,CAAC;AAEtB,gBAAA,KAAK,IAAI,QAAQ,GAAG,CAAC,EAAE,MAAM,GAAG,YAAY,CAAC,MAAM,EAAE,QAAQ,GAAG,MAAM,EAAE,QAAQ,EAAE,EAAE;AAClF,oBAAA,MAAM,WAAW,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC,KAAK,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK,KAAK,CAAC,QAAQ,EAAE,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACjH,IAAI,WAAW,GAAG,CAAC,EAAE;wBACnB,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC5C,qBAAA;yBAAM,IAAI,WAAW,KAAK,QAAQ,EAAE;AACnC,wBAAA,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC,CAAC;AACtD,qBAAA;AACF,iBAAA;AAED,gBAAA,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAK;AAC/B,oBAAA,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;yBACpB,IAAI,CAAC,QAAQ,CAAC,CAAC;AACpB,iBAAC,CAAC,CAAC;AACL,aAAC,CAAC;AACH,SAAA,CAAC,CAAC;KACJ;AAEO,IAAA,UAAU,CAAC,KAAa,EAAA;QAC9B,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;AACrC,YAAA,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAC7C,YAAA,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE;AACf,gBAAA,MAAM,CAAC,CAAA,yBAAA,EAA4B,KAAK,CAAA,CAAE,CAAC,CAAC;gBAC5C,OAAO;AACR,aAAA;AAED,YAAA,OAAO,CAAC,MAAM,CAAC,MAAK;AAClB,gBAAA,MAAM,SAAS,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAC7C,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,EAAE,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,EACpC,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAC5B,CAAC;gBAEF,SAAS,CAAC,QAAQ,GAAG,MAAM,OAAO,CAAC,IAAI,CAAC,CAAC;AAC3C,aAAC,CAAC,CAAC;AACL,SAAC,CAAC,CAAC;KACJ;IAEO,OAAO,CAAC,IAAY,EAAE,EAAU,EAAA;AACtC,QAAA,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;QAE9B,OAAO,IAAI,OAAO,CAAC,CAAC,YAAY,EAAE,cAAc,KAAI;YAClD,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACnC,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YAEjC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE;AACpC,gBAAA,MAAM,UAAU,GAAG,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;AAC7C,gBAAA,cAAc,CAAC,CAAA,yBAAA,EAA4B,UAAU,CAAA,CAAE,CAAC,CAAC;gBACzD,OAAO;AACR,aAAA;AAED,YAAA,OAAO,CAAC,OAAO,CAAC,MAAK;AACnB,gBAAA,MAAM,MAAM,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,GAAG,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC;AAEnD,gBAAA,OAAO,CAAC,MAAM,CAAC,MAAK;oBAClB,MAAM,YAAY,GAAG,EAAE,CAAC;AACxB,oBAAA,KAAK,CAAC,QAAQ,CAAC,GAAG,WAAW,CAAA,SAAA,CAAW,CAAC,CAAC;oBACzC,KAAK,CAAC,UAAU,EAAU;yBACxB,QAAQ;AACR,yBAAA,OAAO,CAAC,UAAU,IACjB,YAAY,CAAC,IAAI,CACf,IAAI,OAAO,CAAC,eAAe,IAAG;AAC5B,wBAAA,MAAM,SAAS,GAAG,UAAU,CAAC,OAAO,CAClC,CAAC,EAAE,SAAS,EAAE,iBAAiB,EAAE,EAAE,EAAE,SAAS,EAAE,CAAA,WAAA,EAAc,MAAM,CAAA,GAAA,CAAK,EAAE,CAAC,EAC5E,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAC5B,CAAC;wBAEF,SAAS,CAAC,QAAQ,GAAG,MAAM,OAAO,CAAC,MAAM,CAAC,MAAK;AAC7C,4BAAA,KAAK,CAAC,WAAW,CAAC,GAAG,WAAW,CAAA,SAAA,CAAW,CAAC,CAAC;AAC7C,4BAAA,KAAK,CAAC,WAAW,CAAC,GAAG,WAAW,CAAA,KAAA,CAAO,CAAC,CAAC;4BACzC,eAAe,CAAC,IAAI,CAAC,CAAC;AACxB,yBAAC,CAAC,CAAC;qBACJ,CAAC,CAAC,CACN,CAAC;AAEJ,oBAAA,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,MAAM,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;AAC9D,iBAAC,CAAC,CAAC;AACL,aAAC,CAAC,CAAC;AACL,SAAC,CAAC,CAAC;KACJ;;gFAnGU,gBAAgB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA;mEAAhB,gBAAgB,EAAA,SAAA,EAAA,CAAA,CAAA,kBAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,QAAA,EAAA,UAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAHhB,CAAC,UAAU,CAAC,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,SAAA,yBAAA,CAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,CAAA,EAAA,CAAA,CAAA;uFAGZ,gBAAgB,EAAA,CAAA;cAN5B,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,kBAAkB;AAC5B,gBAAA,QAAQ,EAAE,EAAE;gBACZ,SAAS,EAAE,CAAC,UAAU,CAAC;gBACvB,eAAe,EAAE,uBAAuB,CAAC,MAAM;AAChD,aAAA,CAAA;kFAEoB,QAAQ,EAAA,CAAA;kBAA1B,KAAK;mBAAC,UAAU,CAAA;;;MCFN,aAAa,CAAA;;0EAAb,aAAa,GAAA,CAAA,EAAA,CAAA;+DAAb,aAAa,EAAA,CAAA,CAAA;mEAHtB,YAAY,CAAA,EAAA,CAAA,CAAA;uFAGH,aAAa,EAAA,CAAA;cAXzB,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,gBAAgB;AACjB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,gBAAgB;AACjB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,YAAY;AACb,iBAAA;AACF,aAAA,CAAA;;AACY,CAAA,YAAA,EAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,aAAa,EATtB,EAAA,YAAA,EAAA,CAAA,gBAAgB,CAMhB,EAAA,OAAA,EAAA,CAAA,YAAY,aAHZ,gBAAgB,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;MCSP,cAAc,CAAA;AASzB,IAAA,WAAA,CACU,MAAkB,EAClB,EAAqB,EACrB,aAA4B,EAAA;QAF5B,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;QAClB,IAAE,CAAA,EAAA,GAAF,EAAE,CAAmB;QACrB,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAX9B,IAAU,CAAA,UAAA,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;KAa/D;AATD,IAAA,IAAmB,IAAI,CAAC,IAAY,EAAA,EAAI,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE;AACpE,IAAA,IAAuB,QAAQ,CAAC,QAAkB,EAAA,EAAI,IAAI,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC,EAAE;AACtF,IAAA,IAAmB,IAAI,CAAC,IAAyB,EAAA,EAAI,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE;IASjF,WAAW,GAAA;AACT,QAAA,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;AAC9B,QAAA,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KACjC;IAED,QAAQ,GAAA;QACN,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;QAEvC,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC3C,IAAI,CAAC,OAAO,GAAG,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;AAEpC,QAAA,OAAO,CAAC,KAAK,CAAC,iBAAiB,CAAC;aAC7B,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC;KAC7C;;4EA7BU,cAAc,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,aAAA,CAAA,CAAA,CAAA,EAAA,CAAA;AAAd,cAAA,CAAA,IAAA,iBAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,IAAA,EAAA,cAAc,EAHd,SAAA,EAAA,CAAA,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,QAAA,EAAA,UAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAAA,CAAC,UAAU,EAAE,aAAa,CAAC,CAAA,EAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,KAAA,EAAA,uBAAA,EAAA,CAAA,EAAA,SAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,uBAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QCfxC,EAA6E,CAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;;QAAnC,EAAmB,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,OAAA,CAAA,CAAA;;uFDkBhD,cAAc,EAAA,CAAA;cAN1B,SAAS;2BACE,cAAc,EAAA,SAAA,EAEb,CAAC,UAAU,EAAE,aAAa,CAAC,EAAA,eAAA,EACrB,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,qFAAA,EAAA,CAAA;yHAO5B,IAAI,EAAA,CAAA;kBAAtB,KAAK;mBAAC,MAAM,CAAA;YACU,QAAQ,EAAA,CAAA;kBAA9B,KAAK;mBAAC,UAAU,CAAA;YACE,IAAI,EAAA,CAAA;kBAAtB,KAAK;mBAAC,MAAM,CAAA;;;MEfF,oBAAoB,CAAA;AAiB/B,IAAA,WAAA,CAAoB,MAAkB,EAAA;QAAlB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;;AAbtC,QAAA,IAAA,CAAA,OAAO,GAAwC;AAC7C,YAAA,SAAS,EAAE,IAAI;SAChB,CAAC;KAYD;AAVD,IAAA,IAAI,OAAO,GAAA;AACT,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,OAAO,GAAG,CAAC,CAAC;KACnD;AAED,IAAA,IAAI,KAAK,GAAA;AACP,QAAA,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;QACvD,OAAO,IAAI,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;KAC9D;IAKD,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC;KAC3B;AAED,IAAA,OAAO,CAAC,CAAgB,EAAA;QACtB,IAAI,IAAI,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AACjC,QAAA,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;AAC7B,YAAA,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACtB,SAAA;AAED,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;AAE9B,QAAA,QAAQ,IAAI;YACV,KAAK,OAAO,EAAE;AACZ,gBAAA,IAAI,KAAK,EAAE;AACT,oBAAA,MAAM,OAAO,GAAG,KAAK,GAAG,CAAC,CAAC;AAC1B,oBAAA,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,OAAO,KAAK,OAAO,EAAE;;AAEtD,wBAAA,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC;4BAC3B,OAAO;yBACR,EAAE;AACD,4BAAA,MAAM,EAAE,wBAAwB;AACjC,yBAAA,CAAC,CAAC;AACJ,qBAAA;AACF,iBAAA;gBACD,MAAM;AACP,aAAA;YACD,KAAK,IAAI,EAAE;AACT,gBAAA,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE;AACtB,oBAAA,IAAI,CAAC,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC;AACxB,iBAAA;gBACD,MAAM;AACP,aAAA;YACD,KAAK,MAAM,EAAE;gBACX,IAAI,KAAK,GAAG,CAAC,EAAE;AACb,oBAAA,IAAI,CAAC,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC;AACxB,iBAAA;gBACD,MAAM;AACP,aAAA;AACD,YAAA,KAAK,MAAM,CAAC;AACZ,YAAA,KAAK,OAAO,CAAC;YACb,KAAK,WAAW,EAAE;gBAChB,MAAM;AACP,aAAA;AACD,YAAA,SAAS;gBACP,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AACxC,gBAAA,MAAM,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,EAAE,GAAG,KAAK,GAAG,KAAK,EAAE,EAAE,CAAC,CAAC;gBACrD,MAAM,GAAG,GAAG,CAAC,CAAC;AACd,gBAAA,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;AACvB,gBAAA,MAAM,OAAO,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAE5D,IAAI,CAAC,OAAO,EAAE;AACZ,oBAAA,IAAI,CAAC,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;oBAC3C,CAAC,CAAC,cAAc,EAAE,CAAC;AACpB,iBAAA;AACF,aAAA;AACF,SAAA;KACF;;wFA7EU,oBAAoB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,CAAA,CAAA,EAAA,CAAA;uEAApB,oBAAoB,EAAA,SAAA,EAAA,CAAA,CAAA,qBAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAHpB,CAAC,UAAU,CAAC,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,KAAA,EAAA,8BAAA,EAAA,CAAA,EAAA,SAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,6BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QCPzB,EAAoF,CAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;;QAAnC,EAAmB,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,OAAA,CAAA,CAAA;;uFDUvD,oBAAoB,EAAA,CAAA;cANhC,SAAS;AACE,QAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,qBAAqB,aAEpB,CAAC,UAAU,CAAC,EACN,eAAA,EAAA,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,4FAAA,EAAA,CAAA;;;MEUpC,WAAW,CAAA;;sEAAX,WAAW,GAAA,CAAA,EAAA,CAAA;6DAAX,WAAW,EAAA,CAAA,CAAA;iEAHpB,cAAc,CAAA,EAAA,CAAA,CAAA;uFAGL,WAAW,EAAA,CAAA;cAbvB,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,cAAc;oBACd,oBAAoB;AACrB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,cAAc;oBACd,oBAAoB;AACrB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,cAAc;AACf,iBAAA;AACF,aAAA,CAAA;;AACY,CAAA,YAAA,EAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,WAAW,mBAXpB,cAAc;QACd,oBAAoB,CAAA,EAAA,OAAA,EAAA,CAOpB,cAAc,CAAA,EAAA,OAAA,EAAA,CAJd,cAAc;QACd,oBAAoB,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;;ICVhB,EAA2C,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;IACvC,EAEe,CAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;IACnB,EAAM,CAAA,YAAA,EAAA,CAAA;;;IAFY,EAAyB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAzB,EAAyB,CAAA,UAAA,CAAA,SAAA,EAAA,MAAA,CAAA,OAAA,CAAA,KAAA,CAAA,CAAA;;;IAK3C,EAA0C,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;IACtC,EAEe,CAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;IACnB,EAAM,CAAA,YAAA,EAAA,CAAA;;;IAFY,EAAwB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAxB,EAAwB,CAAA,UAAA,CAAA,SAAA,EAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA;;ACAlD,MAAM,YAAY,GAAa,OAAO,CAAC;MAQ1B,aAAa,CAAA;AAWxB,IAAA,WAAA,CACU,MAAkB,EAClB,EAAqB,EAC7B,YAAiC,EAAA;QAFzB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;QAClB,IAAE,CAAA,EAAA,GAAF,EAAE,CAAmB;QAG7B,YAAY,CAAC,GAAG,GAAG,MAAM,IAAI,CAAA,YAAA,EAAe,MAAM,CAAA,SAAA,CAAW,CAAC;QAE9D,IAAI,CAAC,OAAO,GAAG;AACb,YAAA,IAAI,EAAE;AACJ,gBAAA,SAAS,EAAE,IAAI;AACf,gBAAA,KAAK,EAAE,IAAI;AACZ,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,SAAS,EAAE,IAAI;AACf,gBAAA,KAAK,EAAE,IAAI;AACZ,aAAA;SACF,CAAC;KACH;IAED,QAAQ,GAAA;QACN,MAAM,EAAE,KAAK,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;AAC5C,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;AAC3B,QAAA,IAAI,KAAK,EAAE;AACT,YAAA,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,KAAK,CAAC;AAC5B,YAAA,YAAY,CAAC,KAAK,CAAC,GAAG,KAAK,CAAA,OAAA,CAAS,CAAC,CAAC;AACnC,iBAAA,SAAS,CAAC,CAAC,CAAoB,KAAI;gBAClC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;AAC/B,oBAAA,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACzB,iBAAA;AACH,aAAC,CAAC,CAAC;AACN,SAAA;KACF;AAED,IAAA,IAAI,CAAC,IAAA,GAAiB,YAAY,EAAE,KAAW,EAAA;QAC7C,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;AAErC,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;AAC3B,QAAA,IAAI,KAAK,IAAI,WAAW,CAAC,KAAK,CAAC,EAAE;AAC/B,YAAA,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,KAAK,CAAC;YAC5B,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AAC9B,SAAA;AAED,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;AAEhD,QAAA,MAAM,SAAS,GAAG,CAAQ,KAAA,EAAA,IAAI,EAAE,CAAC;QACjC,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;AAClC,YAAA,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;AACnC,SAAA;AACD,QAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAE/B,IAAI,CAAC,UAAU,EAAE,CAAC;KACnB;IAED,KAAK,CAAC,OAAiB,YAAY,EAAA;AACjC,QAAA,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;QAE9B,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAQ,KAAA,EAAA,IAAI,CAAE,CAAA,CAAC,CAAC;AAEvC,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;QAE1B,IAAI,CAAC,UAAU,EAAE,CAAC;KACnB;IAEO,UAAU,GAAA;AAChB,QAAA,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;AACvB,QAAA,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;KACzB;IAEO,KAAK,GAAA;AACX,QAAA,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;QAC9B,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;AAC1D,QAAA,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;AACpB,YAAA,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,KAAK,CAAC;AAC5B,YAAA,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;gBACjB,MAAM,IAAI,SAAS,CAAC,gBAAgB,EAAE,CAAW,QAAA,EAAA,KAAK,CAAY,UAAA,CAAA,CAAC,CAAC;AACrE,aAAA;AACD,YAAA,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACtB,SAAA;AAED,QAAA,OAAO,IAAI,CAAC;KACb;;0EA3FU,aAAa,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,mBAAA,CAAA,CAAA,CAAA,EAAA,CAAA;AAAb,aAAA,CAAA,IAAA,iBAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,IAAA,EAAA,aAAa,EAHb,SAAA,EAAA,CAAA,CAAA,aAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,SAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAAA,CAAC,UAAU,EAAE,mBAAmB,CAAC,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,KAAA,EAAA,YAAA,CAAA,EAAA,CAAA,KAAA,EAAA,WAAA,CAAA,EAAA,CAAA,CAAA,EAAA,aAAA,EAAA,mBAAA,CAAA,EAAA,CAAA,KAAA,EAAA,4BAAA,EAAA,CAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,aAAA,EAAA,kBAAA,CAAA,EAAA,CAAA,KAAA,EAAA,2BAAA,EAAA,CAAA,EAAA,SAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,sBAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QDhB9C,EAAc,CAAA,cAAA,CAAA,CAAA,EAAA,cAAA,CAAA,CAAA;QACV,EAMc,CAAA,UAAA,CAAA,CAAA,EAAA,oCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,CAAA,CAAA,CAAA;QACd,EAMc,CAAA,UAAA,CAAA,CAAA,EAAA,oCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,CAAA,CAAA,CAAA;QAClB,EAAe,CAAA,YAAA,EAAA,CAAA;;uFCIF,aAAa,EAAA,CAAA;cANzB,SAAS;2BACE,aAAa,EAAA,SAAA,EAEZ,CAAC,UAAU,EAAE,mBAAmB,CAAC,EAAA,eAAA,EAC3B,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,ukBAAA,EAAA,CAAA;+HAGtC,OAAO,EAAA,CAAA;kBAAf,KAAK;;;MCFK,UAAU,CAAA;;oEAAV,UAAU,GAAA,CAAA,EAAA,CAAA;4DAAV,UAAU,EAAA,CAAA,CAAA;gEALnB,YAAY;QACZ,cAAc;QACd,WAAW,CAAA,EAAA,CAAA,CAAA;uFAGF,UAAU,EAAA,CAAA;cAbtB,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,aAAa;AACd,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,aAAa;AACd,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,YAAY;oBACZ,cAAc;oBACd,WAAW;AACZ,iBAAA;AACF,aAAA,CAAA;;wFACY,UAAU,EAAA,EAAA,YAAA,EAAA,CAXnB,aAAa,CAAA,EAAA,OAAA,EAAA,CAMb,YAAY;QACZ,cAAc;AACd,QAAA,WAAW,aALX,aAAa,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;MCiBJ,oBAAoB,CAAA;AAO/B,IAAA,WAAA,CACU,MAAkB,EAClB,YAA8B,EAC9B,aAA4B,EAAA;QAF5B,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;QAClB,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAkB;QAC9B,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAT9B,IAAgB,CAAA,gBAAA,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;QAC/D,IAAO,CAAA,OAAA,GAA8B,IAAI,CAAC;KAUjD;AARD,IAAA,IAAuB,QAAQ,CAAC,QAA6B,EAAA,EAAI,IAAI,CAAC,gBAAgB,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC,EAAE;AACvG,IAAA,IAAsB,OAAO,CAAC,OAA2B,EAAA,EAAI,IAAI,CAAC,gBAAgB,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC,EAAE;IASlG,WAAW,GAAA;AACT,QAAA,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;AAC9B,QAAA,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KACjC;IAED,QAAQ,GAAA;AACN,QAAA,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,OAAO,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;QAEjE,MAAM,EAAE,GAAG,CAAA,OAAA,EAAU,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAA,iBAAA,CAAmB,CAAC;AACxD,QAAA,KAAK,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAE1B,QAAA,IAAI,CAAC,OAAO,GAAG,IAAI,kBAAkB,CAAC,KAAK,EAAE,MAAM,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,CAAC;AAE9E,QAAA,YAAY,CAAC,KAAK,CAAC,WAAW,CAAC;AAC5B,aAAA,IAAI,CACH,MAAM,CAAC,CAAC,IAAG;AACT,YAAA,IAAI,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;gBACnD,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC;gBAClC,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;AACzC,oBAAA,OAAO,IAAI,CAAC;AACb,iBAAA;AACF,aAAA;AAED,YAAA,OAAO,KAAK,CAAC;AACf,SAAC,CAAC,EACF,QAAQ,EAAE,CACX;AACA,aAAA,SAAS,CAAC,MACT,KAAK,CAAC,WAAW,EAAE;aAChB,OAAO;aACP,OAAO,CAAoB,EAAE,CAAC;AAC9B,aAAA,IAAI,CAAC,CAAC,KAAwB,KAAI;YACjC,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;gBAChC,OAAO;AACR,aAAA;AAED,YAAA,MAAM,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;AACvD,YAAA,IAAI,WAAW,EAAE;gBACf,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AACtC,aAAA;SACF,CAAC,CACL,CAAC;AAEJ,QAAA,QAAQ,KAAK,CAAC,WAAW,EAAE,CAAC,QAAQ;YAClC,KAAK,UAAU,EAAE;AACf,gBAAA,MAAM,aAAa,GACjB,IAAI,MAAM,CACR,IAAI,OAAO,EAAE,EACb,WAAW,EACX,SAAS,CACV,CAAC;AAEJ,gBAAA,aAAa,CAAC,WAAW,GAAG,6BAA6B,CAAC;AAE1D,gBAAA,MAAM,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;AACtE,gBAAA,KAAK,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,uBAAuB,EAAE,CAAC,CAAC;AAE7D,gBAAA,UAAU,CAAC,GAAG,CAAC,MAAK;AAClB,oBAAA,MAAM,qBAAqB,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,aAAa,CAAC,CAAC;AACpF,oBAAA,KAAK,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,qBAAqB,EAAE,EAAE,EAAE,MAAM,EAAE,uBAAuB,EAAE,CAAC,CAAC;AACtF,iBAAC,CAAC,CAAC;gBAEH,MAAM;AACP,aAAA;YACD,KAAK,eAAe,EAAE;AACpB,gBAAA,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,YAAY,EAAE,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;gBAChE,KAAK,MAAM,KAAK,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;AACzC,oBAAA,KAAK,MAAM,GAAG,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;AACjC,wBAAA,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,SAAS,CAAmB,CAAC;6BAChD,IAAI;;wBAEH,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM,KAAK,qBAAqB,CAAC,CACzE;6BACA,SAAS,CAAC,MAAK;4BACd,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;AACzC,4BAAA,MAAM,IAAI,GAAG;AACX,gCAAA,KAAK,EAAE,CAAA,WAAA,EAAc,KAAK,CAAA,CAAA,EAAI,GAAG,CAAU,QAAA,CAAA;AAC3C,gCAAA,QAAQ,EAAE,IAAI,CAAC,GAAG,EAAE;AACpB,gCAAA,KAAK,EAAE,YAAY;AACnB,gCAAA,KAAK,EAAE,YAAY;AACnB,gCAAA,SAAS,EAAE,IAAI;AACf,gCAAA,OAAO,EAAE,KAAK;6BACf,CAAC;4BAEF,OAAO,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;AAC9B,yBAAC,CAAC,CAAC;AACN,qBAAA;AACF,iBAAA;gBAED,MAAM;AACP,aAAA;AACF,SAAA;KACF;;wFA1GU,oBAAoB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,aAAA,CAAA,CAAA,CAAA,EAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,iBAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,IAAA,EAAA,oBAAoB,EAHpB,SAAA,EAAA,CAAA,CAAA,oBAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,QAAA,EAAA,UAAA,EAAA,OAAA,EAAA,SAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAAA,CAAC,UAAU,EAAE,aAAa,CAAC,CAAA,EAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,SAAA,6BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,CAAA,EAAA,CAAA,CAAA;uFAG3B,oBAAoB,EAAA,CAAA;cANhC,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,oBAAoB;AAC9B,gBAAA,QAAQ,EAAE,EAAE;AACZ,gBAAA,SAAS,EAAE,CAAC,UAAU,EAAE,aAAa,CAAC;gBACtC,eAAe,EAAE,uBAAuB,CAAC,MAAM;AAChD,aAAA,CAAA;wHAKwB,QAAQ,EAAA,CAAA;kBAA9B,KAAK;mBAAC,UAAU,CAAA;YACK,OAAO,EAAA,CAAA;kBAA5B,KAAK;mBAAC,SAAS,CAAA;;;MCtBL,yBAAyB,CAAA;IAKpC,WACQ,CAAA,MAAkB,EAClB,YAA8B,EAAA;QAD9B,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;QAClB,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAkB;KAErC;IAED,QAAQ,GAAA;AACN,QAAA,MAAM,WAAW,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,CAAC;QACxF,IAAI,CAAC,OAAO,GAAG,EAAE,SAAS,EAAE,WAAW,EAAE,CAAC;KAC3C;;kGAdU,yBAAyB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,gBAAA,CAAA,CAAA,CAAA,EAAA,CAAA;4EAAzB,yBAAyB,EAAA,SAAA,EAAA,CAAA,CAAA,0BAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAHzB,CAAC,UAAU,CAAC,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,KAAA,EAAA,mCAAA,EAAA,CAAA,EAAA,SAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,kCAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QCPzB,EAAyF,CAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;;QAAnC,EAAmB,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,OAAA,CAAA,CAAA;;uFDU5D,yBAAyB,EAAA,CAAA;cANrC,SAAS;AACE,QAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,0BAA0B,aAEzB,CAAC,UAAU,CAAC,EACN,eAAA,EAAA,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,iGAAA,EAAA,CAAA;;;MEYpC,iBAAiB,CAAA;;kFAAjB,iBAAiB,GAAA,CAAA,EAAA,CAAA;mEAAjB,iBAAiB,EAAA,CAAA,CAAA;uEAZtB,WAAW;QACX,cAAc,CAAA,EAAA,CAAA,CAAA;uFAWT,iBAAiB,EAAA,CAAA;cAd7B,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACN,gBAAA,OAAO,EAAE;oBACL,WAAW;oBACX,cAAc;AACjB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACL,oBAAoB;oBACpB,yBAAyB;AAC5B,iBAAA;AACD,gBAAA,YAAY,EAAE;oBACV,oBAAoB;oBACpB,yBAAyB;AAC5B,iBAAA;AACJ,aAAA,CAAA;;AACY,CAAA,YAAA,EAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,iBAAiB,mBAJtB,oBAAoB;AACpB,QAAA,yBAAyB,aATzB,WAAW;AACX,QAAA,cAAc,aAGd,oBAAoB;QACpB,yBAAyB,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;MCJpB,iBAAiB,CAAA;IAW5B,WACU,CAAA,MAAkB,EAClB,EAAqB,EAAA;QADrB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;QAClB,IAAE,CAAA,EAAA,GAAF,EAAE,CAAmB;;AAX/B,QAAA,IAAA,CAAA,OAAO,GAAqC;AAC1C,YAAA,SAAS,EAAE,IAAI;SAChB,CAAC;KAWD;AATD,IAAA,IAAI,MAAM,GAAA;AACR,QAAA,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;AACvD,QAAA,OAAO,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC;KAC/B;IAQD,QAAQ,GAAA;QACN,MAAM,EAAE,KAAK,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;AAE5C,QAAA,YAAY,CAAC,KAAK,CAAC,eAAe,CAAC;aAChC,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC;KAC7C;;kFAtBU,iBAAiB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,iBAAA,CAAA,CAAA,CAAA,EAAA,CAAA;oEAAjB,iBAAiB,EAAA,SAAA,EAAA,CAAA,CAAA,iBAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAHjB,CAAC,UAAU,CAAC,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,KAAA,EAAA,0BAAA,EAAA,CAAA,EAAA,SAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,0BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QCNzB,EAAgF,CAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;;QAAnC,EAAmB,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,OAAA,CAAA,CAAA;;uFDSnD,iBAAiB,EAAA,CAAA;cAN7B,SAAS;AACE,QAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,iBAAiB,aAEhB,CAAC,UAAU,CAAC,EACN,eAAA,EAAA,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,wFAAA,EAAA,CAAA;;;MEQpC,cAAc,CAAA;;4EAAd,cAAc,GAAA,CAAA,EAAA,CAAA;gEAAd,cAAc,EAAA,CAAA,CAAA;oEAHvB,cAAc,CAAA,EAAA,CAAA,CAAA;uFAGL,cAAc,EAAA,CAAA;cAX1B,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,iBAAiB;AAClB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,iBAAiB;AAClB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,cAAc;AACf,iBAAA;AACF,aAAA,CAAA;;AACY,CAAA,YAAA,EAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,cAAc,EATvB,EAAA,YAAA,EAAA,CAAA,iBAAiB,CAMjB,EAAA,OAAA,EAAA,CAAA,cAAc,aAHd,iBAAiB,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;MCCR,qBAAqB,CAAA;AAMhC,IAAA,WAAA,CACU,MAAkB,EAAA;QAAlB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;;AAL5B,QAAA,IAAA,CAAA,OAAO,GAAyC;AAC9C,YAAA,SAAS,EAAE,IAAI;SAChB,CAAC;KAKD;IAED,QAAQ,GAAA;QACN,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;AAC1C,QAAA,MAAM,MAAM,GACV,IAAI,MAAM,CACR,IAAI,OAAO,EAAE,EACb,eAAe,EACf,QAAQ,CACT,CAAC;AAEJ,QAAA,MAAM,CAAC,WAAW,GAAG,+BAA+B,CAAC;AAErD,QAAA,MAAM,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC/D,KAAK,CAAC,MAAM,CAAC;YACX,KAAK;SACN,EAAE;AACD,YAAA,MAAM,EAAE,yBAAyB;AAClC,SAAA,CAAC,CAAC;AAEH,QAAA,UAAU,CAAC,GAAG,CAAC,MAAK;YAClB,KAAK,CAAC,MAAM,CAAC;AACX,gBAAA,KAAK,EAAE,KAAK;AACT,qBAAA,MAAM,EAAE;qBACR,KAAK;qBACL,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,MAAM,CAAC;aAC7B,EAAE;AACD,gBAAA,MAAM,EAAE,yBAAyB;AAClC,aAAA,CAAC,CAAC;AACL,SAAC,CAAC,CAAC;KACJ;;0FAvCU,qBAAqB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,CAAA,CAAA,EAAA,CAAA;wEAArB,qBAAqB,EAAA,SAAA,EAAA,CAAA,CAAA,sBAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAHrB,CAAC,UAAU,CAAC,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,KAAA,EAAA,+BAAA,EAAA,CAAA,EAAA,SAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,8BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QCPzB,EAEe,CAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;;QADD,EAAmB,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,OAAA,CAAA,CAAA;;uFDSpB,qBAAqB,EAAA,CAAA;cANjC,SAAS;AACE,QAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,sBAAsB,aAErB,CAAC,UAAU,CAAC,EACN,eAAA,EAAA,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,8GAAA,EAAA,CAAA;;;MENpC,iBAAiB,CAAA;AAA9B,IAAA,WAAA,GAAA;QACE,IAAI,CAAA,IAAA,GAAuB,IAAI,CAAC;KACjC;AAAA;;MCFY,eAAe,CAAA;IAC1B,MAAM,CAAC,IAAU,EAAE,IAAkC,EAAA;AACnD,QAAA,OAAO,IAAI,EAAE;AACX,YAAA,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE;AACd,gBAAA,OAAO,IAAI,CAAC;AACb,aAAA;AAED,YAAA,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;AACpB,SAAA;AAED,QAAA,OAAO,IAAI,CAAC;KACb;AAED,IAAA,aAAa,CAAC,IAAU,EAAA;QACtB,IAAI,IAAI,CAAC,MAAM,EAAE;AACf,YAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;YACtC,MAAM,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACrC,IAAI,KAAK,IAAI,CAAC,EAAE;gBACd,IAAI,KAAK,GAAG,CAAC,EAAE;AACb,oBAAA,OAAO,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;AAC5B,iBAAA;gBAED,OAAO,IAAI,CAAC,MAAM,CAAC;AACpB,aAAA;AACF,SAAA;AAED,QAAA,OAAO,IAAI,CAAC;KACb;AAED,IAAA,KAAK,CAAC,IAAU,EAAA;AACd,QAAA,OAAO,CAAC,MAAM,EAAE,IAAI,KAAI;AACtB,YAAA,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;AAErD,YAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;AAC/B,YAAA,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;YAE/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;AAC/B,gBAAA,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AAC9C,aAAA;AAED,YAAA,OAAO,IAAI,CAAC;AACd,SAAC,CAAC;KACH;AAEO,IAAA,SAAS,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAA;AACxC,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC;AAChC,QAAA,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAE7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;AAC/B,YAAA,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7D,SAAA;AAED,QAAA,OAAO,IAAI,CAAC;KACb;IAEO,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAA;AAChD,QAAA,MAAM,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;AACtC,QAAA,MAAM,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;QAElC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;AAC/B,YAAA,IAAI,GAAG,MAAM,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACjD,SAAA;AAED,QAAA,OAAO,IAAI,CAAC;KACb;AACF;;ACjEe,SAAA,MAAM,CAAC,IAAS,EAAE,GAAW,EAAA;AAC3C,IAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IAE3B,OAAO;QACL,IAAI,EAAE,WAAW,CAAC,IAAI,EAAE,GAAG,EAAE,QAAQ,CAAC;KACvC,CAAC;AACJ,CAAC;AAEK,SAAU,SAAS,CAAC,IAAS,EAAA;IACjC,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/B,IAAA,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IAC3B,MAAM,KAAK,GAAG,EAAE,CAAC;IAEjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;AAC/B,QAAA,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACpB,QAAA,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;YACzB,KAAK,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AAChC,SAAA;AACF,KAAA;IAED,OAAO;AACL,QAAA,IAAI,EAAE,CAAC,GAAG,IAAI,KAAI;YAChB,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACrC,YAAA,MAAM,WAAW,GAAG,SAAS,CAAC,MAAM,CAAC;YAErC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;AACpC,gBAAA,MAAM,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAEzB,gBAAA,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;AAClB,gBAAA,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACnC,aAAA;SACF;KACF,CAAC;AACJ,CAAC;SAEe,WAAW,CAAC,IAAI,EAAE,GAAG,EAAE,QAAQ,EAAA;AAC7C,IAAA,MAAM,MAAM,GAAG,CAAC,GAAG,QAAQ,KACzB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,OAAO,KACrB,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;AAElD,IAAA,MAAc,CAAC,SAAS,GAAG,CAAC,GAAG,IAAI,KAAI;AACtC,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACzB,QAAA,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAErB,QAAA,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE;YACrC,QAAQ;YACR,IAAI;YACJ,GAAG;AACJ,SAAA,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AAClB,KAAC,CAAC;AAEF,IAAA,OAAO,MAAM,CAAC;AAChB;;MClDa,WAAW,CAAA;IAGtB,WAAmB,CAAA,IAAU,EAAS,IAAU,EAAA;QAA7B,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAM;QAAS,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAM;QAFhD,IAAI,CAAA,IAAA,GAAoE,EAAE,CAAC;KAG1E;AAED,IAAA,KAAK,CAAC,KAAsB,EAAA;QAC1B,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;KACxD;AACF;;ACIK,SAAU,UAAU,CAAC,YAAgC,EAAA;AACzD,IAAA,OAAO,MAAM,UAAU,CAAA;AAIrB,QAAA,WAAA,CAAmB,YAAY,EAAE,EAAA;YAAd,IAAS,CAAA,SAAA,GAAT,SAAS,CAAK;YAHjC,IAAI,CAAA,IAAA,GAAG,EAAE,CAAC;YACV,IAAO,CAAA,OAAA,GAAG,EAAE,CAAC;SAGZ;QAED,KAAK,GAAA;AACH,YAAA,MAAM,MAAM,GAAG,IAAI,UAAU,CAAC,EAAE,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;YACrD,MAAM,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;YAC7B,MAAM,CAAC,OAAO,GAAG,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;AACrC,YAAA,OAAO,MAAM,CAAC;SACf;QAED,IAAI,CAAC,GAAW,EAAE,KAAU,EAAA;AAC1B,YAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;AAC9C,YAAA,OAAO,IAAI,CAAC;SACb;AAED,QAAA,KAAK,CAAC,IAAW,EAAA;YACf,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AAEvC,YAAA,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC;AACpC,YAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AAEjB,YAAA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;AAEtC,YAAA,OAAO,IAAI,CAAC;SACb;QAED,IAAI,CAAC,EAAU,EAAE,KAAoC,EAAA;YACnD,IAAI,CAAC,KAAK,EAAE;AACV,gBAAA,MAAM,IAAI,SAAS,CAAC,aAAa,EAAE,+BAA+B,CAAC,CAAC;AACrE,aAAA;AAED,YAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAG;gBACpB,MAAM,MAAM,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC9C,KAAK,CAAC,MAAM,CAAC,CAAC;gBAEd,MAAM,OAAO,GAAG,IAAI,IAAI,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;AAC3C,gBAAA,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AACtB,gBAAA,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;AAC5B,gBAAA,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC;AAE5B,gBAAA,OAAO,IAAI,CAAC;AACd,aAAC,CAAC,CAAC;AAEH,YAAA,OAAO,IAAI,CAAC;SACb;QAED,KAAK,CAAC,EAAU,EAAE,KAAoC,EAAA;YACpD,IAAI,CAAC,KAAK,EAAE;AACV,gBAAA,MAAM,IAAI,SAAS,CAAC,aAAa,EAAE,+BAA+B,CAAC,CAAC;AACrE,aAAA;AAED,YAAA,MAAM,UAAU,GAAG,CAAC,IAAI,EAAE,IAAI,KAAI;AAChC,gBAAA,MAAM,KAAK,GAAG,IAAI,eAAe,EAAE,CAAC;AACpC,gBAAA,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC;gBAEd,MAAM,MAAM,GAAG,IAAI,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAC5C,KAAK,CAAC,MAAM,CAAC,CAAC;AACd,gBAAA,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACpB,gBAAA,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAEhB,gBAAA,OAAO,IAAI,CAAC;AACd,aAAC,CAAC;AAEF,YAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC3B,YAAA,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC;AAE9B,YAAA,OAAO,IAAI,CAAC;SACb;AAED,QAAA,GAAG,CAAC,EAAU,EAAA;YACZ,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;YAClC,IAAI,CAAC,MAAM,EAAE;gBACX,MAAM,IAAI,SAAS,CAAC,aAAa,EAAE,CAAU,OAAA,EAAA,EAAE,CAAe,aAAA,CAAA,CAAC,CAAC;AACjE,aAAA;AAED,YAAA,OAAO,MAAM,CAAC;SACf;AAED,QAAA,WAAW,CAAC,EAAU,EAAA;YACpB,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AAC5B,YAAA,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC;SAC3C;KACF,CAAC;AACJ;;MCnGa,cAAc,CAAA;AAA3B,IAAA,WAAA,GAAA;QACE,IAAI,CAAA,IAAA,GAAG,OAAO,CAAC;QACf,IAAW,CAAA,WAAA,GAAG,mBAAmB,CAAC;KACnC;AAAA;;MCEY,iBAAiB,CAAA;AAC5B,IAAA,WAAA,CAAoB,QAAQ,EAAA;QAAR,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAA;KAC3B;AAED,IAAA,KAAK,CAAI,UAA6B,EAAA;AACpC,QAAA,MAAM,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC,CAAC;AAE5C,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/B,UAAU;AACP,aAAA,MAAM,CAAC,CAAC,IAAI,cAAc,EAAE,CAAC,CAAC;aAC9B,OAAO,CAAC,SAAS,IAAG;AACnB,YAAA,MAAM,OAAO,GAAG,UAAU,GAAG,IAAI,EAAA;AAC/B,gBAAA,IAAI,EAAE,GAAG,IAAI,EAAE,CAAC;AAChB,gBAAA,IAAI,gBAA4B,CAAC;AACjC,gBAAA,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;AACnB,oBAAA,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACb,oBAAA,gBAAgB,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5B,iBAAA;AAAM,qBAAA,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;AAC5B,oBAAA,gBAAgB,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5B,iBAAA;AAED,gBAAA,MAAM,KAAK,GAAG,UAAU,IAAU,EAAE,IAAU,EAAA;AAC5C,oBAAA,MAAM,UAAU,GACdI,QAAgB,CACd,gBAAgB,EAChB,SAAS,CAAC,QAAQ,EAClB,QAAQ,CAAC,QAAQ,CAClB,CAAC;AAEJ,oBAAA,UAAU,CAAC,EAAE,GAAG,EAAE,CAAC;AACnB,oBAAA,UAAU,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;AACjC,oBAAA,UAAU,CAAC,WAAW,GAAG,SAAS,CAAC,WAAW,CAAC;AAE/C,oBAAA,MAAM,KAAK,GAAG,IAAI,eAAe,EAAE,CAAC;AACpC,oBAAA,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC;AACd,oBAAA,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAEnC,oBAAA,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAChB,oBAAAC,SAAe,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oBAE7C,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAErC,oBAAA,IAAI,CAAC,OAAO,CAAC,GAAG,IAAG;AACjB,wBAAA,MAAM,cAAc,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;AAEvC,wBAAA,IAAI,UAAU,CAAC,cAAc,CAAC,EAAE;4BAC9B,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,OAAO,KAAI;gCAC/B,MAAM,MAAM,GAAG,cAAc,CAAC,KAAK,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;;AAGzD,gCAAA,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;oCACnB,UAAU,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,IAAI,EAAE,CAAC;oCAC5C,IAAI,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;AACtC,wCAAA,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC7B,qCAAA;AAED,oCAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AACvB,iCAAA;AACD,gCAAA,OAAO,MAAM,CAAC;AAChB,6BAAC,CAAC;AACH,yBAAA;AACH,qBAAC,CAAC,CAAC;AAEH,oBAAA,OAAO,IAAI,CAAC;AACd,iBAAC,CAAC;AAEF,gBAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACtB,gBAAA,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;AAEzB,gBAAA,OAAO,IAAI,CAAC;AACd,aAAC,CAAC;AAEF,YAAA,MAAM,YAAY,GAAG,UAAU,GAAG,IAAI,EAAA;AACpC,gBAAA,IAAI,EAAE,GAAG,IAAI,EAAE,CAAC;AAChB,gBAAA,IAAI,gBAA4B,CAAC;AACjC,gBAAA,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;AACnB,oBAAA,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACb,oBAAA,gBAAgB,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5B,iBAAA;AAAM,qBAAA,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;AAC5B,oBAAA,gBAAgB,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5B,iBAAA;AAED,gBAAA,MAAM,KAAK,GAAG,UAAU,IAAI,EAAE,IAAI,EAAE,eAAe,EAAA;AACjD,oBAAA,MAAM,UAAU,GACdD,QAAgB,CACd,gBAAgB,EAChB,SAAS,CAAC,QAAQ,EAClB,QAAQ,CAAC,QAAQ,CAClB,CAAC;AAEJ,oBAAA,UAAU,CAAC,EAAE,GAAG,EAAE,CAAC;AACnB,oBAAA,UAAU,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;AACjC,oBAAA,UAAU,CAAC,WAAW,GAAG,SAAS,CAAC,WAAW,CAAC;AAC/C,oBAAA,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAE7C,oBAAAC,SAAe,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAE7C,oBAAA,OAAO,IAAI,CAAC;AACd,iBAAC,CAAC;AAEF,gBAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAEtB,gBAAA,OAAO,IAAI,CAAC;AACd,aAAC,CAAC;YAEF,WAAW,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;YAChD,WAAW,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC;AACvD,SAAC,CAAC,CAAC;;QAGL,OAAO,IAAI,WAAW,EAAO,CAAC;KAC/B;AACF;;AC3HD,SAAS,IAAI,CAAC,IAA+B,EAAA;IAC3C,MAAM,MAAM,GAAG,EAAE,CAAC;AAClB,IAAA,KAAK,MAAM,IAAI,IAAI,IAAI,EAAE;AACvB,QAAA,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE;YACpD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;AAC3B,SAAA;AACF,KAAA;AAED,IAAA,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,MAAM,eAAe,GAAG;IACtB,QAAQ;IACR,YAAY;IACZ,IAAI;IACJ,UAAU;IACV,cAAc;CACf,CAAC;AAEF,MAAM,uBAAuB,GAAG,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;AAEzD,MAAM,aAAa,GAAG;IACpB,MAAM;IACN,UAAU;IACV,aAAa;IACb,WAAW;CACZ,CAAC;AAEF,MAAM,eAAe,GAAG;IACtB,SAAS;IACT,cAAc;IACd,WAAW;IACX,mBAAmB;IACnB,gBAAgB;CACjB,CAAC;AAEF,MAAM,uBAAuB,GAAG;IAC9B,cAAc;IACd,WAAW;IACX,mBAAmB;IACnB,gBAAgB;CACjB,CAAC;AAEK,MAAM,gBAAgB,GAAG;AAC9B,IAAA,UAAU,EAAE,QAAQ;AACpB,IAAA,cAAc,EAAE,WAAW;AAC3B,IAAA,QAAQ,EAAE,QAAQ;AAClB,IAAA,YAAY,EAAE,WAAW;AACzB,IAAA,mBAAmB,EAAE,qBAAqB;AAC1C,IAAA,gBAAgB,EAAE,kBAAkB;AACpC,IAAA,cAAc,EAAE,aAAa;AAC7B,IAAA,WAAW,EAAE,UAAU;AACvB,IAAA,MAAM,EAAE,MAAM;AACd,IAAA,UAAU,EAAE,SAAS;AACrB,IAAA,aAAa,EAAE,YAAY;AAC3B,IAAA,WAAW,EAAE,UAAU;AACvB,IAAA,IAAI,EAAE,IAAI;AACV,IAAA,SAAS,EAAE,SAAS;CACrB,CAAC;AAEK,MAAM,WAAW,GAAG;AACzB,IAAA,IAAI,EAAE,uBAAuB;AAC7B,IAAA,EAAE,EAAE,eAAe,CAAC,MAAM,CAAC,aAAa,CAAC;AACzC,IAAA,IAAI,EAAE,eAAe,CAAC,MAAM,CAAC,aAAa,CAAC;AAC3C,IAAA,KAAK,EAAE,eAAe,CAAC,MAAM,CAAC,aAAa,CAAC;AAC5C,IAAA,GAAG,EAAE,eAAe,CAAC,MAAM,CAAC,aAAa,CAAC;AAC1C,IAAA,QAAQ,EAAE,eAAe,CAAC,MAAM,CAAC,aAAa,CAAC;AAC/C,IAAA,MAAM,EAAE,eAAe,CAAC,MAAM,CAAC,eAAe,CAAC;AAC/C,IAAA,IAAI,EAAE,eAAe,CAAC,MAAM,CAAC,eAAe,CAAC;AAC7C,IAAA,IAAI,EAAE,eAAe,CAAC,MAAM,CAAC,eAAe,CAAC;AAC7C,IAAA,QAAQ,EAAE,eAAe,CAAC,MAAM,CAAC,eAAe,CAAC;CAClD,CAAC;AAEK,MAAM,eAAe,GAAG;AAC7B,IAAA,IAAI,EAAE,uBAAuB;AAC7B,IAAA,EAAE,EAAE,uBAAuB,CAAC,MAAM,CAAC,aAAa,CAAC;AACjD,IAAA,IAAI,EAAE,uBAAuB,CAAC,MAAM,CAAC,aAAa,CAAC;AACnD,IAAA,KAAK,EAAE,uBAAuB,CAAC,MAAM,CAAC,aAAa,CAAC;AACpD,IAAA,GAAG,EAAE,uBAAuB,CAAC,MAAM,CAAC,aAAa,CAAC;AAClD,IAAA,QAAQ,EAAE,uBAAuB,CAAC,MAAM,CAAC,aAAa,CAAC;AACvD,IAAA,MAAM,EAAE,uBAAuB,CAAC,MAAM,CAAC,uBAAuB,CAAC;AAC/D,IAAA,IAAI,EAAE,uBAAuB,CAAC,MAAM,CAAC,uBAAuB,CAAC;AAC7D,IAAA,IAAI,EAAE,uBAAuB,CAAC,MAAM,CAAC,uBAAuB,CAAC;AAC7D,IAAA,QAAQ,EAAE,uBAAuB,CAAC,MAAM,CAAC,uBAAuB,CAAC;CAClE,CAAC;AAEK,MAAM,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC;;MCtDrC,mBAAmB,CAAA;AAC9B,IAAA,WAAA,CAAoB,KAAgB,EAAA;QAAhB,IAAK,CAAA,KAAA,GAAL,KAAK,CAAW;KACnC;IAED,OAAO,GAAA;AACL,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AACzB,QAAA,OAAO,KAAK;AACT,aAAA,UAAU,EAAE;aACZ,IAAI;AACJ,aAAA,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;AAChF,aAAA,GAAG,CAAC,MAAM,KAAK;YACd,GAAG,EAAE,MAAM,CAAC,GAAG;YACf,KAAK,EAAE,MAAM,CAAC,KAAK;YACnB,IAAI,EAAE,MAAM,CAAC,IAAI;AAClB,SAAA,CAAC,CAAC,CAAC;KACP;IAED,SAAS,GAAA;AACP,QAAA,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,MAAM,KAAI;AAC5C,YAAA,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;AAC1B,YAAA,OAAO,IAAI,CAAC;SACb,EAAE,EAAE,CAAC,CAAC;KACR;AAED,IAAA,MAAM,CAAC,UAAU,EAAA;AACf,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzB,KAAK,CAAC,MAAM,CAAC;AACX,YAAA,EAAE,EAAE,UAAU;SACf,EAAE;AACD,YAAA,MAAM,EAAE,uBAAuB;AAChC,SAAA,CAAC,CAAC;KACJ;IAED,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,SAAyB,EAAA;QACxD,SAAS,GAAG,CAAC,SAAS,IAAI,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,CAAC,EAAE,GAAG,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;AAErE,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AACzB,QAAA,MAAM,SAAS,GAAG,aAAa,CAAC,UAAU,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,CAAC;AACpE,QAAA,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;QAC9B,IAAI,CAAC,MAAM,EAAE;YACX,MAAM,IAAI,SAAS,CAAC,uBAAuB,EAAE,CAAU,OAAA,EAAA,GAAG,CAAe,aAAA,CAAA,CAAC,CAAC;AAC5E,SAAA;AAED,QAAA,MAAM,QAAQ,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC;AACzC,QAAA,OAAO,IAAI,OAAO,CAAC,OAAO,IAAG;YAC3B,MAAM,IAAI,GAAG,KAAK;AACf,iBAAA,IAAI,EAAE;iBACN,IAAI;iBACJ,GAAG,CAAC,QAAQ,CAAC;iBACb,MAAM,CAAC,IAAI,IACV,CAAC,WAAW,CAAC,IAAI,CAAC;AACvB,gBAAA,IAAI,KAAK,EAAE;AACX,gBAAA,IAAI,KAAK,IAAI;AACb,gBAAA,SAAS,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,IAAI,EAAE,WAAW,EAAE,CAAC,GAAG,CAAC,CAC5C,CAAC;AAEJ,YAAA,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;AAC9B,YAAA,MAAM,UAAU,GAAG,UAAU,CAAC,IAAI,EAAE,CAAC;YACrC,MAAM,UAAU,GAAG,CAAC,EAAE,GAAG,MAAM,EAAE,WAAW,EAAE,CAAC;YAC/C,MAAM,UAAU,GAAG,UAAU;kBACzB,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,WAAW,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;kBACvE,UAAU,CAAC;AAEf,YAAA,MAAM,UAAU,GAAG,UAAU,CAAC,MAAM,GAAG,UAAU,GAAG,UAAU,CAAC;YAC/D,MAAM,QAAQ,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAC9C,OAAO,CAAC,QAAQ,CAAC,CAAC;AACpB,SAAC,CAAC,CAAC;KACJ;IAED,KAAK,GAAA;AACH,QAAA,MAAM,UAAU,GAAG;AACjB,YAAA;AACE,gBAAA,IAAI,EAAE,OAAO;AACb,gBAAA,WAAW,EAAE,0BAA0B;AACxC,aAAA;AACD,YAAA;AACE,gBAAA,IAAI,EAAE,OAAO;AACb,gBAAA,WAAW,EAAE,0BAA0B;AACxC,aAAA;AACD,YAAA;AACE,gBAAA,IAAI,EAAE,QAAQ;AACd,gBAAA,WAAW,EAAE,2BAA2B;AACzC,aAAA;AACD,YAAA;AACE,gBAAA,IAAI,EAAE,QAAQ;AACd,gBAAA,WAAW,EAAE,2BAA2B;AACzC,aAAA;AACD,YAAA;AACE,gBAAA,IAAI,EAAE,YAAY;AAClB,gBAAA,WAAW,EAAE,gCAAgC;AAC9C,aAAA;AACD,YAAA;AACE,gBAAA,IAAI,EAAE,cAAc;AACpB,gBAAA,WAAW,EAAE,iCAAiC;AAC/C,aAAA;AACD,YAAA;AACE,gBAAA,IAAI,EAAE,aAAa;AACnB,gBAAA,WAAW,EAAE,gCAAgC;AAC9C,aAAA;SACF,CAAC;AAEF,QAAA,MAAM,QAAQ,GAAG;AACf,YAAA,QAAQ,EAAE;AACR,gBAAA,OAAO,EAAE,YAAA;AACP,oBAAA,OAAO,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,EAAE,MAAM,CAAC;iBACjE;AACF,aAAA;SACF,CAAC;AAEF,QAAA,OAAO,IAAI,iBAAiB,CAAC,QAAQ,CAAC;aACnC,KAAK,CAAsB,UAAU,CAAC,CAAC;KAC3C;AACF;;AC5IK,SAAU,KAAK,CAAC,IAAI,EAAA;IACxB,QAAQ,IAAI,CAAC,EAAE;AACb,QAAA,KAAK,OAAO;YACV,OAAO,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QACjC,KAAK,UAAU,EAAE;AACf,YAAA,MAAM,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;AAC/B,YAAA,IAAI,KAAK,EAAE;gBACT,IAAI,EAAE,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE;AAChC,oBAAA,OAAO,IAAI,CAAC;AACb,iBAAA;AACF,aAAA;AAED,YAAA,OAAO,KAAK,CAAC;AACd,SAAA;AACD,QAAA,KAAK,YAAY;AACf,YAAA,OAAO,cAAc,CAAC,IAAI,CAAC,CAAC;AAC9B,QAAA;YACE,MAAM,IAAI,SAAS,CAAC,WAAW,EAAE,CAAgB,aAAA,EAAA,IAAI,CAAC,IAAI,CAAE,CAAA,CAAC,CAAC;AACjE,KAAA;AACH,CAAC;AAED,SAAS,UAAU,CAAC,IAAI,EAAA;AACtB,IAAA,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACvB,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,EAAE,aAAa,EAAE,aAAa,CAAC,CAAC;AACxD,IAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAEjE,IAAA,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;AACzB,QAAA,OAAO,IAAI,CAAC;AACb,KAAA;AAED,IAAA,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;QACzB,OAAO;AACL,YAAA,IAAI,EAAE,OAAO;AACb,YAAA,EAAE,EAAE,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE;AAC9B,YAAA,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;AACjB,YAAA,KAAK,EAAE,IAAI;SACZ,CAAC;AACH,KAAA;AAED,IAAA,OAAO,QAAQ;SACZ,KAAK,CAAC,CAAC,CAAC;SACR,MAAM,CAAC,CAAC,IAAI,EAAE,IAAI,MAAM;AACvB,QAAA,IAAI,EAAE,OAAO;AACb,QAAA,EAAE,EAAE,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE;AAC9B,QAAA,IAAI,EAAE,IAAI;AACV,QAAA,KAAK,EAAE,IAAI;AACZ,KAAA,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC;AAED,SAAS,cAAc,CAAC,IAAI,EAAA;AAC1B,IAAA,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACvB,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;IACpD,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;AAEzC,IAAA,IAAI,SAAS,CAAC;AACd,IAAA,QAAQ,KAAK;AACX,QAAA,KAAK,cAAc,CAAC;AACpB,QAAA,KAAK,UAAU;YACb,SAAS,GAAG,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;YAC3C,MAAM;AACR,QAAA,KAAK,QAAQ,CAAC;AACd,QAAA,KAAK,YAAY,CAAC;AAClB,QAAA,KAAK,mBAAmB,CAAC;AACzB,QAAA,KAAK,cAAc,CAAC;AACpB,QAAA,KAAK,gBAAgB,CAAC;AACtB,QAAA,KAAK,WAAW,CAAC;AACjB,QAAA,KAAK,MAAM,CAAC;AACZ,QAAA,KAAK,UAAU,CAAC;AAChB,QAAA,KAAK,aAAa,CAAC;AACnB,QAAA,KAAK,WAAW;YACd,SAAS,GAAG,WAAW,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;YAC5C,MAAM;AACR,QAAA,KAAK,SAAS;AACZ,YAAA,SAAS,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;YAC/B,MAAM;AACR,QAAA,KAAK,IAAI;AACP,YAAA,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;YAC1B,MAAM;AACR,QAAA;YACE,MAAM,IAAI,SAAS,CAAC,WAAW,EAAE,CAAqB,kBAAA,EAAA,KAAK,CAAE,CAAA,CAAC,CAAC;AAClE,KAAA;AAED,IAAA,SAAS,CAAC,IAAI,GAAG,WAAW,CAAC;AAC7B,IAAA,OAAO,SAAS,CAAC;AACnB,CAAC;AAED,SAAS,UAAU,CAAC,IAAI,EAAE,EAAE,EAAA;AAC1B,IAAA,MAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;IAE9B,OAAO;QACL,IAAI,EAAE,IAAI,CAAC,KAAK;AAChB,QAAA,EAAE,EAAE,gBAAgB,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC;KACvC,CAAC;AACJ,CAAC;AAED,SAAS,WAAW,CAAC,IAAI,EAAE,EAAE,EAAA;AAC3B,IAAA,MAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;AAC9B,IAAA,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE,UAAU,EAAE,QAAQ,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAE5E,OAAO;QACL,IAAI,EAAE,IAAI,CAAC,KAAK;AAChB,QAAA,EAAE,EAAE,gBAAgB,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC;QACtC,KAAK,EAAE,KAAK,CAAC,KAAK;KACnB,CAAC;AACJ,CAAC;AAED,SAAS,OAAO,CAAC,IAAI,EAAA;AACnB,IAAA,MAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;AAC9B,IAAA,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE,UAAU,EAAE,aAAa,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAEjF,OAAO;QACL,IAAI,EAAE,IAAI,CAAC,KAAK;AAChB,QAAA,EAAE,EAAE,IAAI;QACR,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,KAAK;KAC9C,CAAC;AACJ,CAAC;AAED,SAAS,YAAY,CAAC,IAAI,EAAA;AACxB,IAAA,MAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;AAC9B,IAAA,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,UAAU,EAAE,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;AACzE,IAAA,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;IAEnE,OAAO;QACL,IAAI,EAAE,IAAI,CAAC,KAAK;AAChB,QAAA,EAAE,EAAE,SAAS;QACb,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC;KAC9B,CAAC;AACJ,CAAC;AAED,SAAS,UAAU,CAAC,IAAI,EAAA;AACtB,IAAA,OAAO,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;AAC1D,CAAC;AAED,SAAS,cAAc,CAAC,IAAI,EAAA;AAC1B,IAAA,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC;AACtC,CAAC;AAED,SAAS,IAAI,CAAC,IAAI,EAAE,OAAe,EAAE,MAAe,EAAA;IAClD,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACtC,IAAI,CAAC,KAAK,EAAE;AACV,QAAA,OAAO,IAAI,CAAC;AACb,KAAA;IAED,OAAO,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,MAAM,IAAI,OAAO,CAAC,CAAC;AACxD,CAAC;AAED,SAAS,QAAQ,CAAC,KAAK,EAAE,EAAU,EAAA;AACjC,IAAA,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;AACpD,IAAA,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;IAE7B,IAAI,MAAM,KAAK,CAAC,EAAE;AAChB,QAAA,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC;AAClB,KAAA;IAED,IAAI,MAAM,GAAG,CAAC,EAAE;QACd,MAAM,IAAI,SAAS,CAAC,WAAW,EAAE,CAAgB,aAAA,EAAA,EAAE,CAAE,CAAA,CAAC,CAAC;AACxD,KAAA;AAED,IAAA,OAAO,IAAI,CAAC;AACd;;ACjKgB,SAAA,cAAc,CAAC,OAA4B,EAAE,IAAY,EAAA;IACvE,OAAO,UAAU,IAAI,EAAE,IAAI,EAAA;AACzB,QAAA,MAAM,MAAM,GAAG,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,EAAE,WAAW,EAAE,CAAC;AAChD,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;AAClD,QAAA,OAAO,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC;AAC/C,KAAC,CAAC;AACJ,CAAC;AAEe,SAAA,eAAe,CAAC,OAA4B,EAAE,IAAY,EAAA;IACxE,OAAO,UAAU,IAAI,EAAE,IAAI,EAAA;AACzB,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAC3B,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAClD,MAAM,SAAS,GACb,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE;AACf,aAAA,GAAG,CAAC,IAAI,IAAI,CAAC,EAAE,GAAG,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;QAE5C,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KACjC,OAAO;aACJ,OAAO,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,SAAS,CAAC;aACxC,IAAI,CAAC,KAAK,IAAG;AACZ,YAAA,MAAM,MAAM,GAAG,SAAS,CAAC,MAAM;kBAC3B,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,SAAS,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,IAAI,EAAE,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC;kBACtE,KAAK,CAAC;YACV,OAAO,CAAC,MAAM,CAAC,CAAC;AAClB,SAAC,CAAC;aACD,KAAK,CAAC,EAAE,IAAI,MAAM,CAAC,EAAE,CAAC,CAAC,CAC3B,CAAC;AACJ,KAAC,CAAC;AACJ;;MC1Ba,SAAS,CAAA;AAoBpB,IAAA,WAAA,CAAY,OAA4B,EAAA;QAlBhC,IAAU,CAAA,UAAA,GAAkB,EAAE,CAAC;QAC/B,IAAU,CAAA,UAAA,GAAqD,EAAE,CAAC;AAClE,QAAA,IAAA,CAAA,KAAK,GAAG;YACd,MAAM,EAAE,CAAC,UAAU,CAAC;AACpB,YAAA,UAAU,EAAE,CAAC,UAAU,EAAE,SAAS,CAAC;AACnC,YAAA,MAAM,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC;YAChC,OAAO,EAAE,CAAC,UAAU,CAAC;YACrB,MAAM,EAAE,CAAC,UAAU,CAAC;YACpB,IAAI,EAAE,CAAC,UAAU,CAAC;YAClB,OAAO,EAAE,CAAC,UAAU,CAAC;AACrB,YAAA,QAAQ,EAAE,CAAC,UAAU,EAAE,SAAS,CAAC;YACjC,UAAU,EAAE,CAAC,UAAU,CAAC;YACxB,KAAK,EAAE,CAAC,UAAU,CAAC;YACnB,WAAW,EAAE,CAAC,UAAU,CAAC;AACzB,YAAA,MAAM,EAAE,CAAC,UAAU,EAAE,QAAQ,CAAC;YAC9B,MAAM,EAAE,CAAC,UAAU,CAAC;SACrB,CAAC;AAGA,QAAA,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,EAAE,CAAC;KACtC;AAED,IAAA,GAAG,CAAC,GAAW,EAAA;AACb,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;AACnC,QAAA,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,EAAE;AAC3D,YAAA,OAAO,UAAU,CAAC,GAAG,CAAC,CAAC;AACxB,SAAA;QAED,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACnC,IAAI,CAAC,MAAM,EAAE;YACX,MAAM,IAAI,SAAS,CAAC,WAAW,EAAE,CAAqB,kBAAA,EAAA,GAAG,CAAE,CAAA,CAAC,CAAC;AAC9D,SAAA;AAED,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;AACnC,QAAA,MAAM,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC;QACvB,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AAC5B,QAAA,IAAI,QAAQ,GAA+B,MAAM,UAAU,CAAC;AAC5D,QAAA,IAAI,IAAI,EAAE;YACR,MAAM,MAAM,GAAG,EAAE,CAAC,EAAE,GAAG,IAAI,EAAE,CAAC;AAC9B,YAAA,QAAQ,GAAG,SAAS,IAAI,CAAC,KAAK,EAAA;AAC5B,gBAAA,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;oBAClB,MAAM,MAAM,GAAG,EAAE,CAAC;AAClB,oBAAA,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;wBACxB,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAC5B,qBAAA;AAED,oBAAA,OAAO,MAAM,CAAC;AACf,iBAAA;gBAED,MAAM,MAAM,GAAG,EAAE,CAAC,EAAE,GAAG,KAAK,EAAE,CAAC;AAC/B,gBAAA,MAAM,SAAS,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC;gBAC1C,MAAM,OAAO,GAAG,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC3C,gBAAA,IAAI,OAAO,EAAE;AACX,oBAAA,OAAO,UAAU,CAAC;AACnB,iBAAA;gBAED,MAAM,KAAK,GAAG,SAAS,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;AACxC,gBAAA,OAAO,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC;AAC1C,aAAC,CAAC;AACH,SAAA;AAED,QAAA,UAAU,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;AAC3B,QAAA,OAAO,QAAQ,CAAC;KACjB;AACF;;AChEM,MAAM,QAAQ,GAAG,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,KAAI;IAC1C,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AAC3B,IAAA,IAAI,KAAK,EAAE;AACT,QAAA,IAAI,KAAK,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;YAClC,MAAM,IAAI,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAClC,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjF,YAAA,IAAI,IAAI,EAAE;AACR,gBAAA,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;gBACzB,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,EAAE;AAClC,oBAAA,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;AACjB,iBAAA;AAED,gBAAA,OAAO,KAAK,CAAC;AACd,aAAA;AACF,SAAA;AACF,KAAA;AAED,IAAA,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;MAEW,WAAW,CAAA;AACtB,IAAA,WAAA,CAAoB,OAA4B,EAAA;QAA5B,IAAO,CAAA,OAAA,GAAP,OAAO,CAAqB;KAC/C;IAED,OAAO,GAAA;AACL,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,MAAM,OAAO,GAAG,cAAc,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QAClD,MAAM,QAAQ,GAAG,eAAe,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;AACpD,QAAA,MAAM,SAAS,GAAG,IAAI,SAAS,CAAC,OAAO,CAAC,CAAC;AAEzC,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;AACxB,aAAA,IAAI,CAAC,UAAU,EAAE,UAAU,OAAO,EAAA;YACjC,OAAO;iBACJ,IAAI,CAAC,WAAW,EAAE;gBACjB,aAAa,EAAE,CAAC,OAAO,CAAC;aACzB,CAAC;iBACD,IAAI,CAAC,OAAO,EAAE;AACb,gBAAA,YAAY,EAAE,IAAI;gBAClB,QAAQ,EAAE,UAAU,IAAI,EAAA;oBACtB,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC;iBAC1C;gBACD,OAAO,EAAE,UAAU,IAAI,EAAA;oBACrB,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC;iBACzC;aACF,CAAC;iBACD,MAAM,CAAC,aAAa,EAAE;gBACrB,OAAO,EAAE,CAAC,cAAc,CAAC;AACzB,gBAAA,OAAO,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC;AACtB,gBAAA,KAAK,EAAE,KAAK;aACb,CAAC;AACD,iBAAA,IAAI,CAAC,YAAY,EAAE,UAAU,SAAS,EAAA;gBACrC,SAAS;qBACN,IAAI,CAAC,WAAW,EAAE;oBACjB,QAAQ,EAAE,CAAC,OAAO,CAAC;oBACnB,WAAW,EAAE,CAAC,OAAO,CAAC;oBACtB,QAAQ,EAAE,CAAC,OAAO,CAAC;oBACnB,OAAO,EAAE,CAAC,OAAO,CAAC;oBAClB,KAAK,EAAE,CAAC,OAAO,CAAC;oBAChB,aAAa,EAAE,CAAC,QAAQ,CAAC;iBAC1B,CAAC;qBACD,MAAM,CAAC,QAAQ,EAAE;oBAChB,OAAO,EAAE,CAAC,UAAU,CAAC;AACrB,oBAAA,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC;oBAC1C,KAAK,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,MAAM,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE;AAC/D,oBAAA,QAAQ,EAAE,UAAU,IAAI,EAAE,IAAI,EAAE,GAAG,EAAA;wBACjC,MAAM,MAAM,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC/D,OAAO,CAAC,MAAM,IAAI,MAAM,CAAC,KAAK,KAAK,IAAI,CAAC;qBACzC;AACD,oBAAA,OAAO,EAAE,UAAU,IAAI,EAAE,IAAI,EAAE,GAAG,EAAA;wBAChC,MAAM,MAAM,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC/D,OAAO,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,IAAI,CAAC;qBACxC;AACD,oBAAA,MAAM,EAAE,UAAU,IAAI,EAAE,IAAI,EAAA;AAC1B,wBAAA,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;wBACzB,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;wBACjC,MAAM,GAAG,GAAG,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;AACpC,wBAAA,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;wBAEhD,IAAI,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;AAC7B,4BAAA,EAAE,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;4BACtC,EAAE,CAAC,MAAM,EAAE,CAAC;AACb,yBAAA;AAAM,6BAAA;AACL,4BAAA,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;4BACpD,IAAI,OAAO,CAAC,QAAQ,EAAE;AACpB,gCAAA,MAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;gCAClC,IAAI,MAAM,CAAC,MAAM,EAAE;AACjB,oCAAA,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;AACtB,iCAAA;AACF,6BAAA;AAAM,iCAAA;AACL,gCAAA,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;AACtB,6BAAA;AACF,yBAAA;qBACF;iBACF,CAAC;qBACD,MAAM,CAAC,WAAW,EAAE;oBACnB,OAAO,EAAE,CAAC,aAAa,CAAC;AACxB,oBAAA,UAAU,EAAE,UAAU,IAAI,EAAE,IAAI,EAAA;AAC9B,wBAAA,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;AAChD,wBAAA,MAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC;wBACzB,MAAM,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAEjC,wBAAA,OAAO,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;qBACtC;AACD,oBAAA,KAAK,EAAE,QAAQ;AACf,oBAAA,MAAM,EAAE,UAAU,IAAI,EAAE,IAAI,EAAA;AAC1B,wBAAA,QAAQ,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;AAC9B,4BAAA,KAAK,QAAQ,CAAC;AACd,4BAAA,KAAK,YAAY,CAAC;AAClB,4BAAA,KAAK,cAAc,CAAC;AACpB,4BAAA,KAAK,WAAW,CAAC;AACjB,4BAAA,KAAK,mBAAmB,CAAC;AACzB,4BAAA,KAAK,gBAAgB,CAAC;AACtB,4BAAA,KAAK,MAAM,CAAC;AACZ,4BAAA,KAAK,UAAU,CAAC;AAChB,4BAAA,KAAK,aAAa,CAAC;AACnB,4BAAA,KAAK,WAAW;gCACd,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,EAAE,UAAU,MAAM,EAAA;AACzC,oCAAA,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE;AACrB,wCAAA,OAAO,EAAE;AACP,4CAAA,YAAY,EAAE,IAAI;AAClB,4CAAA,cAAc,EAAE,YAAA;AACd,gDAAA,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;6CACrB;4CACD,YAAY,EAAE,UAAU,CAAC,EAAA;AACvB,gDAAA,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;6CACzB;AACF,yCAAA;AACD,wCAAA,KAAK,EAAE,QAAQ,CAAC,IAAI,EAAE,UAAU,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;AACtD,wCAAA,QAAQ,EAAE,YAAA;AACR,4CAAA,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;4CACtD,OAAO,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;yCACzC;AACD,wCAAA,eAAe,EAAE,cAAc;AAC/B,wCAAA,OAAO,EAAE,OAAO;AAChB,wCAAA,OAAO,EAAE,IAAI;AACb,wCAAA,OAAO,EAAE,UAAU,CAAC,EAAE,CAAC,EAAA;4CACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;yCACnC;AACF,qCAAA,CAAC,CAAC;AACL,iCAAC,CAAC,CAAC;gCACH,MAAM;AACR,4BAAA,KAAK,SAAS;gCACZ,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,EAAE,UAAU,OAAO,EAAA;oCAC1C,OAAO;yCACJ,KAAK,CAAC,OAAO,EAAE;AACd,wCAAA,OAAO,EAAE;AACP,4CAAA,YAAY,EAAE,IAAI;AAClB,4CAAA,cAAc,EAAE,YAAA;AACd,gDAAA,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;6CACrB;4CACD,YAAY,EAAE,UAAU,CAAC,EAAA;AACvB,gDAAA,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;6CACzB;AACF,yCAAA;AACD,wCAAA,QAAQ,EAAE,YAAA;AACR,4CAAA,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;4CACtD,OAAO,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;yCACzC;AACD,wCAAA,OAAO,EAAE,OAAO;AAChB,wCAAA,KAAK,EAAE,IAAI;AACX,wCAAA,eAAe,EAAE,cAAc;qCAChC,CAAC;yCACD,KAAK,CAAC,MAAM,EAAE;AACb,wCAAA,OAAO,EAAE,CAAC,YAAY,EAAE,sBAAsB,CAAC;AAC/C,wCAAA,IAAI,EAAE,KAAK;qCACZ,CAAC;yCACD,KAAK,CAAC,KAAK,EAAE;AACZ,wCAAA,OAAO,EAAE;AACP,4CAAA,YAAY,EAAE,IAAI;AAClB,4CAAA,cAAc,EAAE,YAAA;AACd,gDAAA,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;6CACrB;4CACD,YAAY,EAAE,UAAU,CAAC,EAAA;AACvB,gDAAA,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;6CACzB;AACF,yCAAA;AACD,wCAAA,KAAK,EAAE,IAAI;AACX,wCAAA,QAAQ,EAAE,YAAA;AACR,4CAAA,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;4CACtD,OAAO,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;yCACzC;AACD,wCAAA,eAAe,EAAE,cAAc;AAC/B,wCAAA,OAAO,EAAE,OAAO;AAChB,wCAAA,OAAO,EAAE,IAAI;AACb,wCAAA,OAAO,EAAE,UAAU,CAAC,EAAE,CAAC,EAAA;4CACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;yCACnC;AACF,qCAAA,CAAC,CAAC;AACP,iCAAC,CAAC,CAAC;gCACH,MAAM;AACR,4BAAA,KAAK,IAAI;gCACP,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,EAAE,UAAU,MAAM,EAAA;oCACzC,MAAM;yCACH,KAAK,CAAC,UAAU,EAAE;AACjB,wCAAA,IAAI,EAAE,GAAG;qCACV,CAAC;yCACD,WAAW,CAAC,aAAa,EAAE;AAC1B,wCAAA,OAAO,EAAE;AACP,4CAAA,YAAY,EAAE,IAAI;AAClB,4CAAA,cAAc,EAAE,YAAA;AACd,gDAAA,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;6CAC7B;4CACD,YAAY,EAAE,UAAU,CAAC,EAAA;AACvB,gDAAA,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;6CACzB;AACF,yCAAA;AACD,wCAAA,QAAQ,EAAE,YAAA;AACR,4CAAA,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;4CACtD,OAAO,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;yCAC1C;AACD,wCAAA,MAAM,EAAE,EAAE;AACV,wCAAA,OAAO,EAAE,QAAQ;AACjB,wCAAA,eAAe,EAAE,cAAc;AAC/B,wCAAA,GAAG,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAA;AACpB,4CAAA,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;AACnC,gDAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACrB,6CAAA;yCACF;qCACF,CAAC;yCACD,KAAK,CAAC,WAAW,EAAE;AAClB,wCAAA,IAAI,EAAE,GAAG;AACV,qCAAA,CAAC,CAAC;AACP,iCAAC,CAAC,CAAC;gCACH,MAAM;AACR,4BAAA,KAAK,UAAU,CAAC;AAChB,4BAAA,KAAK,cAAc;gCACjB,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;gCACjC,MAAM;AACT,yBAAA;qBACF;iBACF,CAAC;AACD,qBAAA,KAAK,CAAC,UAAU,EAAE,UAAU,MAAM,EAAA;AACjC,oBAAA,MAAM,CAAC,YAAY,CAAC,QAAQ,EAAE;AAC5B,wBAAA,OAAO,EAAE;AACP,4BAAA,YAAY,EAAE,IAAI;AAClB,4BAAA,cAAc,EAAE,YAAA;AACd,gCAAA,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;6BACrB;4BACD,YAAY,EAAE,UAAU,IAAI,EAAA;AAC1B,gCAAA,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;6BAC5B;AACF,yBAAA;AACD,wBAAA,KAAK,EAAE,IAAI;AACX,wBAAA,QAAQ,EAAE,UAAU,IAAI,EAAE,IAAI,EAAA;AAC5B,4BAAA,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;4BACtD,OAAO,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;yBACzC;AACD,wBAAA,eAAe,EAAE,cAAc;AAC/B,wBAAA,OAAO,EAAE,OAAO;AAChB,wBAAA,OAAO,EAAE,IAAI;AACb,wBAAA,OAAO,EAAE,UAAU,IAAI,EAAE,IAAI,EAAA;4BAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;yBACzC;AACF,qBAAA,CAAC,CAAC;AACL,iBAAC,CAAC,CAAC;AACP,aAAC,CAAC,CAAC;AACP,SAAC,CAAC,CAAC;KACN;AACF;;MCvPY,0BAA0B,CAAA;AA0GrC,IAAA,WAAA,CACS,gBAAkC,EACjC,MAAkB,EAClB,WAA0B,EAAA;QAF3B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QACjC,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;QAClB,IAAW,CAAA,WAAA,GAAX,WAAW,CAAe;AA5G5B,QAAA,IAAA,CAAA,QAAQ,GAAG,IAAI,eAAe,EAAE,CAAC;AAG/B,QAAA,IAAA,CAAA,KAAK,GAAG,IAAI,YAAY,EAAO,CAAC;;AAM1C,QAAA,IAAA,CAAA,OAAO,GAA8C;AACnD,YAAA,SAAS,EAAE,IAAI;SAChB,CAAC;QAEF,IAAQ,CAAA,QAAA,GAAG,IAAI,OAAO,CAAC;YACrB,OAAO,EAAE,MAAK;AACZ,gBAAA,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;gBACzC,MAAM,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;AAC7C,gBAAA,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;AAC7B,gBAAA,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,OAAO,CAAC,EAAE,KAAK,YAAY,IAAI,OAAO,CAAC,CAAC;AACpE,gBAAA,IAAI,OAAO,CAAC,EAAE,KAAK,YAAY,EAAE;AAC/B,oBAAA,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,KAAK,CAAC;AAClC,iBAAA;aACF;AACD,YAAA,UAAU,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;AACnE,SAAA,CAAC,CAAC;QAEH,IAAO,CAAA,OAAA,GAAG,IAAI,OAAO,CAAC;YACpB,OAAO,EAAE,MAAK;AACZ,gBAAA,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;gBACzC,MAAM,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;gBAC7C,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;AACjD,gBAAA,MAAM,CAAC,aAAa,CAAC,IAAI,EAAE,OAAO,CAAC,EAAE,KAAK,YAAY,IAAI,OAAO,CAAC,CAAC;AACnE,gBAAA,IAAI,OAAO,CAAC,EAAE,KAAK,YAAY,EAAE;AAC/B,oBAAA,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC;AACjC,iBAAA;aACF;AACD,YAAA,UAAU,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;AACnE,SAAA,CAAC,CAAC;QAEH,IAAM,CAAA,MAAA,GAAG,IAAI,OAAO,CAAC;YACnB,OAAO,EAAE,MAAK;AACZ,gBAAA,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;gBACzC,IAAI,OAAO,CAAC,EAAE,KAAK,UAAU,IAAI,OAAO,CAAC,KAAK,KAAK,CAAC,EAAE;oBACpD,OAAO,CAAC,KAAK,EAAE,CAAC;AACjB,iBAAA;AAAM,qBAAA;oBACL,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;AACtD,oBAAA,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,QAAQ,CAAC;oBACpC,OAAO,CAAC,MAAM,EAAE,CAAC;AAClB,iBAAA;aACF;YACD,UAAU,EAAE,MAAK;AACf,gBAAA,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;gBACzC,OAAO,OAAO,KAAK,OAAO,CAAC,EAAE,KAAK,YAAY,KAAK,OAAO,CAAC,KAAK,GAAG,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;aACvG;AACF,SAAA,CAAC,CAAC;QAEH,IAAM,CAAA,MAAA,GAAG,IAAI,OAAO,CAAC;AACnB,YAAA,MAAM,EAAE,yBAAyB;YACjC,OAAO,EAAE,MAAK;AACZ,gBAAA,MAAM,UAAU,GAAG,IAAI,oBAAoB,EAAE,CAAC;gBAC9C,MAAM,IAAI,GAAG,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAE7C,gBAAA,MAAM,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;gBAChD,EAAE,CAAC,WAAW,GAAGC,KAAe,CAAC,IAAI,CAAC,CAAC;AAEvC,gBAAA,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;AAC9B,gBAAA,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;gBACrB,MAAM,EAAE,GAAG,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;AAC5C,gBAAA,EAAE,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,WAAW,GAAG,IAAI,GAAG,IAAI,EAAE,CAAC,CAAC;AAEjD,gBAAA,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;aACnB;YACD,UAAU,EAAE,MAAK;AACf,gBAAA,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC7C,gBAAA,OAAO,KAAK,CACV,CAAC,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,IAAI,KAC3B,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;AACtB,sBAAE,IAAI;sBACJ,IAAI,IAAI,UAAU,CAAC,OAAO,EAAE,EAChC,IAAI,CAAC,CAAC;aACX;AACF,SAAA,CAAC,CAAC;QAEH,IAAM,CAAA,MAAA,GAAG,IAAI,OAAO,CAAC;AACnB,YAAA,MAAM,EAAE,yBAAyB;YACjC,OAAO,EAAE,MAAK;AACZ,gBAAA,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;aACnB;AACF,SAAA,CAAC,CAAC;QAEH,IAAK,CAAA,KAAA,GAAG,IAAI,OAAO,CAAC;AAClB,YAAA,MAAM,EAAE,yBAAyB;YACjC,OAAO,EAAE,MAAK;gBACZ,MAAM,MAAM,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AAClD,gBAAA,MAAM,IAAI,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;AAC9B,gBAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;gBAEzB,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACnC,IAAI,CAAC,KAAK,EAAE,CAAC;AAEb,gBAAA,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;aAElD;AACF,SAAA,CAAC,CAAC;KAOF;IAED,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,YAAY,GAAG,IAAI,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAE/D,MAAM,MAAM,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AAClD,QAAA,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,OAAO,EAAS,CAAC;QACpC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;AAE9B,QAAA,MAAM,UAAU,GAAG,IAAI,oBAAoB,EAAE,CAAC;AAC9C,QAAA,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;QACxD,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC;AAC5B,QAAA,IAAI,IAAI,EAAE;AACR,YAAA,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACrD,SAAA;AAED,QAAA,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;KAClD;AAEO,IAAA,eAAe,CAAC,IAAU,EAAA;AAChC,QAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,UAAU,CAAC,CAAC;KAC7D;;oGApIU,0BAA0B,EAAA,EAAA,CAAA,iBAAA,CAAAV,gBAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAAC,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAAU,aAAA,CAAA,CAAA,CAAA,EAAA,CAAA;AAA1B,0BAAA,CAAA,IAAA,iBAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,IAAA,EAAA,0BAA0B,EAF1B,SAAA,EAAA,CAAA,CAAA,4BAAA,CAAA,CAAA,EAAA,OAAA,EAAA,EAAA,KAAA,EAAA,OAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAAA,CAAC,gBAAgB,EAAE,UAAU,CAAC,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,KAAA,EAAA,qCAAA,EAAA,CAAA,EAAA,SAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,mCAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QCjB3C,EAEe,CAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;;QADD,EAAmB,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,OAAA,CAAA,CAAA;;uFDkBpB,0BAA0B,EAAA,CAAA;cALtC,SAAS;AACE,QAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,4BAA4B,EAE3B,SAAA,EAAA,CAAC,gBAAgB,EAAE,UAAU,CAAC,EAAA,QAAA,EAAA,oHAAA,EAAA,CAAA;kHAM/B,KAAK,EAAA,CAAA;kBAAd,MAAM;;;MEXI,gBAAgB,CAAA;IAG3B,SAAS,CAAC,KAAU,EAAE,OAA4B,EAAA;QAChD,MAAM,IAAI,GAAG,KAAa,CAAC;AAC3B,QAAA,IAAI,IAAI,EAAE;AACR,YAAA,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AACjB,gBAAA,MAAM,SAAS,GAAG,IAAI,SAAS,CAAC,OAAO,CAAC,CAAC;AACzC,gBAAA,MAAM,SAAS,GAAG,OAAO,CAAC,SAAS,EAAE,CAAC;AACtC,gBAAA,IAAI,CAAC,OAAO;oBACV,IAAI,aAAa,CACf,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,EACvB,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,EACtB,CAAC,CAAC,EAAE,CAAC,KAAK,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,CAC3C,CAAC;AACL,aAAA;AAED,YAAA,MAAM,UAAU,GAAG,IAAI,oBAAoB,EAAE,CAAC;YAC9C,MAAM,MAAM,GAAG,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAC1C,MAAM,UAAU,GAAGD,KAAe,CAAC,MAAM,CAAC,CAAC;AAC3C,YAAA,IAAI,UAAU,EAAE;gBACd,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;AACvC,aAAA;AACF,SAAA;AAED,QAAA,OAAO,wBAAwB,CAAC;KACjC;;gFA1BU,gBAAgB,GAAA,CAAA,EAAA,CAAA;gGAAhB,gBAAgB,EAAA,IAAA,EAAA,KAAA,EAAA,CAAA,CAAA;uFAAhB,gBAAgB,EAAA,CAAA;cAJ5B,IAAI;AAAC,QAAA,IAAA,EAAA,CAAA;AACJ,gBAAA,IAAI,EAAE,yBAAyB;AAC/B,gBAAA,IAAI,EAAE,KAAK;AACZ,aAAA,CAAA;;;MCWY,kBAAkB,CAAA;AAC7B,IAAA,WAAA,CAAY,YAA8B,EAAA;QACxC,YAAY;AACT,aAAA,QAAQ,CAAC,cAAc,EAAE,iBAAiB,CAAC,CAAC;KAChD;;oFAJU,kBAAkB,EAAA,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,gBAAA,CAAA,CAAA,CAAA,EAAA,CAAA;oEAAlB,kBAAkB,EAAA,CAAA,CAAA;wEAb3B,cAAc,CAAA,EAAA,CAAA,CAAA;uFAaL,kBAAkB,EAAA,CAAA;cAf9B,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,OAAO,EAAE;oBACP,cAAc;AACf,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,qBAAqB;oBACrB,0BAA0B;oBAC1B,gBAAgB;AACjB,iBAAA;AACD,gBAAA,YAAY,EAAE;oBACZ,qBAAqB;oBACrB,0BAA0B;oBAC1B,gBAAgB;AACjB,iBAAA;AACF,aAAA,CAAA;;AACY,CAAA,YAAA,EAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,kBAAkB,mBAL3B,qBAAqB;QACrB,0BAA0B;QAC1B,gBAAgB,CAAA,EAAA,OAAA,EAAA,CAVhB,cAAc,CAAA,EAAA,OAAA,EAAA,CAGd,qBAAqB;QACrB,0BAA0B;QAC1B,gBAAgB,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;MCRP,cAAc,CAAA;AAIzB,IAAA,WAAA,CAAoB,OAAmB,EAAA;QAAnB,IAAO,CAAA,OAAA,GAAP,OAAO,CAAY;QAHhB,IAAI,CAAA,IAAA,GAAG,OAAO,CAAC;KAGM;IAE5C,eAAe,GAAA;QACb,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACnC,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;AAE3C,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM;cACtB,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC;cAClC,OAAO,CAAC;QAEZ,IAAI,CAAC,MAAM,EAAE;AACX,YAAA,MAAM,IAAI,SAAS,CAAC,iBAAiB,EAAE,2BAA2B,CAAC,CAAC;AACrE,SAAA;AAED,QAAA,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;KAC7B;;4EAnBU,cAAc,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,CAAA,CAAA,EAAA,CAAA;iEAAd,cAAc,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAA,cAAA,EAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,CAAA,cAAA,EAAA,MAAA,CAAA,EAAA,MAAA,EAAA,CAAA,qBAAA,EAAA,QAAA,CAAA,EAAA,EAAA,CAAA,CAAA;uFAAd,cAAc,EAAA,CAAA;cAH1B,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,gBAAgB;AAC3B,aAAA,CAAA;6DAEwB,IAAI,EAAA,CAAA;kBAA1B,KAAK;mBAAC,cAAc,CAAA;YACS,MAAM,EAAA,CAAA;kBAAnC,KAAK;mBAAC,qBAAqB,CAAA;;;MCGjB,WAAW,CAAA;;sEAAX,WAAW,GAAA,CAAA,EAAA,CAAA;6DAAX,WAAW,EAAA,CAAA,CAAA;;uFAAX,WAAW,EAAA,CAAA;cARvB,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,cAAc;AACf,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,cAAc;AACf,iBAAA;AACF,aAAA,CAAA;;wFACY,WAAW,EAAA,EAAA,YAAA,EAAA,CANpB,cAAc,CAAA,EAAA,OAAA,EAAA,CAGd,cAAc,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;MCgBL,kBAAkB,CAAA;IA8C7B,WACU,CAAA,YAA8B,EAC9B,UAAsB,EAAA;QADtB,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAkB;QAC9B,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;AAvCtB,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,YAAY,EAAa,CAAC;AAC5C,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,YAAY,EAAO,CAAC;AACtC,QAAA,IAAA,CAAA,eAAe,GAAG,IAAI,YAAY,EAAsF,CAAC;QAE1H,IAAO,CAAA,OAAA,GAAG,EAAE,CAAC;QACb,IAAS,CAAA,SAAA,GAAG,KAAK,CAAC;;AAI3B,QAAA,IAAA,CAAA,OAAO,GAAsC;AAC3C,YAAA,SAAS,EAAE,IAAI;SAChB,CAAC;KA8BD;IA5BD,IAAI,KAAK,KAAK,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE;IACnC,IAAa,KAAK,CAAC,KAAK,EAAA;AACtB,QAAA,IAAI,KAAK,KAAK,IAAI,CAAC,MAAM,EAAE;AACzB,YAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACpB,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9B,SAAA;KACF;IAED,IAAI,KAAK,KAAK,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE;IACnC,IAAa,KAAK,CAAC,KAAK,EAAA;AACtB,QAAA,IAAI,KAAK,KAAK,IAAI,CAAC,MAAM,EAAE;AACzB,YAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACpB,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9B,SAAA;KACF;IAED,IAAI,SAAS,KAAK,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE;IAC3C,IAAa,SAAS,CAAC,KAAK,EAAA;AAC1B,QAAA,IAAI,KAAK,KAAK,IAAI,CAAC,UAAU,EAAE;AAC7B,YAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AACxB,YAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAClC,SAAA;KACF;IAQD,QAAQ,GAAA;QACN,IAAI,CAAC,SAAS,GAAG;AACf,YAAA,MAAM,EAAE,IAAI,OAAO,CAAC,EAAE,OAAO,EAAE,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC;YAC7D,MAAM,EAAE,IAAI,OAAO,EAAE;YACrB,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC;QAEF,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,YAAY,EAAE;AAChD,YAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC;gBACvD,SAAS,EAAE,IAAI,CAAC,SAAS;AACzB,gBAAA,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG;AAClB,gBAAA,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM;gBACxB,QAAQ,EAAE,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;gBAC3C,kBAAkB,EAAE,MAAM,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;AACpD,aAAA,CAAC,CAAC;YAEH,MAAM,gBAAgB,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC1D,YAAA,IAAI,CAAC,UAAU,CAAC,GAAG,CACjB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,KAAI;AACtC,gBAAA,IAAI,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;AACnD,oBAAA,GAAG,EAAE,CAAC;oBAEN,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE;AACxC,wBAAA,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;AACjC,wBAAA,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE;AACvB,4BAAA,MAAM,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC;4BACjD,MAAM,KAAK,GAAG,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AAC5C,4BAAA,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;gCACnB,KAAK;6BACN,EAAE;AACD,gCAAA,MAAM,EAAE,qBAAqB;AAC9B,6BAAA,CAAC,CAAC;AACJ,yBAAA;AACF,qBAAA;AACF,iBAAA;aACF,CAAC,CACH,CAAC;AAEF,YAAA,IAAI,CAAC,UAAU,CAAC,GAAG,CACjB,IAAI,CAAC,KAAK;iBACP,gBAAgB;;iBAEhB,KAAK,CAAC,CAAC,IAAG;;AAET,gBAAA,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM,KAAK,qBAAqB,EAAE;oBAC1C,OAAO;AACR,iBAAA;AAED,gBAAA,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;AACzB,oBAAA,MAAM,OAAO,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACvD,oBAAA,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;AACtB,iBAAA;aACF,CAAC,CACL,CAAC;AACH,SAAA;KACF;;oFA3GU,kBAAkB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,CAAA,CAAA,EAAA,CAAA;qEAAlB,kBAAkB,EAAA,SAAA,EAAA,CAAA,CAAA,kBAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,SAAA,EAAA,SAAA,EAAA,WAAA,EAAA,IAAA,EAAA,MAAA,EAAA,KAAA,EAAA,OAAA,EAAA,KAAA,EAAA,OAAA,EAAA,SAAA,EAAA,WAAA,EAAA,EAAA,OAAA,EAAA,EAAA,WAAA,EAAA,aAAA,EAAA,WAAA,EAAA,aAAA,EAAA,eAAA,EAAA,iBAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAHlB,CAAC,UAAU,CAAC,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,KAAA,EAAA,2BAAA,EAAA,CAAA,EAAA,SAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,2BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QCrBzB,EAEe,CAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;;QADD,EAAmB,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,OAAA,CAAA,CAAA;;uFDuBpB,kBAAkB,EAAA,CAAA;cAN9B,SAAS;AACE,QAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,kBAAkB,aAEjB,CAAC,UAAU,CAAC,EACN,eAAA,EAAA,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,0GAAA,EAAA,CAAA;4FAWrC,WAAW,EAAA,CAAA;kBAApB,MAAM;YACG,WAAW,EAAA,CAAA;kBAApB,MAAM;YACG,eAAe,EAAA,CAAA;kBAAxB,MAAM;YAEE,OAAO,EAAA,CAAA;kBAAf,KAAK;YACG,SAAS,EAAA,CAAA;kBAAjB,KAAK;YACG,IAAI,EAAA,CAAA;kBAAZ,KAAK;YAQO,KAAK,EAAA,CAAA;kBAAjB,KAAK;YAQO,KAAK,EAAA,CAAA;kBAAjB,KAAK;YAQO,SAAS,EAAA,CAAA;kBAArB,KAAK;;;ME9CK,wBAAwB,CAAA;AA+BnC,IAAA,WAAA,CAAoB,UAAsB,EAAA;QAAtB,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;AA5BhC,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,YAAY,EAAO,CAAC;AACtC,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,YAAY,EAAE,CAAC;AACjC,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,YAAY,EAAE,CAAC;QAElC,IAAO,CAAA,OAAA,GAAG,EAAE,CAAC;;AAOtB,QAAA,IAAA,CAAA,OAAO,GAA4C;AACjD,YAAA,SAAS,EAAE,IAAI;SAChB,CAAC;AAEF,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;AACvB,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;KAYwB;AAV/C,IAAA,IAAa,KAAK,GAAA;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IACD,IAAI,KAAK,CAAC,KAAK,EAAA;AACb,QAAA,IAAI,KAAK,KAAK,IAAI,CAAC,KAAK,EAAE;AACxB,YAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACnB,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9B,SAAA;KACF;IAID,eAAe,GAAA;AACb,QAAA,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;QACvB,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;QAE1C,MAAM,EAAE,eAAe,EAAE,eAAe,EAAE,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;AAC1D,QAAA,MAAM,gBAAgB,GAAG,IAAI,gBAAgB,CAAC,KAAK,CAAC,CAAC;;QAGrD,UAAU,CAAC,MAAK;AACd,YAAA,IAAI,CAAC,MAAM,GAAG,IAAI,OAAO,CAAC;gBACxB,QAAQ,EAAE,eAAe,CAAC,IAAI;gBAC9B,UAAU,EAAE,MAAK;oBACf,MAAM,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;oBACpC,MAAM,OAAO,GAAG,gBAAgB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC/C,oBAAA,MAAM,OAAO,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC;AAEnC,oBAAA,OAAO,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;iBACnC;gBACD,OAAO,EAAE,MAAK;oBACZ,MAAM,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;oBACpC,MAAM,OAAO,GAAG,gBAAgB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC/C,oBAAA,MAAM,OAAO,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC;oBACnC,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,KAAK,EAAE;AACrC,wBAAA,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;AACzB,qBAAA;AAAM,yBAAA;AACL,wBAAA,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;AACzB,qBAAA;AAED,oBAAA,OAAO,KAAK,CAAC;iBACd;AACF,aAAA,CAAC,CAAC;AAEH,YAAA,IAAI,CAAC,MAAM,GAAG,IAAI,OAAO,CAAC;AACxB,gBAAA,QAAQ,EAAE,eAAe,CAAC,IAAI,IAAI,eAAe,CAAC,QAAQ;AAC1D,gBAAA,UAAU,EAAE,MAAM,MAAM,CAAC,UAAU,EAAE;gBACrC,OAAO,EAAE,MAAK;AACZ,oBAAA,IAAI,MAAM,CAAC,OAAO,EAAE,KAAK,KAAK,EAAE;AAC9B,wBAAA,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;AACzB,qBAAA;AAED,oBAAA,OAAO,KAAK,CAAC;iBACd;AACF,aAAA,CAAC,CAAC;YAEH,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;YAC7C,IAAI,CAAC,UAAU,CAAC,GAAG,CACjB,QAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CACvD,CAAC;SACH,EAAE,CAAC,CAAC,CAAC;KACP;;gGAlFU,wBAAwB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,CAAA,CAAA,EAAA,CAAA;2EAAxB,wBAAwB,EAAA,SAAA,EAAA,CAAA,CAAA,yBAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,MAAA,EAAA,KAAA,EAAA,OAAA,EAAA,EAAA,OAAA,EAAA,EAAA,WAAA,EAAA,aAAA,EAAA,WAAA,EAAA,aAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAHxB,CAAC,UAAU,CAAC,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,KAAA,EAAA,kCAAA,EAAA,CAAA,EAAA,SAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,iCAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QCdzB,EAAwF,CAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;;QAAnC,EAAmB,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,OAAA,CAAA,CAAA;;uFDiB3D,wBAAwB,EAAA,CAAA;cANpC,SAAS;AACE,QAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,yBAAyB,aAExB,CAAC,UAAU,CAAC,EACN,eAAA,EAAA,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,gGAAA,EAAA,CAAA;6DAKrC,WAAW,EAAA,CAAA;kBAApB,MAAM;YACG,WAAW,EAAA,CAAA;kBAApB,MAAM;YACG,WAAW,EAAA,CAAA;kBAApB,MAAM;YAEE,OAAO,EAAA,CAAA;kBAAf,KAAK;YACG,IAAI,EAAA,CAAA;kBAAZ,KAAK;YAaO,KAAK,EAAA,CAAA;kBAAjB,KAAK;;;MEpBK,qBAAqB,CAAA;;0FAArB,qBAAqB,GAAA,CAAA,EAAA,CAAA;uEAArB,qBAAqB,EAAA,CAAA,CAAA;2EAH9B,cAAc,CAAA,EAAA,CAAA,CAAA;uFAGL,qBAAqB,EAAA,CAAA;cAbjC,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,wBAAwB;oBACxB,kBAAkB;AACnB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,wBAAwB;oBACxB,kBAAkB;AACnB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,cAAc;AACf,iBAAA;AACF,aAAA,CAAA;;AACY,CAAA,YAAA,EAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,qBAAqB,mBAX9B,wBAAwB;QACxB,kBAAkB,CAAA,EAAA,OAAA,EAAA,CAOlB,cAAc,CAAA,EAAA,OAAA,EAAA,CAJd,wBAAwB;QACxB,kBAAkB,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;MCMT,aAAa,CAAA;AASxB,IAAA,WAAA,CACU,IAAgB,EAChB,MAAkB,EAClB,aAA4B,EAAA;QAF5B,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;QAChB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;QAClB,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAX9B,IAAS,CAAA,SAAA,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;KAaxD;AATD,IAAA,IAAkB,OAAO,CAAC,GAAW,EAAA,EAAI,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE;AACnE,IAAA,IAAqB,UAAU,CAAC,MAAc,EAAA,EAAI,IAAI,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,EAAE;AAC/E,IAAA,IAAwB,aAAa,CAAC,SAA0B,EAAA,EAAI,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE;IASpG,WAAW,GAAA;AACT,QAAA,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;AAC9B,QAAA,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KACjC;IAED,QAAQ,GAAA;QACN,MAAM,IAAI,GAAG,IAAI,UAAU,CACzB,IAAI,CAAC,MAAM,CAAC,KAAK,EACjB;YACE,GAAG,EAAE,CAAC,GAAG,EAAE,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC,SAAS,EAAE;YAChE,IAAI,EAAE,CAAC,GAAG,EAAE,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,SAAS,EAAE;AAC/D,SAAA,CACF,CAAC;QAEF,IAAI,CAAC,OAAO,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;KACpC;;0EA/BU,aAAa,EAAA,EAAA,CAAA,iBAAA,CAAAN,IAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAAH,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAAA,EAAA,CAAA,aAAA,CAAA,CAAA,CAAA,EAAA,CAAA;AAAb,aAAA,CAAA,IAAA,iBAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,IAAA,EAAA,aAAa,EAHb,SAAA,EAAA,CAAA,CAAA,aAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,CAAA,KAAA,EAAA,SAAA,CAAA,EAAA,UAAA,EAAA,CAAA,QAAA,EAAA,YAAA,CAAA,EAAA,aAAA,EAAA,CAAA,WAAA,EAAA,eAAA,CAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAAA,CAAC,UAAU,EAAE,aAAa,CAAC,CAAA,EAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,SAAA,sBAAA,CAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,CAAA,EAAA,CAAA,CAAA;uFAG3B,aAAa,EAAA,CAAA;cANzB,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,aAAa;AACvB,gBAAA,QAAQ,EAAE,EAAE;AACZ,gBAAA,SAAS,EAAE,CAAC,UAAU,EAAE,aAAa,CAAC;gBACtC,eAAe,EAAE,uBAAuB,CAAC,MAAM;AAChD,aAAA,CAAA;oHAMmB,OAAO,EAAA,CAAA;kBAAxB,KAAK;mBAAC,KAAK,CAAA;YACS,UAAU,EAAA,CAAA;kBAA9B,KAAK;mBAAC,QAAQ,CAAA;YACS,aAAa,EAAA,CAAA;kBAApC,KAAK;mBAAC,WAAW,CAAA;;;MCdP,UAAU,CAAA;;oEAAV,UAAU,GAAA,CAAA,EAAA,CAAA;4DAAV,UAAU,EAAA,CAAA,CAAA;;uFAAV,UAAU,EAAA,CAAA;cARtB,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,aAAa;AACd,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,aAAa;AACd,iBAAA;AACF,aAAA,CAAA;;wFACY,UAAU,EAAA,EAAA,YAAA,EAAA,CANnB,aAAa,CAAA,EAAA,OAAA,EAAA,CAGb,aAAa,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;;ICPhB,EACa,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA;;;MCgBD,aAAa,CAAA;IAyCxB,WACU,CAAA,MAAkB,EAClB,YAAiC,EAAA;QADjC,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;QAClB,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAqB;;AAN3C,QAAA,IAAA,CAAA,OAAO,GAAiC;AACtC,YAAA,SAAS,EAAE,IAAI;SAChB,CAAC;QAMA,IAAI,CAAC,YAAY,CAAC,GAAG,GAAG,MAAM,MAAM,CAAC;KACtC;AAED,IAAA,WAAW,CAAC,OAAsB,EAAA;AAChC,QAAA,MAAM,IAAI,GAAG;YACX,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,GAAG,EAAE,IAAI,CAAC,GAAG;SACd,CAAC;AAEF,QAAA,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;AAC9B,QAAA,MAAM,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;QACpC,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,KAAK,CAAC,CAAC;QAE7C,MAAM;aACH,IAAI,CAAC,OAAO,CAAC;aACb,OAAO,CAAC,GAAG,IAAG;AACb,YAAA,IAAI,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE;gBAC7D,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;AACvB,aAAA;AACH,SAAC,CAAC,CAAC;AAEL,QAAA,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjB,QAAA,UAAU,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;KACvB;;0EApEU,aAAa,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,mBAAA,CAAA,CAAA,CAAA,EAAA,CAAA;gEAAb,aAAa,EAAA,SAAA,EAAA,CAAA,CAAA,aAAA,CAAA,CAAA,EAAA,SAAA,EAAA,SAAA,mBAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;uBAkCb,WAAW,EAAA,CAAA,CAAA,CAAA;;;;y1BArCX,CAAC,mBAAmB,EAAE,UAAU,CAAC,CAAA,EAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,kBAAA,EAAAF,KAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,SAAA,sBAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;;QDf9C,EAGc,CAAA,UAAA,CAAA,CAAA,EAAA,oCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,aAAA,CAAA,CAAA;;uFCeD,aAAa,EAAA,CAAA;cANzB,SAAS;2BACE,aAAa,EAAA,SAAA,EAEZ,CAAC,mBAAmB,EAAE,UAAU,CAAC,EAAA,eAAA,EAC3B,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,kEAAA,EAAA,CAAA;+FAGtC,GAAG,EAAA,CAAA;kBAAX,KAAK;YACG,GAAG,EAAA,CAAA;kBAAX,KAAK;YAGG,QAAQ,EAAA,CAAA;kBAAhB,KAAK;YACiB,cAAc,EAAA,CAAA;kBAApC,KAAK;mBAAC,cAAc,CAAA;YACD,UAAU,EAAA,CAAA;kBAA7B,KAAK;mBAAC,WAAW,CAAA;YAGF,EAAE,EAAA,CAAA;kBAAjB,KAAK;mBAAC,OAAO,CAAA;YACL,MAAM,EAAA,CAAA;kBAAd,KAAK;YACkB,cAAc,EAAA,CAAA;kBAArC,KAAK;mBAAC,eAAe,CAAA;YACA,YAAY,EAAA,CAAA;kBAAjC,KAAK;mBAAC,aAAa,CAAA;YACA,UAAU,EAAA,CAAA;kBAA7B,KAAK;mBAAC,WAAW,CAAA;YACE,UAAU,EAAA,CAAA;kBAA7B,KAAK;mBAAC,WAAW,CAAA;YACF,MAAM,EAAA,CAAA;kBAArB,KAAK;mBAAC,OAAO,CAAA;YACI,IAAI,EAAA,CAAA;kBAArB,KAAK;mBAAC,SAAS,CAAA;YAGP,OAAO,EAAA,CAAA;kBAAf,KAAK;YACoB,gBAAgB,EAAA,CAAA;kBAAzC,KAAK;mBAAC,iBAAiB,CAAA;YACf,OAAO,EAAA,CAAA;kBAAf,KAAK;YACoB,gBAAgB,EAAA,CAAA;kBAAzC,KAAK;mBAAC,iBAAiB,CAAA;YACJ,UAAU,EAAA,CAAA;kBAA7B,KAAK;mBAAC,WAAW,CAAA;YACE,UAAU,EAAA,CAAA;kBAA7B,KAAK;mBAAC,WAAW,CAAA;YAGT,KAAK,EAAA,CAAA;kBAAb,KAAK;YACG,GAAG,EAAA,CAAA;kBAAX,KAAK;YACY,QAAQ,EAAA,CAAA;kBAAzB,KAAK;mBAAC,SAAS,CAAA;YACO,cAAc,EAAA,CAAA;kBAApC,KAAK;mBAAC,cAAc,CAAA;YACJ,OAAO,EAAA,CAAA;kBAAvB,KAAK;mBAAC,QAAQ,CAAA;YAE2B,WAAW,EAAA,CAAA;kBAApD,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;;;MC1C7B,kBAAkB,CAAA;AAc7B,IAAA,WAAA,CACU,MAAkB,EAClB,EAAqB,EAC7B,YAAiC,EAAA;QAFzB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;QAClB,IAAE,CAAA,EAAA,GAAF,EAAE,CAAmB;;AAd/B,QAAA,IAAA,CAAA,OAAO,GAAsC;AAC3C,YAAA,SAAS,EAAE,IAAI;SAChB,CAAC;AAcA,QAAA,YAAY,CAAC,GAAG,GAAG,MAAM,4BAA4B,CAAC;KACvD;AAbD,IAAA,IAAI,QAAQ,GAAA;QACV,OAAO,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC;KACvD;AAED,IAAA,IAAI,WAAW,GAAA;QACb,OAAO,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC;KAC1D;IASD,QAAQ,GAAA;QACN,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;AACvC,QAAA,OAAO,CAAC,KAAK,CAAC,iBAAiB,CAAC;aAC7B,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC;KAC7C;;oFAzBU,kBAAkB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,mBAAA,CAAA,CAAA,CAAA,EAAA,CAAA;AAAlB,kBAAA,CAAA,IAAA,iBAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,IAAA,EAAA,kBAAkB,EAHlB,SAAA,EAAA,CAAA,CAAA,mBAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAAA,CAAC,mBAAmB,EAAE,UAAU,CAAC,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,KAAA,EAAA,4BAAA,EAAA,CAAA,EAAA,SAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,2BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QCP9C,EAAkF,CAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;;QAAnC,EAAmB,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,OAAA,CAAA,CAAA;;uFDUrD,kBAAkB,EAAA,CAAA;cAN9B,SAAS;2BACE,mBAAmB,EAAA,SAAA,EAElB,CAAC,mBAAmB,EAAE,UAAU,CAAC,EAAA,eAAA,EAC3B,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,0FAAA,EAAA,CAAA;;;MEOpC,eAAe,CAAA;;8EAAf,eAAe,GAAA,CAAA,EAAA,CAAA;iEAAf,eAAe,EAAA,CAAA,CAAA;qEAHxB,cAAc,CAAA,EAAA,CAAA,CAAA;uFAGL,eAAe,EAAA,CAAA;cAX3B,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,kBAAkB;AACnB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,kBAAkB;AACnB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,cAAc;AACf,iBAAA;AACF,aAAA,CAAA;;AACY,CAAA,YAAA,EAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,eAAe,EATxB,EAAA,YAAA,EAAA,CAAA,kBAAkB,CAMlB,EAAA,OAAA,EAAA,CAAA,cAAc,aAHd,kBAAkB,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;;ICRlB,EAAyB,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA;;;MCgBhB,gBAAgB,CAAA;IAa3B,WAAoB,CAAA,MAAkB,EAAE,UAAsB,EAAA;QAA1C,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;QAZ9B,IAAY,CAAA,YAAA,GAAG,KAAK,CAAC;QAGpB,IAAS,CAAA,SAAA,GAAG,KAAK,CAAC;;AAG3B,QAAA,IAAA,CAAA,OAAO,GAAoC;AACzC,YAAA,SAAS,EAAE,IAAI;SAChB,CAAC;AAEF,QAAA,IAAA,CAAA,KAAK,GAAG,IAAI,GAAG,EAAe,CAAC;AAG7B,QAAA,MAAM,QAAQ,GAAG,IAAI,aAAa,CAAC,UAAU,CAAC,aAAa,EAAE,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;AACrF,QAAA,QAAQ,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,IAAG;YACzB,MAAM,IAAI,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AACnC,YAAA,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,WAAW,EAAE;gBAC1C,CAAC,CAAC,eAAe,EAAE,CAAC;AACrB,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;AAED,IAAA,QAAQ,CAAC,MAAM,EAAA;QACb,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,OAAO;AACR,SAAA;AAED,QAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI;YACF,IAAI,IAAI,CAAC,SAAS,EAAE;AAClB,gBAAA,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACtB,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACnB,aAAA;AACF,SAAA;AAAS,gBAAA;AACR,YAAA,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;AAC3B,SAAA;KACF;AAED,IAAA,IAAI,CAAC,MAAM,EAAA;AACT,QAAA,MAAM,CAAC,GAAG;AACR,YAAA,GAAG,EAAE,KAAK;AACV,YAAA,OAAO,EAAE,CAAC;YACV,QAAQ,EAAE,MAAM,KAAK,OAAO;SAC7B,CAAC;AAEF,QAAA,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;QAC9B,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;AACzC,QAAA,QAAQ,CAAC,OAAO,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;KACjC;AAED,IAAA,OAAO,CAAC,MAAM,EAAA;AACZ,QAAA,QAAQ,MAAM;YACZ,KAAK,OAAO,EAAE;gBACZ,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAClC,GAAG,CAAC,KAAK,EAAE,CAAC;gBACZ,MAAM;AACP,aAAA;YACD,KAAK,KAAK,EAAE;gBACV,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBACtC,KAAK,CAAC,KAAK,EAAE,CAAC;gBACd,MAAM;AACP,aAAA;AACD,YAAA;gBACE,MAAM,IAAI,SAAS,CAAC,UAAU,EAAE,CAAkB,eAAA,EAAA,MAAM,CAAE,CAAA,CAAC,CAAC;AAC/D,SAAA;KACF;;gFAnEU,gBAAgB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,CAAA,CAAA,EAAA,CAAA;mEAAhB,gBAAgB,EAAA,SAAA,EAAA,CAAA,CAAA,iBAAA,CAAA,CAAA,EAAA,SAAA,EAAA,SAAA,sBAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;uBAGhB,WAAW,EAAA,CAAA,CAAA,CAAA;;;;AANX,KAAA,EAAA,EAAA,MAAA,EAAA,EAAA,SAAA,EAAA,WAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAAA,CAAC,UAAU,CAAC,CAAA,CAAA,EAAA,kBAAA,EAAA,GAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,KAAA,EAAA,0BAAA,EAAA,CAAA,EAAA,SAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,yBAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;;QDdzB,EAEc,CAAA,UAAA,CAAA,CAAA,EAAA,uCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,aAAA,CAAA,CAAA;QAEd,EAAgF,CAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;;QAAnC,EAAmB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAAnB,EAAmB,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,OAAA,CAAA,CAAA;;uFCanD,gBAAgB,EAAA,CAAA;cAN5B,SAAS;AACE,QAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,iBAAiB,aAEhB,CAAC,UAAU,CAAC,EACN,eAAA,EAAA,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,wJAAA,EAAA,CAAA;sFAKL,QAAQ,EAAA,CAAA;kBAAjD,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;YAC/B,SAAS,EAAA,CAAA;kBAAjB,KAAK;;;MCdK,kBAAkB,CAAA;AAI7B,IAAA,WAAA,CAAoB,UAAsB,EAAA;QAAtB,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;AACxC,QAAA,UAAU,CAAC,aAAa,CAAC,QAAQ,GAAG,CAAC,CAAC;AAEtC,QAAA,MAAM,QAAQ,GAAG,IAAI,aAAa,CAAC,UAAU,CAAC,aAAa,EAAE,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;AACrF,QAAA,QAAQ,CAAC,EAAE,CAAC,OAAO,EAAE,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;KAC7D;IAED,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;KACxC;IAED,KAAK,GAAA;AACH,QAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;KACvC;;oFAjBU,kBAAkB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,CAAA,CAAA,EAAA,CAAA;qEAAlB,kBAAkB,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAA,oBAAA,EAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,CAAA,EAAA,IAAA,EAAA,CAAA,sBAAA,EAAA,MAAA,CAAA,EAAA,EAAA,CAAA,CAAA;uFAAlB,kBAAkB,EAAA,CAAA;cAH9B,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,sBAAsB;AACjC,aAAA,CAAA;6DAE8B,MAAM,EAAA,CAAA;kBAAlC,KAAK;mBAAC,oBAAoB,CAAA;YACI,IAAI,EAAA,CAAA;kBAAlC,KAAK;mBAAC,sBAAsB,CAAA;;;MCSlB,aAAa,CAAA;;0EAAb,aAAa,GAAA,CAAA,EAAA,CAAA;+DAAb,aAAa,EAAA,CAAA,CAAA;mEAHtB,cAAc,CAAA,EAAA,CAAA,CAAA;uFAGL,aAAa,EAAA,CAAA;cAbzB,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,gBAAgB;oBAChB,kBAAkB;AACnB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,gBAAgB;oBAChB,kBAAkB;AACnB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,cAAc;AACf,iBAAA;AACF,aAAA,CAAA;;AACY,CAAA,YAAA,EAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,aAAa,mBAXtB,gBAAgB;QAChB,kBAAkB,CAAA,EAAA,OAAA,EAAA,CAOlB,cAAc,CAAA,EAAA,OAAA,EAAA,CAJd,gBAAgB;QAChB,kBAAkB,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;MCNT,aAAa,CAAA;IAGxB,WAAY,CAAA,WAA6B,EAAE,gBAAkC,EAAA;AAFrE,QAAA,IAAA,CAAA,UAAU,GAA+B,YAAY,CAAC,MAAM,CAAC,CAAC;QAGpE,gBAAgB,CAAC,kBAAkB,CAAC,WAAW,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;KACvE;IAED,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAA;QACpB,IAAI,CAAC,QAAQ,EAAE;AACb,YAAA,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;AACvB,SAAA;QAED,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;AAC3C,QAAA,MAAM,CACJ,KAAK,EACL,OAAO,EACP,OAAO,EACP,EAAE,EACH,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAEvB,IAAI,KAAK,IAAI,OAAO,EAAE;YACpB,MAAM,IAAI,GAAG,IAAI,IAAI,CACnB,QAAQ,CAAC,WAAW,EAAE,EACtB,QAAQ,CAAC,QAAQ,EAAE,EACnB,QAAQ,CAAC,OAAO,EAAE,EAClB,CAAC,KAAK,EACN,CAAC,OAAO,EACR,OAAO,GAAG,CAAC,OAAO,GAAG,CAAC,EACtB,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CACb,CAAC;AAEF,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;AAED,QAAA,OAAO,QAAQ,CAAC;KACjB;;0EAnCU,aAAa,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,gBAAA,CAAA,CAAA,CAAA,EAAA,CAAA;gEAAb,aAAa,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAA,aAAA,EAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA;uFAAb,aAAa,EAAA,CAAA;cAHzB,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,eAAe;AAC1B,aAAA,CAAA;;;MCMY,UAAU,CAAA;;oEAAV,UAAU,GAAA,CAAA,EAAA,CAAA;4DAAV,UAAU,EAAA,CAAA,CAAA;;uFAAV,UAAU,EAAA,CAAA;cARtB,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,aAAa;AACd,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,aAAa;AACd,iBAAA;AACF,aAAA,CAAA;;wFACY,UAAU,EAAA,EAAA,YAAA,EAAA,CANnB,aAAa,CAAA,EAAA,OAAA,EAAA,CAGb,aAAa,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;MCCJ,mBAAmB,CAAA;;sFAAnB,mBAAmB,GAAA,CAAA,EAAA,CAAA;sEAAnB,mBAAmB,EAAA,SAAA,EAAA,CAAA,CAAA,mBAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAHnB,CAAC,UAAU,CAAC,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,SAAA,4BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,CAAA,EAAA,CAAA,CAAA;uFAGZ,mBAAmB,EAAA,CAAA;cAN/B,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,mBAAmB;AAC7B,gBAAA,QAAQ,EAAE,EAAE;gBACZ,SAAS,EAAE,CAAC,UAAU,CAAC;gBACvB,eAAe,EAAE,uBAAuB,CAAC,MAAM;AAChD,aAAA,CAAA;gBAES,IAAI,EAAA,CAAA;kBAAZ,KAAK;;;MCAM,kBAAkB,CAAA;IAM7B,WACU,CAAA,MAAkB,EAClB,YAAiC,EAAA;QADjC,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;QAClB,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAqB;QAEzC,IAAI,CAAC,YAAY,CAAC,GAAG,GAAG,MAAM,WAAW,CAAC;KAC3C;IAED,QAAQ,GAAA;AACN,QAAA,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;QAC9B,MAAM,SAAS,GAAG,IAAI,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,OAAO,GAAG,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC;KACzC;;oFAjBU,kBAAkB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,mBAAA,CAAA,CAAA,CAAA,EAAA,CAAA;AAAlB,kBAAA,CAAA,IAAA,iBAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,IAAA,EAAA,kBAAkB,EAHlB,SAAA,EAAA,CAAA,CAAA,kBAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,KAAA,EAAA,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAAA,CAAC,mBAAmB,EAAE,UAAU,CAAC,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,KAAA,EAAA,2BAAA,EAAA,CAAA,EAAA,SAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,2BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QCP9C,EACiD,CAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;;QAAnC,EAAmB,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,OAAA,CAAA,CAAA;;uFDSpB,kBAAkB,EAAA,CAAA;cAN9B,SAAS;2BACE,kBAAkB,EAAA,SAAA,EAEjB,CAAC,mBAAmB,EAAE,UAAU,CAAC,EAAA,eAAA,EAC3B,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,wGAAA,EAAA,CAAA;+FAGtC,KAAK,EAAA,CAAA;kBAAb,KAAK;YACG,GAAG,EAAA,CAAA;kBAAX,KAAK;YACG,IAAI,EAAA,CAAA;kBAAZ,KAAK;;;MEQK,gBAAgB,CAAA;;gFAAhB,gBAAgB,GAAA,CAAA,EAAA,CAAA;kEAAhB,gBAAgB,EAAA,CAAA,CAAA;sEAHzB,cAAc,CAAA,EAAA,CAAA,CAAA;uFAGL,gBAAgB,EAAA,CAAA;cAf5B,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,mBAAmB;oBACnB,kBAAkB;oBAClB,aAAa;AACd,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,mBAAmB;oBACnB,kBAAkB;oBAClB,aAAa;AACd,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,cAAc;AACf,iBAAA;AACF,aAAA,CAAA;;AACY,CAAA,YAAA,EAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,gBAAgB,mBAbzB,mBAAmB;QACnB,kBAAkB;QAClB,aAAa,CAAA,EAAA,OAAA,EAAA,CAQb,cAAc,CAAA,EAAA,OAAA,EAAA,CALd,mBAAmB;QACnB,kBAAkB;QAClB,aAAa,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;MCNJ,mBAAmB,CAAA;AAc9B,IAAA,WAAA,CAAoB,MAAkB,EAAA;QAAlB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;QAb7B,IAAI,CAAA,IAAA,GAAG,IAAI,CAAC;QACZ,IAAI,CAAA,IAAA,GAAG,IAAI,CAAC;QACZ,IAAI,CAAA,IAAA,GAAG,IAAI,CAAC;QACZ,IAAU,CAAA,UAAA,GAAG,IAAI,CAAC;QAClB,IAAa,CAAA,aAAA,GAAG,IAAI,CAAC;QACrB,IAAY,CAAA,YAAA,GAAG,KAAK,CAAC;QACrB,IAAW,CAAA,WAAA,GAAG,KAAK,CAAC;QAEpB,IAAO,CAAA,OAAA,GAAG,KAAK,CAAC;QAChB,IAAM,CAAA,MAAA,GAAG,KAAK,CAAC;QACf,IAAQ,CAAA,QAAA,GAAG,KAAK,CAAC;QACjB,IAAS,CAAA,SAAA,GAAG,KAAK,CAAC;KAG1B;IAED,WAAW,GAAA;AACT,QAAA,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;QAC9B,KAAK,CAAC,UAAU,CAAC;YACf,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,IAAI,EAAE,IAAI,CAAC,IAAI;AACf,YAAA,OAAO,EAAE;gBACP,MAAM,EAAE,IAAI,CAAC,aAAa;gBAC1B,IAAI,EAAE,IAAI,CAAC,WAAW;gBACtB,KAAK,EAAE,IAAI,CAAC,YAAY;gBACxB,GAAG,EAAE,IAAI,CAAC,UAAU;AACrB,aAAA;AACD,YAAA,GAAG,EAAE;gBACH,MAAM,EAAE,IAAI,CAAC,SAAS;gBACtB,IAAI,EAAE,IAAI,CAAC,OAAO;gBAClB,KAAK,EAAE,IAAI,CAAC,QAAQ;gBACpB,GAAG,EAAE,IAAI,CAAC,MAAM;AACjB,aAAA;AACF,SAAA,CAAC,CAAC;KACJ;;sFApCU,mBAAmB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,CAAA,CAAA,EAAA,CAAA;sEAAnB,mBAAmB,EAAA,SAAA,EAAA,CAAA,CAAA,mBAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,MAAA,EAAA,UAAA,EAAA,YAAA,EAAA,aAAA,EAAA,eAAA,EAAA,YAAA,EAAA,cAAA,EAAA,WAAA,EAAA,aAAA,EAAA,OAAA,EAAA,SAAA,EAAA,MAAA,EAAA,QAAA,EAAA,QAAA,EAAA,UAAA,EAAA,SAAA,EAAA,WAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAHnB,CAAC,UAAU,CAAC,CAAA,EAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,SAAA,4BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,CAAA,EAAA,CAAA,CAAA;uFAGZ,mBAAmB,EAAA,CAAA;cAN/B,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,mBAAmB;AAC7B,gBAAA,QAAQ,EAAE,EAAE;gBACZ,SAAS,EAAE,CAAC,UAAU,CAAC;gBACvB,eAAe,EAAE,uBAAuB,CAAC,MAAM;AAChD,aAAA,CAAA;6DAEU,IAAI,EAAA,CAAA;kBAAZ,KAAK;YACG,IAAI,EAAA,CAAA;kBAAZ,KAAK;YACG,IAAI,EAAA,CAAA;kBAAZ,KAAK;YACG,UAAU,EAAA,CAAA;kBAAlB,KAAK;YACG,aAAa,EAAA,CAAA;kBAArB,KAAK;YACG,YAAY,EAAA,CAAA;kBAApB,KAAK;YACG,WAAW,EAAA,CAAA;kBAAnB,KAAK;YAEG,OAAO,EAAA,CAAA;kBAAf,KAAK;YACG,MAAM,EAAA,CAAA;kBAAd,KAAK;YACG,QAAQ,EAAA,CAAA;kBAAhB,KAAK;YACG,SAAS,EAAA,CAAA;kBAAjB,KAAK;;;MCVK,gBAAgB,CAAA;;gFAAhB,gBAAgB,GAAA,CAAA,EAAA,CAAA;kEAAhB,gBAAgB,EAAA,CAAA,CAAA;;uFAAhB,gBAAgB,EAAA,CAAA;cAR5B,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,mBAAmB;AACpB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,mBAAmB;AACpB,iBAAA;AACF,aAAA,CAAA;;wFACY,gBAAgB,EAAA,EAAA,YAAA,EAAA,CANzB,mBAAmB,CAAA,EAAA,OAAA,EAAA,CAGnB,mBAAmB,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;ACRvB;;AAEG;;;;"}},"fesm2015":{"code":"import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, NgModule, TemplateRef, ContentChild, Input, Pipe, Directive, Injectable, EventEmitter, ViewChild, Output, Inject, Optional, HostListener, HostBinding } from '@angular/core';\nimport * as i1 from '@qgrid/ngx';\nimport { GridPlugin, TemplateModule, TemplateHostService, GridError, LayerModule, StateAccessor, CellTemplateService, Disposable } from '@qgrid/ngx';\nimport * as columnService from '@qgrid/core';\nimport { guid, Action, Command, isArray, Log, isUndefined, predicateFactory, Guard, noop, jobLine, GRID_PREFIX, FocusAfterRenderService, Fetch, flatten, getValue as getValue$1, uniq, EventListener, EventManager, CommandManager, Shortcut, ShortcutDispatcher, parseFactory, PipeUnit, Keyboard, isDate, isFunction, isObject, clone, Composite, yes, filterNode, isString, escapeRegexp, htmlEncode, Fastdom, PaginationState, PersistenceState, PersistenceService, filter, takeOnce, cloneDeep, getValueFactory, createValidator, MarkupVisitor, SelectionService, RestState, selectRowIndex, selectColumnIndex } from '@qgrid/core';\nimport { AutofocusPlugin, BackdropPlugin, ColumnChooserState, ColumnChooserPlugin, ColumnFilterState, ColumnFilterPlugin, ColumnSortPlugin, DataManipulationState, DataManipulationPlugin, EditFormPanelPlugin, ExportPlugin, ImportPlugin, PositionPlugin, PagerPlugin, PersistencePlugin, RestPlugin, ValidatorPlugin } from '@qgrid/plugins';\nimport * as i1$1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i1$2 from '@angular/common/http';\n\nclass ActionBarComponent {\r\n    constructor(plugin, cd) {\r\n        this.plugin = plugin;\r\n        this.cd = cd;\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n    }\r\n    get actions() {\r\n        const { model } = this.plugin;\r\n        return model.action().items;\r\n    }\r\n    ngOnInit() {\r\n        const { model, observeReply } = this.plugin;\r\n        observeReply(model.actionChanged)\r\n            .subscribe(e => {\r\n            if (e.hasChanges('items')) {\r\n                const { items } = e.state;\r\n                const inRightOrder = this.checkOrder(items);\r\n                if (!inRightOrder) {\r\n                    // todo: make it better\r\n                    model.action({\r\n                        items: items.sort((a, b) => a.command.priority - b.command.priority),\r\n                    });\r\n                }\r\n                this.cd.markForCheck();\r\n                this.cd.detectChanges();\r\n            }\r\n        });\r\n    }\r\n    checkOrder(actions) {\r\n        for (let i = 0; i < actions.length - 1; i++) {\r\n            const action = actions[i];\r\n            const nextAction = actions[i + 1];\r\n            if (action.command.priority > nextAction.command.priority) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\nActionBarComponent.ɵfac = function ActionBarComponent_Factory(t) { return new (t || ActionBarComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };\r\nActionBarComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ActionBarComponent, selectors: [[\"q-grid-action-bar\"]], features: [i0.ɵɵProvidersFeature([GridPlugin])], decls: 1, vars: 2, consts: [[3, \"key\", \"context\"]], template: function ActionBarComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementContainer(0, 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"key\", \"plugin-action-bar.tpl.html\")(\"context\", ctx.context);\r\n        }\r\n    }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionBarComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-action-bar', providers: [GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container [key]=\\\"'plugin-action-bar.tpl.html'\\\"\\n\\t\\t\\t\\t\\t\\t\\t[context]=\\\"context\\\">\\n</ng-container>\\n\" }]\r\n        }], function () { return [{ type: i1.GridPlugin }, { type: i0.ChangeDetectorRef }]; }, null);\r\n})();\n\nclass ActionListComponent {\r\n}\r\nActionListComponent.ɵfac = function ActionListComponent_Factory(t) { return new (t || ActionListComponent)(); };\r\nActionListComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ActionListComponent, selectors: [[\"q-grid-actions\"]], decls: 0, vars: 0, template: function ActionListComponent_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionListComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'q-grid-actions',\r\n                    template: '',\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                }]\r\n        }], null, null);\r\n})();\n\nclass ActionBarModule {\r\n}\r\nActionBarModule.ɵfac = function ActionBarModule_Factory(t) { return new (t || ActionBarModule)(); };\r\nActionBarModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ActionBarModule });\r\nActionBarModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionBarModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        ActionBarComponent,\r\n                        ActionListComponent,\r\n                    ],\r\n                    exports: [\r\n                        ActionBarComponent,\r\n                        ActionListComponent,\r\n                    ],\r\n                    imports: [\r\n                        TemplateModule,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ActionBarModule, { declarations: [ActionBarComponent,\r\n            ActionListComponent], imports: [TemplateModule], exports: [ActionBarComponent,\r\n            ActionListComponent] });\r\n})();\n\nclass ActionComponent {\r\n    constructor(plugin, templateHost) {\r\n        this.plugin = plugin;\r\n        this.templateHost = templateHost;\r\n        const id = guid();\r\n        templateHost.key = source => `action-${source}-${id}.tpl.html`;\r\n    }\r\n    ngOnInit() {\r\n        const { model, disposable } = this.plugin;\r\n        const action = new Action(this.command || new Command(), this.title, this.icon);\r\n        if (this.templateRef) {\r\n            action.templateUrl = this.templateHost.key('trigger');\r\n        }\r\n        model.action({\r\n            items: model\r\n                .action()\r\n                .items\r\n                .concat([action]),\r\n        }, {\r\n            source: 'action.component',\r\n        });\r\n        disposable.add(() => model.action({\r\n            items: model\r\n                .action()\r\n                .items\r\n                .filter(x => x !== action),\r\n        }));\r\n    }\r\n}\r\nActionComponent.ɵfac = function ActionComponent_Factory(t) { return new (t || ActionComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i1.TemplateHostService)); };\r\nActionComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ActionComponent, selectors: [[\"q-grid-action\"]], contentQueries: function ActionComponent_ContentQueries(rf, ctx, dirIndex) {\r\n        if (rf & 1) {\r\n            i0.ɵɵcontentQuery(dirIndex, TemplateRef, 7);\r\n        }\r\n        if (rf & 2) {\r\n            let _t;\r\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\r\n        }\r\n    }, inputs: { title: \"title\", icon: \"icon\", command: \"command\" }, features: [i0.ɵɵProvidersFeature([GridPlugin, TemplateHostService])], decls: 0, vars: 0, template: function ActionComponent_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'q-grid-action',\r\n                    template: '',\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    providers: [GridPlugin, TemplateHostService],\r\n                }]\r\n        }], function () { return [{ type: i1.GridPlugin }, { type: i1.TemplateHostService }]; }, { templateRef: [{\r\n                type: ContentChild,\r\n                args: [TemplateRef, { static: true }]\r\n            }], title: [{\r\n                type: Input\r\n            }], icon: [{\r\n                type: Input\r\n            }], command: [{\r\n                type: Input\r\n            }] });\r\n})();\n\nclass ActionCoreComponent {\r\n    constructor(plugin) {\r\n        this.plugin = plugin;\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n    }\r\n    get model() {\r\n        return this.plugin.model;\r\n    }\r\n    get command() {\r\n        const { action } = this;\r\n        if (!action) {\r\n            throw new GridError('action-core.component', 'Action is not set');\r\n        }\r\n        return action.command;\r\n    }\r\n    get title() {\r\n        const { action } = this;\r\n        if (!action) {\r\n            throw new GridError('action-core.component', 'Action is not set');\r\n        }\r\n        return action.title;\r\n    }\r\n    get icon() {\r\n        const { action } = this;\r\n        if (!action) {\r\n            throw new GridError('action-core.component', 'Action is not set');\r\n        }\r\n        return action.icon;\r\n    }\r\n    get templateUrl() {\r\n        const { action } = this;\r\n        if (!action) {\r\n            throw new GridError('action-core.component', 'Action is not set');\r\n        }\r\n        return action.templateUrl;\r\n    }\r\n    get mode() {\r\n        const { action } = this;\r\n        if (!action) {\r\n            throw new GridError('action-core.component', 'Action is not set');\r\n        }\r\n        if (action.templateUrl) {\r\n            return 'template';\r\n        }\r\n        if (action.icon) {\r\n            return 'icon';\r\n        }\r\n        if (action.title) {\r\n            return 'text';\r\n        }\r\n        return 'none';\r\n    }\r\n}\r\nActionCoreComponent.ɵfac = function ActionCoreComponent_Factory(t) { return new (t || ActionCoreComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin)); };\r\nActionCoreComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ActionCoreComponent, selectors: [[\"q-grid-action-core\"]], inputs: { action: \"action\" }, features: [i0.ɵɵProvidersFeature([GridPlugin])], decls: 1, vars: 1, consts: [[\"key\", \"plugin-action-core.tpl.html\", 3, \"context\"]], template: function ActionCoreComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementContainer(0, 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"context\", ctx.context);\r\n        }\r\n    }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionCoreComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-action-core', providers: [GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-action-core.tpl.html\\\"\\n              [context]=\\\"context\\\">\\n</ng-container>\\n\" }]\r\n        }], function () { return [{ type: i1.GridPlugin }]; }, { action: [{\r\n                type: Input\r\n            }] });\r\n})();\n\nclass ActionModule {\r\n}\r\nActionModule.ɵfac = function ActionModule_Factory(t) { return new (t || ActionModule)(); };\r\nActionModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ActionModule });\r\nActionModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        ActionComponent,\r\n                        ActionCoreComponent,\r\n                    ],\r\n                    exports: [\r\n                        ActionComponent,\r\n                        ActionCoreComponent,\r\n                    ],\r\n                    imports: [\r\n                        TemplateModule,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ActionModule, { declarations: [ActionComponent,\r\n            ActionCoreComponent], imports: [TemplateModule], exports: [ActionComponent,\r\n            ActionCoreComponent] });\r\n})();\n\nfunction AltComponent_ng_template_0_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵtext(0);\r\n    }\r\n    if (rf & 2) {\r\n        const $cell_r1 = ctx.$implicit;\r\n        i0.ɵɵtextInterpolate1(\" \", $cell_r1.rowIndex, \"\\n\");\r\n    }\r\n}\r\nclass AltComponent {\r\n    constructor(plugin) {\r\n        this.plugin = plugin;\r\n    }\r\n    ngOnInit() {\r\n        const { model, observe, service } = this.plugin;\r\n        const altColumn = {\r\n            key: '$alt.number',\r\n            type: 'row-number',\r\n            title: 'Alt',\r\n            canHighlight: false,\r\n            canMove: false,\r\n            canResize: false,\r\n        };\r\n        model\r\n            .pagination({\r\n            size: 10,\r\n        }, {\r\n            source: 'alt.component',\r\n        })\r\n            .data({\r\n            columns: [altColumn]\r\n                .concat(model.data().columns),\r\n        }, {\r\n            source: 'alt.component',\r\n        });\r\n        observe(model.keyboardChanged)\r\n            .subscribe(e => {\r\n            const { codes, status } = e.state;\r\n            if (status === 'down') {\r\n                switch (codes[0]) {\r\n                    case 'alt': {\r\n                        const rowNo = Number.parseInt(codes[1], 10);\r\n                        if (!Number.isNaN(rowNo)) {\r\n                            const { rows } = model.view();\r\n                            const { current, size } = model.pagination();\r\n                            const rowIndex = rowNo + current * size;\r\n                            const altRow = rows[rowIndex];\r\n                            if (altRow) {\r\n                                model.selection({\r\n                                    items: [altRow],\r\n                                }, {\r\n                                    source: 'alt.component',\r\n                                });\r\n                                service.focus(rowIndex);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nAltComponent.ɵfac = function AltComponent_Factory(t) { return new (t || AltComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin)); };\r\nAltComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AltComponent, selectors: [[\"q-grid-alt\"]], features: [i0.ɵɵProvidersFeature([GridPlugin])], decls: 1, vars: 0, consts: [[\"for\", \"body-cell-row-number-the-$alt.number.tpl.html\"]], template: function AltComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵtemplate(0, AltComponent_ng_template_0_Template, 1, 1, \"ng-template\", 0);\r\n        }\r\n    }, dependencies: [i1.TemplateCacheDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AltComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-alt', providers: [GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template for=\\\"body-cell-row-number-the-$alt.number.tpl.html\\\"\\n                        let-$cell>\\n\\t{{$cell.rowIndex}}\\n</ng-template>\\n\" }]\r\n        }], function () { return [{ type: i1.GridPlugin }]; }, null);\r\n})();\n\nclass AltModule {\r\n}\r\nAltModule.ɵfac = function AltModule_Factory(t) { return new (t || AltModule)(); };\r\nAltModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: AltModule });\r\nAltModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AltModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        AltComponent,\r\n                    ],\r\n                    exports: [\r\n                        AltComponent,\r\n                    ],\r\n                    imports: [\r\n                        TemplateModule,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AltModule, { declarations: [AltComponent], imports: [TemplateModule], exports: [AltComponent] }); })();\n\nclass ArrayPipe {\r\n    transform(value) {\r\n        if (isArray(value)) {\r\n            return value;\r\n        }\r\n        Log.warn('ArrayPipe', `${value} is not of array type`);\r\n        return isUndefined(value) || value === null ? [] : [value];\r\n    }\r\n}\r\nArrayPipe.ɵfac = function ArrayPipe_Factory(t) { return new (t || ArrayPipe)(); };\r\nArrayPipe.ɵpipe = /*@__PURE__*/ i0.ɵɵdefinePipe({ name: \"qGridArray\", type: ArrayPipe, pure: true });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ArrayPipe, [{\r\n            type: Pipe,\r\n            args: [{\r\n                    name: 'qGridArray',\r\n                }]\r\n        }], null, null);\r\n})();\n\nclass AutoCompleteEditorComponent {\r\n    constructor(plugin) {\r\n        this.plugin = plugin;\r\n        this.options = [];\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n    }\r\n    get cell() {\r\n        return this.plugin.view.edit.cell;\r\n    }\r\n    get items() {\r\n        return this.cell.fetch.result;\r\n    }\r\n    get title() {\r\n        return this.cell.column.title;\r\n    }\r\n    get value() {\r\n        return this.cell.value;\r\n    }\r\n    set value(value) {\r\n        this.cell.value = value;\r\n    }\r\n    filter(search) {\r\n        const test = predicateFactory(search);\r\n        const getLabel = this.itemLabelFactory(this.cell.column);\r\n        if (isArray(this.items)) {\r\n            this.options = this.items.filter(item => test(getLabel(item)));\r\n        }\r\n    }\r\n    reset() {\r\n        this.options = [];\r\n    }\r\n    itemLabelFactory(column) {\r\n        const { itemLabel } = column;\r\n        if (itemLabel) {\r\n            return item => itemLabel(item);\r\n        }\r\n        return item => item;\r\n    }\r\n}\r\nAutoCompleteEditorComponent.ɵfac = function AutoCompleteEditorComponent_Factory(t) { return new (t || AutoCompleteEditorComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin)); };\r\nAutoCompleteEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AutoCompleteEditorComponent, selectors: [[\"q-grid-autocomplete-editor\"]], features: [i0.ɵɵProvidersFeature([GridPlugin])], decls: 1, vars: 1, consts: [[\"key\", \"plugin-autocomplete-editor.tpl.html\", 3, \"context\"]], template: function AutoCompleteEditorComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementContainer(0, 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"context\", ctx.context);\r\n        }\r\n    }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AutoCompleteEditorComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-autocomplete-editor', providers: [GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-autocomplete-editor.tpl.html\\\"\\n              [context]=\\\"context\\\">\\n</ng-container>\\n\" }]\r\n        }], function () { return [{ type: i1.GridPlugin }]; }, null);\r\n})();\n\nclass AutoCompleteEditorModule {\r\n}\r\nAutoCompleteEditorModule.ɵfac = function AutoCompleteEditorModule_Factory(t) { return new (t || AutoCompleteEditorModule)(); };\r\nAutoCompleteEditorModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: AutoCompleteEditorModule });\r\nAutoCompleteEditorModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AutoCompleteEditorModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        AutoCompleteEditorComponent,\r\n                    ],\r\n                    exports: [\r\n                        AutoCompleteEditorComponent,\r\n                    ],\r\n                    imports: [\r\n                        TemplateModule,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AutoCompleteEditorModule, { declarations: [AutoCompleteEditorComponent], imports: [TemplateModule], exports: [AutoCompleteEditorComponent] }); })();\n\nclass AutoFocusDirective {\r\n    constructor(plugin) {\r\n        this.plugin = plugin;\r\n    }\r\n    ngAfterViewInit() {\r\n        if (this.enabled !== false) {\r\n            new AutofocusPlugin(this.plugin);\r\n        }\r\n    }\r\n}\r\nAutoFocusDirective.ɵfac = function AutoFocusDirective_Factory(t) { return new (t || AutoFocusDirective)(i0.ɵɵdirectiveInject(i1.GridPlugin)); };\r\nAutoFocusDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: AutoFocusDirective, selectors: [[\"\", \"q-grid-autofocus\", \"\"]], inputs: { enabled: [\"q-grid-autofocus\", \"enabled\"] }, features: [i0.ɵɵProvidersFeature([GridPlugin])] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AutoFocusDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-autofocus]',\r\n                    providers: [GridPlugin],\r\n                }]\r\n        }], function () { return [{ type: i1.GridPlugin }]; }, { enabled: [{\r\n                type: Input,\r\n                args: ['q-grid-autofocus']\r\n            }] });\r\n})();\n\nclass BackdropService {\r\n    constructor() {\r\n        this.isActive = true;\r\n    }\r\n    hide() {\r\n        Guard.notNull(this.element, 'element');\r\n        if (this.isActive) {\r\n            this.element.nativeElement.classList.add('q-grid-backdrop-inactive');\r\n            this.isActive = false;\r\n        }\r\n    }\r\n    reveal() {\r\n        Guard.notNull(this.element, 'element');\r\n        if (!this.isActive) {\r\n            this.element.nativeElement.classList.remove('q-grid-backdrop-inactive');\r\n            this.isActive = true;\r\n        }\r\n    }\r\n}\r\nBackdropService.ɵfac = function BackdropService_Factory(t) { return new (t || BackdropService)(); };\r\nBackdropService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: BackdropService, factory: BackdropService.ɵfac });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BackdropService, [{\r\n            type: Injectable\r\n        }], null, null);\r\n})();\n\nclass BackdropComponent {\r\n    constructor(backdropService, elementRef) {\r\n        this.backdropService = backdropService;\r\n        this.closeEvent = new EventEmitter();\r\n        this.propagate = true;\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n        backdropService.element = elementRef;\r\n    }\r\n    ngOnInit() {\r\n        const context = {\r\n            element: this.backdropService.element.nativeElement,\r\n            propagate: this.propagate,\r\n            onKeyDown: () => { },\r\n        };\r\n        const backdrop = new BackdropPlugin(context);\r\n        backdrop.closeEvent.on(() => this.closeEvent.emit());\r\n    }\r\n    ngOnDestroy() {\r\n        this.backdropService.element = null;\r\n    }\r\n}\r\nBackdropComponent.ɵfac = function BackdropComponent_Factory(t) { return new (t || BackdropComponent)(i0.ɵɵdirectiveInject(BackdropService), i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nBackdropComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: BackdropComponent, selectors: [[\"q-grid-backdrop\"]], viewQuery: function BackdropComponent_Query(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵviewQuery(TemplateRef, 7);\r\n        }\r\n        if (rf & 2) {\r\n            let _t;\r\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\r\n        }\r\n    }, inputs: { propagate: \"propagate\" }, outputs: { closeEvent: \"close\" }, decls: 1, vars: 1, consts: [[\"key\", \"plugin-backdrop.tpl.html\", 3, \"context\"]], template: function BackdropComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementContainer(0, 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"context\", ctx.context);\r\n        }\r\n    }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BackdropComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-backdrop', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-backdrop.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\n\" }]\r\n        }], function () { return [{ type: BackdropService }, { type: i0.ElementRef }]; }, { template: [{\r\n                type: ViewChild,\r\n                args: [TemplateRef, { static: true }]\r\n            }], closeEvent: [{\r\n                type: Output,\r\n                args: ['close']\r\n            }], propagate: [{\r\n                type: Input\r\n            }] });\r\n})();\n\nclass BackdropDirective {\r\n    constructor(zone, document) {\r\n        this.zone = zone;\r\n        this.document = document;\r\n        this.close = new EventEmitter();\r\n        this.selector = '';\r\n    }\r\n    set backdropHost(value) {\r\n        if (!value) {\r\n            if (this.backdrop) {\r\n                this.backdrop.remove();\r\n                this.backdrop = null;\r\n            }\r\n            return;\r\n        }\r\n        this.backdrop = this.document.createElement('div');\r\n        this.backdrop.classList.add('q-grid-backdrop');\r\n        this.backdrop.style.zIndex = '1000';\r\n        this.zone.runOutsideAngular(() => {\r\n            this.backdrop.addEventListener('click', () => {\r\n                if (this.backdrop) {\r\n                    this.backdrop.remove();\r\n                    this.backdrop = null;\r\n                    this.close.emit();\r\n                }\r\n            });\r\n        });\r\n        this.zone.runOutsideAngular(() => {\r\n            const element = document.querySelector(this.selector);\r\n            element.style.zIndex = '1001';\r\n            element.parentElement.appendChild(this.backdrop);\r\n        });\r\n    }\r\n}\r\nBackdropDirective.ɵfac = function BackdropDirective_Factory(t) { return new (t || BackdropDirective)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(DOCUMENT)); };\r\nBackdropDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: BackdropDirective, selectors: [[\"\", \"q-grid-backdrop\", \"\"]], inputs: { selector: [\"q-grid-backdrop-selector\", \"selector\"], backdropHost: [\"q-grid-backdrop-active\", \"backdropHost\"] }, outputs: { close: \"q-grid-backdrop\" } });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BackdropDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-backdrop]',\r\n                }]\r\n        }], function () {\r\n        return [{ type: i0.NgZone }, { type: undefined, decorators: [{\r\n                        type: Inject,\r\n                        args: [DOCUMENT]\r\n                    }] }];\r\n    }, { close: [{\r\n                type: Output,\r\n                args: ['q-grid-backdrop']\r\n            }], selector: [{\r\n                type: Input,\r\n                args: ['q-grid-backdrop-selector']\r\n            }], backdropHost: [{\r\n                type: Input,\r\n                args: ['q-grid-backdrop-active']\r\n            }] });\r\n})();\n\nclass BackdropModule {\r\n}\r\nBackdropModule.ɵfac = function BackdropModule_Factory(t) { return new (t || BackdropModule)(); };\r\nBackdropModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: BackdropModule });\r\nBackdropModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ providers: [\r\n        BackdropService,\r\n    ], imports: [TemplateModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BackdropModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        BackdropComponent,\r\n                        BackdropDirective,\r\n                    ],\r\n                    exports: [\r\n                        BackdropComponent,\r\n                        BackdropDirective,\r\n                    ],\r\n                    imports: [\r\n                        TemplateModule,\r\n                    ],\r\n                    providers: [\r\n                        BackdropService,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(BackdropModule, { declarations: [BackdropComponent,\r\n            BackdropDirective], imports: [TemplateModule], exports: [BackdropComponent,\r\n            BackdropDirective] });\r\n})();\n\nclass BlurDirective {\r\n    constructor(renderer, elementRef) {\r\n        this.renderer = renderer;\r\n        this.elementRef = elementRef;\r\n        this.onBlur = noop;\r\n        this.selector = 'input';\r\n    }\r\n    ngOnInit() {\r\n        const element = this.renderer.selectRootElement(this.selector);\r\n        this.renderer.listen(element, 'blur', this.onBlur);\r\n    }\r\n}\r\nBlurDirective.ɵfac = function BlurDirective_Factory(t) { return new (t || BlurDirective)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nBlurDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: BlurDirective, selectors: [[\"\", \"q-grid-on-blur\", \"\"]], inputs: { onBlur: [\"q-grid-on-blur\", \"onBlur\"], selector: [\"q-grid-on-blur-selector\", \"selector\"] } });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BlurDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-on-blur]',\r\n                }]\r\n        }], function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }]; }, { onBlur: [{\r\n                type: Input,\r\n                args: ['q-grid-on-blur']\r\n            }], selector: [{\r\n                type: Input,\r\n                args: ['q-grid-on-blur-selector']\r\n            }] });\r\n})();\n\nclass BoolEditorComponent {\r\n    constructor() {\r\n        this.autofocus = false;\r\n        this.valueChange = new EventEmitter();\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n    }\r\n    get value() {\r\n        return this.state;\r\n    }\r\n    set value(value) {\r\n        if (value !== this.value) {\r\n            this.state = value;\r\n            this.valueChange.emit(value);\r\n        }\r\n    }\r\n    get isChecked() {\r\n        return this.column.isChecked(this.value);\r\n    }\r\n    set isChecked(value) {\r\n        this.value = value ? this.trueValue : this.falseValue;\r\n    }\r\n    get trueValue() {\r\n        return this.column.trueValue;\r\n    }\r\n    get falseValue() {\r\n        return this.column.falseValue;\r\n    }\r\n    ngOnInit() {\r\n        // entering edit mode means toggling boolean value\r\n        if (this.autofocus && this.column.editorOptions.trigger === 'click') {\r\n            setTimeout(() => this.value =\r\n                this.value === this.trueValue\r\n                    ? this.falseValue\r\n                    : this.trueValue, 10);\r\n        }\r\n    }\r\n    isIndeterminate() {\r\n        return this.column.isIndeterminate(this.value);\r\n    }\r\n}\r\nBoolEditorComponent.ɵfac = function BoolEditorComponent_Factory(t) { return new (t || BoolEditorComponent)(); };\r\nBoolEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: BoolEditorComponent, selectors: [[\"q-grid-bool-editor\"]], inputs: { autofocus: \"autofocus\", column: \"column\", label: \"label\", value: \"value\" }, outputs: { valueChange: \"valueChange\" }, decls: 1, vars: 1, consts: [[\"key\", \"plugin-bool-editor.tpl.html\", 3, \"context\"]], template: function BoolEditorComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementContainer(0, 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"context\", ctx.context);\r\n        }\r\n    }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BoolEditorComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-bool-editor', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-bool-editor.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\n\" }]\r\n        }], null, { autofocus: [{\r\n                type: Input\r\n            }], column: [{\r\n                type: Input\r\n            }], label: [{\r\n                type: Input\r\n            }], valueChange: [{\r\n                type: Output\r\n            }], value: [{\r\n                type: Input\r\n            }] });\r\n})();\n\nclass BoolEditorModule {\r\n}\r\nBoolEditorModule.ɵfac = function BoolEditorModule_Factory(t) { return new (t || BoolEditorModule)(); };\r\nBoolEditorModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: BoolEditorModule });\r\nBoolEditorModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BoolEditorModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        BoolEditorComponent,\r\n                    ],\r\n                    exports: [\r\n                        BoolEditorComponent,\r\n                    ],\r\n                    imports: [\r\n                        TemplateModule,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(BoolEditorModule, { declarations: [BoolEditorComponent], imports: [TemplateModule], exports: [BoolEditorComponent] }); })();\n\nclass CaptionComponent {\r\n    constructor(plugin, cd) {\r\n        this.plugin = plugin;\r\n        this.cd = cd;\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n    }\r\n    get value() {\r\n        const { caption, title } = this.plugin.model.grid();\r\n        return caption || title;\r\n    }\r\n    ngOnInit() {\r\n        const { model, observe } = this.plugin;\r\n        observe(model.gridChanged)\r\n            .subscribe(() => this.cd.detectChanges());\r\n    }\r\n}\r\nCaptionComponent.ɵfac = function CaptionComponent_Factory(t) { return new (t || CaptionComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };\r\nCaptionComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CaptionComponent, selectors: [[\"q-grid-caption\"]], features: [i0.ɵɵProvidersFeature([GridPlugin])], decls: 1, vars: 1, consts: [[\"key\", \"plugin-caption.tpl.html\", 3, \"context\"]], template: function CaptionComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementContainer(0, 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"context\", ctx.context);\r\n        }\r\n    }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CaptionComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-caption', providers: [GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-caption.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\n\" }]\r\n        }], function () { return [{ type: i1.GridPlugin }, { type: i0.ChangeDetectorRef }]; }, null);\r\n})();\n\nclass CaptionModule {\r\n}\r\nCaptionModule.ɵfac = function CaptionModule_Factory(t) { return new (t || CaptionModule)(); };\r\nCaptionModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: CaptionModule });\r\nCaptionModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CaptionModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        CaptionComponent,\r\n                    ],\r\n                    exports: [\r\n                        CaptionComponent,\r\n                    ],\r\n                    imports: [\r\n                        TemplateModule,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(CaptionModule, { declarations: [CaptionComponent], imports: [TemplateModule], exports: [CaptionComponent] }); })();\n\nfunction CellEditorComponent_ng_template_0_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵprojection(0);\r\n    }\r\n}\r\nconst _c0$6 = [\"*\"];\r\nclass CellEditorComponent {\r\n    constructor(plugin) {\r\n        this.plugin = plugin;\r\n        this.closeEvent = new EventEmitter();\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n    }\r\n    ngOnInit() {\r\n        const { view, disposable } = this.plugin;\r\n        if (this.closeEvent.observers.length) {\r\n            view.edit.cell.requestClose = () => {\r\n                this.close();\r\n                return true;\r\n            };\r\n        }\r\n        disposable.add(() => view.edit.cell.requestClose = null);\r\n    }\r\n    close() {\r\n        this.closeEvent.emit();\r\n    }\r\n}\r\nCellEditorComponent.ɵfac = function CellEditorComponent_Factory(t) { return new (t || CellEditorComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin)); };\r\nCellEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CellEditorComponent, selectors: [[\"q-grid-cell-editor\"]], viewQuery: function CellEditorComponent_Query(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵviewQuery(TemplateRef, 7);\r\n        }\r\n        if (rf & 2) {\r\n            let _t;\r\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\r\n        }\r\n    }, outputs: { closeEvent: \"close\" }, features: [i0.ɵɵProvidersFeature([GridPlugin])], ngContentSelectors: _c0$6, decls: 2, vars: 1, consts: [[\"key\", \"plugin-cell-editor.tpl.html\", 3, \"context\"]], template: function CellEditorComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵprojectionDef();\r\n            i0.ɵɵtemplate(0, CellEditorComponent_ng_template_0_Template, 1, 0, \"ng-template\");\r\n            i0.ɵɵelementContainer(1, 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"context\", ctx.context);\r\n        }\r\n    }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellEditorComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-cell-editor', providers: [GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template>\\n    <ng-content>\\n    </ng-content>\\n</ng-template>\\n\\n<ng-container key=\\\"plugin-cell-editor.tpl.html\\\"\\n              [context]=\\\"context\\\">\\n</ng-container>\\n\" }]\r\n        }], function () { return [{ type: i1.GridPlugin }]; }, { template: [{\r\n                type: ViewChild,\r\n                args: [TemplateRef, { static: true }]\r\n            }], closeEvent: [{\r\n                type: Output,\r\n                args: ['close']\r\n            }] });\r\n})();\n\nclass CellEditorModule {\r\n}\r\nCellEditorModule.ɵfac = function CellEditorModule_Factory(t) { return new (t || CellEditorModule)(); };\r\nCellEditorModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: CellEditorModule });\r\nCellEditorModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellEditorModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        CellEditorComponent,\r\n                    ],\r\n                    exports: [\r\n                        CellEditorComponent,\r\n                    ],\r\n                    imports: [\r\n                        TemplateModule,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(CellEditorModule, { declarations: [CellEditorComponent], imports: [TemplateModule], exports: [CellEditorComponent] }); })();\n\nclass CellTooltipDirective {\r\n    constructor(elementRef, renderer) {\r\n        this.elementRef = elementRef;\r\n        this.renderer = renderer;\r\n        this.showDelay = 1000;\r\n        this.job = jobLine(this.showDelay);\r\n    }\r\n    ngOnChanges(e) {\r\n        if (e.showDelay) {\r\n            this.job = jobLine(this.showDelay);\r\n        }\r\n        if (e.host && this.host) {\r\n            const { top, left, height } = this.host.getBoundingClientRect();\r\n            const box = this.getBoxRect(this.host);\r\n            const host = this.elementRef.nativeElement;\r\n            this.job(() => {\r\n                this.renderer.setStyle(host, 'top', top - box.top + height + 'px');\r\n                this.renderer.setStyle(host, 'left', left - box.left + 'px');\r\n                this.renderer.removeClass(host, 'q-grid-hide');\r\n            });\r\n        }\r\n    }\r\n    // TODO: Extract to external function\r\n    getBoxRect(element) {\r\n        let view = element;\r\n        const marker = `${GRID_PREFIX}-box`;\r\n        while (view) {\r\n            if (view.classList && view.classList.contains(marker)) {\r\n                return view.getBoundingClientRect();\r\n            }\r\n            view = view.parentNode;\r\n        }\r\n        return view.getBoundingClientRect();\r\n    }\r\n}\r\nCellTooltipDirective.ɵfac = function CellTooltipDirective_Factory(t) { return new (t || CellTooltipDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2)); };\r\nCellTooltipDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: CellTooltipDirective, selectors: [[\"\", \"q-grid-tooltip\", \"\"]], inputs: { host: \"host\", showDelay: \"showDelay\" }, features: [i0.ɵɵProvidersFeature([GridPlugin, TemplateHostService]), i0.ɵɵNgOnChangesFeature] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellTooltipDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-tooltip]',\r\n                    providers: [GridPlugin, TemplateHostService],\r\n                }]\r\n        }], function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }]; }, { host: [{\r\n                type: Input\r\n            }], showDelay: [{\r\n                type: Input\r\n            }] });\r\n})();\n\nfunction CellTooltipComponent_ng_template_1_div_0_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"div\", 2);\r\n        i0.ɵɵelementContainer(1, 3);\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r1 = i0.ɵɵnextContext(2);\r\n        i0.ɵɵproperty(\"showDelay\", ctx_r1.showDelay)(\"host\", ctx_r1.cellElement);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"context\", ctx_r1.context);\r\n    }\r\n}\r\nfunction CellTooltipComponent_ng_template_1_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵtemplate(0, CellTooltipComponent_ng_template_1_div_0_Template, 2, 3, \"div\", 1);\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r0 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"ngIf\", ctx_r0.cellElement);\r\n    }\r\n}\r\nclass CellTooltipComponent {\r\n    constructor(plugin, cd, appRef) {\r\n        this.plugin = plugin;\r\n        this.cd = cd;\r\n        this.appRef = appRef;\r\n        this.context = {\r\n            $implicit: null,\r\n        };\r\n    }\r\n    ngOnInit() {\r\n        const { model, observe, table } = this.plugin;\r\n        observe(model.mouseChanged)\r\n            .subscribe(e => {\r\n            if (e.state.status !== 'move' && e.state.status !== 'leave') {\r\n                return;\r\n            }\r\n            if (e.state.target) {\r\n                const { rowIndex, columnIndex } = e.state.target;\r\n                const domCell = table.body.cell(rowIndex, columnIndex);\r\n                if (domCell.model()) {\r\n                    this.context = {\r\n                        $implicit: domCell.model(),\r\n                    };\r\n                    this.cellElement = domCell.element;\r\n                    this.addTooltipLayer();\r\n                }\r\n            }\r\n            else {\r\n                this.cellElement = null;\r\n            }\r\n            this.invalidate();\r\n        });\r\n    }\r\n    addTooltipLayer() {\r\n        const tooltipLayer = 'tooltip';\r\n        const table = this.plugin.table;\r\n        if (table.view.hasLayer(tooltipLayer)) {\r\n            table.view.removeLayer(tooltipLayer);\r\n        }\r\n        table.view.addLayer(tooltipLayer);\r\n    }\r\n    invalidate() {\r\n        // ToDo: Investigate how to improve.\r\n        this.cd.markForCheck();\r\n        this.cd.detectChanges();\r\n        this.appRef.tick();\r\n    }\r\n}\r\nCellTooltipComponent.ɵfac = function CellTooltipComponent_Factory(t) { return new (t || CellTooltipComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ApplicationRef)); };\r\nCellTooltipComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CellTooltipComponent, selectors: [[\"q-grid-cell-tooltip\"]], inputs: { showDelay: \"showDelay\" }, features: [i0.ɵɵProvidersFeature([GridPlugin, TemplateHostService])], decls: 2, vars: 0, consts: [[\"for\", \"tooltip\"], [\"class\", \"q-grid-cell-tooltip q-grid-hide\", \"q-grid-tooltip\", \"\", 3, \"showDelay\", \"host\", 4, \"ngIf\"], [\"q-grid-tooltip\", \"\", 1, \"q-grid-cell-tooltip\", \"q-grid-hide\", 3, \"showDelay\", \"host\"], [\"key\", \"body-cell-tooltip.tpl.html\", 3, \"context\"]], template: function CellTooltipComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementStart(0, \"q-grid-layer\");\r\n            i0.ɵɵtemplate(1, CellTooltipComponent_ng_template_1_Template, 1, 1, \"ng-template\", 0);\r\n            i0.ɵɵelementEnd();\r\n        }\r\n    }, dependencies: [i1$1.NgIf, i1.TemplateDirective, i1.TemplateCacheDirective, i1.LayerComponent, CellTooltipDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellTooltipComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-cell-tooltip', providers: [GridPlugin, TemplateHostService], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<q-grid-layer>\\n\\t<ng-template for=\\\"tooltip\\\">\\n\\t\\t<div class=\\\"q-grid-cell-tooltip q-grid-hide\\\"\\n\\t\\t\\t*ngIf=\\\"cellElement\\\"\\n\\t\\t\\tq-grid-tooltip\\n\\t\\t\\t[showDelay]=\\\"showDelay\\\"\\n\\t\\t\\t[host]=\\\"cellElement\\\">\\n\\n\\t\\t\\t<ng-container key=\\\"body-cell-tooltip.tpl.html\\\"\\n\\t\\t\\t\\t\\t\\t\\t[context]=\\\"context\\\">\\n\\t\\t\\t</ng-container>\\n\\t\\t</div>\\n\\t</ng-template>\\n</q-grid-layer>\\n\" }]\r\n        }], function () { return [{ type: i1.GridPlugin }, { type: i0.ChangeDetectorRef }, { type: i0.ApplicationRef }]; }, { showDelay: [{\r\n                type: Input\r\n            }] });\r\n})();\n\nclass CellTooltipModule {\r\n}\r\nCellTooltipModule.ɵfac = function CellTooltipModule_Factory(t) { return new (t || CellTooltipModule)(); };\r\nCellTooltipModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: CellTooltipModule });\r\nCellTooltipModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\r\n        TemplateModule,\r\n        LayerModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellTooltipModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        CellTooltipComponent,\r\n                        CellTooltipDirective,\r\n                    ],\r\n                    exports: [\r\n                        CellTooltipComponent,\r\n                        CellTooltipDirective,\r\n                    ],\r\n                    imports: [\r\n                        CommonModule,\r\n                        TemplateModule,\r\n                        LayerModule,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(CellTooltipModule, { declarations: [CellTooltipComponent,\r\n            CellTooltipDirective], imports: [CommonModule,\r\n            TemplateModule,\r\n            LayerModule], exports: [CellTooltipComponent,\r\n            CellTooltipDirective] });\r\n})();\n\nclass FocusAfterRender {\r\n    constructor(plugin) {\r\n        if (plugin) {\r\n            new FocusAfterRenderService(plugin);\r\n        }\r\n    }\r\n}\r\nFocusAfterRender.ɵfac = function FocusAfterRender_Factory(t) { return new (t || FocusAfterRender)(i0.ɵɵinject(i1.GridPlugin, 8)); };\r\nFocusAfterRender.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: FocusAfterRender, factory: FocusAfterRender.ɵfac });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FocusAfterRender, [{\r\n            type: Injectable\r\n        }], function () {\r\n        return [{ type: i1.GridPlugin, decorators: [{\r\n                        type: Optional\r\n                    }] }];\r\n    }, null);\r\n})();\n\nconst COLUMN_CHOOSER_NAME = 'qGridColumnChooser';\r\nclass RootContext {\r\n    constructor(ctrl) {\r\n        this.ctrl = ctrl;\r\n    }\r\n    get node() {\r\n        return this.ctrl.treeView;\r\n    }\r\n}\r\nclass ColumnChooserComponent {\r\n    constructor(focusAfterRender, plugin, zone, cd, stateAccessor) {\r\n        this.focusAfterRender = focusAfterRender;\r\n        this.plugin = plugin;\r\n        this.zone = zone;\r\n        this.cd = cd;\r\n        this.stateAccessor = stateAccessor;\r\n        this.ccState = this.stateAccessor.setter(ColumnChooserState);\r\n        this.submitEvent = new EventEmitter();\r\n        this.cancelEvent = new EventEmitter();\r\n    }\r\n    set columnChooserCanAggregate(canAggregate) { this.ccState({ canAggregate }); }\r\n    root() {\r\n        return { $implicit: new RootContext(this.context.$implicit) };\r\n    }\r\n    ngOnChanges() {\r\n        const { model } = this.plugin;\r\n        this.stateAccessor.write(model);\r\n    }\r\n    ngOnInit() {\r\n        const context = {\r\n            name: COLUMN_CHOOSER_NAME,\r\n        };\r\n        const columnChooser = new ColumnChooserPlugin(this.plugin, context);\r\n        columnChooser.submitEvent.on(() => this.submitEvent.emit());\r\n        columnChooser.cancelEvent.on(() => this.cancelEvent.emit());\r\n        columnChooser.dropEvent.on(() => {\r\n            this.cd.markForCheck();\r\n            this.zone.run(noop);\r\n        });\r\n        this.context = { $implicit: columnChooser, plugin: this };\r\n    }\r\n}\r\nColumnChooserComponent.ɵfac = function ColumnChooserComponent_Factory(t) { return new (t || ColumnChooserComponent)(i0.ɵɵdirectiveInject(FocusAfterRender), i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.StateAccessor)); };\r\nColumnChooserComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ColumnChooserComponent, selectors: [[\"q-grid-column-chooser\"]], inputs: { columnChooserCanAggregate: [\"canAggregate\", \"columnChooserCanAggregate\"] }, outputs: { submitEvent: \"submit\", cancelEvent: \"cancel\" }, features: [i0.ɵɵProvidersFeature([\r\n            FocusAfterRender,\r\n            GridPlugin,\r\n            StateAccessor,\r\n        ]), i0.ɵɵNgOnChangesFeature], decls: 1, vars: 1, consts: [[\"key\", \"column-chooser.tpl.html\", 3, \"context\"]], template: function ColumnChooserComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementContainer(0, 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"context\", ctx.context);\r\n        }\r\n    }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnChooserComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-column-chooser', providers: [\r\n                        FocusAfterRender,\r\n                        GridPlugin,\r\n                        StateAccessor,\r\n                    ], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"column-chooser.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\n\" }]\r\n        }], function () { return [{ type: FocusAfterRender }, { type: i1.GridPlugin }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1.StateAccessor }]; }, { submitEvent: [{\r\n                type: Output,\r\n                args: ['submit']\r\n            }], cancelEvent: [{\r\n                type: Output,\r\n                args: ['cancel']\r\n            }], columnChooserCanAggregate: [{\r\n                type: Input,\r\n                args: ['canAggregate']\r\n            }] });\r\n})();\n\nclass ColumnChooserModule {\r\n    constructor(modelBuilder) {\r\n        modelBuilder.register('columnChooser', ColumnChooserState);\r\n    }\r\n}\r\nColumnChooserModule.ɵfac = function ColumnChooserModule_Factory(t) { return new (t || ColumnChooserModule)(i0.ɵɵinject(i1.GridModelBuilder)); };\r\nColumnChooserModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ColumnChooserModule });\r\nColumnChooserModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [FormsModule,\r\n        TemplateModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnChooserModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [\r\n                        FormsModule,\r\n                        TemplateModule,\r\n                    ],\r\n                    exports: [\r\n                        ColumnChooserComponent,\r\n                    ],\r\n                    declarations: [\r\n                        ColumnChooserComponent,\r\n                    ],\r\n                }]\r\n        }], function () { return [{ type: i1.GridModelBuilder }]; }, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ColumnChooserModule, { declarations: [ColumnChooserComponent], imports: [FormsModule,\r\n            TemplateModule], exports: [ColumnChooserComponent] });\r\n})();\n\nclass ColumnChooserTriggerComponent {\r\n}\r\nColumnChooserTriggerComponent.ɵfac = function ColumnChooserTriggerComponent_Factory(t) { return new (t || ColumnChooserTriggerComponent)(); };\r\nColumnChooserTriggerComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ColumnChooserTriggerComponent, selectors: [[\"q-grid-column-chooser-trigger\"]], decls: 1, vars: 0, consts: [[\"key\", \"plugin-column-chooser-trigger.tpl.html\"]], template: function ColumnChooserTriggerComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementContainer(0, 0);\r\n        }\r\n    }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnChooserTriggerComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-column-chooser-trigger', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-column-chooser-trigger.tpl.html\\\"></ng-container>\\n\" }]\r\n        }], null, null);\r\n})();\n\nclass ColumnChooserTriggerModule {\r\n}\r\nColumnChooserTriggerModule.ɵfac = function ColumnChooserTriggerModule_Factory(t) { return new (t || ColumnChooserTriggerModule)(); };\r\nColumnChooserTriggerModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ColumnChooserTriggerModule });\r\nColumnChooserTriggerModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnChooserTriggerModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [\r\n                        TemplateModule,\r\n                    ],\r\n                    exports: [\r\n                        ColumnChooserTriggerComponent,\r\n                    ],\r\n                    declarations: [\r\n                        ColumnChooserTriggerComponent,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ColumnChooserTriggerModule, { declarations: [ColumnChooserTriggerComponent], imports: [TemplateModule], exports: [ColumnChooserTriggerComponent] }); })();\n\nclass ColumnFilterByComponent {\r\n    constructor() {\r\n        this.byBlanksChange = new EventEmitter();\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n    }\r\n    get isBlanks() {\r\n        return this.byBlanks;\r\n    }\r\n    remove(item) {\r\n        this.by.delete(item);\r\n    }\r\n    removeByBlanks() {\r\n        this.byBlanksChange.emit(false);\r\n    }\r\n}\r\nColumnFilterByComponent.ɵfac = function ColumnFilterByComponent_Factory(t) { return new (t || ColumnFilterByComponent)(); };\r\nColumnFilterByComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ColumnFilterByComponent, selectors: [[\"q-grid-column-filter-by\"]], inputs: { column: \"column\", by: \"by\", byBlanks: \"byBlanks\" }, outputs: { byBlanksChange: \"byBlanksChange\" }, decls: 1, vars: 1, consts: [[\"key\", \"plugin-column-filter-by.tpl.html\", 3, \"context\"]], template: function ColumnFilterByComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementContainer(0, 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"context\", ctx.context);\r\n        }\r\n    }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnFilterByComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-column-filter-by', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-column-filter-by.tpl.html\\\"\\n              [context]=\\\"context\\\">\\n</ng-container>\\n\" }]\r\n        }], null, { column: [{\r\n                type: Input\r\n            }], by: [{\r\n                type: Input\r\n            }], byBlanks: [{\r\n                type: Input\r\n            }], byBlanksChange: [{\r\n                type: Output\r\n            }] });\r\n})();\n\nclass ColumnFilterComponent {\r\n    constructor(focusAfterRender, plugin, vscroll, qgrid, cd, templateService) {\r\n        this.focusAfterRender = focusAfterRender;\r\n        this.plugin = plugin;\r\n        this.vscroll = vscroll;\r\n        this.qgrid = qgrid;\r\n        this.cd = cd;\r\n        this.templateService = templateService;\r\n        this.search = '';\r\n        this.submitEvent = new EventEmitter();\r\n        this.cancelEvent = new EventEmitter();\r\n    }\r\n    get operators() {\r\n        const { model } = this.plugin;\r\n        return model\r\n            .filter()\r\n            .operatorFactory(this.column);\r\n    }\r\n    get hasOperators() {\r\n        return this.operators && this.operators.length > 1;\r\n    }\r\n    ngOnInit() {\r\n        const { model } = this.plugin;\r\n        const { column } = this;\r\n        const context = { column };\r\n        const columnFilter = model.resolve(ColumnFilterState);\r\n        const columnFilterPlugin = new ColumnFilterPlugin(this.plugin, context);\r\n        columnFilterPlugin.submitEvent.on(() => this.submitEvent.emit());\r\n        columnFilterPlugin.cancelEvent.on(() => this.cancelEvent.emit());\r\n        const vscrollContext = this.vscroll.context({\r\n            emit: f => {\r\n                f();\r\n                this.cd.markForCheck();\r\n                this.cd.detectChanges();\r\n            },\r\n            threshold: columnFilter.state().threshold,\r\n            fetch: (skip, take, d) => {\r\n                const filterState = model.filter();\r\n                const service = this.qgrid.service(model);\r\n                // We need to close items property for correct reset behavior\r\n                const items = columnFilterPlugin.items;\r\n                if (column.key && filterState.fetch !== this.qgrid.noop) {\r\n                    const cancelBusy = service.busy();\r\n                    const select = filterState\r\n                        .fetch(column.key, {\r\n                        skip,\r\n                        take,\r\n                        value: columnFilterPlugin.getValue,\r\n                        search: '' + this.search,\r\n                        // @deprecated\r\n                        filter: '' + this.search,\r\n                    });\r\n                    const fetch = new Fetch(select);\r\n                    fetch.run();\r\n                    fetch.busy\r\n                        .then(page => {\r\n                        items.push(...page);\r\n                        d.resolve(items.length + (page.length === take ? take : 0));\r\n                        cancelBusy();\r\n                    })\r\n                        .catch(cancelBusy);\r\n                }\r\n                else {\r\n                    const cancelBusy = service.busy();\r\n                    const isBlank = model.filter().assertFactory().isNull;\r\n                    try {\r\n                        if (!items.length) {\r\n                            const source = model[columnFilter.state().source];\r\n                            Guard.notNull(source, 'source');\r\n                            const sourceState = source();\r\n                            Guard.hasProperty(sourceState, 'rows');\r\n                            let values;\r\n                            if (columnFilterPlugin.column.type === 'array') {\r\n                                values = flatten(sourceState.rows.map(row => getValue$1(row, column)));\r\n                            }\r\n                            else {\r\n                                values = sourceState.rows.map(columnFilterPlugin.getValue);\r\n                            }\r\n                            const uniqValues = uniq(values);\r\n                            const notBlankValues = uniqValues.filter(x => !isBlank(x));\r\n                            // TODO: improve search also\r\n                            const search = ('' + this.search).toLowerCase();\r\n                            const filteredItems = search\r\n                                ? notBlankValues.filter(x => ('' + x).toLowerCase().indexOf(search) >= 0)\r\n                                : notBlankValues;\r\n                            filteredItems.sort(columnFilterPlugin.column.compare);\r\n                            columnFilterPlugin.items = filteredItems;\r\n                            columnFilterPlugin.hasBlanks =\r\n                                notBlankValues.length !== uniqValues.length &&\r\n                                    (!search || 'blanks'.indexOf(search.toLowerCase()) >= 0);\r\n                        }\r\n                        d.resolve(columnFilterPlugin.items.length);\r\n                    }\r\n                    finally {\r\n                        cancelBusy();\r\n                    }\r\n                }\r\n            },\r\n        });\r\n        this.vscrollContext = vscrollContext;\r\n        this.context = {\r\n            $implicit: columnFilterPlugin,\r\n            plugin: this,\r\n            vscroll: vscrollContext,\r\n        };\r\n    }\r\n    reset() {\r\n        this.context.$implicit.items = [];\r\n        this.vscrollContext.container.reset();\r\n    }\r\n    clear() {\r\n        this.search = '';\r\n        this.context.$implicit.reset.execute();\r\n    }\r\n    getOperatorTemplateKey(op) {\r\n        const keys = this.buildTemplateKeys(op);\r\n        for (const key of keys) {\r\n            if (this.templateService.find(key)) {\r\n                return key;\r\n            }\r\n        }\r\n        throw new GridError('column-filter.component', `Column filter template for operator ${op} is not found`);\r\n    }\r\n    buildTemplateKeys(op) {\r\n        const { key, type } = this.column;\r\n        const PREFIX = 'plugin-column-filter';\r\n        const keys = [\r\n            `${PREFIX}-${type}-the-${key}-${op}.tpl.html`,\r\n            `${PREFIX}-the-${key}-${op}.tpl.html`,\r\n            `${PREFIX}-the-${key}.tpl.html`,\r\n            `${PREFIX}-${type}-${op}.tpl.html`,\r\n            `${PREFIX}-${type}.tpl.html`,\r\n            `${PREFIX}-${op}.tpl.html`,\r\n        ];\r\n        switch (op) {\r\n            case 'isEmpty':\r\n            case 'isNotEmpty':\r\n            case 'isNull':\r\n            case 'isNotNull': {\r\n                keys.push(`${PREFIX}-${type}-the-${key}-label.tpl.html`);\r\n                keys.push(`${PREFIX}-${type}-label.tpl.html`);\r\n                keys.push(`${PREFIX}-label.tpl.html`);\r\n                break;\r\n            }\r\n            case 'like':\r\n            case 'notLike':\r\n            case 'startsWith':\r\n            case 'endsWith':\r\n            case 'lessThan':\r\n            case 'lessThanOrEquals':\r\n            case 'greaterThan':\r\n            case 'greaterThanOrEquals': {\r\n                keys.push(`${PREFIX}-${type}-the-${key}-input.tpl.html`);\r\n                keys.push(`${PREFIX}-${type}-input.tpl.html`);\r\n                keys.push(`${PREFIX}-input.tpl.html`);\r\n                break;\r\n            }\r\n        }\r\n        keys.push(`${PREFIX}-contains.tpl.html`);\r\n        return keys;\r\n    }\r\n}\r\nColumnFilterComponent.ɵfac = function ColumnFilterComponent_Factory(t) { return new (t || ColumnFilterComponent)(i0.ɵɵdirectiveInject(FocusAfterRender), i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i1.VscrollService), i0.ɵɵdirectiveInject(i1.Grid), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.TemplateService)); };\r\nColumnFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ColumnFilterComponent, selectors: [[\"q-grid-column-filter\"]], inputs: { column: \"column\", search: \"search\" }, outputs: { submitEvent: \"submit\", cancelEvent: \"cancel\" }, features: [i0.ɵɵProvidersFeature([FocusAfterRender, GridPlugin])], decls: 1, vars: 1, consts: [[\"key\", \"plugin-column-filter.tpl.html\", 3, \"context\"]], template: function ColumnFilterComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementContainer(0, 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"context\", ctx.context);\r\n        }\r\n    }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnFilterComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-column-filter', providers: [FocusAfterRender, GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-column-filter.tpl.html\\\"\\n              [context]=\\\"context\\\">\\n</ng-container>\\n\" }]\r\n        }], function () { return [{ type: FocusAfterRender }, { type: i1.GridPlugin }, { type: i1.VscrollService }, { type: i1.Grid }, { type: i0.ChangeDetectorRef }, { type: i1.TemplateService }]; }, { column: [{\r\n                type: Input\r\n            }], search: [{\r\n                type: Input\r\n            }], submitEvent: [{\r\n                type: Output,\r\n                args: ['submit']\r\n            }], cancelEvent: [{\r\n                type: Output,\r\n                args: ['cancel']\r\n            }] });\r\n})();\n\nclass ColumnFilterItemListDirective {\r\n    constructor(cellService) {\r\n        this.cellService = cellService;\r\n    }\r\n}\r\nColumnFilterItemListDirective.ɵfac = function ColumnFilterItemListDirective_Factory(t) { return new (t || ColumnFilterItemListDirective)(i0.ɵɵdirectiveInject(i1.CellTemplateService)); };\r\nColumnFilterItemListDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: ColumnFilterItemListDirective, selectors: [[\"\", \"q-grid-column-filter-item-list\", \"\"]], inputs: { column: [\"q-grid-column-filter-item-list\", \"column\"], search: [\"q-grid-column-filter-search\", \"search\"] }, features: [i0.ɵɵProvidersFeature([CellTemplateService])] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnFilterItemListDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-column-filter-item-list]',\r\n                    providers: [CellTemplateService],\r\n                }]\r\n        }], function () { return [{ type: i1.CellTemplateService }]; }, { column: [{\r\n                type: Input,\r\n                args: ['q-grid-column-filter-item-list']\r\n            }], search: [{\r\n                type: Input,\r\n                args: ['q-grid-column-filter-search']\r\n            }] });\r\n})();\n\nclass ColumnFilterItemDirective {\r\n    constructor(viewContainerRef, itemList) {\r\n        this.viewContainerRef = viewContainerRef;\r\n        this.itemList = itemList;\r\n        this.$implicit = this;\r\n    }\r\n    ngOnInit() {\r\n        const itemList = this.itemList;\r\n        const link = itemList.cellService.build('column-filter', itemList.column);\r\n        link(this.viewContainerRef, this);\r\n    }\r\n}\r\nColumnFilterItemDirective.ɵfac = function ColumnFilterItemDirective_Factory(t) { return new (t || ColumnFilterItemDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(ColumnFilterItemListDirective)); };\r\nColumnFilterItemDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: ColumnFilterItemDirective, selectors: [[\"\", \"q-grid-column-filter-item\", \"\"]], inputs: { value: [\"q-grid-column-filter-item\", \"value\"] } });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnFilterItemDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-column-filter-item]',\r\n                }]\r\n        }], function () { return [{ type: i0.ViewContainerRef }, { type: ColumnFilterItemListDirective }]; }, { value: [{\r\n                type: Input,\r\n                args: ['q-grid-column-filter-item']\r\n            }] });\r\n})();\n\nclass ColumnFilterTriggerComponent {\r\n    constructor(plugin, element) {\r\n        this.plugin = plugin;\r\n        this.element = element;\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n    }\r\n    ngOnInit() {\r\n        const { model, observeReply } = this.plugin;\r\n        observeReply(model.filterChanged)\r\n            .subscribe(e => {\r\n            if (e.hasChanges('by')) {\r\n                if (this.plugin.view.filter.has(this.column)) {\r\n                    this.element.nativeElement.classList.add(`${GRID_PREFIX}-active`);\r\n                }\r\n                else {\r\n                    this.element.nativeElement.classList.remove(`${GRID_PREFIX}-active`);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nColumnFilterTriggerComponent.ɵfac = function ColumnFilterTriggerComponent_Factory(t) { return new (t || ColumnFilterTriggerComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nColumnFilterTriggerComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ColumnFilterTriggerComponent, selectors: [[\"q-grid-column-filter-trigger\"]], inputs: { column: \"column\" }, features: [i0.ɵɵProvidersFeature([GridPlugin])], decls: 1, vars: 1, consts: [[\"key\", \"plugin-column-filter-trigger.tpl.html\", 3, \"context\"]], template: function ColumnFilterTriggerComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementContainer(0, 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"context\", ctx.context);\r\n        }\r\n    }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnFilterTriggerComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-column-filter-trigger', providers: [GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-column-filter-trigger.tpl.html\\\"\\n              [context]=\\\"context\\\">\\n</ng-container>\\n\" }]\r\n        }], function () { return [{ type: i1.GridPlugin }, { type: i0.ElementRef }]; }, { column: [{\r\n                type: Input\r\n            }] });\r\n})();\n\nclass ColumnFilterModule {\r\n    constructor(modelBuilder) {\r\n        modelBuilder.register('columnFilter', ColumnFilterState);\r\n    }\r\n}\r\nColumnFilterModule.ɵfac = function ColumnFilterModule_Factory(t) { return new (t || ColumnFilterModule)(i0.ɵɵinject(i1.GridModelBuilder)); };\r\nColumnFilterModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ColumnFilterModule });\r\nColumnFilterModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnFilterModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        ColumnFilterComponent,\r\n                        ColumnFilterTriggerComponent,\r\n                        ColumnFilterByComponent,\r\n                        ColumnFilterItemListDirective,\r\n                        ColumnFilterItemDirective,\r\n                    ],\r\n                    exports: [\r\n                        ColumnFilterComponent,\r\n                        ColumnFilterTriggerComponent,\r\n                        ColumnFilterByComponent,\r\n                        ColumnFilterItemListDirective,\r\n                        ColumnFilterItemDirective,\r\n                    ],\r\n                    imports: [\r\n                        TemplateModule,\r\n                    ],\r\n                }]\r\n        }], function () { return [{ type: i1.GridModelBuilder }]; }, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ColumnFilterModule, { declarations: [ColumnFilterComponent,\r\n            ColumnFilterTriggerComponent,\r\n            ColumnFilterByComponent,\r\n            ColumnFilterItemListDirective,\r\n            ColumnFilterItemDirective], imports: [TemplateModule], exports: [ColumnFilterComponent,\r\n            ColumnFilterTriggerComponent,\r\n            ColumnFilterByComponent,\r\n            ColumnFilterItemListDirective,\r\n            ColumnFilterItemDirective] });\r\n})();\n\nfunction ColumnSortComponent_ng_template_0_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵprojection(0);\r\n    }\r\n}\r\nconst _c0$5 = [\"*\"];\r\nclass ColumnSortComponent {\r\n    constructor(plugin, elementRef, zone) {\r\n        this.plugin = plugin;\r\n        this.elementRef = elementRef;\r\n        this.zone = zone;\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n    }\r\n    ngAfterViewInit() {\r\n        const { nativeElement } = this.elementRef;\r\n        const iconAsc = nativeElement.querySelector('.q-grid-asc');\r\n        const iconDesc = nativeElement.querySelector('.q-grid-desc');\r\n        const columnSort = new ColumnSortPlugin(this.plugin, {\r\n            element: nativeElement,\r\n            column: this.column,\r\n            iconAsc,\r\n            iconDesc,\r\n        });\r\n        const listener = new EventListener(nativeElement, new EventManager(this));\r\n        listener.on('click', () => {\r\n            if (columnSort.click()) {\r\n                new FocusAfterRender(this.plugin);\r\n            }\r\n        });\r\n        this.zone.runOutsideAngular(() => listener.on('mouseleave', () => columnSort.mouseLeave()));\r\n    }\r\n}\r\nColumnSortComponent.ɵfac = function ColumnSortComponent_Factory(t) { return new (t || ColumnSortComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone)); };\r\nColumnSortComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ColumnSortComponent, selectors: [[\"q-grid-column-sort\"]], viewQuery: function ColumnSortComponent_Query(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵviewQuery(TemplateRef, 7);\r\n        }\r\n        if (rf & 2) {\r\n            let _t;\r\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\r\n        }\r\n    }, inputs: { column: \"column\" }, features: [i0.ɵɵProvidersFeature([GridPlugin])], ngContentSelectors: _c0$5, decls: 2, vars: 1, consts: [[\"key\", \"plugin-column-sort.tpl.html\", 3, \"context\"]], template: function ColumnSortComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵprojectionDef();\r\n            i0.ɵɵtemplate(0, ColumnSortComponent_ng_template_0_Template, 1, 0, \"ng-template\");\r\n            i0.ɵɵelementContainer(1, 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"context\", ctx.context);\r\n        }\r\n    }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnSortComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-column-sort', providers: [GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template>\\n    <ng-content></ng-content>\\n</ng-template>\\n\\n<ng-container key=\\\"plugin-column-sort.tpl.html\\\"\\n              [context]=\\\"context\\\">\\n</ng-container>\\n\" }]\r\n        }], function () { return [{ type: i1.GridPlugin }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, { template: [{\r\n                type: ViewChild,\r\n                args: [TemplateRef, { static: true }]\r\n            }], column: [{\r\n                type: Input\r\n            }] });\r\n})();\n\nclass ColumnSortModule {\r\n}\r\nColumnSortModule.ɵfac = function ColumnSortModule_Factory(t) { return new (t || ColumnSortModule)(); };\r\nColumnSortModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ColumnSortModule });\r\nColumnSortModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnSortModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        ColumnSortComponent,\r\n                    ],\r\n                    exports: [\r\n                        ColumnSortComponent,\r\n                    ],\r\n                    imports: [\r\n                        TemplateModule,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ColumnSortModule, { declarations: [ColumnSortComponent], imports: [TemplateModule], exports: [ColumnSortComponent] }); })();\n\n/* eslint-disable @angular-eslint/no-conflicting-lifecycle */\r\nclass ZoneCommandManager {\r\n    constructor(run, manager, commandArg) {\r\n        this.run = run;\r\n        this.manager = manager;\r\n        this.commandArg = commandArg;\r\n    }\r\n    invoke(commands) {\r\n        return this.run(() => this.manager.invoke(commands, this.commandArg, 'command.directive'));\r\n    }\r\n    filter(commands) {\r\n        return this.manager.filter(commands);\r\n    }\r\n}\r\nclass CommandDirective {\r\n    constructor(disposable, elementRef, zone, plugin) {\r\n        this.disposable = disposable;\r\n        this.elementRef = elementRef;\r\n        this.zone = zone;\r\n        this.plugin = plugin;\r\n        this.isAfterViewInit = false;\r\n        this.commandEvent = 'click';\r\n        this.host = 'grid';\r\n        this.commandExecute = new EventEmitter();\r\n    }\r\n    ngOnInit() {\r\n        const { nativeElement } = this.elementRef;\r\n        this.aroundZone(() => nativeElement\r\n            .addEventListener(this.commandEvent, e => this.execute(e)));\r\n    }\r\n    ngDoCheck() {\r\n        if (!this.isAfterViewInit) {\r\n            return;\r\n        }\r\n        if (this.command) {\r\n            this.updateState();\r\n        }\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes.command) {\r\n            this.unregister();\r\n            if (this.command) {\r\n                this.register();\r\n            }\r\n        }\r\n    }\r\n    ngAfterViewInit() {\r\n        if (this.command) {\r\n            this.updateState();\r\n        }\r\n        this.isAfterViewInit = true;\r\n    }\r\n    register() {\r\n        const { command, commandArg } = this;\r\n        this.disposable.add(command\r\n            .canExecuteCheck\r\n            .subscribe(() => this.updateState()));\r\n        if (this.useCommandShortcut && command.shortcut) {\r\n            if (this.plugin && this.host === 'grid') {\r\n                const { model } = this.plugin;\r\n                const { shortcut, manager } = model.action();\r\n                const zoneManager = new ZoneCommandManager(f => {\r\n                    const result = this.aroundZone(f);\r\n                    this.afterExecute();\r\n                    return result;\r\n                }, manager, commandArg);\r\n                this.disposable.add(shortcut.register(zoneManager, [command]));\r\n            }\r\n            else {\r\n                const manager = new CommandManager(f => {\r\n                    this.aroundZone(f);\r\n                    this.afterExecute();\r\n                }, commandArg);\r\n                const shortcut = new Shortcut(new ShortcutDispatcher());\r\n                const keyDown = e => {\r\n                    shortcut.keyDown(e);\r\n                };\r\n                document.addEventListener('keydown', keyDown);\r\n                this.disposable.add(() => document.removeEventListener('keydown', keyDown));\r\n                this.disposable.add(shortcut.register(manager, [command]));\r\n            }\r\n        }\r\n    }\r\n    execute(e) {\r\n        const { command, commandArg } = this;\r\n        const result = command.execute(commandArg) === true;\r\n        if (result && e) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        }\r\n        this.afterExecute();\r\n    }\r\n    afterExecute() {\r\n        const { commandArg } = this;\r\n        this.commandExecute.emit(commandArg);\r\n        this.command.canExecuteCheck.next();\r\n    }\r\n    unregister() {\r\n        this.disposable.finalize();\r\n    }\r\n    updateState() {\r\n        const nativeElement = this.elementRef.nativeElement;\r\n        if (!nativeElement.setAttribute) {\r\n            return;\r\n        }\r\n        const { command, commandArg } = this;\r\n        const canExecute = command.canExecute(commandArg) === true;\r\n        if (canExecute) {\r\n            if (nativeElement.hasAttribute('disabled')) {\r\n                nativeElement.removeAttribute('disabled');\r\n                nativeElement.classList.remove('q-grid-disabled');\r\n            }\r\n        }\r\n        else {\r\n            if (!nativeElement.hasAttribute('!disabled')) {\r\n                nativeElement.setAttribute('disabled', 'true');\r\n                nativeElement.classList.add('q-grid-disabled');\r\n            }\r\n        }\r\n    }\r\n    aroundZone(f) {\r\n        if (this.useZone) {\r\n            return this.zone.run(f);\r\n        }\r\n        return this.zone.runOutsideAngular(f);\r\n    }\r\n}\r\nCommandDirective.ɵfac = function CommandDirective_Factory(t) { return new (t || CommandDirective)(i0.ɵɵdirectiveInject(i1.Disposable), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.GridPlugin, 8)); };\r\nCommandDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: CommandDirective, selectors: [[\"\", \"q-grid-command\", \"\"]], inputs: { command: [\"q-grid-command\", \"command\"], commandArg: [\"q-grid-command-arg\", \"commandArg\"], useCommandShortcut: [\"q-grid-command-use-shortcut\", \"useCommandShortcut\"], commandEvent: [\"q-grid-command-event\", \"commandEvent\"], useZone: [\"q-grid-command-use-zone\", \"useZone\"], host: [\"q-grid-command-host\", \"host\"] }, outputs: { commandExecute: \"q-grid-command-execute\" }, features: [i0.ɵɵProvidersFeature([Disposable]), i0.ɵɵNgOnChangesFeature] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CommandDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-command]',\r\n                    providers: [Disposable],\r\n                }]\r\n        }], function () {\r\n        return [{ type: i1.Disposable }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i1.GridPlugin, decorators: [{\r\n                        type: Optional\r\n                    }] }];\r\n    }, { command: [{\r\n                type: Input,\r\n                args: ['q-grid-command']\r\n            }], commandArg: [{\r\n                type: Input,\r\n                args: ['q-grid-command-arg']\r\n            }], useCommandShortcut: [{\r\n                type: Input,\r\n                args: ['q-grid-command-use-shortcut']\r\n            }], commandEvent: [{\r\n                type: Input,\r\n                args: ['q-grid-command-event']\r\n            }], useZone: [{\r\n                type: Input,\r\n                args: ['q-grid-command-use-zone']\r\n            }], host: [{\r\n                type: Input,\r\n                args: ['q-grid-command-host']\r\n            }], commandExecute: [{\r\n                type: Output,\r\n                args: ['q-grid-command-execute']\r\n            }] });\r\n})();\n\nclass CommandModule {\r\n}\r\nCommandModule.ɵfac = function CommandModule_Factory(t) { return new (t || CommandModule)(); };\r\nCommandModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: CommandModule });\r\nCommandModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CommandModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        CommandDirective,\r\n                    ],\r\n                    exports: [\r\n                        CommandDirective,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(CommandModule, { declarations: [CommandDirective], exports: [CommandDirective] }); })();\n\nclass ConvertPipe {\r\n    constructor() { }\r\n    transform(value, type) {\r\n        const parse = parseFactory(type);\r\n        const result = parse(value);\r\n        return result === null ? value : result;\r\n    }\r\n}\r\nConvertPipe.ɵfac = function ConvertPipe_Factory(t) { return new (t || ConvertPipe)(); };\r\nConvertPipe.ɵpipe = /*@__PURE__*/ i0.ɵɵdefinePipe({ name: \"qGridConvert\", type: ConvertPipe, pure: true });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ConvertPipe, [{\r\n            type: Pipe,\r\n            args: [{\r\n                    name: 'qGridConvert',\r\n                }]\r\n        }], function () { return []; }, null);\r\n})();\n\nclass CurrencyPipe {\r\n    constructor(pipe) {\r\n        this.pipe = pipe;\r\n    }\r\n    transform(value, currencyCode, display, digitsInfo, locale) {\r\n        try {\r\n            return this.pipe.transform(value, currencyCode, display, digitsInfo, locale);\r\n        }\r\n        catch (ex) {\r\n            Log.warn('DatePipe', ex.message);\r\n            return value;\r\n        }\r\n    }\r\n}\r\nCurrencyPipe.ɵfac = function CurrencyPipe_Factory(t) { return new (t || CurrencyPipe)(i0.ɵɵdirectiveInject(i1$1.CurrencyPipe, 16)); };\r\nCurrencyPipe.ɵpipe = /*@__PURE__*/ i0.ɵɵdefinePipe({ name: \"qGridCurrency\", type: CurrencyPipe, pure: true });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CurrencyPipe, [{\r\n            type: Pipe,\r\n            args: [{\r\n                    name: 'qGridCurrency',\r\n                }]\r\n        }], function () { return [{ type: i1$1.CurrencyPipe }]; }, null);\r\n})();\n\nclass DataManipulationComponent {\r\n    constructor(plugin, stateAccessor) {\r\n        this.plugin = plugin;\r\n        this.stateAccessor = stateAccessor;\r\n        this.dmState = this.stateAccessor.setter(DataManipulationState);\r\n    }\r\n    set dataManipulationRowFactory(rowFactory) { this.dmState({ rowFactory }); }\r\n    ngOnChanges() {\r\n        const { model } = this.plugin;\r\n        this.stateAccessor.write(model);\r\n    }\r\n    ngOnInit() {\r\n        const dm = new DataManipulationPlugin(this.plugin);\r\n        this.context = { $implicit: dm };\r\n    }\r\n}\r\nDataManipulationComponent.ɵfac = function DataManipulationComponent_Factory(t) { return new (t || DataManipulationComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i1.StateAccessor)); };\r\nDataManipulationComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DataManipulationComponent, selectors: [[\"q-grid-data-manipulation\"]], inputs: { dataManipulationRowFactory: [\"rowFactory\", \"dataManipulationRowFactory\"] }, features: [i0.ɵɵProvidersFeature([GridPlugin, StateAccessor]), i0.ɵɵNgOnChangesFeature], decls: 0, vars: 0, template: function DataManipulationComponent_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DataManipulationComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'q-grid-data-manipulation',\r\n                    template: '',\r\n                    providers: [GridPlugin, StateAccessor],\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                }]\r\n        }], function () { return [{ type: i1.GridPlugin }, { type: i1.StateAccessor }]; }, { dataManipulationRowFactory: [{\r\n                type: Input,\r\n                args: ['rowFactory']\r\n            }] });\r\n})();\n\nclass DataManipulationModule {\r\n    constructor(modelBuilder) {\r\n        modelBuilder\r\n            .register('dataManipulation', DataManipulationState);\r\n    }\r\n}\r\nDataManipulationModule.ɵfac = function DataManipulationModule_Factory(t) { return new (t || DataManipulationModule)(i0.ɵɵinject(i1.GridModelBuilder)); };\r\nDataManipulationModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: DataManipulationModule });\r\nDataManipulationModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DataManipulationModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        DataManipulationComponent,\r\n                    ],\r\n                    exports: [\r\n                        DataManipulationComponent,\r\n                    ],\r\n                }]\r\n        }], function () { return [{ type: i1.GridModelBuilder }]; }, null);\r\n})();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(DataManipulationModule, { declarations: [DataManipulationComponent], exports: [DataManipulationComponent] }); })();\n\nclass DataProviderComponent {\r\n    constructor(plugin, zone) {\r\n        this.plugin = plugin;\r\n        this.zone = zone;\r\n        this.requestRows = new EventEmitter();\r\n    }\r\n    set rows(value) {\r\n        if (Array.isArray(value)) {\r\n            const next = this.next;\r\n            if (next) {\r\n                this.next = null;\r\n                next(value);\r\n            }\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        this.plugin.model.data({\r\n            pipe: [\r\n                (data, context, next) => this.zone.run(() => {\r\n                    this.next = next;\r\n                    this.requestRows.emit(context.model);\r\n                }),\r\n                ...PipeUnit.view,\r\n            ],\r\n        }, { source: 'data.provider' });\r\n    }\r\n}\r\nDataProviderComponent.ɵfac = function DataProviderComponent_Factory(t) { return new (t || DataProviderComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i0.NgZone)); };\r\nDataProviderComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DataProviderComponent, selectors: [[\"q-grid-data-provider\"]], inputs: { rows: \"rows\" }, outputs: { requestRows: \"requestRows\" }, features: [i0.ɵɵProvidersFeature([GridPlugin])], decls: 0, vars: 0, template: function DataProviderComponent_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DataProviderComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'q-grid-data-provider',\r\n                    template: '',\r\n                    providers: [GridPlugin],\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                }]\r\n        }], function () { return [{ type: i1.GridPlugin }, { type: i0.NgZone }]; }, { requestRows: [{\r\n                type: Output\r\n            }], rows: [{\r\n                type: Input,\r\n                args: ['rows']\r\n            }] });\r\n})();\n\nclass DataProviderModule {\r\n}\r\nDataProviderModule.ɵfac = function DataProviderModule_Factory(t) { return new (t || DataProviderModule)(); };\r\nDataProviderModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: DataProviderModule });\r\nDataProviderModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DataProviderModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        DataProviderComponent,\r\n                    ],\r\n                    exports: [\r\n                        DataProviderComponent,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(DataProviderModule, { declarations: [DataProviderComponent], exports: [DataProviderComponent] }); })();\n\nconst DELIMITER = '/';\r\nclass DateMaskDirective {\r\n    constructor(elementRef) {\r\n        this.elementRef = elementRef;\r\n    }\r\n    keyUp(e) {\r\n        if (!this.mask) {\r\n            return;\r\n        }\r\n        const input = this.elementRef.nativeElement;\r\n        const value = input.value || '';\r\n        const maskChar = this.mask[value.length];\r\n        if (!maskChar) {\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        const code = Keyboard.translate(e.keyCode);\r\n        if (this.isDigit(code)) {\r\n            if (maskChar === DELIMITER) {\r\n                e.preventDefault();\r\n                input.value += DELIMITER + code;\r\n                return;\r\n            }\r\n            const nextMaskChar = this.mask[input.value.length + 1];\r\n            if (nextMaskChar === DELIMITER) {\r\n                e.preventDefault();\r\n                input.value += code + DELIMITER;\r\n            }\r\n        }\r\n    }\r\n    isDigit(char) {\r\n        return /^[0-9]$/i.test(char);\r\n    }\r\n}\r\nDateMaskDirective.ɵfac = function DateMaskDirective_Factory(t) { return new (t || DateMaskDirective)(i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nDateMaskDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: DateMaskDirective, selectors: [[\"\", \"q-grid-date-mask\", \"\"]], hostBindings: function DateMaskDirective_HostBindings(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵlistener(\"keypress\", function DateMaskDirective_keypress_HostBindingHandler($event) { return ctx.keyUp($event); });\r\n        }\r\n    }, inputs: { mask: [\"q-grid-date-mask\", \"mask\"] } });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DateMaskDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-date-mask]',\r\n                }]\r\n        }], function () { return [{ type: i0.ElementRef }]; }, { mask: [{\r\n                type: Input,\r\n                args: ['q-grid-date-mask']\r\n            }], keyUp: [{\r\n                type: HostListener,\r\n                args: ['keypress', ['$event']]\r\n            }] });\r\n})();\n\nclass DateService {\r\n    constructor() {\r\n        this.toDateTime = parseFactory('datetime');\r\n    }\r\n    parseDateTime(dateOrText, format) {\r\n        if (!dateOrText) {\r\n            return null;\r\n        }\r\n        if (isDate(dateOrText)) {\r\n            return dateOrText;\r\n        }\r\n        if (format) {\r\n            const simpleFormat = format.replace(/[^A-Za-z]/g, '');\r\n            const justDigitsValue = dateOrText.replace(/[^0-9]/g, '');\r\n            return this.parseDateText(justDigitsValue, simpleFormat);\r\n        }\r\n        return this.toDateTime(dateOrText);\r\n    }\r\n    isValid(dateOrText, format) {\r\n        if (!dateOrText) {\r\n            return true;\r\n        }\r\n        const result = this.parseDateTime(dateOrText, format);\r\n        return result && !isNaN(result.getTime());\r\n    }\r\n    parseDateText(text, format) {\r\n        let year = '';\r\n        let month = '';\r\n        let day = '';\r\n        let cursor = 0;\r\n        for (const formatKey of format) {\r\n            switch (formatKey) {\r\n                case 'y': {\r\n                    const digit = text[cursor++];\r\n                    if (digit) {\r\n                        year += digit;\r\n                    }\r\n                    break;\r\n                }\r\n                case 'M': {\r\n                    const digit = text[cursor++];\r\n                    if (digit) {\r\n                        month += digit;\r\n                    }\r\n                    break;\r\n                }\r\n                case 'd': {\r\n                    const digit = text[cursor++];\r\n                    if (digit) {\r\n                        day += digit;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (year.length < 4 || month.length < 1 || day.length < 1) {\r\n            return null;\r\n        }\r\n        month = month.length === 1 ? '0' + month : month;\r\n        day = day.length === 1 ? '0' + day : day;\r\n        return this.toDateTime(`${year}-${month}-${day}`);\r\n    }\r\n}\r\nDateService.ɵfac = function DateService_Factory(t) { return new (t || DateService)(); };\r\nDateService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: DateService, factory: DateService.ɵfac });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DateService, [{\r\n            type: Injectable\r\n        }], null, null);\r\n})();\n\nclass DateDirective {\r\n    constructor(templateRef, viewContainerRef, dateService) {\r\n        this.dateService = dateService;\r\n        this.toMidnight = parseFactory('date');\r\n        viewContainerRef.createEmbeddedView(templateRef, { $implicit: this });\r\n    }\r\n    isValid(dateOrText, format) {\r\n        return this.dateService.isValid(dateOrText, format);\r\n    }\r\n    dateLow(value, format) {\r\n        const date = this.dateService.parseDateTime(value, format);\r\n        if (date) {\r\n            return this.toMidnight(date);\r\n        }\r\n        return value;\r\n    }\r\n    datetime(previous, current, format) {\r\n        const previousDate = this.dateService.parseDateTime(previous, format);\r\n        const currentDate = this.dateService.parseDateTime(current, format);\r\n        if (previousDate && currentDate) {\r\n            const midnight = this.toMidnight(currentDate);\r\n            const sameHours = new Date(midnight.getFullYear(), midnight.getMonth(), midnight.getDate(), previousDate.getHours(), previousDate.getMinutes(), previousDate.getSeconds(), previousDate.getMilliseconds());\r\n            return sameHours;\r\n        }\r\n        if (currentDate) {\r\n            return this.toMidnight(currentDate);\r\n        }\r\n        return current;\r\n    }\r\n}\r\nDateDirective.ɵfac = function DateDirective_Factory(t) { return new (t || DateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(DateService)); };\r\nDateDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: DateDirective, selectors: [[\"\", \"q-grid-date\", \"\"]] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DateDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-date]',\r\n                }]\r\n        }], function () { return [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }, { type: DateService }]; }, null);\r\n})();\n\nclass DateModule {\r\n}\r\nDateModule.ɵfac = function DateModule_Factory(t) { return new (t || DateModule)(); };\r\nDateModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: DateModule });\r\nDateModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ providers: [\r\n        DateService,\r\n    ] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DateModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        DateDirective,\r\n                        DateMaskDirective,\r\n                    ],\r\n                    exports: [\r\n                        DateDirective,\r\n                        DateMaskDirective,\r\n                    ],\r\n                    providers: [\r\n                        DateService,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(DateModule, { declarations: [DateDirective,\r\n            DateMaskDirective], exports: [DateDirective,\r\n            DateMaskDirective] });\r\n})();\n\nclass DatePipe {\r\n    constructor(pipe) {\r\n        this.pipe = pipe;\r\n    }\r\n    transform(value, format, timezone, locale) {\r\n        try {\r\n            // The value expression: a Date object, a number (milliseconds since UTC epoch), or an ISO string\r\n            return this.pipe.transform(value, format, timezone, locale);\r\n        }\r\n        catch (ex) {\r\n            Log.warn('DatePipe', ex.message);\r\n            return value;\r\n        }\r\n    }\r\n}\r\nDatePipe.ɵfac = function DatePipe_Factory(t) { return new (t || DatePipe)(i0.ɵɵdirectiveInject(i1$1.DatePipe, 16)); };\r\nDatePipe.ɵpipe = /*@__PURE__*/ i0.ɵɵdefinePipe({ name: \"qGridDate\", type: DatePipe, pure: true });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DatePipe, [{\r\n            type: Pipe,\r\n            args: [{\r\n                    name: 'qGridDate',\r\n                }]\r\n        }], function () { return [{ type: i1$1.DatePipe }]; }, null);\r\n})();\n\nfunction evaluateFactory(expression, args) {\r\n    return visit;\r\n    function visit(value) {\r\n        if (isArray(value)) {\r\n            return visitArray(value);\r\n        }\r\n        else if (isFunction(value)) {\r\n            return visitFunction(value);\r\n        }\r\n        else if (isObject(value)) {\r\n            return visitObject(value);\r\n        }\r\n        return value;\r\n    }\r\n    function visitObject(inst) {\r\n        const keys = Object.keys(inst);\r\n        const length = keys.length;\r\n        const result = {};\r\n        for (let i = 0; i < length; i++) {\r\n            const key = keys[i];\r\n            result[key] = visit(inst[key]);\r\n        }\r\n        return result;\r\n    }\r\n    function visitArray(list) {\r\n        const result = [];\r\n        for (let i = 0, length = list.length; i < length; i++) {\r\n            result[i] = visit(list[i]);\r\n        }\r\n        return result;\r\n    }\r\n    function visitFunction(delegate) {\r\n        return delegate.apply(expression, args);\r\n    }\r\n}\n\nclass EbNodeService {\r\n    constructor() {\r\n        this.node = null;\r\n        this.currentChange = new EventEmitter();\r\n    }\r\n    get current() {\r\n        return this.node;\r\n    }\r\n    set current(value) {\r\n        const oldNode = this.node;\r\n        if (value !== oldNode) {\r\n            this.node = value;\r\n            this.currentChange.emit({\r\n                oldValue: oldNode,\r\n                newValue: value,\r\n            });\r\n        }\r\n    }\r\n}\r\nEbNodeService.ɵfac = function EbNodeService_Factory(t) { return new (t || EbNodeService)(); };\r\nEbNodeService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: EbNodeService, factory: EbNodeService.ɵfac });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EbNodeService, [{\r\n            type: Injectable\r\n        }], null, null);\r\n})();\n\nfunction EbNodeComponent_li_3_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"li\", 6);\r\n        i0.ɵɵelement(1, \"q-grid-eb-expression\", 7);\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const expr_r3 = ctx.$implicit;\r\n        const ctx_r0 = i0.ɵɵnextContext();\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"model\", expr_r3)(\"node\", ctx_r0.model)(\"line\", ctx_r0.model.line);\r\n    }\r\n}\r\nfunction EbNodeComponent_li_6_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"li\", 8);\r\n        i0.ɵɵelement(1, \"q-grid-eb-node\", 9);\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const child_r4 = ctx.$implicit;\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"model\", child_r4);\r\n    }\r\n}\r\nfunction EbNodeComponent_ng_template_7_li_1_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"li\", 6);\r\n        i0.ɵɵelement(1, \"q-grid-eb-expression\", 7);\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const expr_r9 = ctx.$implicit;\r\n        const ctx_r10 = i0.ɵɵnextContext();\r\n        const $node_r6 = ctx_r10.node;\r\n        const $line_r7 = ctx_r10.line;\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"model\", expr_r9)(\"node\", $node_r6)(\"line\", $line_r7);\r\n    }\r\n}\r\nfunction EbNodeComponent_ng_template_7_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"ul\", 10);\r\n        i0.ɵɵtemplate(1, EbNodeComponent_ng_template_7_li_1_Template, 2, 3, \"li\", 2);\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const $group_r5 = ctx.$implicit;\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngForOf\", $group_r5.expressions);\r\n    }\r\n}\r\nconst _c0$4 = function (a0) { return { \"q-grid-eb-active\": a0 }; };\r\nclass EbNodeComponent {\r\n    constructor(service) {\r\n        this.service = service;\r\n    }\r\n    select(e) {\r\n        e.stopPropagation();\r\n        if (this.model.parent) {\r\n            this.service.current = this.model;\r\n        }\r\n    }\r\n}\r\nEbNodeComponent.ɵfac = function EbNodeComponent_Factory(t) { return new (t || EbNodeComponent)(i0.ɵɵdirectiveInject(EbNodeService)); };\r\nEbNodeComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: EbNodeComponent, selectors: [[\"q-grid-eb-node\"]], inputs: { model: \"model\" }, decls: 8, vars: 6, consts: [[1, \"q-grid-eb-node\", 3, \"q-grid-eb-class\", \"ngClass\", \"click\"], [1, \"q-grid-eb-line\"], [\"class\", \"q-grid-eb-expression\", 4, \"ngFor\", \"ngForOf\"], [1, \"q-grid-eb-children\"], [\"class\", \"q-grid-eb-child\", 4, \"ngFor\", \"ngForOf\"], [\"key\", \"eb-group.tpl.html\"], [1, \"q-grid-eb-expression\"], [3, \"model\", \"node\", \"line\"], [1, \"q-grid-eb-child\"], [3, \"model\"], [1, \"q-grid-eb-group\"]], template: function EbNodeComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementStart(0, \"ul\", 0);\r\n            i0.ɵɵlistener(\"click\", function EbNodeComponent_Template_ul_click_0_listener($event) { return ctx.select($event); });\r\n            i0.ɵɵelementStart(1, \"li\", 1)(2, \"ul\");\r\n            i0.ɵɵtemplate(3, EbNodeComponent_li_3_Template, 2, 3, \"li\", 2);\r\n            i0.ɵɵelementEnd()();\r\n            i0.ɵɵelementStart(4, \"li\", 3)(5, \"ul\");\r\n            i0.ɵɵtemplate(6, EbNodeComponent_li_6_Template, 2, 1, \"li\", 4);\r\n            i0.ɵɵelementEnd()()();\r\n            i0.ɵɵtemplate(7, EbNodeComponent_ng_template_7_Template, 2, 1, \"ng-template\", 5);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"q-grid-eb-class\", ctx.model.attr(\"class\"))(\"ngClass\", i0.ɵɵpureFunction1(4, _c0$4, ctx.service.current === ctx.model));\r\n            i0.ɵɵadvance(3);\r\n            i0.ɵɵproperty(\"ngForOf\", ctx.model.line.expressions);\r\n            i0.ɵɵadvance(3);\r\n            i0.ɵɵproperty(\"ngForOf\", ctx.model.children);\r\n        }\r\n    }, encapsulation: 2 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EbNodeComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-eb-node', template: \"<ul class=\\\"q-grid-eb-node\\\"\\n\\t[q-grid-eb-class]=\\\"model.attr('class')\\\"\\n\\t[ngClass]=\\\"{'q-grid-eb-active': service.current === model}\\\"\\n\\t(click)=\\\"select($event)\\\">\\n\\t<li class=\\\"q-grid-eb-line\\\">\\n\\t\\t<ul>\\n\\t\\t\\t<li *ngFor=\\\"let expr of model.line.expressions\\\"\\n\\t\\t\\t\\t\\tclass=\\\"q-grid-eb-expression\\\">\\n\\t\\t\\t\\t<q-grid-eb-expression [model]=\\\"expr\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[node]=\\\"model\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[line]=\\\"model.line\\\">\\n\\t\\t\\t\\t</q-grid-eb-expression>\\n\\t\\t\\t</li>\\n\\t\\t</ul>\\n\\t</li>\\n\\n\\t<li class=\\\"q-grid-eb-children\\\">\\n\\t\\t<ul>\\n\\t\\t\\t<li *ngFor=\\\"let child of model.children\\\"\\n\\t\\t\\t\\t\\tclass=\\\"q-grid-eb-child\\\">\\n\\t\\t\\t\\t<q-grid-eb-node [model]=\\\"child\\\">\\n\\t\\t\\t\\t</q-grid-eb-node>\\n\\t\\t\\t</li>\\n\\t\\t</ul>\\n\\t</li>\\n</ul>\\n\\n<ng-template key=\\\"eb-group.tpl.html\\\"\\n\\t\\t\\tlet-$group\\n\\t\\t\\tlet-$node=\\\"node\\\"\\n\\t\\t\\tlet-$line=\\\"line\\\">\\n\\t<ul class=\\\"q-grid-eb-group\\\">\\n\\t\\t<li *ngFor=\\\"let expr of $group.expressions\\\"\\n\\t\\t\\t\\tclass=\\\"q-grid-eb-expression\\\">\\n\\t\\t\\t<q-grid-eb-expression [model]=\\\"expr\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[node]=\\\"$node\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[line]=\\\"$line\\\">\\n\\t\\t\\t</q-grid-eb-expression>\\n\\t\\t</li>\\n\\t</ul>\\n</ng-template>\\n\" }]\r\n        }], function () { return [{ type: EbNodeService }]; }, { model: [{\r\n                type: Input\r\n            }] });\r\n})();\n\nclass EbClassDirective {\r\n    constructor(elementRef, node) {\r\n        this.elementRef = elementRef;\r\n        this.node = node;\r\n        this.oldClassList = [];\r\n    }\r\n    ngOnInit() {\r\n        this.evaluate = evaluateFactory(this.model, [this.node ? this.node.model : null]);\r\n    }\r\n    ngDoCheck() {\r\n        const result = this.evaluate(this.klass);\r\n        if (result) {\r\n            const classList = this.fetchClasses(result);\r\n            if (this.oldClassList.length !== classList.length\r\n                || this.oldClassList.join(' ') !== classList.join(' ')) {\r\n                const element = this.elementRef.nativeElement;\r\n                element.classList.remove(...this.oldClassList);\r\n                element.classList.add(...classList);\r\n                this.oldClassList = classList;\r\n            }\r\n        }\r\n        else if (this.oldClassList.length) {\r\n            const element = this.elementRef.nativeElement;\r\n            element.classList.remove(...this.oldClassList);\r\n            this.oldClassList = [];\r\n        }\r\n    }\r\n    fetchClasses(meta) {\r\n        if (isArray(meta)) {\r\n            return meta;\r\n        }\r\n        const keys = Object.keys(meta);\r\n        const classList = [];\r\n        for (let i = 0, length = keys.length; i < length; i++) {\r\n            const key = keys[i];\r\n            if (meta[key]) {\r\n                classList.push(key);\r\n            }\r\n        }\r\n        return classList;\r\n    }\r\n}\r\nEbClassDirective.ɵfac = function EbClassDirective_Factory(t) { return new (t || EbClassDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(EbNodeComponent, 8)); };\r\nEbClassDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: EbClassDirective, selectors: [[\"\", \"q-grid-eb-class\", \"\"]], inputs: { klass: [\"q-grid-eb-class\", \"klass\"], model: [\"q-grid-eb-class-model\", \"model\"] } });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EbClassDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-eb-class]',\r\n                }]\r\n        }], function () {\r\n        return [{ type: i0.ElementRef }, { type: EbNodeComponent, decorators: [{\r\n                        type: Optional\r\n                    }] }];\r\n    }, { klass: [{\r\n                type: Input,\r\n                args: ['q-grid-eb-class']\r\n            }], model: [{\r\n                type: Input,\r\n                args: ['q-grid-eb-class-model']\r\n            }] });\r\n})();\n\nclass Watcher {\r\n    constructor(expression, key, handler, args = []) {\r\n        this.expression = expression;\r\n        this.key = key;\r\n        this.handler = handler;\r\n        this.args = args;\r\n        this.isFirstRun = true;\r\n        this.evaluate = evaluateFactory(expression, args);\r\n        this.oldValue = this.evaluate(expression[key]);\r\n    }\r\n    detect() {\r\n        const inst = this.expression[this.key];\r\n        const newValue = this.evaluate(inst);\r\n        if (this.isFirstRun || this.oldValue !== newValue) {\r\n            this.isFirstRun = false;\r\n            this.handler.apply(this.expression, [newValue, this.oldValue].concat(this.args));\r\n            this.oldValue = newValue;\r\n        }\r\n    }\r\n}\n\nclass EbExpressionComponent {\r\n    ngOnInit() {\r\n        this.context = { $implicit: this.model, node: this.node, line: this.line };\r\n        const $watch = this.model.$watch;\r\n        if ($watch) {\r\n            this.watchers =\r\n                Object\r\n                    .keys($watch)\r\n                    .map(key => new Watcher(this.model, key, $watch[key], [this.node, this.line]));\r\n        }\r\n    }\r\n    ngDoCheck() {\r\n        const ws = this.watchers;\r\n        if (!ws) {\r\n            return;\r\n        }\r\n        for (let i = 0, length = ws.length; i < length; i++) {\r\n            ws[i].detect();\r\n        }\r\n    }\r\n}\r\nEbExpressionComponent.ɵfac = function EbExpressionComponent_Factory(t) { return new (t || EbExpressionComponent)(); };\r\nEbExpressionComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: EbExpressionComponent, selectors: [[\"q-grid-eb-expression\"]], inputs: { node: \"node\", line: \"line\", model: \"model\" }, decls: 1, vars: 2, consts: [[3, \"key\", \"context\"]], template: function EbExpressionComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementContainer(0, 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"key\", ctx.model.templateUrl)(\"context\", ctx.context);\r\n        }\r\n    }, dependencies: [i1.TemplateDirective], encapsulation: 2 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EbExpressionComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-eb-expression', template: \"<ng-container [key]=\\\"model.templateUrl\\\" [context]=\\\"context\\\">\\n</ng-container>\\n\" }]\r\n        }], null, { node: [{\r\n                type: Input\r\n            }], line: [{\r\n                type: Input\r\n            }], model: [{\r\n                type: Input\r\n            }] });\r\n})();\n\nclass Node {\r\n    constructor(id, schema, parent) {\r\n        this.id = id;\r\n        this.schema = schema;\r\n        this.parent = parent;\r\n        this.attributes = {};\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.children = [];\r\n        this.level = parent ? parent.level + 1 : 0;\r\n    }\r\n    attr(key, value) {\r\n        if (arguments.length === 2) {\r\n            this.attributes[key] = value;\r\n        }\r\n        else {\r\n            return this.attributes[key];\r\n        }\r\n    }\r\n    classes() {\r\n    }\r\n    addChildAfter(child, after) {\r\n        const index = after ? this.children.indexOf(after) : this.children.length - 1;\r\n        this.children.splice(index + 1, 0, child);\r\n        child.parent = this;\r\n        child.level = this.level + 1;\r\n    }\r\n    addChildBefore(child, before) {\r\n        const index = before ? this.children.indexOf(before) : 0;\r\n        this.children.splice(index, 0, child);\r\n        child.parent = this;\r\n        child.level = this.level + 1;\r\n    }\r\n    addAfter(child) {\r\n        if (!this.parent) {\r\n            throw new GridError('node', 'Can\\'t add after root');\r\n        }\r\n        this.parent.addChildAfter(child, this);\r\n    }\r\n    addBefore(child) {\r\n        if (!this.parent) {\r\n            throw new GridError('node', 'Can\\'t add after root');\r\n        }\r\n        this.parent.addChildBefore(child, this);\r\n    }\r\n    clone() {\r\n        return this.schema.apply(new Node(this.id, this.schema));\r\n    }\r\n    remove() {\r\n        if (!this.parent) {\r\n            throw new GridError('node', 'Root element can\\'t be removed');\r\n        }\r\n        const index = this.parent.children.indexOf(this);\r\n        this.parent.children.splice(index, 1);\r\n    }\r\n    clear() {\r\n        this.children.forEach(child => child.parent = null);\r\n        this.children = [];\r\n    }\r\n    toString(indent = 0) {\r\n        return Array(indent).join('-') + ' ' + this.level + '\\n' +\r\n            this.children\r\n                .map(child => child.toString(indent + 1))\r\n                .join('\\n');\r\n    }\r\n    toTraceString() {\r\n        if (this.parent) {\r\n            let parent = this.parent;\r\n            while (null !== parent.parent) {\r\n                parent = parent.parent;\r\n            }\r\n            return parent.toString();\r\n        }\r\n        return this.toString();\r\n    }\r\n}\n\nfunction indexOf(array, predicate) {\r\n    for (let i = 0, length = array.length; i < length; i++) {\r\n        if (predicate(array[i], i)) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\nfunction defaults(...args) {\r\n    const dst = args[0];\r\n    const result = clone(dst);\r\n    for (let i = 1, sourcesLength = args.length; i < sourcesLength; i++) {\r\n        const source = args[i];\r\n        if (!source) {\r\n            continue;\r\n        }\r\n        const keys = Object.keys(source);\r\n        for (let k = 0, keysLength = keys.length; k < keysLength; k++) {\r\n            const key = keys[k];\r\n            if (!Object.prototype.hasOwnProperty.call(result, key)) {\r\n                result[key] = source[key];\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction override(dst, src) {\r\n    const keys = Object.keys(src);\r\n    const length = keys.length;\r\n    for (let i = 0; i < length; i++) {\r\n        const key = keys[i];\r\n        dst[key] = src[key];\r\n    }\r\n    return dst;\r\n}\n\n/* eslint-disable no-use-before-define */\r\nclass Serializer {\r\n    constructor(node) {\r\n        this.node = node;\r\n    }\r\n    serialize() {\r\n        const groups = this.node.line.expressions.map(expr => this.serializeGroup(expr));\r\n        return {\r\n            id: this.node.id,\r\n            attributes: this.serializeAttributes(this.node),\r\n            children: this.node.children.map(child => new Serializer(child).serialize()),\r\n            line: groups.filter(group => group.expressions.length),\r\n        };\r\n    }\r\n    serializeGroup(group) {\r\n        return {\r\n            id: group.id,\r\n            expressions: group.expressions\r\n                .filter(expr => this.canSerialize(expr))\r\n                .map(expr => this.serializeExpression(expr)),\r\n        };\r\n    }\r\n    serializeExpression(expression) {\r\n        const result = {};\r\n        const serializeAttr = this.node.attr('serialize');\r\n        const serializableProps = serializeAttr[expression.id];\r\n        for (let i = 0, length = serializableProps.length; i < length; i++) {\r\n            const prop = serializableProps[i];\r\n            result[prop] = expression[prop];\r\n        }\r\n        result.id = expression.id;\r\n        result.type = expression.type;\r\n        result.method = expression.method;\r\n        return result;\r\n    }\r\n    serializeAttributes(node) {\r\n        const serializeAttr = node.attr('serialize');\r\n        if (serializeAttr && serializeAttr['@attr']) {\r\n            const props = serializeAttr['@attr'];\r\n            return props.reduce((memo, attr) => {\r\n                memo[attr] = node.attr(attr);\r\n                return memo;\r\n            }, {});\r\n        }\r\n        return {};\r\n    }\r\n    canSerialize(expression) {\r\n        const serializeAttr = this.node.attr('serialize');\r\n        if (!serializeAttr) {\r\n            return false;\r\n        }\r\n        const props = serializeAttr[expression.id];\r\n        return !!(props && props.length);\r\n    }\r\n}\r\nclass Deserializer {\r\n    constructor(schema) {\r\n        this.schema = schema;\r\n    }\r\n    deserialize(data, parent = null, nodeMap) {\r\n        nodeMap = nodeMap || {};\r\n        let node;\r\n        if (!parent) {\r\n            node = new Node(data.id, this.schema);\r\n            this.schema.apply(node);\r\n            traverse(node, nodeMap);\r\n            node.clear();\r\n        }\r\n        else {\r\n            node = nodeMap[data.id].clone();\r\n            parent.addChildAfter(node);\r\n            traverse(parent, nodeMap);\r\n            node.clear();\r\n        }\r\n        override(node.attributes, data.attributes);\r\n        this.deserializeLine(node, node.line, data.line);\r\n        const children = data.children;\r\n        const length = children.length;\r\n        for (let i = 0; i < length; i++) {\r\n            const child = children[i];\r\n            const childSchema = this.schema.schemaMap[child.id];\r\n            new Deserializer(childSchema).deserialize(child, node, nodeMap);\r\n        }\r\n        return node;\r\n    }\r\n    deserializeLine(node, line, dataGroups) {\r\n        for (let i = 0, length = dataGroups.length; i < length; i++) {\r\n            const dataGroup = dataGroups[i];\r\n            const exprGroup = line.get(dataGroup.id);\r\n            this.deserializeGroup(node, line, exprGroup, dataGroup);\r\n        }\r\n    }\r\n    deserializeGroup(node, line, group, dataGroup) {\r\n        const dataExpressions = dataGroup.expressions;\r\n        const length = dataExpressions.length;\r\n        let index;\r\n        for (let i = 0; i < length; i++) {\r\n            const dataExp = dataExpressions[i];\r\n            index = indexOf(group.expressions, expr => expr.id === dataExp.id);\r\n            override(group.expressions[index], dataExp);\r\n        }\r\n        for (let i = 0; i < length; i++) {\r\n            const dataExpr = dataExpressions[i];\r\n            if (dataExpr.method) {\r\n                dataExpr.method.forEach(m => {\r\n                    group.expressions[index][m](node, line);\r\n                    group.expressions[index].method = dataExpressions[i].method;\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction traverse(node, map) {\r\n    if (!Object.prototype.hasOwnProperty.call(map, node.id)) {\r\n        map[node.id] = node;\r\n    }\r\n    for (let i = 0, length = node.children.length; i < length; i++) {\r\n        const child = node.children[0];\r\n        traverse(child, map);\r\n    }\r\n}\r\nclass SerializationService {\r\n    serialize(node) {\r\n        return new Serializer(node).serialize();\r\n    }\r\n    deserialize(schema, data) {\r\n        return new Deserializer(schema).deserialize(data);\r\n    }\r\n}\r\nSerializationService.ɵfac = function SerializationService_Factory(t) { return new (t || SerializationService)(); };\r\nSerializationService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: SerializationService, factory: SerializationService.ɵfac });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SerializationService, [{\r\n            type: Injectable\r\n        }], null, null);\r\n})();\n\nclass EbModule {\r\n}\r\nEbModule.ɵfac = function EbModule_Factory(t) { return new (t || EbModule)(); };\r\nEbModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: EbModule });\r\nEbModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ providers: [\r\n        SerializationService,\r\n        EbNodeService,\r\n    ], imports: [CommonModule,\r\n        TemplateModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EbModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [\r\n                        CommonModule,\r\n                        TemplateModule,\r\n                    ],\r\n                    exports: [\r\n                        EbNodeComponent,\r\n                        EbClassDirective,\r\n                    ],\r\n                    declarations: [\r\n                        EbNodeComponent,\r\n                        EbExpressionComponent,\r\n                        EbClassDirective,\r\n                    ],\r\n                    providers: [\r\n                        SerializationService,\r\n                        EbNodeService,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(EbModule, { declarations: [EbNodeComponent,\r\n            EbExpressionComponent,\r\n            EbClassDirective], imports: [CommonModule,\r\n            TemplateModule], exports: [EbNodeComponent,\r\n            EbClassDirective] });\r\n})();\r\ni0.ɵɵsetComponentScope(EbNodeComponent, [i1$1.NgClass, i1$1.NgForOf, i1.TemplateLinkDirective, EbNodeComponent,\r\n    EbExpressionComponent,\r\n    EbClassDirective], []);\n\nclass EditFormComponent {\r\n    constructor(plugin) {\r\n        this.plugin = plugin;\r\n        this.cancel = new EventEmitter();\r\n        this.reset = new EventEmitter();\r\n        this.submit = new EventEmitter();\r\n    }\r\n    ngOnInit() {\r\n        const context = {\r\n            row: this.row,\r\n            caption: this.caption,\r\n        };\r\n        const editFormPanel = new EditFormPanelPlugin(this.plugin, context);\r\n        const { service } = this.plugin;\r\n        editFormPanel.cancelEvent.on(() => this.cancel.emit());\r\n        editFormPanel.resetEvent.on(() => this.reset.emit());\r\n        editFormPanel.submitEvent.on(() => {\r\n            this.submit.emit();\r\n            service.invalidate({\r\n                source: 'edit-form.component',\r\n                why: 'refresh',\r\n            });\r\n        });\r\n        this.context = { $implicit: editFormPanel };\r\n    }\r\n}\r\nEditFormComponent.ɵfac = function EditFormComponent_Factory(t) { return new (t || EditFormComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin)); };\r\nEditFormComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: EditFormComponent, selectors: [[\"q-grid-edit-form\"]], inputs: { caption: \"caption\", row: \"row\" }, outputs: { cancel: \"cancel\", reset: \"reset\", submit: \"submit\" }, features: [i0.ɵɵProvidersFeature([GridPlugin])], decls: 1, vars: 1, consts: [[\"key\", \"plugin-edit-form.tpl.html\", 3, \"context\"]], template: function EditFormComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementContainer(0, 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"context\", ctx.context);\r\n        }\r\n    }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditFormComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-edit-form', providers: [GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-edit-form.tpl.html\\\"\\n              [context]=\\\"context\\\">\\n</ng-container>\\n\" }]\r\n        }], function () { return [{ type: i1.GridPlugin }]; }, { caption: [{\r\n                type: Input\r\n            }], row: [{\r\n                type: Input\r\n            }], cancel: [{\r\n                type: Output\r\n            }], reset: [{\r\n                type: Output\r\n            }], submit: [{\r\n                type: Output\r\n            }] });\r\n})();\n\nconst _c0$3 = function (a0) { return { $implicit: a0 }; };\r\nclass EditFormControlComponent {\r\n    get key() {\r\n        if (this.editor) {\r\n            const { column } = this.editor.cell;\r\n            const type = column.editor || column.type;\r\n            return `edit-form-${type}.tpl.html`;\r\n        }\r\n        return 'edit-form-text.tpl.html';\r\n    }\r\n}\r\nEditFormControlComponent.ɵfac = function EditFormControlComponent_Factory(t) { return new (t || EditFormControlComponent)(); };\r\nEditFormControlComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: EditFormControlComponent, selectors: [[\"q-grid-edit-form-control\"]], inputs: { editor: \"editor\" }, decls: 1, vars: 4, consts: [[3, \"key\", \"context\"]], template: function EditFormControlComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementContainer(0, 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵpropertyInterpolate(\"key\", ctx.key);\r\n            i0.ɵɵproperty(\"context\", i0.ɵɵpureFunction1(2, _c0$3, ctx.editor));\r\n        }\r\n    }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditFormControlComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-edit-form-control', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"{{key}}\\\"\\n              [context]=\\\"{$implicit: editor}\\\">\\n</ng-container>\\n\" }]\r\n        }], null, { editor: [{\r\n                type: Input\r\n            }] });\r\n})();\n\nclass EditFormTriggerComponent {\r\n    constructor() {\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n    }\r\n}\r\nEditFormTriggerComponent.ɵfac = function EditFormTriggerComponent_Factory(t) { return new (t || EditFormTriggerComponent)(); };\r\nEditFormTriggerComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: EditFormTriggerComponent, selectors: [[\"q-grid-edit-form-trigger\"]], inputs: { caption: \"caption\", row: \"row\" }, decls: 1, vars: 1, consts: [[\"key\", \"plugin-edit-form-trigger.tpl.html\", 3, \"context\"]], template: function EditFormTriggerComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementContainer(0, 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"context\", ctx.context);\r\n        }\r\n    }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditFormTriggerComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-edit-form-trigger', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-edit-form-trigger.tpl.html\\\"\\n              [context]=\\\"context\\\">\\n</ng-container>\\n\" }]\r\n        }], null, { caption: [{\r\n                type: Input\r\n            }], row: [{\r\n                type: Input\r\n            }] });\r\n})();\n\nclass EditFormModule {\r\n}\r\nEditFormModule.ɵfac = function EditFormModule_Factory(t) { return new (t || EditFormModule)(); };\r\nEditFormModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: EditFormModule });\r\nEditFormModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\r\n        TemplateModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditFormModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        EditFormTriggerComponent,\r\n                        EditFormComponent,\r\n                        EditFormControlComponent,\r\n                    ],\r\n                    exports: [\r\n                        EditFormTriggerComponent,\r\n                        EditFormComponent,\r\n                        EditFormControlComponent,\r\n                    ],\r\n                    imports: [\r\n                        CommonModule,\r\n                        TemplateModule,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(EditFormModule, { declarations: [EditFormTriggerComponent,\r\n            EditFormComponent,\r\n            EditFormControlComponent], imports: [CommonModule,\r\n            TemplateModule], exports: [EditFormTriggerComponent,\r\n            EditFormComponent,\r\n            EditFormControlComponent] });\r\n})();\n\nclass ExportComponent {\r\n    constructor(plugin, templateHost) {\r\n        this.plugin = plugin;\r\n        this.templateHost = templateHost;\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n        this.templateHost.key = () => `export-${this.type}`;\r\n    }\r\n    ngAfterViewInit() {\r\n        const { model, disposable } = this.plugin;\r\n        const exportPlugin = new ExportPlugin(model, this.type);\r\n        const action = new Action(new Command({\r\n            execute: () => exportPlugin[this.type].execute(),\r\n        }), `Export to ${this.type}`, 'file_download');\r\n        if (this.templateRef) {\r\n            action.templateUrl = this.templateHost.key('trigger');\r\n        }\r\n        const items = Composite.list([model.action().items, [action]]);\r\n        model.action({\r\n            items,\r\n        }, {\r\n            source: 'export.component',\r\n        });\r\n        disposable.add(() => {\r\n            model.action({\r\n                items: model\r\n                    .action()\r\n                    .items\r\n                    .filter(x => x !== action),\r\n            }, {\r\n                source: 'export.component',\r\n            });\r\n        });\r\n    }\r\n}\r\nExportComponent.ɵfac = function ExportComponent_Factory(t) { return new (t || ExportComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i1.TemplateHostService)); };\r\nExportComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ExportComponent, selectors: [[\"q-grid-export\"]], contentQueries: function ExportComponent_ContentQueries(rf, ctx, dirIndex) {\r\n        if (rf & 1) {\r\n            i0.ɵɵcontentQuery(dirIndex, TemplateRef, 5);\r\n        }\r\n        if (rf & 2) {\r\n            let _t;\r\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\r\n        }\r\n    }, inputs: { type: \"type\" }, features: [i0.ɵɵProvidersFeature([TemplateHostService, GridPlugin])], decls: 0, vars: 0, template: function ExportComponent_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ExportComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-export', providers: [TemplateHostService, GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"\" }]\r\n        }], function () { return [{ type: i1.GridPlugin }, { type: i1.TemplateHostService }]; }, { type: [{\r\n                type: Input\r\n            }], templateRef: [{\r\n                type: ContentChild,\r\n                args: [TemplateRef]\r\n            }] });\r\n})();\n\nclass ExportModule {\r\n}\r\nExportModule.ɵfac = function ExportModule_Factory(t) { return new (t || ExportModule)(); };\r\nExportModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ExportModule });\r\nExportModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ExportModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        ExportComponent,\r\n                    ],\r\n                    exports: [\r\n                        ExportComponent,\r\n                    ],\r\n                    imports: [\r\n                        TemplateModule,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ExportModule, { declarations: [ExportComponent], imports: [TemplateModule], exports: [ExportComponent] }); })();\n\nclass FileDirective {\r\n    constructor(backdropService, disposable, elementRef) {\r\n        this.backdropService = backdropService;\r\n        this.reader = new FileReader();\r\n        this.valueChange = new EventEmitter();\r\n        this.labelChange = new EventEmitter();\r\n        this.isValid = yes;\r\n        const listener = new EventListener(elementRef.nativeElement, new EventManager(this));\r\n        disposable.add(listener.on('change', this.onUpload));\r\n        disposable.add(listener.on('drop', this.onUpload));\r\n        disposable.add(listener.on('click', this.hideBackdrop));\r\n        disposable.add(listener.on('focus', this.revealBackdrop));\r\n        this.reader.onloadend = e => this.onLoadEnd(e);\r\n    }\r\n    get value() {\r\n        return this._value;\r\n    }\r\n    set value(value) {\r\n        if (value !== this._value) {\r\n            this._value = value;\r\n            this.valueChange.emit(value);\r\n        }\r\n    }\r\n    get label() {\r\n        return this._label;\r\n    }\r\n    set label(value) {\r\n        if (value !== this._label) {\r\n            this._label = value;\r\n            this.labelChange.emit(value);\r\n        }\r\n    }\r\n    onUpload(e) {\r\n        const { files } = e.target;\r\n        const file = files[0];\r\n        if (file && this.isValid(file.name)) {\r\n            this.reader.readAsDataURL(file);\r\n            this.label = file.name;\r\n        }\r\n    }\r\n    onLoadEnd(e) {\r\n        if (e.target.readyState === this.reader.DONE) {\r\n            this.value = e.target.result;\r\n        }\r\n    }\r\n    hideBackdrop() {\r\n        if (this.backdropService) {\r\n            this.backdropService.hide();\r\n        }\r\n    }\r\n    revealBackdrop() {\r\n        if (this.backdropService) {\r\n            if (!this.backdropService.isActive) {\r\n                setTimeout(() => this.backdropService.reveal(), 300);\r\n            }\r\n        }\r\n    }\r\n}\r\nFileDirective.ɵfac = function FileDirective_Factory(t) { return new (t || FileDirective)(i0.ɵɵdirectiveInject(BackdropService, 8), i0.ɵɵdirectiveInject(i1.Disposable), i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nFileDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: FileDirective, selectors: [[\"\", \"q-grid-file\", \"\"]], inputs: { isValid: [\"q-grid-file-is-valid\", \"isValid\"], value: [\"q-grid-file\", \"value\"], label: [\"q-grid-file-label\", \"label\"] }, outputs: { valueChange: \"q-grid-fileChange\", labelChange: \"q-grid-file-labelChange\" }, features: [i0.ɵɵProvidersFeature([Disposable])] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FileDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-file]',\r\n                    providers: [Disposable],\r\n                }]\r\n        }], function () {\r\n        return [{ type: BackdropService, decorators: [{\r\n                        type: Optional\r\n                    }] }, { type: i1.Disposable }, { type: i0.ElementRef }];\r\n    }, { valueChange: [{\r\n                type: Output,\r\n                args: ['q-grid-fileChange']\r\n            }], labelChange: [{\r\n                type: Output,\r\n                args: ['q-grid-file-labelChange']\r\n            }], isValid: [{\r\n                type: Input,\r\n                args: ['q-grid-file-is-valid']\r\n            }], value: [{\r\n                type: Input,\r\n                args: ['q-grid-file']\r\n            }], label: [{\r\n                type: Input,\r\n                args: ['q-grid-file-label']\r\n            }] });\r\n})();\n\nclass FileModule {\r\n}\r\nFileModule.ɵfac = function FileModule_Factory(t) { return new (t || FileModule)(); };\r\nFileModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: FileModule });\r\nFileModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FileModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        FileDirective,\r\n                    ],\r\n                    exports: [\r\n                        FileDirective,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(FileModule, { declarations: [FileDirective], exports: [FileDirective] }); })();\n\nclass FilterPipe {\r\n    transform(items, { search = null, type = 'plain' }) {\r\n        if (search || search === 0 || search === false) {\r\n            const predicate = predicateFactory(search);\r\n            switch (type) {\r\n                case 'node': {\r\n                    const root = items;\r\n                    return filterNode(root, predicate);\r\n                }\r\n                default: {\r\n                    return items.filter(predicate);\r\n                }\r\n            }\r\n        }\r\n        return items;\r\n    }\r\n}\r\nFilterPipe.ɵfac = function FilterPipe_Factory(t) { return new (t || FilterPipe)(); };\r\nFilterPipe.ɵpipe = /*@__PURE__*/ i0.ɵɵdefinePipe({ name: \"qGridFilter\", type: FilterPipe, pure: true });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterPipe, [{\r\n            type: Pipe,\r\n            args: [{\r\n                    name: 'qGridFilter',\r\n                }]\r\n        }], null, null);\r\n})();\n\nclass FocusDirective {\r\n    constructor(elementRef, zone) {\r\n        this.elementRef = elementRef;\r\n        this.zone = zone;\r\n        this.disabled = false;\r\n    }\r\n    ngAfterViewInit() {\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n        const selector = this.selector;\r\n        const element = selector\r\n            ? isString(selector) ? this.elementRef.nativeElement.querySelector(selector) : selector\r\n            : this.elementRef.nativeElement;\r\n        if (!element) {\r\n            throw new GridError('focus.directive', `Element ${this.selector} is not found`);\r\n        }\r\n        if (!isFunction(element.focus)) {\r\n            throw new GridError('focus.directive', `Can't find focus method in ${element}`);\r\n        }\r\n        // we need a small timeout to wait, for example, position directive\r\n        // in other case it will scroll to element before layout\r\n        this.zone.runOutsideAngular(() => setTimeout(() => {\r\n            element.focus();\r\n        }, 10));\r\n    }\r\n}\r\nFocusDirective.ɵfac = function FocusDirective_Factory(t) { return new (t || FocusDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone)); };\r\nFocusDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: FocusDirective, selectors: [[\"\", \"q-grid-focus\", \"\"]], inputs: { selector: [\"q-grid-focus\", \"selector\"], disabled: [\"q-grid-focus-disabled\", \"disabled\"] } });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FocusDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-focus]',\r\n                }]\r\n        }], function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, { selector: [{\r\n                type: Input,\r\n                args: ['q-grid-focus']\r\n            }], disabled: [{\r\n                type: Input,\r\n                args: ['q-grid-focus-disabled']\r\n            }] });\r\n})();\n\nclass FocusModule {\r\n}\r\nFocusModule.ɵfac = function FocusModule_Factory(t) { return new (t || FocusModule)(); };\r\nFocusModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: FocusModule });\r\nFocusModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FocusModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        FocusDirective,\r\n                        AutoFocusDirective,\r\n                        BlurDirective,\r\n                    ],\r\n                    exports: [\r\n                        FocusDirective,\r\n                        AutoFocusDirective,\r\n                        BlurDirective,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(FocusModule, { declarations: [FocusDirective,\r\n            AutoFocusDirective,\r\n            BlurDirective], exports: [FocusDirective,\r\n            AutoFocusDirective,\r\n            BlurDirective] });\r\n})();\n\nclass HighlightPipe {\r\n    transform(text, search) {\r\n        if ((text || text === 0) && (search || search === 0)) {\r\n            text = text.toString();\r\n            search = search.toString();\r\n            const contains = new RegExp(escapeRegexp(search), 'gi');\r\n            if (contains.test(text)) {\r\n                return text.replace(contains, s => `<span class=\"${GRID_PREFIX}-highlight-part\">${htmlEncode(s)}</span>`);\r\n            }\r\n            const contained = new RegExp(escapeRegexp(text), 'gi');\r\n            if (contained.test(search)) {\r\n                return `<span class=\"${GRID_PREFIX}-highlight-part\">${htmlEncode(text)}</span>`;\r\n            }\r\n        }\r\n        return htmlEncode(text);\r\n    }\r\n}\r\nHighlightPipe.ɵfac = function HighlightPipe_Factory(t) { return new (t || HighlightPipe)(); };\r\nHighlightPipe.ɵpipe = /*@__PURE__*/ i0.ɵɵdefinePipe({ name: \"qGridHighlight\", type: HighlightPipe, pure: true });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HighlightPipe, [{\r\n            type: Pipe,\r\n            args: [{\r\n                    name: 'qGridHighlight',\r\n                }]\r\n        }], null, null);\r\n})();\n\nclass ImportComponent {\r\n    constructor(plugin, templateHost, hostElement) {\r\n        this.plugin = plugin;\r\n        this.templateHost = templateHost;\r\n        this.hostElement = hostElement;\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n        this.templateHost.key = () => 'import';\r\n    }\r\n    get rows() {\r\n        return this.plugin.model.data().rows;\r\n    }\r\n    get columns() {\r\n        return this.plugin.model.columnList().line;\r\n    }\r\n    get id() {\r\n        return this.plugin.model.grid().id;\r\n    }\r\n    ngAfterViewInit() {\r\n        const { model, disposable } = this.plugin;\r\n        const { nativeElement } = this.hostElement;\r\n        const eventListener = new EventListener(nativeElement, new EventManager(this));\r\n        const importPlugin = new ImportPlugin(model, nativeElement, this.options);\r\n        eventListener.on('change', e => importPlugin.load(e));\r\n        const action = new Action(new Command({\r\n            execute: () => importPlugin.upload(),\r\n        }), 'Import data', 'file_upload');\r\n        if (this.templateRef) {\r\n            action.templateUrl = this.templateHost.key('trigger');\r\n        }\r\n        const items = Composite.list([model.action().items, [action]]);\r\n        model.action({\r\n            items,\r\n        }, {\r\n            source: 'import.component',\r\n        });\r\n        disposable.add(() => {\r\n            // notImportItems\r\n            model.action({\r\n                items: model\r\n                    .action()\r\n                    .items\r\n                    .filter(x => x !== action),\r\n            }, {\r\n                source: 'import.component',\r\n            });\r\n        });\r\n    }\r\n}\r\nImportComponent.ɵfac = function ImportComponent_Factory(t) { return new (t || ImportComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i1.TemplateHostService), i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nImportComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ImportComponent, selectors: [[\"q-grid-import\"]], contentQueries: function ImportComponent_ContentQueries(rf, ctx, dirIndex) {\r\n        if (rf & 1) {\r\n            i0.ɵɵcontentQuery(dirIndex, TemplateRef, 5);\r\n        }\r\n        if (rf & 2) {\r\n            let _t;\r\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\r\n        }\r\n    }, inputs: { options: \"options\" }, features: [i0.ɵɵProvidersFeature([TemplateHostService, GridPlugin])], decls: 0, vars: 0, template: function ImportComponent_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ImportComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-import', providers: [TemplateHostService, GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"\" }]\r\n        }], function () { return [{ type: i1.GridPlugin }, { type: i1.TemplateHostService }, { type: i0.ElementRef }]; }, { options: [{\r\n                type: Input\r\n            }], templateRef: [{\r\n                type: ContentChild,\r\n                args: [TemplateRef]\r\n            }] });\r\n})();\n\nclass ImportModule {\r\n}\r\nImportModule.ɵfac = function ImportModule_Factory(t) { return new (t || ImportModule)(); };\r\nImportModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ImportModule });\r\nImportModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ImportModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        ImportComponent,\r\n                    ],\r\n                    exports: [\r\n                        ImportComponent,\r\n                    ],\r\n                    imports: [\r\n                        TemplateModule,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ImportModule, { declarations: [ImportComponent], imports: [TemplateModule], exports: [ImportComponent] }); })();\n\nclass ItemLabelPipe {\r\n    constructor() { }\r\n    transform(value, itemLabel) {\r\n        if (itemLabel) {\r\n            return itemLabel(value);\r\n        }\r\n        return value;\r\n    }\r\n}\r\nItemLabelPipe.ɵfac = function ItemLabelPipe_Factory(t) { return new (t || ItemLabelPipe)(); };\r\nItemLabelPipe.ɵpipe = /*@__PURE__*/ i0.ɵɵdefinePipe({ name: \"qGridItemLabel\", type: ItemLabelPipe, pure: true });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ItemLabelPipe, [{\r\n            type: Pipe,\r\n            args: [{\r\n                    name: 'qGridItemLabel',\r\n                }]\r\n        }], function () { return []; }, null);\r\n})();\n\nclass PositionDirective {\r\n    constructor(elementRef, disposable) {\r\n        this.elementRef = elementRef;\r\n        this.disposable = disposable;\r\n        this.target = '';\r\n    }\r\n    ngOnInit() {\r\n        const position = new PositionPlugin({\r\n            element: this.elementRef.nativeElement,\r\n            targetName: this.target,\r\n        }, this.disposable);\r\n        position.invalidate();\r\n    }\r\n}\r\nPositionDirective.ɵfac = function PositionDirective_Factory(t) { return new (t || PositionDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Disposable)); };\r\nPositionDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: PositionDirective, selectors: [[\"\", \"q-grid-position\", \"\"]], inputs: { target: [\"q-grid-position\", \"target\"] }, features: [i0.ɵɵProvidersFeature([Disposable])] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PositionDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-position]',\r\n                    providers: [Disposable],\r\n                }]\r\n        }], function () { return [{ type: i0.ElementRef }, { type: i1.Disposable }]; }, { target: [{\r\n                type: Input,\r\n                args: ['q-grid-position']\r\n            }] });\r\n})();\n\nclass LayoutModule {\r\n}\r\nLayoutModule.ɵfac = function LayoutModule_Factory(t) { return new (t || LayoutModule)(); };\r\nLayoutModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: LayoutModule });\r\nLayoutModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LayoutModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        PositionDirective,\r\n                    ],\r\n                    exports: [\r\n                        PositionDirective,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(LayoutModule, { declarations: [PositionDirective], exports: [PositionDirective] }); })();\n\nclass LegendComponent {\r\n    constructor(templateHost) {\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n        templateHost.key = () => 'plugin-legend-core.tpl.html';\r\n    }\r\n}\r\nLegendComponent.ɵfac = function LegendComponent_Factory(t) { return new (t || LegendComponent)(i0.ɵɵdirectiveInject(i1.TemplateHostService)); };\r\nLegendComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: LegendComponent, selectors: [[\"q-grid-legend\"]], features: [i0.ɵɵProvidersFeature([TemplateHostService])], decls: 1, vars: 1, consts: [[\"key\", \"plugin-legend-core.tpl.html\", 3, \"context\"]], template: function LegendComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementContainer(0, 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"context\", ctx.context);\r\n        }\r\n    }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LegendComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-legend', changeDetection: ChangeDetectionStrategy.OnPush, providers: [TemplateHostService], template: \"<ng-container key=\\\"plugin-legend-core.tpl.html\\\"\\n              [context]=\\\"context\\\">\\n</ng-container>\\n\" }]\r\n        }], function () { return [{ type: i1.TemplateHostService }]; }, null);\r\n})();\n\nclass LegendModule {\r\n}\r\nLegendModule.ɵfac = function LegendModule_Factory(t) { return new (t || LegendModule)(); };\r\nLegendModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: LegendModule });\r\nLegendModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LegendModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        LegendComponent,\r\n                    ],\r\n                    exports: [\r\n                        LegendComponent,\r\n                    ],\r\n                    imports: [\r\n                        TemplateModule,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(LegendModule, { declarations: [LegendComponent], imports: [TemplateModule], exports: [LegendComponent] }); })();\n\nconst _c0$2 = [\"currency\"];\r\nconst _c1 = [\"number\"];\r\nconst _c2 = [\"time\"];\r\nconst _c3 = [\"text\"];\r\nfunction LiveCellComponent_ng_container_0_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementContainer(0);\r\n    }\r\n}\r\nfunction LiveCellComponent_ng_template_1_i_1_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"i\", 11);\r\n        i0.ɵɵtext(1, \" \\u2191 \");\r\n        i0.ɵɵelementEnd();\r\n    }\r\n}\r\nfunction LiveCellComponent_ng_template_1_i_2_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"i\", 12);\r\n        i0.ɵɵtext(1, \" \\u2193 \");\r\n        i0.ɵɵelementEnd();\r\n    }\r\n}\r\nfunction LiveCellComponent_ng_template_1_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"span\", 5);\r\n        i0.ɵɵtemplate(1, LiveCellComponent_ng_template_1_i_1_Template, 2, 0, \"i\", 6);\r\n        i0.ɵɵtemplate(2, LiveCellComponent_ng_template_1_i_2_Template, 2, 0, \"i\", 7);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(3, \"span\", 8);\r\n        i0.ɵɵtext(4);\r\n        i0.ɵɵpipe(5, \"qGridCurrency\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(6, \"span\", 9);\r\n        i0.ɵɵtext(7);\r\n        i0.ɵɵpipe(8, \"qGridCurrency\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(9, \"span\", 10);\r\n        i0.ɵɵtext(10);\r\n        i0.ɵɵpipe(11, \"qGridCurrency\");\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r2 = i0.ɵɵnextContext();\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx_r2.getDifference(ctx_r2.cell.changes) > 0);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx_r2.getDifference(ctx_r2.cell.changes) < 0);\r\n        i0.ɵɵadvance(2);\r\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(5, 5, ctx_r2.getDifference(ctx_r2.cell.changes), ctx_r2.cell.column.code));\r\n        i0.ɵɵadvance(3);\r\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(8, 8, ctx_r2.cell.changes.previousValue, ctx_r2.cell.column.code));\r\n        i0.ɵɵadvance(3);\r\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(11, 11, ctx_r2.cell.label, ctx_r2.cell.column.code));\r\n    }\r\n}\r\nfunction LiveCellComponent_ng_template_3_i_7_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"i\", 11);\r\n        i0.ɵɵtext(1, \" \\u2191 \");\r\n        i0.ɵɵelementEnd();\r\n    }\r\n}\r\nfunction LiveCellComponent_ng_template_3_i_8_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"i\", 12);\r\n        i0.ɵɵtext(1, \" \\u2193 \");\r\n        i0.ɵɵelementEnd();\r\n    }\r\n}\r\nfunction LiveCellComponent_ng_template_3_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"span\", 10);\r\n        i0.ɵɵtext(1);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(2, \"span\", 9);\r\n        i0.ɵɵtext(3);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(4, \"span\", 8);\r\n        i0.ɵɵtext(5);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(6, \"span\", 5);\r\n        i0.ɵɵtemplate(7, LiveCellComponent_ng_template_3_i_7_Template, 2, 0, \"i\", 6);\r\n        i0.ɵɵtemplate(8, LiveCellComponent_ng_template_3_i_8_Template, 2, 0, \"i\", 7);\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r4 = i0.ɵɵnextContext();\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵtextInterpolate(ctx_r4.cell.label);\r\n        i0.ɵɵadvance(2);\r\n        i0.ɵɵtextInterpolate(ctx_r4.cell.changes.previousValue);\r\n        i0.ɵɵadvance(2);\r\n        i0.ɵɵtextInterpolate(ctx_r4.getDifference(ctx_r4.cell.changes));\r\n        i0.ɵɵadvance(2);\r\n        i0.ɵɵproperty(\"ngIf\", ctx_r4.getDifference(ctx_r4.cell.changes) > 0);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx_r4.getDifference(ctx_r4.cell.changes) < 0);\r\n    }\r\n}\r\nfunction LiveCellComponent_ng_template_5_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"span\", 9);\r\n        i0.ɵɵtext(1);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(2, \"span\", 10);\r\n        i0.ɵɵtext(3);\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r6 = i0.ɵɵnextContext();\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵtextInterpolate(ctx_r6.cell.changes.previousValue);\r\n        i0.ɵɵadvance(2);\r\n        i0.ɵɵtextInterpolate(ctx_r6.cell.label);\r\n    }\r\n}\r\nfunction LiveCellComponent_ng_template_7_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"span\", 9);\r\n        i0.ɵɵtext(1);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(2, \"span\", 10);\r\n        i0.ɵɵtext(3);\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r8 = i0.ɵɵnextContext();\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵtextInterpolate(ctx_r8.cell.changes.previousValue);\r\n        i0.ɵɵadvance(2);\r\n        i0.ɵɵtextInterpolate(ctx_r8.cell.label);\r\n    }\r\n}\r\nclass LiveCellComponent {\r\n    constructor(zone) {\r\n        this.zone = zone;\r\n        this.duration = 500;\r\n        this.timeoutId = null;\r\n    }\r\n    ngOnInit() {\r\n        if (!this.cell.changes) {\r\n            throw new GridError('live-cell.component', 'No changes found');\r\n        }\r\n        this.class = `q-grid-live-cell q-grid-live-cell-${this.cell.column.type} `;\r\n        if (this.getDifference(this.cell.changes)) {\r\n            this.class += this.getDifference(this.cell.changes) > 0 ? 'q-grid-live-cell-up ' : 'q-grid-live-cell-down ';\r\n        }\r\n        this.zone.runOutsideAngular(() => {\r\n            this.timeoutId = setTimeout(() => {\r\n                this.cell.mode('view');\r\n            }, this.duration);\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.timeoutId) {\r\n            clearTimeout(this.timeoutId);\r\n        }\r\n    }\r\n    getDifference(value) {\r\n        switch (this.cell.column.type) {\r\n            case 'number':\r\n            case 'currency':\r\n                return +value.currentValue - +value.previousValue;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n    getTemplate() {\r\n        switch (this.cell.column.type) {\r\n            case 'currency':\r\n                return this.currencyTemplate;\r\n            case 'time':\r\n                return this.timeTemplate;\r\n            case 'number':\r\n                return this.numberTemplate;\r\n            default:\r\n                return this.textTemplate;\r\n        }\r\n    }\r\n}\r\nLiveCellComponent.ɵfac = function LiveCellComponent_Factory(t) { return new (t || LiveCellComponent)(i0.ɵɵdirectiveInject(i0.NgZone)); };\r\nLiveCellComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: LiveCellComponent, selectors: [[\"q-grid-live-cell\"]], viewQuery: function LiveCellComponent_Query(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵviewQuery(_c0$2, 7);\r\n            i0.ɵɵviewQuery(_c1, 7);\r\n            i0.ɵɵviewQuery(_c2, 7);\r\n            i0.ɵɵviewQuery(_c3, 7);\r\n        }\r\n        if (rf & 2) {\r\n            let _t;\r\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.currencyTemplate = _t.first);\r\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.numberTemplate = _t.first);\r\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.timeTemplate = _t.first);\r\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textTemplate = _t.first);\r\n        }\r\n    }, hostVars: 2, hostBindings: function LiveCellComponent_HostBindings(rf, ctx) {\r\n        if (rf & 2) {\r\n            i0.ɵɵclassMap(ctx.class);\r\n        }\r\n    }, inputs: { cell: \"cell\", duration: \"duration\" }, features: [i0.ɵɵProvidersFeature([TemplateHostService])], decls: 9, vars: 1, consts: [[4, \"ngTemplateOutlet\"], [\"currency\", \"\"], [\"number\", \"\"], [\"time\", \"\"], [\"text\", \"\"], [1, \"q-grid-live-cell-arrow\"], [\"class\", \"q-grid-icon q-grid-asc\", 4, \"ngIf\"], [\"class\", \"q-grid-icon q-grid-desc\", 4, \"ngIf\"], [1, \"q-grid-live-cell-diff\"], [1, \"q-grid-live-cell-prev\"], [1, \"q-grid-live-cell-curr\"], [1, \"q-grid-icon\", \"q-grid-asc\"], [1, \"q-grid-icon\", \"q-grid-desc\"]], template: function LiveCellComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵtemplate(0, LiveCellComponent_ng_container_0_Template, 1, 0, \"ng-container\", 0);\r\n            i0.ɵɵtemplate(1, LiveCellComponent_ng_template_1_Template, 12, 14, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\r\n            i0.ɵɵtemplate(3, LiveCellComponent_ng_template_3_Template, 9, 5, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\r\n            i0.ɵɵtemplate(5, LiveCellComponent_ng_template_5_Template, 4, 2, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\r\n            i0.ɵɵtemplate(7, LiveCellComponent_ng_template_7_Template, 4, 2, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.getTemplate());\r\n        }\r\n    }, dependencies: [i1$1.NgIf, i1$1.NgTemplateOutlet, CurrencyPipe], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LiveCellComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-live-cell', providers: [TemplateHostService], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container *ngTemplateOutlet=\\\"getTemplate()\\\"></ng-container>\\n\\n<ng-template #currency>\\n  <span class=\\\"q-grid-live-cell-arrow\\\">\\n    <i *ngIf=\\\"getDifference(cell.changes) > 0\\\"\\n       class=\\\"q-grid-icon q-grid-asc\\\">\\n      &uarr;\\n    </i>\\n    <i *ngIf=\\\"getDifference(cell.changes) < 0\\\"\\n       class=\\\"q-grid-icon q-grid-desc\\\">\\n      &darr;\\n    </i>\\n  </span>\\n  <span class=\\\"q-grid-live-cell-diff\\\">{{ getDifference(cell.changes) | qGridCurrency: cell.column.code}}</span>\\n  <span class=\\\"q-grid-live-cell-prev\\\">{{ cell.changes.previousValue | qGridCurrency: cell.column.code}}</span>\\n  <span class=\\\"q-grid-live-cell-curr\\\">{{ cell.label | qGridCurrency: cell.column.code}}</span>\\n</ng-template>\\n\\n<ng-template #number>\\n  <span class=\\\"q-grid-live-cell-curr\\\">{{ cell.label }}</span>\\n  <span class=\\\"q-grid-live-cell-prev\\\">{{ cell.changes.previousValue }}</span>\\n  <span class=\\\"q-grid-live-cell-diff\\\">{{ getDifference(cell.changes) }}</span>\\n  <span class=\\\"q-grid-live-cell-arrow\\\">\\n    <i *ngIf=\\\"getDifference(cell.changes) > 0\\\"\\n       class=\\\"q-grid-icon q-grid-asc\\\">\\n      &uarr;\\n    </i>\\n    <i *ngIf=\\\"getDifference(cell.changes) < 0\\\"\\n       class=\\\"q-grid-icon q-grid-desc\\\">\\n      &darr;\\n    </i>\\n  </span>\\n</ng-template>\\n\\n<ng-template #time>\\n  <span class=\\\"q-grid-live-cell-prev\\\">{{ cell.changes.previousValue }}</span>\\n  <span class=\\\"q-grid-live-cell-curr\\\">{{ cell.label }}</span>\\n</ng-template>\\n\\n<ng-template #text>\\n  <span class=\\\"q-grid-live-cell-prev\\\">{{ cell.changes.previousValue }}</span>\\n  <span class=\\\"q-grid-live-cell-curr\\\">{{ cell.label }}</span>\\n</ng-template>\\n\" }]\r\n        }], function () { return [{ type: i0.NgZone }]; }, { cell: [{\r\n                type: Input\r\n            }], duration: [{\r\n                type: Input\r\n            }], class: [{\r\n                type: HostBinding,\r\n                args: ['class']\r\n            }], currencyTemplate: [{\r\n                type: ViewChild,\r\n                args: ['currency', { static: true }]\r\n            }], numberTemplate: [{\r\n                type: ViewChild,\r\n                args: ['number', { static: true }]\r\n            }], timeTemplate: [{\r\n                type: ViewChild,\r\n                args: ['time', { static: true }]\r\n            }], textTemplate: [{\r\n                type: ViewChild,\r\n                args: ['text', { static: true }]\r\n            }] });\r\n})();\n\nclass TimePipe {\r\n    constructor(pipe) {\r\n        this.pipe = pipe;\r\n    }\r\n    transform(value, format, timezone, locale) {\r\n        try {\r\n            return this.pipe.transform(value, format, timezone, locale);\r\n        }\r\n        catch (ex) {\r\n            Log.warn('TimePipe', ex.message);\r\n            return value;\r\n        }\r\n    }\r\n}\r\nTimePipe.ɵfac = function TimePipe_Factory(t) { return new (t || TimePipe)(i0.ɵɵdirectiveInject(i1$1.DatePipe, 16)); };\r\nTimePipe.ɵpipe = /*@__PURE__*/ i0.ɵɵdefinePipe({ name: \"qGridTime\", type: TimePipe, pure: true });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimePipe, [{\r\n            type: Pipe,\r\n            args: [{\r\n                    name: 'qGridTime',\r\n                }]\r\n        }], function () { return [{ type: i1$1.DatePipe }]; }, null);\r\n})();\n\nclass NumberPipe {\r\n    constructor(pipe) {\r\n        this.pipe = pipe;\r\n    }\r\n    transform(value, digitsInfo, locale) {\r\n        try {\r\n            return this.pipe.transform(value, digitsInfo, locale);\r\n        }\r\n        catch (ex) {\r\n            Log.warn('NumberPipe', ex.message);\r\n            return value;\r\n        }\r\n    }\r\n}\r\nNumberPipe.ɵfac = function NumberPipe_Factory(t) { return new (t || NumberPipe)(i0.ɵɵdirectiveInject(i1$1.DecimalPipe, 16)); };\r\nNumberPipe.ɵpipe = /*@__PURE__*/ i0.ɵɵdefinePipe({ name: \"qGridNumber\", type: NumberPipe, pure: true });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NumberPipe, [{\r\n            type: Pipe,\r\n            args: [{\r\n                    name: 'qGridNumber',\r\n                }]\r\n        }], function () { return [{ type: i1$1.DecimalPipe }]; }, null);\r\n})();\n\nclass TextPipe {\r\n    transform(item, format) {\r\n        switch (format) {\r\n            case 'fromCamelCase': {\r\n                return item.replace(/([a-z])([A-Z])/g, '$1 $2').toLowerCase();\r\n            }\r\n            default: {\r\n                throw new GridError('text.pipe', `Unknown input format type '${format}'`);\r\n            }\r\n        }\r\n    }\r\n}\r\nTextPipe.ɵfac = function TextPipe_Factory(t) { return new (t || TextPipe)(); };\r\nTextPipe.ɵpipe = /*@__PURE__*/ i0.ɵɵdefinePipe({ name: \"qGridText\", type: TextPipe, pure: true });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TextPipe, [{\r\n            type: Pipe,\r\n            args: [{\r\n                    name: 'qGridText',\r\n                }]\r\n        }], null, null);\r\n})();\n\nclass PipeModule {\r\n}\r\nPipeModule.ɵfac = function PipeModule_Factory(t) { return new (t || PipeModule)(); };\r\nPipeModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: PipeModule });\r\nPipeModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PipeModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        ArrayPipe,\r\n                        ConvertPipe,\r\n                        CurrencyPipe,\r\n                        DatePipe,\r\n                        FilterPipe,\r\n                        HighlightPipe,\r\n                        ItemLabelPipe,\r\n                        NumberPipe,\r\n                        TextPipe,\r\n                        TimePipe,\r\n                    ],\r\n                    exports: [\r\n                        ArrayPipe,\r\n                        ConvertPipe,\r\n                        CurrencyPipe,\r\n                        DatePipe,\r\n                        FilterPipe,\r\n                        HighlightPipe,\r\n                        ItemLabelPipe,\r\n                        NumberPipe,\r\n                        TextPipe,\r\n                        TimePipe,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(PipeModule, { declarations: [ArrayPipe,\r\n            ConvertPipe,\r\n            CurrencyPipe,\r\n            DatePipe,\r\n            FilterPipe,\r\n            HighlightPipe,\r\n            ItemLabelPipe,\r\n            NumberPipe,\r\n            TextPipe,\r\n            TimePipe], exports: [ArrayPipe,\r\n            ConvertPipe,\r\n            CurrencyPipe,\r\n            DatePipe,\r\n            FilterPipe,\r\n            HighlightPipe,\r\n            ItemLabelPipe,\r\n            NumberPipe,\r\n            TextPipe,\r\n            TimePipe] });\r\n})();\n\nclass LiveCellModule {\r\n}\r\nLiveCellModule.ɵfac = function LiveCellModule_Factory(t) { return new (t || LiveCellModule)(); };\r\nLiveCellModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: LiveCellModule });\r\nLiveCellModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule,\r\n        CommonModule,\r\n        PipeModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LiveCellModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        LiveCellComponent,\r\n                    ],\r\n                    exports: [\r\n                        LiveCellComponent,\r\n                    ],\r\n                    imports: [\r\n                        TemplateModule,\r\n                        CommonModule,\r\n                        PipeModule,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(LiveCellModule, { declarations: [LiveCellComponent], imports: [TemplateModule,\r\n            CommonModule,\r\n            PipeModule], exports: [LiveCellComponent] });\r\n})();\n\nclass LiveColumnComponent {\r\n    constructor(plugin, zone) {\r\n        this.plugin = plugin;\r\n        this.zone = zone;\r\n        this.duration = 500;\r\n    }\r\n    ngOnInit() {\r\n        let startPos;\r\n        let endPos;\r\n        const { model } = this.plugin;\r\n        let currentColumns;\r\n        model.animation({\r\n            apply: model.animation().apply.concat((memo, context, complete) => {\r\n                const previousColumns = currentColumns;\r\n                currentColumns = memo.columns ? memo.columns[0] : currentColumns;\r\n                if (!previousColumns || !memo.columns) {\r\n                    complete(0);\r\n                    return;\r\n                }\r\n                const { columnId } = model.data();\r\n                const animations = [];\r\n                startPos = currentColumns.length;\r\n                endPos = 0;\r\n                for (let columnIndex = 0, length = previousColumns.length; columnIndex < length; columnIndex++) {\r\n                    const newColumnIndex = currentColumns.findIndex((column, i) => columnId(i, column.model) === columnId(columnIndex, previousColumns[columnIndex].model));\r\n                    if (newColumnIndex !== columnIndex) {\r\n                        startPos = Math.min(Math.min(columnIndex, newColumnIndex), startPos);\r\n                        endPos = Math.max(Math.max(columnIndex, newColumnIndex), endPos);\r\n                    }\r\n                }\r\n                for (let columnIndex = 0, length = previousColumns.length; columnIndex < length; columnIndex++) {\r\n                    const newColumnIndex = currentColumns.findIndex((column, i) => columnId(i, column.model) === columnId(columnIndex, previousColumns[columnIndex].model));\r\n                    if (newColumnIndex !== columnIndex) {\r\n                        animations.push(this.moveColumn(columnIndex, newColumnIndex, startPos, endPos));\r\n                    }\r\n                }\r\n                this.zone.runOutsideAngular(() => {\r\n                    Promise.all(animations)\r\n                        .then(complete);\r\n                });\r\n            }),\r\n        });\r\n    }\r\n    moveColumn(from, to, startPos, endPos) {\r\n        const { table } = this.plugin;\r\n        return new Promise((animationEnd, animationError) => {\r\n            const oldColumn = table.body.column(from);\r\n            const newColumn = table.body.column(to);\r\n            const startColumn = table.body.column(startPos);\r\n            const endColumn = table.body.column(endPos);\r\n            if (!oldColumn.model() || !newColumn.model()) {\r\n                const errorIndex = oldColumn.model() ? to : from;\r\n                animationError(`Can't find model for column ${errorIndex}`);\r\n                return;\r\n            }\r\n            Fastdom.measure(() => {\r\n                const newRect = newColumn.cells()[0].rect();\r\n                const oldRect = oldColumn.cells()[0].rect();\r\n                const startRect = startColumn.cells()[0].rect();\r\n                const endRect = endColumn.cells()[0].rect();\r\n                let offset = 0;\r\n                if (from < to) {\r\n                    offset = (Math.abs(from - to) > 1) ? newRect.left - oldRect.right + endRect.width : endRect.width;\r\n                }\r\n                else {\r\n                    offset = (Math.abs(from - to) > 1) ? newRect.left - oldRect.left : -1 * startRect.width;\r\n                }\r\n                Fastdom.mutate(() => {\r\n                    const animatedCells = [];\r\n                    oldColumn.addClass(`${GRID_PREFIX}-live-column`);\r\n                    oldColumn.cells().forEach(cell => animatedCells.push(new Promise(columnAnimationEnd => {\r\n                        const animation = cell.model().element.animate([{ transform: 'translateX(0px)' }, { transform: `translateX(${offset}px)` }], { duration: this.duration });\r\n                        animation.onfinish = () => Fastdom.mutate(() => {\r\n                            oldColumn.removeClass(`${GRID_PREFIX}-live-column`);\r\n                            oldColumn.removeClass(`${GRID_PREFIX}-drag`);\r\n                            columnAnimationEnd(null);\r\n                        });\r\n                    })));\r\n                    Promise.all(animatedCells).finally(() => animationEnd(null));\r\n                });\r\n            });\r\n        });\r\n    }\r\n}\r\nLiveColumnComponent.ɵfac = function LiveColumnComponent_Factory(t) { return new (t || LiveColumnComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i0.NgZone)); };\r\nLiveColumnComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: LiveColumnComponent, selectors: [[\"q-grid-live-columns\"]], inputs: { duration: \"duration\" }, features: [i0.ɵɵProvidersFeature([GridPlugin])], decls: 0, vars: 0, template: function LiveColumnComponent_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LiveColumnComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'q-grid-live-columns',\r\n                    template: '',\r\n                    providers: [GridPlugin],\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                }]\r\n        }], function () { return [{ type: i1.GridPlugin }, { type: i0.NgZone }]; }, { duration: [{\r\n                type: Input,\r\n                args: ['duration']\r\n            }] });\r\n})();\n\nclass LiveColumnModule {\r\n}\r\nLiveColumnModule.ɵfac = function LiveColumnModule_Factory(t) { return new (t || LiveColumnModule)(); };\r\nLiveColumnModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: LiveColumnModule });\r\nLiveColumnModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LiveColumnModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        LiveColumnComponent,\r\n                    ],\r\n                    exports: [\r\n                        LiveColumnComponent,\r\n                    ],\r\n                    imports: [\r\n                        CommonModule,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(LiveColumnModule, { declarations: [LiveColumnComponent], imports: [CommonModule], exports: [LiveColumnComponent] }); })();\n\nclass LiveRowComponent {\r\n    constructor(plugin, zone) {\r\n        this.plugin = plugin;\r\n        this.zone = zone;\r\n        this.duration = 400;\r\n    }\r\n    ngOnInit() {\r\n        const { model } = this.plugin;\r\n        let currentRows;\r\n        model.animation({\r\n            apply: model.animation().apply.concat((memo, context, complete) => {\r\n                const previousRows = currentRows;\r\n                currentRows = memo.rows ? memo.rows : currentRows;\r\n                if (!previousRows || !currentRows) {\r\n                    complete(0);\r\n                    return;\r\n                }\r\n                const { rowId } = model.data();\r\n                const animations = [];\r\n                for (let rowIndex = 0, length = previousRows.length; rowIndex < length; rowIndex++) {\r\n                    const newRowIndex = currentRows.findIndex((row, i) => rowId(i, row) === rowId(rowIndex, previousRows[rowIndex]));\r\n                    if (newRowIndex < 0) {\r\n                        animations.push(this.fadeOutRow(rowIndex));\r\n                    }\r\n                    else if (newRowIndex !== rowIndex) {\r\n                        animations.push(this.moveRow(rowIndex, newRowIndex));\r\n                    }\r\n                }\r\n                this.zone.runOutsideAngular(() => {\r\n                    Promise.all(animations)\r\n                        .then(complete);\r\n                });\r\n            }),\r\n        });\r\n    }\r\n    fadeOutRow(index) {\r\n        return new Promise((resolve, reject) => {\r\n            const tr = this.plugin.table.body.row(index);\r\n            if (!tr.model()) {\r\n                reject(`Can't find model for row ${index}`);\r\n                return;\r\n            }\r\n            Fastdom.mutate(() => {\r\n                const animation = tr.model().tr.element.animate([{ opacity: '1' }, { opacity: '0' }], { duration: this.duration });\r\n                animation.onfinish = () => resolve(null);\r\n            });\r\n        });\r\n    }\r\n    moveRow(from, to) {\r\n        const { table } = this.plugin;\r\n        return new Promise((animationEnd, animationError) => {\r\n            const oldTr = table.body.row(from);\r\n            const newTr = table.body.row(to);\r\n            if (!oldTr.model() || !newTr.model()) {\r\n                const errorIndex = oldTr.model() ? to : from;\r\n                animationError(`Can't find model for row ${errorIndex}`);\r\n                return;\r\n            }\r\n            Fastdom.measure(() => {\r\n                const offset = newTr.rect().top - oldTr.rect().top;\r\n                Fastdom.mutate(() => {\r\n                    const animatedRows = [];\r\n                    oldTr.addClass(`${GRID_PREFIX}-live-row`);\r\n                    oldTr.getElement()\r\n                        .elements\r\n                        .forEach(rowElement => animatedRows.push(new Promise(animationRowEnd => {\r\n                        const animation = rowElement.animate([{ transform: 'translateY(0px)' }, { transform: `translateY(${offset}px)` }], { duration: this.duration });\r\n                        animation.onfinish = () => Fastdom.mutate(() => {\r\n                            oldTr.removeClass(`${GRID_PREFIX}-live-row`);\r\n                            oldTr.removeClass(`${GRID_PREFIX}-drag`);\r\n                            animationRowEnd(null);\r\n                        });\r\n                    })));\r\n                    Promise.all(animatedRows).finally(() => animationEnd(null));\r\n                });\r\n            });\r\n        });\r\n    }\r\n}\r\nLiveRowComponent.ɵfac = function LiveRowComponent_Factory(t) { return new (t || LiveRowComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i0.NgZone)); };\r\nLiveRowComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: LiveRowComponent, selectors: [[\"q-grid-live-rows\"]], inputs: { duration: \"duration\" }, features: [i0.ɵɵProvidersFeature([GridPlugin])], decls: 0, vars: 0, template: function LiveRowComponent_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LiveRowComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'q-grid-live-rows',\r\n                    template: '',\r\n                    providers: [GridPlugin],\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                }]\r\n        }], function () { return [{ type: i1.GridPlugin }, { type: i0.NgZone }]; }, { duration: [{\r\n                type: Input,\r\n                args: ['duration']\r\n            }] });\r\n})();\n\nclass LiveRowModule {\r\n}\r\nLiveRowModule.ɵfac = function LiveRowModule_Factory(t) { return new (t || LiveRowModule)(); };\r\nLiveRowModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: LiveRowModule });\r\nLiveRowModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LiveRowModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        LiveRowComponent,\r\n                    ],\r\n                    exports: [\r\n                        LiveRowComponent,\r\n                    ],\r\n                    imports: [\r\n                        CommonModule,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(LiveRowModule, { declarations: [LiveRowComponent], imports: [CommonModule], exports: [LiveRowComponent] }); })();\n\nclass PagerComponent {\r\n    constructor(plugin, cd, stateAccessor) {\r\n        this.plugin = plugin;\r\n        this.cd = cd;\r\n        this.stateAccessor = stateAccessor;\r\n        this.pagerState = this.stateAccessor.setter(PaginationState);\r\n    }\r\n    set size(size) { this.pagerState({ size }); }\r\n    set sizeList(sizeList) { this.pagerState({ sizeList }); }\r\n    set mode(mode) { this.pagerState({ mode }); }\r\n    ngOnChanges() {\r\n        const { model } = this.plugin;\r\n        this.stateAccessor.write(model);\r\n    }\r\n    ngOnInit() {\r\n        const { model, observe } = this.plugin;\r\n        const pager = new PagerPlugin(this.plugin);\r\n        this.context = { $implicit: pager };\r\n        observe(model.paginationChanged)\r\n            .subscribe(() => this.cd.detectChanges());\r\n    }\r\n}\r\nPagerComponent.ɵfac = function PagerComponent_Factory(t) { return new (t || PagerComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.StateAccessor)); };\r\nPagerComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PagerComponent, selectors: [[\"q-grid-pager\"]], inputs: { size: \"size\", sizeList: \"sizeList\", mode: \"mode\" }, features: [i0.ɵɵProvidersFeature([GridPlugin, StateAccessor]), i0.ɵɵNgOnChangesFeature], decls: 1, vars: 1, consts: [[\"key\", \"plugin-pager.tpl.html\", 3, \"context\"]], template: function PagerComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementContainer(0, 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"context\", ctx.context);\r\n        }\r\n    }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PagerComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-pager', providers: [GridPlugin, StateAccessor], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-pager.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\n\" }]\r\n        }], function () { return [{ type: i1.GridPlugin }, { type: i0.ChangeDetectorRef }, { type: i1.StateAccessor }]; }, { size: [{\r\n                type: Input,\r\n                args: ['size']\r\n            }], sizeList: [{\r\n                type: Input,\r\n                args: ['sizeList']\r\n            }], mode: [{\r\n                type: Input,\r\n                args: ['mode']\r\n            }] });\r\n})();\n\nclass PagerTargetComponent {\r\n    constructor(plugin) {\r\n        this.plugin = plugin;\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n    }\r\n    get current() {\r\n        return this.plugin.model.pagination().current + 1;\r\n    }\r\n    get total() {\r\n        const { count, size } = this.plugin.model.pagination();\r\n        return size === 0 ? 0 : Math.max(1, Math.ceil(count / size));\r\n    }\r\n    ngOnInit() {\r\n        this.value = this.current;\r\n    }\r\n    keyDown(e) {\r\n        let code = Shortcut.translate(e);\r\n        if (code.startsWith('numpad')) {\r\n            code = code.slice(6);\r\n        }\r\n        const value = this.value || 0;\r\n        switch (code) {\r\n            case 'enter': {\r\n                if (value) {\r\n                    const current = value - 1;\r\n                    if (this.plugin.model.pagination().current !== current) {\r\n                        // new FocusAfterRender(this.plugin);\r\n                        this.plugin.model.pagination({\r\n                            current,\r\n                        }, {\r\n                            source: 'pager-target.component',\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'up': {\r\n                if (value < this.total) {\r\n                    this.value = value + 1;\r\n                }\r\n                break;\r\n            }\r\n            case 'down': {\r\n                if (value > 1) {\r\n                    this.value = value - 1;\r\n                }\r\n                break;\r\n            }\r\n            case 'left':\r\n            case 'right':\r\n            case 'backspace': {\r\n                break;\r\n            }\r\n            default: {\r\n                const digit = Number.parseInt(code, 10);\r\n                const page = Number.parseInt('' + value + digit, 10);\r\n                const min = 1;\r\n                const max = this.total;\r\n                const isValid = page >= min && page <= max && !isNaN(digit);\r\n                if (!isValid) {\r\n                    this.value = page > this.total ? max : min;\r\n                    e.preventDefault();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nPagerTargetComponent.ɵfac = function PagerTargetComponent_Factory(t) { return new (t || PagerTargetComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin)); };\r\nPagerTargetComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PagerTargetComponent, selectors: [[\"q-grid-pager-target\"]], features: [i0.ɵɵProvidersFeature([GridPlugin])], decls: 1, vars: 1, consts: [[\"key\", \"plugin-pager-target.tpl.html\", 3, \"context\"]], template: function PagerTargetComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementContainer(0, 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"context\", ctx.context);\r\n        }\r\n    }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PagerTargetComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-pager-target', providers: [GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-pager-target.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\n\" }]\r\n        }], function () { return [{ type: i1.GridPlugin }]; }, null);\r\n})();\n\nclass PagerModule {\r\n}\r\nPagerModule.ɵfac = function PagerModule_Factory(t) { return new (t || PagerModule)(); };\r\nPagerModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: PagerModule });\r\nPagerModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PagerModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        PagerComponent,\r\n                        PagerTargetComponent,\r\n                    ],\r\n                    exports: [\r\n                        PagerComponent,\r\n                        PagerTargetComponent,\r\n                    ],\r\n                    imports: [\r\n                        TemplateModule,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(PagerModule, { declarations: [PagerComponent,\r\n            PagerTargetComponent], imports: [TemplateModule], exports: [PagerComponent,\r\n            PagerTargetComponent] });\r\n})();\n\nfunction PaneComponent_ng_template_1_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"div\", 2);\r\n        i0.ɵɵelementContainer(1, 3);\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r0 = i0.ɵɵnextContext();\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"context\", ctx_r0.context.right);\r\n    }\r\n}\r\nfunction PaneComponent_ng_template_2_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"div\", 4);\r\n        i0.ɵɵelementContainer(1, 5);\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r1 = i0.ɵɵnextContext();\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"context\", ctx_r1.context.left);\r\n    }\r\n}\r\nconst DEFAULT_SIDE = 'right';\r\nclass PaneComponent {\r\n    constructor(plugin, cd, templateHost) {\r\n        this.plugin = plugin;\r\n        this.cd = cd;\r\n        templateHost.key = source => `plugin-pane-${source}.tpl.html`;\r\n        this.context = {\r\n            left: {\r\n                $implicit: this,\r\n                value: null,\r\n            },\r\n            right: {\r\n                $implicit: this,\r\n                value: null,\r\n            },\r\n        };\r\n    }\r\n    ngOnInit() {\r\n        const { model, observeReply } = this.plugin;\r\n        const scope = this.parse();\r\n        if (scope) {\r\n            const [state, prop] = scope;\r\n            observeReply(model[`${state}Changed`])\r\n                .subscribe((e) => {\r\n                if (!prop || e.hasChanges(prop)) {\r\n                    this.open(DEFAULT_SIDE);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    open(side = DEFAULT_SIDE, value) {\r\n        const { table, model } = this.plugin;\r\n        const scope = this.parse();\r\n        if (scope && isUndefined(value)) {\r\n            const [state, prop] = scope;\r\n            value = model[state]()[prop];\r\n        }\r\n        this.context[side] = { $implicit: this, value };\r\n        const paneLayer = `pane-${side}`;\r\n        if (table.view.hasLayer(paneLayer)) {\r\n            table.view.removeLayer(paneLayer);\r\n        }\r\n        table.view.addLayer(paneLayer);\r\n        this.invalidate();\r\n    }\r\n    close(side = DEFAULT_SIDE) {\r\n        const { table } = this.plugin;\r\n        table.view.removeLayer(`pane-${side}`);\r\n        this.context[side] = null;\r\n        this.invalidate();\r\n    }\r\n    invalidate() {\r\n        this.cd.markForCheck();\r\n        this.cd.detectChanges();\r\n    }\r\n    parse() {\r\n        const { model } = this.plugin;\r\n        const parts = this.trigger ? this.trigger.split('.') : [];\r\n        if (parts.length > 0) {\r\n            const [state, prop] = parts;\r\n            if (!model[state]) {\r\n                throw new GridError('pane.component', `Trigger ${state} not found`);\r\n            }\r\n            return [state, prop];\r\n        }\r\n        return null;\r\n    }\r\n}\r\nPaneComponent.ɵfac = function PaneComponent_Factory(t) { return new (t || PaneComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.TemplateHostService)); };\r\nPaneComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PaneComponent, selectors: [[\"q-grid-pane\"]], inputs: { trigger: \"trigger\" }, features: [i0.ɵɵProvidersFeature([GridPlugin, TemplateHostService])], decls: 3, vars: 0, consts: [[\"for\", \"pane-right\"], [\"for\", \"pane-left\"], [1, \"q-grid-pane\", \"q-grid-pane-right\"], [\"key\", \"plugin-pane-right.tpl.html\", 3, \"context\"], [1, \"q-grid-pane\", \"q-grid-pane-left\"], [\"key\", \"plugin-pane-left.tpl.html\", 3, \"context\"]], template: function PaneComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementStart(0, \"q-grid-layer\");\r\n            i0.ɵɵtemplate(1, PaneComponent_ng_template_1_Template, 2, 1, \"ng-template\", 0);\r\n            i0.ɵɵtemplate(2, PaneComponent_ng_template_2_Template, 2, 1, \"ng-template\", 1);\r\n            i0.ɵɵelementEnd();\r\n        }\r\n    }, dependencies: [i1.TemplateDirective, i1.TemplateCacheDirective, i1.LayerComponent], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PaneComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-pane', providers: [GridPlugin, TemplateHostService], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<q-grid-layer>\\n    <ng-template for=\\\"pane-right\\\">\\n        <div class=\\\"q-grid-pane q-grid-pane-right\\\">\\n            <ng-container key=\\\"plugin-pane-right.tpl.html\\\"\\n                          [context]=\\\"context.right\\\">\\n            </ng-container>\\n        </div>\\n    </ng-template>\\n    <ng-template for=\\\"pane-left\\\">\\n        <div class=\\\"q-grid-pane q-grid-pane-left\\\">\\n            <ng-container key=\\\"plugin-pane-left.tpl.html\\\"\\n                          [context]=\\\"context.left\\\">\\n            </ng-container>\\n        </div>\\n    </ng-template>\\n</q-grid-layer>\\n\" }]\r\n        }], function () { return [{ type: i1.GridPlugin }, { type: i0.ChangeDetectorRef }, { type: i1.TemplateHostService }]; }, { trigger: [{\r\n                type: Input\r\n            }] });\r\n})();\n\nclass PaneModule {\r\n}\r\nPaneModule.ɵfac = function PaneModule_Factory(t) { return new (t || PaneModule)(); };\r\nPaneModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: PaneModule });\r\nPaneModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\r\n        TemplateModule,\r\n        LayerModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PaneModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        PaneComponent,\r\n                    ],\r\n                    exports: [\r\n                        PaneComponent,\r\n                    ],\r\n                    imports: [\r\n                        CommonModule,\r\n                        TemplateModule,\r\n                        LayerModule,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(PaneModule, { declarations: [PaneComponent], imports: [CommonModule,\r\n            TemplateModule,\r\n            LayerModule], exports: [PaneComponent] });\r\n})();\n\nclass PersistenceComponent {\r\n    constructor(plugin, modelBuilder, stateAccessor) {\r\n        this.plugin = plugin;\r\n        this.modelBuilder = modelBuilder;\r\n        this.stateAccessor = stateAccessor;\r\n        this.persistenceState = this.stateAccessor.setter(PersistenceState);\r\n        this.service = null;\r\n    }\r\n    set schedule(schedule) { this.persistenceState({ schedule }); }\r\n    set storage(storage) { this.persistenceState({ storage }); }\r\n    ngOnChanges() {\r\n        const { model } = this.plugin;\r\n        this.stateAccessor.write(model);\r\n    }\r\n    ngOnInit() {\r\n        const { model, disposable, observe, observeReply } = this.plugin;\r\n        const id = `q-grid:${model.grid().id}:persistence-list`;\r\n        model.persistence({ id });\r\n        this.service = new PersistenceService(model, () => this.modelBuilder.build());\r\n        observeReply(model.dataChanged)\r\n            .pipe(filter(e => {\r\n            if (e.hasChanges('rows') || e.hasChanges('columns')) {\r\n                const { rows, columns } = e.state;\r\n                if (rows.length > 0 && columns.length > 0) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }), takeOnce())\r\n            .subscribe(() => model.persistence()\r\n            .storage\r\n            .getItem(id)\r\n            .then((items) => {\r\n            if (!items || items.length === 0) {\r\n                return;\r\n            }\r\n            const defaultItem = items.find(item => item.isDefault);\r\n            if (defaultItem) {\r\n                this.service.load(defaultItem.model);\r\n            }\r\n        }));\r\n        switch (model.persistence().schedule) {\r\n            case 'onDemand': {\r\n                const historyAction = new Action(new Command(), 'Save/Load', 'history');\r\n                historyAction.templateUrl = 'plugin-persistence.tpl.html';\r\n                const items = Composite.list([model.action().items, [historyAction]]);\r\n                model.action({ items }, { source: 'persistence.component' });\r\n                disposable.add(() => {\r\n                    const notPersistenceActions = model.action().items.filter(x => x !== historyAction);\r\n                    model.action({ items: notPersistenceActions }, { source: 'persistence.component' });\r\n                });\r\n                break;\r\n            }\r\n            case 'onStateChange': {\r\n                const { settings, storage, defaultGroup } = model.persistence();\r\n                for (const state of Object.keys(settings)) {\r\n                    for (const key of settings[state]) {\r\n                        observe(model[state + 'Changed'])\r\n                            .pipe(\r\n                        // TODO: get rid of e.tag.source check\r\n                        filter(e => e.hasChanges(key) && e.tag.source !== 'persistence.service'))\r\n                            .subscribe(() => {\r\n                            const currentModel = this.service.save();\r\n                            const item = {\r\n                                title: `auto-save: ${state}.${key} changed`,\r\n                                modified: Date.now(),\r\n                                group: defaultGroup,\r\n                                model: currentModel,\r\n                                isDefault: true,\r\n                                canEdit: false,\r\n                            };\r\n                            storage.setItem(id, [item]);\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\nPersistenceComponent.ɵfac = function PersistenceComponent_Factory(t) { return new (t || PersistenceComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i1.GridModelBuilder), i0.ɵɵdirectiveInject(i1.StateAccessor)); };\r\nPersistenceComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PersistenceComponent, selectors: [[\"q-grid-persistence\"]], inputs: { schedule: \"schedule\", storage: \"storage\" }, features: [i0.ɵɵProvidersFeature([GridPlugin, StateAccessor]), i0.ɵɵNgOnChangesFeature], decls: 0, vars: 0, template: function PersistenceComponent_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PersistenceComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'q-grid-persistence',\r\n                    template: '',\r\n                    providers: [GridPlugin, StateAccessor],\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                }]\r\n        }], function () { return [{ type: i1.GridPlugin }, { type: i1.GridModelBuilder }, { type: i1.StateAccessor }]; }, { schedule: [{\r\n                type: Input,\r\n                args: ['schedule']\r\n            }], storage: [{\r\n                type: Input,\r\n                args: ['storage']\r\n            }] });\r\n})();\n\nclass PersistencePanelComponent {\r\n    constructor(plugin, modelBuilder) {\r\n        this.plugin = plugin;\r\n        this.modelBuilder = modelBuilder;\r\n    }\r\n    ngOnInit() {\r\n        const persistence = new PersistencePlugin(this.plugin, () => this.modelBuilder.build());\r\n        this.context = { $implicit: persistence };\r\n    }\r\n}\r\nPersistencePanelComponent.ɵfac = function PersistencePanelComponent_Factory(t) { return new (t || PersistencePanelComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i1.GridModelBuilder)); };\r\nPersistencePanelComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PersistencePanelComponent, selectors: [[\"q-grid-persistence-panel\"]], features: [i0.ɵɵProvidersFeature([GridPlugin])], decls: 1, vars: 1, consts: [[\"key\", \"plugin-persistence-panel.tpl.html\", 3, \"context\"]], template: function PersistencePanelComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementContainer(0, 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"context\", ctx.context);\r\n        }\r\n    }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PersistencePanelComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-persistence-panel', providers: [GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-persistence-panel.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\n\" }]\r\n        }], function () { return [{ type: i1.GridPlugin }, { type: i1.GridModelBuilder }]; }, null);\r\n})();\n\nclass PersistenceModule {\r\n}\r\nPersistenceModule.ɵfac = function PersistenceModule_Factory(t) { return new (t || PersistenceModule)(); };\r\nPersistenceModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: PersistenceModule });\r\nPersistenceModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [FormsModule,\r\n        TemplateModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PersistenceModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [\r\n                        FormsModule,\r\n                        TemplateModule,\r\n                    ],\r\n                    exports: [\r\n                        PersistenceComponent,\r\n                        PersistencePanelComponent,\r\n                    ],\r\n                    declarations: [\r\n                        PersistenceComponent,\r\n                        PersistencePanelComponent,\r\n                    ]\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(PersistenceModule, { declarations: [PersistenceComponent,\r\n            PersistencePanelComponent], imports: [FormsModule,\r\n            TemplateModule], exports: [PersistenceComponent,\r\n            PersistencePanelComponent] });\r\n})();\n\nclass ProgressComponent {\r\n    constructor(plugin, cd) {\r\n        this.plugin = plugin;\r\n        this.cd = cd;\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n    }\r\n    get isBusy() {\r\n        const { isBusy, queue } = this.plugin.model.progress();\r\n        return isBusy || queue.length;\r\n    }\r\n    ngOnInit() {\r\n        const { model, observeReply } = this.plugin;\r\n        observeReply(model.progressChanged)\r\n            .subscribe(() => this.cd.detectChanges());\r\n    }\r\n}\r\nProgressComponent.ɵfac = function ProgressComponent_Factory(t) { return new (t || ProgressComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };\r\nProgressComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ProgressComponent, selectors: [[\"q-grid-progress\"]], features: [i0.ɵɵProvidersFeature([GridPlugin])], decls: 1, vars: 1, consts: [[\"key\", \"plugin-progress.tpl.html\", 3, \"context\"]], template: function ProgressComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementContainer(0, 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"context\", ctx.context);\r\n        }\r\n    }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProgressComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-progress', providers: [GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-progress.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\n\" }]\r\n        }], function () { return [{ type: i1.GridPlugin }, { type: i0.ChangeDetectorRef }]; }, null);\r\n})();\n\nclass ProgressModule {\r\n}\r\nProgressModule.ɵfac = function ProgressModule_Factory(t) { return new (t || ProgressModule)(); };\r\nProgressModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ProgressModule });\r\nProgressModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProgressModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        ProgressComponent,\r\n                    ],\r\n                    exports: [\r\n                        ProgressComponent,\r\n                    ],\r\n                    imports: [\r\n                        TemplateModule,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ProgressModule, { declarations: [ProgressComponent], imports: [TemplateModule], exports: [ProgressComponent] }); })();\n\nclass QueryBuilderComponent {\r\n    constructor(plugin) {\r\n        this.plugin = plugin;\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n    }\r\n    ngOnInit() {\r\n        const { model, disposable } = this.plugin;\r\n        const action = new Action(new Command(), 'Query Builder', 'filter');\r\n        action.templateUrl = 'plugin-query-builder.tpl.html';\r\n        const items = Composite.list([model.action().items, [action]]);\r\n        model.action({\r\n            items,\r\n        }, {\r\n            source: 'query-builder.component',\r\n        });\r\n        disposable.add(() => {\r\n            model.action({\r\n                items: model\r\n                    .action()\r\n                    .items\r\n                    .filter(x => x !== action),\r\n            }, {\r\n                source: 'query-builder.component',\r\n            });\r\n        });\r\n    }\r\n}\r\nQueryBuilderComponent.ɵfac = function QueryBuilderComponent_Factory(t) { return new (t || QueryBuilderComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin)); };\r\nQueryBuilderComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: QueryBuilderComponent, selectors: [[\"q-grid-query-builder\"]], features: [i0.ɵɵProvidersFeature([GridPlugin])], decls: 1, vars: 1, consts: [[\"key\", \"plugin-query-builder.tpl.html\", 3, \"context\"]], template: function QueryBuilderComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementContainer(0, 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"context\", ctx.context);\r\n        }\r\n    }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QueryBuilderComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-query-builder', providers: [GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-query-builder.tpl.html\\\"\\n              [context]=\\\"context\\\">\\n</ng-container>\\n\" }]\r\n        }], function () { return [{ type: i1.GridPlugin }]; }, null);\r\n})();\n\nclass QueryBuilderModel {\r\n    constructor() {\r\n        this.node = null;\r\n    }\r\n}\n\nclass TraverseService {\r\n    findUp(node, test) {\r\n        while (node) {\r\n            if (test(node)) {\r\n                return node;\r\n            }\r\n            node = node.parent;\r\n        }\r\n        return null;\r\n    }\r\n    findUpSibling(node) {\r\n        if (node.parent) {\r\n            const children = node.parent.children;\r\n            const index = children.indexOf(node);\r\n            if (index >= 0) {\r\n                if (index > 0) {\r\n                    return children[index - 1];\r\n                }\r\n                return node.parent;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    depth(root) {\r\n        return (reduce, memo) => {\r\n            memo = this.visitLine(reduce, memo, root, root.line);\r\n            const children = root.children;\r\n            const length = children.length;\r\n            for (let i = 0; i < length; i++) {\r\n                memo = this.depth(children[i])(reduce, memo);\r\n            }\r\n            return memo;\r\n        };\r\n    }\r\n    visitLine(reduce, memo, node, line) {\r\n        const groups = line.expressions;\r\n        const length = groups.length;\r\n        for (let i = 0; i < length; i++) {\r\n            memo = this.visitGroup(reduce, memo, node, line, groups[i]);\r\n        }\r\n        return memo;\r\n    }\r\n    visitGroup(reduce, memo, node, line, group) {\r\n        const expressions = group.expressions;\r\n        const length = expressions.length;\r\n        for (let i = 0; i < length; i++) {\r\n            memo = reduce(memo, expressions[i], line, node);\r\n        }\r\n        return memo;\r\n    }\r\n}\n\nfunction method(inst, key) {\r\n    const sourceFn = inst[key];\r\n    return {\r\n        with: withFactory(inst, key, sourceFn),\r\n    };\r\n}\r\nfunction methodsOf(inst) {\r\n    const keys = Object.keys(inst);\r\n    const length = keys.length;\r\n    const patch = {};\r\n    for (let i = 0; i < length; i++) {\r\n        const key = keys[i];\r\n        if (isFunction(inst[key])) {\r\n            patch[key] = method(inst, key);\r\n        }\r\n    }\r\n    return {\r\n        with: (...args) => {\r\n            const patchKeys = Object.keys(patch);\r\n            const patchLength = patchKeys.length;\r\n            for (let i = 0; i < patchLength; i++) {\r\n                const key = patchKeys[i];\r\n                inst.action = key;\r\n                patch[key].with.apply(inst, args);\r\n            }\r\n        },\r\n    };\r\n}\r\nfunction withFactory(inst, key, sourceFn) {\r\n    const withFn = (...withArgs) => inst[key] = (...keyArgs) => sourceFn.apply(inst, withArgs.concat(keyArgs));\r\n    withFn.decorator = (...args) => {\r\n        const decorate = args[0];\r\n        args = args.slice(1);\r\n        inst[key] = () => decorate.apply(inst, [\r\n            sourceFn,\r\n            inst,\r\n            key,\r\n        ].concat(args));\r\n    };\r\n    return withFn;\r\n}\n\nclass Expression {\r\n    constructor() {\r\n        this.templateUrl = '';\r\n        this.method = [];\r\n    }\r\n}\r\nclass GroupExpression extends Expression {\r\n    constructor() {\r\n        super();\r\n        this.expressions = [];\r\n        this.type = 'group';\r\n        this.templateUrl = 'eb-group.tpl.html';\r\n    }\r\n}\n\nclass GroupSchema {\r\n    constructor(node, line) {\r\n        this.node = node;\r\n        this.line = line;\r\n        this.plan = [];\r\n    }\r\n    apply(group) {\r\n        this.plan.forEach(p => p(this.node, this.line, group));\r\n    }\r\n}\n\nclass Line {\r\n    constructor(GroupSchemaT) {\r\n        this.GroupSchemaT = GroupSchemaT;\r\n        this.immutable = true;\r\n        this.expressions = [];\r\n    }\r\n    add(expression) {\r\n        this.expressions.push(expression);\r\n    }\r\n    clone(id) {\r\n        return cloneDeep(this.get(id));\r\n    }\r\n    get(id) {\r\n        const expression = this.findById(this.expressions, id);\r\n        if (!expression) {\r\n            throw new GridError('line', `Expression ${id} not found`);\r\n        }\r\n        return expression.expression;\r\n    }\r\n    put(id, node, build) {\r\n        const index = this.getIndex(id);\r\n        const schema = new this.GroupSchemaT(node, this);\r\n        const group = new GroupExpression();\r\n        const item = this.findById(this.expressions, id);\r\n        if (item.expression instanceof GroupExpression) {\r\n            build(schema);\r\n            schema.apply(group);\r\n            group.id = id;\r\n            this.expressions.splice(index, 1, group);\r\n            this.immutable = false;\r\n        }\r\n        else {\r\n            throw new GridError('line', 'Unsupported operation: put to expression, that is not a group');\r\n        }\r\n    }\r\n    remove(id) {\r\n        const item = this.findById(this.expressions, id);\r\n        if (item.expression instanceof GroupExpression) {\r\n            item.expression.expressions = [];\r\n        }\r\n        else {\r\n            throw new GridError('line', 'Unsupported operation: remove expression, that is not a group');\r\n        }\r\n    }\r\n    getIndex(id) {\r\n        const index = this.expressions.findIndex(item => item.id === id);\r\n        if (index < 0) {\r\n            throw new GridError('line', `Expression ${id} not found`);\r\n        }\r\n        return index;\r\n    }\r\n    findById(expressions, id, parent = null) {\r\n        for (let index = 0, length = expressions.length; index < length; index++) {\r\n            const expression = expressions[index];\r\n            if (expression.id === id) {\r\n                return { index, expression, parent };\r\n            }\r\n            if (expression instanceof GroupExpression) {\r\n                const group = expression;\r\n                const groupChild = this.findById(group.expressions, id, group);\r\n                if (groupChild) {\r\n                    return groupChild;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\n\nfunction nodeSchema(GroupSchemaT) {\r\n    return class NodeSchema {\r\n        constructor(schemaMap = {}) {\r\n            this.schemaMap = schemaMap;\r\n            this.plan = [];\r\n            this.planMap = {};\r\n        }\r\n        clone() {\r\n            const schema = new NodeSchema(Object.assign({}, this.schemaMap));\r\n            schema.plan = [...this.plan];\r\n            schema.planMap = Object.assign({}, this.planMap);\r\n            return schema;\r\n        }\r\n        attr(key, value) {\r\n            this.plan.push(node => node.attr(key, value));\r\n            return this;\r\n        }\r\n        apply(node) {\r\n            node = node || new Node('#root', this);\r\n            const line = new Line(GroupSchemaT);\r\n            node.line = line;\r\n            this.plan.forEach(p => p(node, line));\r\n            return node;\r\n        }\r\n        node(id, build) {\r\n            if (!build) {\r\n                throw new GridError('node.schema', 'Build function is not defined');\r\n            }\r\n            this.plan.push(node => {\r\n                const schema = new NodeSchema(this.schemaMap);\r\n                build(schema);\r\n                const newNode = new Node(id, schema, node);\r\n                schema.apply(newNode);\r\n                node.addChildAfter(newNode);\r\n                this.schemaMap[id] = schema;\r\n                return node;\r\n            });\r\n            return this;\r\n        }\r\n        group(id, build) {\r\n            if (!build) {\r\n                throw new GridError('node.schema', 'Build function is not defined');\r\n            }\r\n            const buildGroup = (node, line) => {\r\n                const group = new GroupExpression();\r\n                group.id = id;\r\n                const schema = new GroupSchemaT(node, line);\r\n                build(schema);\r\n                schema.apply(group);\r\n                line.add(group);\r\n                return node;\r\n            };\r\n            this.plan.push(buildGroup);\r\n            this.planMap[id] = buildGroup;\r\n            return this;\r\n        }\r\n        get(id) {\r\n            const schema = this.schemaMap[id];\r\n            if (!schema) {\r\n                throw new GridError('node.schema', `Schema ${id} is not found`);\r\n            }\r\n            return schema;\r\n        }\r\n        materialize(id) {\r\n            const schema = this.get(id);\r\n            return schema.apply(new Node(id, schema));\r\n        }\r\n    };\r\n}\n\nclass EmptyStatement {\r\n    constructor() {\r\n        this.type = 'empty';\r\n        this.templateKey = 'eb-empty.tpl.html';\r\n    }\r\n}\n\nclass ExpressionBuilder {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n    }\r\n    build(statements) {\r\n        const NodeSchemaT = nodeSchema(GroupSchema);\r\n        const settings = this.settings;\r\n        statements\r\n            .concat([new EmptyStatement()])\r\n            .forEach(statement => {\r\n            const factory = function (...args) {\r\n                let id = guid();\r\n                let sampleExpression;\r\n                if (args.length > 1) {\r\n                    id = args[0];\r\n                    sampleExpression = args[1];\r\n                }\r\n                else if (args.length === 1) {\r\n                    sampleExpression = args[0];\r\n                }\r\n                const build = function (node, line) {\r\n                    const expression = defaults(sampleExpression, statement.defaults, settings.defaults);\r\n                    expression.id = id;\r\n                    expression.type = statement.type;\r\n                    expression.templateUrl = statement.templateKey;\r\n                    const group = new GroupExpression();\r\n                    group.id = id;\r\n                    group.expressions.push(expression);\r\n                    line.add(group);\r\n                    methodsOf(expression).with(node, line);\r\n                    const keys = Object.keys(expression);\r\n                    keys.forEach(key => {\r\n                        const sourceFunction = expression[key];\r\n                        if (isFunction(sourceFunction)) {\r\n                            expression[key] = (...context) => {\r\n                                const result = sourceFunction.apply(expression, context);\r\n                                // TODO add decorator for mutable methods instead of trigger\r\n                                if (!line.immutable) {\r\n                                    expression.method = expression.method || [];\r\n                                    if (expression.method.indexOf(key) < 0) {\r\n                                        expression.method.push(key);\r\n                                    }\r\n                                    line.immutable = true;\r\n                                }\r\n                                return result;\r\n                            };\r\n                        }\r\n                    });\r\n                    return node;\r\n                };\r\n                this.plan.push(build);\r\n                this.planMap[id] = build;\r\n                return this;\r\n            };\r\n            const groupFactory = function (...args) {\r\n                let id = guid();\r\n                let sampleExpression;\r\n                if (args.length > 1) {\r\n                    id = args[0];\r\n                    sampleExpression = args[1];\r\n                }\r\n                else if (args.length === 1) {\r\n                    sampleExpression = args[0];\r\n                }\r\n                const build = function (node, line, expressionGroup) {\r\n                    const expression = defaults(sampleExpression, statement.defaults, settings.defaults);\r\n                    expression.id = id;\r\n                    expression.type = statement.type;\r\n                    expression.templateUrl = statement.templateKey;\r\n                    expressionGroup.expressions.push(expression);\r\n                    methodsOf(expression).with(node, line);\r\n                    return node;\r\n                };\r\n                this.plan.push(build);\r\n                return this;\r\n            };\r\n            NodeSchemaT.prototype[statement.type] = factory;\r\n            GroupSchema.prototype[statement.type] = groupFactory;\r\n        });\r\n        // TODO: think how to avoid this\r\n        return new NodeSchemaT();\r\n    }\r\n}\n\nfunction swap(inst) {\r\n    const result = {};\r\n    for (const prop in inst) {\r\n        if (Object.prototype.hasOwnProperty.call(inst, prop)) {\r\n            result[inst[prop]] = prop;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nconst commonOperators = [\r\n    'EQUALS',\r\n    'NOT EQUALS',\r\n    'IN',\r\n    'IS EMPTY',\r\n    'IS NOT EMPTY',\r\n];\r\nconst oneToOneCommonOperators = ['EQUALS', 'NOT EQUALS'];\r\nconst textOperators = [\r\n    'LIKE',\r\n    'NOT LIKE',\r\n    'STARTS WITH',\r\n    'ENDS WITH',\r\n];\r\nconst numberOperators = [\r\n    'BETWEEN',\r\n    'GREATER THAN',\r\n    'LESS THAN',\r\n    'GREATER OR EQ. TO',\r\n    'LESS OR EQ. TO',\r\n];\r\nconst oneToOneNumberOperators = [\r\n    'GREATER THAN',\r\n    'LESS THAN',\r\n    'GREATER OR EQ. TO',\r\n    'LESS OR EQ. TO',\r\n];\r\nconst camelCaseMapping = {\r\n    'IS EMPTY': 'isNull',\r\n    'IS NOT EMPTY': 'isNotNull',\r\n    'EQUALS': 'equals',\r\n    'NOT EQUALS': 'notEquals',\r\n    'GREATER OR EQ. TO': 'greaterThanOrEquals',\r\n    'LESS OR EQ. TO': 'lessThanOrEquals',\r\n    'GREATER THAN': 'greaterThan',\r\n    'LESS THAN': 'lessThan',\r\n    'LIKE': 'like',\r\n    'NOT LIKE': 'notLike',\r\n    'STARTS WITH': 'startsWith',\r\n    'ENDS WITH': 'endsWith',\r\n    'IN': 'in',\r\n    'BETWEEN': 'between',\r\n};\r\nconst typeMapping = {\r\n    bool: oneToOneCommonOperators,\r\n    id: commonOperators.concat(textOperators),\r\n    text: commonOperators.concat(textOperators),\r\n    email: commonOperators.concat(textOperators),\r\n    url: commonOperators.concat(textOperators),\r\n    password: commonOperators.concat(textOperators),\r\n    number: commonOperators.concat(numberOperators),\r\n    date: commonOperators.concat(numberOperators),\r\n    time: commonOperators.concat(numberOperators),\r\n    currency: commonOperators.concat(numberOperators),\r\n};\r\nconst oneToOneMapping = {\r\n    bool: oneToOneCommonOperators,\r\n    id: oneToOneCommonOperators.concat(textOperators),\r\n    text: oneToOneCommonOperators.concat(textOperators),\r\n    email: oneToOneCommonOperators.concat(textOperators),\r\n    url: oneToOneCommonOperators.concat(textOperators),\r\n    password: oneToOneCommonOperators.concat(textOperators),\r\n    number: oneToOneCommonOperators.concat(oneToOneNumberOperators),\r\n    date: oneToOneCommonOperators.concat(oneToOneNumberOperators),\r\n    time: oneToOneCommonOperators.concat(oneToOneNumberOperators),\r\n    currency: oneToOneCommonOperators.concat(oneToOneNumberOperators),\r\n};\r\nconst labelMapping = swap(camelCaseMapping);\n\nclass QueryBuilderService {\r\n    constructor(model) {\r\n        this.model = model;\r\n    }\r\n    columns() {\r\n        const model = this.model;\r\n        return model\r\n            .columnList()\r\n            .line\r\n            .filter(column => Object.prototype.hasOwnProperty.call(typeMapping, column.type))\r\n            .map(column => ({\r\n            key: column.key,\r\n            title: column.title,\r\n            type: column.type,\r\n        }));\r\n    }\r\n    columnMap() {\r\n        return this.columns().reduce((memo, column) => {\r\n            memo[column.key] = column;\r\n            return memo;\r\n        }, {});\r\n    }\r\n    submit(expression) {\r\n        const model = this.model;\r\n        model.filter({\r\n            by: expression,\r\n        }, {\r\n            source: 'query-builder.service',\r\n        });\r\n    }\r\n    suggest(key, skip, take, search, selection) {\r\n        selection = (selection || []).map(item => ('' + item).toLowerCase());\r\n        const model = this.model;\r\n        const columnMap = columnService.mapColumns(model.columnList().line);\r\n        const column = columnMap[key];\r\n        if (!column) {\r\n            throw new GridError('query-builder.service', `Column ${key} is not found`);\r\n        }\r\n        const getValue = getValueFactory(column);\r\n        return new Promise(resolve => {\r\n            const view = model\r\n                .data()\r\n                .rows\r\n                .map(getValue)\r\n                .filter(item => !isUndefined(item) &&\r\n                item !== '' &&\r\n                item !== null &&\r\n                selection.indexOf(('' + item).toLowerCase()) < 0);\r\n            const uniqueView = uniq(view);\r\n            const sortedView = uniqueView.sort();\r\n            const searchText = ('' + search).toLowerCase();\r\n            const filterView = searchText\r\n                ? sortedView.filter(x => ('' + x).toLowerCase().indexOf(searchText) >= 0)\r\n                : sortedView;\r\n            const toggleView = filterView.length ? filterView : sortedView;\r\n            const pageView = toggleView.slice(skip, take);\r\n            resolve(pageView);\r\n        });\r\n    }\r\n    build() {\r\n        const statements = [\r\n            {\r\n                type: 'label',\r\n                templateKey: 'plugin-eb-label.tpl.html',\r\n            },\r\n            {\r\n                type: 'input',\r\n                templateKey: 'plugin-eb-input.tpl.html',\r\n            },\r\n            {\r\n                type: 'select',\r\n                templateKey: 'plugin-eb-select.tpl.html',\r\n            },\r\n            {\r\n                type: 'button',\r\n                templateKey: 'plugin-eb-button.tpl.html',\r\n            },\r\n            {\r\n                type: 'iconButton',\r\n                templateKey: 'plugin-eb-icon-button.tpl.html',\r\n            },\r\n            {\r\n                type: 'autocomplete',\r\n                templateKey: 'plugin-eb-autocomplete.tpl.html',\r\n            },\r\n            {\r\n                type: 'multiselect',\r\n                templateKey: 'plugin-eb-multiselect.tpl.html',\r\n            },\r\n        ];\r\n        const settings = {\r\n            defaults: {\r\n                isValid: function () {\r\n                    return !this.validate || !(this.state = this.validate()).length;\r\n                },\r\n            },\r\n        };\r\n        return new ExpressionBuilder(settings)\r\n            .build(statements);\r\n    }\r\n}\n\nfunction visit(item) {\r\n    switch (item.id) {\r\n        case '#root':\r\n            return visit(item.children[0]);\r\n        case '#logical': {\r\n            const group = visitGroup(item);\r\n            if (group) {\r\n                if (!(group.left || group.right)) {\r\n                    return null;\r\n                }\r\n            }\r\n            return group;\r\n        }\r\n        case '#condition':\r\n            return visitCondition(item);\r\n        default:\r\n            throw new GridError('converter', `Invalid kind ${item.kind}`);\r\n    }\r\n}\r\nfunction visitGroup(node) {\r\n    const line = node.line;\r\n    const opExpr = find(line, '#logical-op', '#logical-op');\r\n    const children = node.children.filter(notPlaceholder).map(visit);\r\n    if (children.length === 0) {\r\n        return null;\r\n    }\r\n    if (children.length === 1) {\r\n        return {\r\n            kind: 'group',\r\n            op: opExpr.value.toLowerCase(),\r\n            left: children[0],\r\n            right: null,\r\n        };\r\n    }\r\n    return children\r\n        .slice(1)\r\n        .reduce((memo, item) => ({\r\n        kind: 'group',\r\n        op: opExpr.value.toLowerCase(),\r\n        left: memo,\r\n        right: item,\r\n    }), children[0]);\r\n}\r\nfunction visitCondition(node) {\r\n    const line = node.line;\r\n    const opExpr = find(line, '#operator', '#operator');\r\n    const value = opExpr.value.toUpperCase();\r\n    let condition;\r\n    switch (value) {\r\n        case 'IS NOT EMPTY':\r\n        case 'IS EMPTY':\r\n            condition = visitUnary(line, opExpr.value);\r\n            break;\r\n        case 'EQUALS':\r\n        case 'NOT EQUALS':\r\n        case 'GREATER OR EQ. TO':\r\n        case 'GREATER THAN':\r\n        case 'LESS OR EQ. TO':\r\n        case 'LESS THAN':\r\n        case 'LIKE':\r\n        case 'NOT LIKE':\r\n        case 'STARTS WITH':\r\n        case 'ENDS WITH':\r\n            condition = visitBinary(line, opExpr.value);\r\n            break;\r\n        case 'BETWEEN':\r\n            condition = visitBetween(line);\r\n            break;\r\n        case 'IN':\r\n            condition = visitIn(line);\r\n            break;\r\n        default:\r\n            throw new GridError('converter', `Invalid operation ${value}`);\r\n    }\r\n    condition.kind = 'condition';\r\n    return condition;\r\n}\r\nfunction visitUnary(line, op) {\r\n    const left = visitField(line);\r\n    return {\r\n        left: left.value,\r\n        op: camelCaseMapping[op.toUpperCase()],\r\n    };\r\n}\r\nfunction visitBinary(line, op) {\r\n    const left = visitField(line);\r\n    const right = find(line, '#operand', '#value') || find(line, '#fieldRight');\r\n    return {\r\n        left: left.value,\r\n        op: camelCaseMapping[op.toUpperCase()],\r\n        right: right.value,\r\n    };\r\n}\r\nfunction visitIn(line) {\r\n    const left = visitField(line);\r\n    const right = find(line, '#operand', '#in-operand') || find(line, '#fieldRight');\r\n    return {\r\n        left: left.value,\r\n        op: 'in',\r\n        right: cloneDeep(right.values) || right.value,\r\n    };\r\n}\r\nfunction visitBetween(line) {\r\n    const left = visitField(line);\r\n    const from = find(line, '#operand', '#from') || find(line, '#fieldFrom');\r\n    const to = find(line, '#operand', '#to') || find(line, '#fieldTo');\r\n    return {\r\n        left: left.value,\r\n        op: 'between',\r\n        right: [from.value, to.value],\r\n    };\r\n}\r\nfunction visitField(line) {\r\n    return find(line, '#field') || find(line, '#fieldLeft');\r\n}\r\nfunction notPlaceholder(node) {\r\n    return !node.attributes.placeholder;\r\n}\r\nfunction find(line, groupId, exprId) {\r\n    const group = findById(line, groupId);\r\n    if (!group) {\r\n        return null;\r\n    }\r\n    return findById(group.expressions, exprId || groupId);\r\n}\r\nfunction findById(items, id) {\r\n    const result = items.filter(item => item.id === id);\r\n    const length = result.length;\r\n    if (length === 1) {\r\n        return result[0];\r\n    }\r\n    if (length > 1) {\r\n        throw new GridError('converter', `Ambiguous id ${id}`);\r\n    }\r\n    return null;\r\n}\n\nfunction suggestFactory(service, name) {\r\n    return function (node, line) {\r\n        const search = (this.value || '').toLowerCase();\r\n        const field = line.get(name).expressions[0].value;\r\n        return service.suggest(field, 0, 10, search);\r\n    };\r\n}\r\nfunction suggestsFactory(service, name) {\r\n    return function (node, line) {\r\n        const search = this.search;\r\n        const field = line.get(name).expressions[0].value;\r\n        const selection = (this.values || [])\r\n            .map(item => ('' + item).toLowerCase());\r\n        return new Promise((resolve, reject) => service\r\n            .suggest(field, 0, 10, search, selection)\r\n            .then(items => {\r\n            const result = selection.length\r\n                ? items.filter(item => selection.indexOf(('' + item).toLowerCase()) < 0)\r\n                : items;\r\n            resolve(result);\r\n        })\r\n            .catch(ex => reject(ex)));\r\n    };\r\n}\n\nclass Validator {\r\n    constructor(service) {\r\n        this.trueResult = [];\r\n        this.validators = {};\r\n        this.rules = {\r\n            'bool': ['required'],\r\n            'currency': ['required', 'decimal'],\r\n            'date': ['required', 'iso_date'],\r\n            'email': ['required'],\r\n            'file': ['required'],\r\n            'id': ['required'],\r\n            'image': ['required'],\r\n            'number': ['required', 'decimal'],\r\n            'password': ['required'],\r\n            'url': ['required'],\r\n            'reference': ['required'],\r\n            'text': ['required', 'string'],\r\n            'time': ['required'],\r\n        };\r\n        this.columnMap = service.columnMap();\r\n    }\r\n    for(key) {\r\n        const validators = this.validators;\r\n        if (Object.prototype.hasOwnProperty.call(validators, 'key')) {\r\n            return validators[key];\r\n        }\r\n        const column = this.columnMap[key];\r\n        if (!column) {\r\n            throw new GridError('validator', `Can't find column ${key}`);\r\n        }\r\n        const trueResult = this.trueResult;\r\n        const id = column.type;\r\n        const rule = this.rules[id];\r\n        let validate = () => trueResult;\r\n        if (rule) {\r\n            const schema = { [id]: rule };\r\n            validate = function test(value) {\r\n                if (isArray(value)) {\r\n                    const result = [];\r\n                    for (const item of value) {\r\n                        result.push(...test(item));\r\n                    }\r\n                    return result;\r\n                }\r\n                const target = { [id]: value };\r\n                const validator = createValidator(schema);\r\n                const isValid = validator.validate(target);\r\n                if (isValid) {\r\n                    return trueResult;\r\n                }\r\n                const error = validator.getErrors()[id];\r\n                return isArray(error) ? error : [error];\r\n            };\r\n        }\r\n        validators[key] = validate;\r\n        return validate;\r\n    }\r\n}\n\nconst getValue = (line, id, props) => {\r\n    const group = line.get(id);\r\n    if (group) {\r\n        if (group.expressions.length === 1) {\r\n            const expr = group.expressions[0];\r\n            const prop = props.filter(p => Object.prototype.hasOwnProperty.call(expr, p))[0];\r\n            if (prop) {\r\n                const value = expr[prop];\r\n                if (isArray(value) && value.length) {\r\n                    return value[0];\r\n                }\r\n                return value;\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n};\r\nclass WhereSchema {\r\n    constructor(service) {\r\n        this.service = service;\r\n    }\r\n    factory() {\r\n        const service = this.service;\r\n        const suggest = suggestFactory(service, '#field');\r\n        const suggests = suggestsFactory(service, '#field');\r\n        const validator = new Validator(service);\r\n        return this.service.build()\r\n            .node('#logical', function (logical) {\r\n            logical\r\n                .attr('serialize', {\r\n                '#logical-op': ['value'],\r\n            })\r\n                .attr('class', {\r\n                'qb-logical': true,\r\n                'qb-and': function (node) {\r\n                    const op = node.line.get('#logical-op');\r\n                    return op.expressions[0].value === 'AND';\r\n                },\r\n                'qb-or': function (node) {\r\n                    const op = node.line.get('#logical-op');\r\n                    return op.expressions[0].value === 'OR';\r\n                },\r\n            })\r\n                .select('#logical-op', {\r\n                classes: ['qb-operation'],\r\n                options: ['AND', 'OR'],\r\n                value: 'AND',\r\n            })\r\n                .node('#condition', function (condition) {\r\n                condition\r\n                    .attr('serialize', {\r\n                    '#field': ['value'],\r\n                    '#operator': ['value'],\r\n                    '#value': ['value'],\r\n                    '#from': ['value'],\r\n                    '#to': ['value'],\r\n                    '#in-operand': ['values'],\r\n                })\r\n                    .select('#field', {\r\n                    classes: ['qb-field'],\r\n                    options: service.columns().map(c => c.key),\r\n                    value: service.columns().length ? service.columns()[0].key : '',\r\n                    getLabel: function (node, line, key) {\r\n                        const column = service.columns().filter(c => c.key === key)[0];\r\n                        return (column && column.title) || null;\r\n                    },\r\n                    getType: function (node, line, key) {\r\n                        const column = service.columns().filter(c => c.key === key)[0];\r\n                        return (column && column.type) || null;\r\n                    },\r\n                    change: function (node, line) {\r\n                        const field = this.value;\r\n                        const type = this.getType(field);\r\n                        const ops = typeMapping[type] || [];\r\n                        const op = line.get('#operator').expressions[0];\r\n                        if (ops.indexOf(op.value) < 0) {\r\n                            op.value = ops.length ? ops[0] : null;\r\n                            op.change();\r\n                        }\r\n                        else {\r\n                            const operand = line.get('#operand').expressions[0];\r\n                            if (operand.validate) {\r\n                                const result = operand.validate();\r\n                                if (result.length) {\r\n                                    operand.value = null;\r\n                                }\r\n                            }\r\n                            else {\r\n                                operand.value = null;\r\n                            }\r\n                        }\r\n                    },\r\n                })\r\n                    .select('#operator', {\r\n                    classes: ['qb-operator'],\r\n                    getOptions: function (node, line) {\r\n                        const field = line.get('#field').expressions[0];\r\n                        const name = field.value;\r\n                        const type = field.getType(name);\r\n                        return type ? typeMapping[type] : [];\r\n                    },\r\n                    value: 'EQUALS',\r\n                    change: function (node, line) {\r\n                        switch (this.value.toLowerCase()) {\r\n                            case 'equals':\r\n                            case 'not equals':\r\n                            case 'greater than':\r\n                            case 'less than':\r\n                            case 'greater or eq. to':\r\n                            case 'less or eq. to':\r\n                            case 'like':\r\n                            case 'not like':\r\n                            case 'starts with':\r\n                            case 'ends with':\r\n                                line.put('#operand', node, function (schema) {\r\n                                    schema.input('#value', {\r\n                                        classes: {\r\n                                            'qb-operand': true,\r\n                                            'qb-has-value': function () {\r\n                                                return !!this.value;\r\n                                            },\r\n                                            'qb-invalid': function (n) {\r\n                                                return !this.isValid(n);\r\n                                            },\r\n                                        },\r\n                                        value: getValue(line, '#operand', ['value', 'values']),\r\n                                        validate: function () {\r\n                                            const field = line.get('#field').expressions[0].value;\r\n                                            return validator.for(field)(this.value);\r\n                                        },\r\n                                        placeholderText: 'Select value',\r\n                                        suggest: suggest,\r\n                                        options: null,\r\n                                        refresh: function (n, l) {\r\n                                            this.options = this.suggest(n, l);\r\n                                        },\r\n                                    });\r\n                                });\r\n                                break;\r\n                            case 'between':\r\n                                line.put('#operand', node, function (operand) {\r\n                                    operand\r\n                                        .input('#from', {\r\n                                        classes: {\r\n                                            'qb-operand': true,\r\n                                            'qb-has-value': function () {\r\n                                                return !!this.value;\r\n                                            },\r\n                                            'qb-invalid': function (n) {\r\n                                                return !this.isValid(n);\r\n                                            },\r\n                                        },\r\n                                        validate: function () {\r\n                                            const field = line.get('#field').expressions[0].value;\r\n                                            return validator.for(field)(this.value);\r\n                                        },\r\n                                        options: suggest,\r\n                                        value: null,\r\n                                        placeholderText: 'Select value',\r\n                                    })\r\n                                        .label('#and', {\r\n                                        classes: ['qb-operand', 'qb-operand-and-label'],\r\n                                        text: 'AND',\r\n                                    })\r\n                                        .input('#to', {\r\n                                        classes: {\r\n                                            'qb-operand': true,\r\n                                            'qb-has-value': function () {\r\n                                                return !!this.value;\r\n                                            },\r\n                                            'qb-invalid': function (n) {\r\n                                                return !this.isValid(n);\r\n                                            },\r\n                                        },\r\n                                        value: null,\r\n                                        validate: function () {\r\n                                            const field = line.get('#field').expressions[0].value;\r\n                                            return validator.for(field)(this.value);\r\n                                        },\r\n                                        placeholderText: 'Select value',\r\n                                        suggest: suggest,\r\n                                        options: null,\r\n                                        refresh: function (n, l) {\r\n                                            this.options = this.suggest(n, l);\r\n                                        },\r\n                                    });\r\n                                });\r\n                                break;\r\n                            case 'in':\r\n                                line.put('#operand', node, function (schema) {\r\n                                    schema\r\n                                        .label('#in-open', {\r\n                                        text: '(',\r\n                                    })\r\n                                        .multiselect('#in-operand', {\r\n                                        classes: {\r\n                                            'qb-operand': true,\r\n                                            'qb-has-value': function () {\r\n                                                return !!this.values.length;\r\n                                            },\r\n                                            'qb-invalid': function (n) {\r\n                                                return !this.isValid(n);\r\n                                            },\r\n                                        },\r\n                                        validate: function () {\r\n                                            const field = line.get('#field').expressions[0].value;\r\n                                            return validator.for(field)(this.values);\r\n                                        },\r\n                                        values: [],\r\n                                        options: suggests,\r\n                                        placeholderText: 'Select value',\r\n                                        add: function (n, l, v) {\r\n                                            if (v && this.values.indexOf(v) < 0) {\r\n                                                this.values.push(v);\r\n                                            }\r\n                                        },\r\n                                    })\r\n                                        .label('#in-close', {\r\n                                        text: ')',\r\n                                    });\r\n                                });\r\n                                break;\r\n                            case 'is empty':\r\n                            case 'is not empty':\r\n                                line.put('#operand', node, noop);\r\n                                break;\r\n                        }\r\n                    },\r\n                })\r\n                    .group('#operand', function (schema) {\r\n                    schema.autocomplete('#value', {\r\n                        classes: {\r\n                            'qb-operand': true,\r\n                            'qb-has-value': function () {\r\n                                return !!this.value;\r\n                            },\r\n                            'qb-invalid': function (node) {\r\n                                return !this.isValid(node);\r\n                            },\r\n                        },\r\n                        value: null,\r\n                        validate: function (node, line) {\r\n                            const field = line.get('#field').expressions[0].value;\r\n                            return validator.for(field)(this.value);\r\n                        },\r\n                        placeholderText: 'Select value',\r\n                        suggest: suggest,\r\n                        options: null,\r\n                        refresh: function (node, line) {\r\n                            this.options = this.suggest(node, line);\r\n                        },\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    }\r\n}\n\nclass QueryBuilderPanelComponent {\r\n    constructor(focusAfterRender, plugin, nodeService) {\r\n        this.focusAfterRender = focusAfterRender;\r\n        this.plugin = plugin;\r\n        this.nodeService = nodeService;\r\n        this.traverse = new TraverseService();\r\n        this.close = new EventEmitter();\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n        this.addGroup = new Command({\r\n            execute: () => {\r\n                const current = this.nodeService.current;\r\n                const parent = this.findLogicalNode(current);\r\n                const group = parent.clone();\r\n                parent.addChildAfter(group, current.id === '#condition' && current);\r\n                if (current.id === '#condition') {\r\n                    this.nodeService.current = group;\r\n                }\r\n            },\r\n            canExecute: () => !!this.findLogicalNode(this.nodeService.current),\r\n        });\r\n        this.addRule = new Command({\r\n            execute: () => {\r\n                const current = this.nodeService.current;\r\n                const parent = this.findLogicalNode(current);\r\n                const rule = this.plan.materialize('#condition');\r\n                parent.addChildAfter(rule, current.id === '#condition' && current);\r\n                if (current.id === '#condition') {\r\n                    this.nodeService.current = rule;\r\n                }\r\n            },\r\n            canExecute: () => !!this.findLogicalNode(this.nodeService.current),\r\n        });\r\n        this.remove = new Command({\r\n            execute: () => {\r\n                const current = this.nodeService.current;\r\n                if (current.id === '#logical' && current.level === 1) {\r\n                    current.clear();\r\n                }\r\n                else {\r\n                    const previous = this.traverse.findUpSibling(current);\r\n                    this.nodeService.current = previous;\r\n                    current.remove();\r\n                }\r\n            },\r\n            canExecute: () => {\r\n                const current = this.nodeService.current;\r\n                return current && (current.id === '#condition' || (current.level > 1 || current.children.length > 0));\r\n            },\r\n        });\r\n        this.submit = new Command({\r\n            source: 'query-builder.component',\r\n            execute: () => {\r\n                const serializer = new SerializationService();\r\n                const node = serializer.serialize(this.node);\r\n                const by = clone(this.plugin.model.filter().by);\r\n                by.$expression = visit(node);\r\n                const { model } = this.plugin;\r\n                model.filter({ by });\r\n                const qb = model.resolve(QueryBuilderModel);\r\n                qb.state({ node: by.$expression ? node : null });\r\n                this.close.emit();\r\n            },\r\n            canExecute: () => {\r\n                const depth = this.traverse.depth(this.node);\r\n                return depth((memo, expression, line, node) => node.attr('placeholder')\r\n                    ? memo\r\n                    : memo && expression.isValid(), true);\r\n            },\r\n        });\r\n        this.cancel = new Command({\r\n            source: 'query-builder.component',\r\n            execute: () => {\r\n                this.close.emit();\r\n            },\r\n        });\r\n        this.reset = new Command({\r\n            source: 'query-builder.component',\r\n            execute: () => {\r\n                const schema = new WhereSchema(this.queryService);\r\n                const plan = schema.factory();\r\n                this.node = plan.apply();\r\n                const root = this.node.children[0];\r\n                root.clear();\r\n                this.nodeService.current = this.node.children[0];\r\n            },\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        this.queryService = new QueryBuilderService(this.plugin.model);\r\n        const schema = new WhereSchema(this.queryService);\r\n        this.plan = schema.factory();\r\n        this.node = this.plan.apply();\r\n        const serializer = new SerializationService();\r\n        const qb = this.plugin.model.resolve(QueryBuilderModel);\r\n        const { node } = qb.state();\r\n        if (node) {\r\n            this.node = serializer.deserialize(this.plan, node);\r\n        }\r\n        this.nodeService.current = this.node.children[0];\r\n    }\r\n    findLogicalNode(node) {\r\n        return this.traverse.findUp(node, n => n.id === '#logical');\r\n    }\r\n}\r\nQueryBuilderPanelComponent.ɵfac = function QueryBuilderPanelComponent_Factory(t) { return new (t || QueryBuilderPanelComponent)(i0.ɵɵdirectiveInject(FocusAfterRender), i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(EbNodeService)); };\r\nQueryBuilderPanelComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: QueryBuilderPanelComponent, selectors: [[\"q-grid-query-builder-panel\"]], outputs: { close: \"close\" }, features: [i0.ɵɵProvidersFeature([FocusAfterRender, GridPlugin])], decls: 1, vars: 1, consts: [[\"key\", \"plugin-query-builder-panel.tpl.html\", 3, \"context\"]], template: function QueryBuilderPanelComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementContainer(0, 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"context\", ctx.context);\r\n        }\r\n    }, dependencies: [i1.TemplateDirective], encapsulation: 2 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QueryBuilderPanelComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-query-builder-panel', providers: [FocusAfterRender, GridPlugin], template: \"<ng-container key=\\\"plugin-query-builder-panel.tpl.html\\\"\\n              [context]=\\\"context\\\">\\n</ng-container>\\n\" }]\r\n        }], function () { return [{ type: FocusAfterRender }, { type: i1.GridPlugin }, { type: EbNodeService }]; }, { close: [{\r\n                type: Output\r\n            }] });\r\n})();\n\nclass QueryBuilderPipe {\r\n    transform(value, service) {\r\n        const node = value;\r\n        if (node) {\r\n            if (!this.visitor) {\r\n                const validator = new Validator(service);\r\n                const columnMap = service.columnMap();\r\n                this.visitor =\r\n                    new MarkupVisitor(k => columnMap[k].title, k => columnMap[k].type, (k, v) => validator.for(k)(v).length === 0);\r\n            }\r\n            const serializer = new SerializationService();\r\n            const filter = serializer.serialize(node);\r\n            const expression = visit(filter);\r\n            if (expression) {\r\n                return this.visitor.visit(expression);\r\n            }\r\n        }\r\n        return 'Please, select a query';\r\n    }\r\n}\r\nQueryBuilderPipe.ɵfac = function QueryBuilderPipe_Factory(t) { return new (t || QueryBuilderPipe)(); };\r\nQueryBuilderPipe.ɵpipe = /*@__PURE__*/ i0.ɵɵdefinePipe({ name: \"qGridQueryBuilderMarkup\", type: QueryBuilderPipe, pure: false });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QueryBuilderPipe, [{\r\n            type: Pipe,\r\n            args: [{\r\n                    name: 'qGridQueryBuilderMarkup',\r\n                    pure: false,\r\n                }]\r\n        }], null, null);\r\n})();\n\nclass QueryBuilderModule {\r\n    constructor(modelBuilder) {\r\n        modelBuilder\r\n            .register('queryBuilder', QueryBuilderModel);\r\n    }\r\n}\r\nQueryBuilderModule.ɵfac = function QueryBuilderModule_Factory(t) { return new (t || QueryBuilderModule)(i0.ɵɵinject(i1.GridModelBuilder)); };\r\nQueryBuilderModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: QueryBuilderModule });\r\nQueryBuilderModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QueryBuilderModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [\r\n                        TemplateModule,\r\n                    ],\r\n                    exports: [\r\n                        QueryBuilderComponent,\r\n                        QueryBuilderPanelComponent,\r\n                        QueryBuilderPipe,\r\n                    ],\r\n                    declarations: [\r\n                        QueryBuilderComponent,\r\n                        QueryBuilderPanelComponent,\r\n                        QueryBuilderPipe,\r\n                    ],\r\n                }]\r\n        }], function () { return [{ type: i1.GridModelBuilder }]; }, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(QueryBuilderModule, { declarations: [QueryBuilderComponent,\r\n            QueryBuilderPanelComponent,\r\n            QueryBuilderPipe], imports: [TemplateModule], exports: [QueryBuilderComponent,\r\n            QueryBuilderPanelComponent,\r\n            QueryBuilderPipe] });\r\n})();\n\nclass RaiseDirective {\r\n    constructor(element) {\r\n        this.element = element;\r\n        this.type = 'click';\r\n    }\r\n    ngAfterViewInit() {\r\n        const event = new Event(this.type);\r\n        const element = this.element.nativeElement;\r\n        const target = this.target\r\n            ? element.querySelector(this.target)\r\n            : element;\r\n        if (!target) {\r\n            throw new GridError('raise.directive', 'raise target is not found');\r\n        }\r\n        target.dispatchEvent(event);\r\n    }\r\n}\r\nRaiseDirective.ɵfac = function RaiseDirective_Factory(t) { return new (t || RaiseDirective)(i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nRaiseDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: RaiseDirective, selectors: [[\"\", \"q-grid-raise\", \"\"]], inputs: { type: [\"q-grid-raise\", \"type\"], target: [\"q-grid-raise-target\", \"target\"] } });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RaiseDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-raise]',\r\n                }]\r\n        }], function () { return [{ type: i0.ElementRef }]; }, { type: [{\r\n                type: Input,\r\n                args: ['q-grid-raise']\r\n            }], target: [{\r\n                type: Input,\r\n                args: ['q-grid-raise-target']\r\n            }] });\r\n})();\n\nclass RaiseModule {\r\n}\r\nRaiseModule.ɵfac = function RaiseModule_Factory(t) { return new (t || RaiseModule)(); };\r\nRaiseModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: RaiseModule });\r\nRaiseModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RaiseModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        RaiseDirective,\r\n                    ],\r\n                    exports: [\r\n                        RaiseDirective,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(RaiseModule, { declarations: [RaiseDirective], exports: [RaiseDirective] }); })();\n\nclass ReferenceComponent {\r\n    constructor(modelBuilder, disposable) {\r\n        this.modelBuilder = modelBuilder;\r\n        this.disposable = disposable;\r\n        this.modelChange = new EventEmitter();\r\n        this.valueChange = new EventEmitter();\r\n        this.referenceChange = new EventEmitter();\r\n        this.caption = '';\r\n        this.autofocus = false;\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n    }\r\n    get value() { return this._value; }\r\n    set value(value) {\r\n        if (value !== this._value) {\r\n            this._value = value;\r\n            this.valueChange.emit(value);\r\n        }\r\n    }\r\n    get model() { return this._model; }\r\n    set model(value) {\r\n        if (value !== this._model) {\r\n            this._model = value;\r\n            this.modelChange.emit(value);\r\n        }\r\n    }\r\n    get reference() { return this._reference; }\r\n    set reference(value) {\r\n        if (value !== this._reference) {\r\n            this._reference = value;\r\n            this.referenceChange.emit(value);\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        var _a;\r\n        this.reference = {\r\n            commit: new Command({ execute: e => this.value = e.entries }),\r\n            cancel: new Command(),\r\n            value: this.value,\r\n        };\r\n        if ((_a = this.cell.column.editorOptions) === null || _a === void 0 ? void 0 : _a.modelFactory) {\r\n            this.model = this.cell.column.editorOptions.modelFactory({\r\n                reference: this.reference,\r\n                row: this.cell.row,\r\n                column: this.cell.column,\r\n                getValue: getValueFactory(this.cell.column),\r\n                createDefaultModel: () => this.modelBuilder.build(),\r\n            });\r\n            const selectionService = new SelectionService(this.model);\r\n            this.disposable.add(this.model.dataChanged.watch((e, off) => {\r\n                if (e.hasChanges('rows') && e.state.rows.length > 0) {\r\n                    off();\r\n                    if (!this.model.selection().items.length) {\r\n                        const { value } = this.reference;\r\n                        if (!isUndefined(value)) {\r\n                            const entries = isArray(value) ? value : [value];\r\n                            const items = selectionService.map(entries);\r\n                            this.model.selection({\r\n                                items,\r\n                            }, {\r\n                                source: 'reference.component',\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }));\r\n            this.disposable.add(this.model\r\n                .selectionChanged\r\n                // TODO: use rx syntax\r\n                .watch(e => {\r\n                // TODO: get rid of this check\r\n                if (e.tag.source === 'reference.component') {\r\n                    return;\r\n                }\r\n                if (e.hasChanges('items')) {\r\n                    const entries = selectionService.lookup(e.state.items);\r\n                    this.value = entries;\r\n                }\r\n            }));\r\n        }\r\n    }\r\n}\r\nReferenceComponent.ɵfac = function ReferenceComponent_Factory(t) { return new (t || ReferenceComponent)(i0.ɵɵdirectiveInject(i1.GridModelBuilder), i0.ɵɵdirectiveInject(i1.Disposable)); };\r\nReferenceComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ReferenceComponent, selectors: [[\"q-grid-reference\"]], inputs: { caption: \"caption\", autofocus: \"autofocus\", cell: \"cell\", value: \"value\", model: \"model\", reference: \"reference\" }, outputs: { modelChange: \"modelChange\", valueChange: \"valueChange\", referenceChange: \"referenceChange\" }, features: [i0.ɵɵProvidersFeature([Disposable])], decls: 1, vars: 1, consts: [[\"key\", \"plugin-reference.tpl.html\", 3, \"context\"]], template: function ReferenceComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementContainer(0, 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"context\", ctx.context);\r\n        }\r\n    }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ReferenceComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-reference', providers: [Disposable], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-reference.tpl.html\\\"\\n              [context]=\\\"context\\\">\\n</ng-container>\\n\" }]\r\n        }], function () { return [{ type: i1.GridModelBuilder }, { type: i1.Disposable }]; }, { modelChange: [{\r\n                type: Output\r\n            }], valueChange: [{\r\n                type: Output\r\n            }], referenceChange: [{\r\n                type: Output\r\n            }], caption: [{\r\n                type: Input\r\n            }], autofocus: [{\r\n                type: Input\r\n            }], cell: [{\r\n                type: Input\r\n            }], value: [{\r\n                type: Input\r\n            }], model: [{\r\n                type: Input\r\n            }], reference: [{\r\n                type: Input\r\n            }] });\r\n})();\n\nclass ReferenceEditorComponent {\r\n    constructor(disposable) {\r\n        this.disposable = disposable;\r\n        this.valueChange = new EventEmitter();\r\n        this.afterSubmit = new EventEmitter();\r\n        this.afterCancel = new EventEmitter();\r\n        this.caption = '';\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n        this.submit = new Command();\r\n        this.cancel = new Command();\r\n    }\r\n    get value() {\r\n        return this.state;\r\n    }\r\n    set value(value) {\r\n        if (value !== this.state) {\r\n            this.state = value;\r\n            this.valueChange.emit(value);\r\n        }\r\n    }\r\n    ngAfterViewInit() {\r\n        const { model } = this;\r\n        const { commit, cancel } = this.reference;\r\n        const { commitShortcuts, cancelShortcuts } = model.edit();\r\n        const selectionService = new SelectionService(model);\r\n        // TODO: think how to get rid of this shit.\r\n        setTimeout(() => {\r\n            this.submit = new Command({\r\n                shortcut: commitShortcuts.form,\r\n                canExecute: () => {\r\n                    const { items } = model.selection();\r\n                    const entries = selectionService.lookup(items);\r\n                    const context = { items, entries };\r\n                    return commit.canExecute(context);\r\n                },\r\n                execute: () => {\r\n                    const { items } = model.selection();\r\n                    const entries = selectionService.lookup(items);\r\n                    const context = { items, entries };\r\n                    if (commit.execute(context) !== false) {\r\n                        this.afterSubmit.emit();\r\n                    }\r\n                    else {\r\n                        this.afterCancel.emit();\r\n                    }\r\n                    return false;\r\n                },\r\n            });\r\n            this.cancel = new Command({\r\n                shortcut: cancelShortcuts.form || cancelShortcuts.$default,\r\n                canExecute: () => cancel.canExecute(),\r\n                execute: () => {\r\n                    if (cancel.execute() !== false) {\r\n                        this.afterCancel.emit();\r\n                    }\r\n                    return false;\r\n                },\r\n            });\r\n            const { shortcut, manager } = model.action();\r\n            this.disposable.add(shortcut.register(manager, [this.submit, this.cancel]));\r\n        }, 0);\r\n    }\r\n}\r\nReferenceEditorComponent.ɵfac = function ReferenceEditorComponent_Factory(t) { return new (t || ReferenceEditorComponent)(i0.ɵɵdirectiveInject(i1.Disposable)); };\r\nReferenceEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ReferenceEditorComponent, selectors: [[\"q-grid-reference-editor\"]], inputs: { caption: \"caption\", cell: \"cell\", value: \"value\" }, outputs: { valueChange: \"valueChange\", afterSubmit: \"afterSubmit\", afterCancel: \"afterCancel\" }, features: [i0.ɵɵProvidersFeature([Disposable])], decls: 1, vars: 1, consts: [[\"key\", \"plugin-reference-editor.tpl.html\", 3, \"context\"]], template: function ReferenceEditorComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementContainer(0, 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"context\", ctx.context);\r\n        }\r\n    }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ReferenceEditorComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-reference-editor', providers: [Disposable], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-reference-editor.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\n\" }]\r\n        }], function () { return [{ type: i1.Disposable }]; }, { valueChange: [{\r\n                type: Output\r\n            }], afterSubmit: [{\r\n                type: Output\r\n            }], afterCancel: [{\r\n                type: Output\r\n            }], caption: [{\r\n                type: Input\r\n            }], cell: [{\r\n                type: Input\r\n            }], value: [{\r\n                type: Input\r\n            }] });\r\n})();\n\nclass ReferenceEditorModule {\r\n}\r\nReferenceEditorModule.ɵfac = function ReferenceEditorModule_Factory(t) { return new (t || ReferenceEditorModule)(); };\r\nReferenceEditorModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ReferenceEditorModule });\r\nReferenceEditorModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ReferenceEditorModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        ReferenceEditorComponent,\r\n                        ReferenceComponent,\r\n                    ],\r\n                    exports: [\r\n                        ReferenceEditorComponent,\r\n                        ReferenceComponent,\r\n                    ],\r\n                    imports: [\r\n                        TemplateModule,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ReferenceEditorModule, { declarations: [ReferenceEditorComponent,\r\n            ReferenceComponent], imports: [TemplateModule], exports: [ReferenceEditorComponent,\r\n            ReferenceComponent] });\r\n})();\n\nclass RestComponent {\r\n    constructor(http, plugin, stateAccessor) {\r\n        this.http = http;\r\n        this.plugin = plugin;\r\n        this.stateAccessor = stateAccessor;\r\n        this.restState = this.stateAccessor.setter(RestState);\r\n    }\r\n    set restUrl(url) { this.restState({ url }); }\r\n    set restMethod(method) { this.restState({ method }); }\r\n    set restSerialize(serialize) { this.restState({ serialize }); }\r\n    ngOnChanges() {\r\n        const { model } = this.plugin;\r\n        this.stateAccessor.write(model);\r\n    }\r\n    ngOnInit() {\r\n        const rest = new RestPlugin(this.plugin.model, {\r\n            get: (url, params) => this.http.get(url, { params }).toPromise(),\r\n            post: (url, data) => this.http.post(url, { data }).toPromise(),\r\n        });\r\n        this.context = { $implicit: rest };\r\n    }\r\n}\r\nRestComponent.ɵfac = function RestComponent_Factory(t) { return new (t || RestComponent)(i0.ɵɵdirectiveInject(i1$2.HttpClient), i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i1.StateAccessor)); };\r\nRestComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: RestComponent, selectors: [[\"q-grid-rest\"]], inputs: { restUrl: [\"url\", \"restUrl\"], restMethod: [\"method\", \"restMethod\"], restSerialize: [\"serialize\", \"restSerialize\"] }, features: [i0.ɵɵProvidersFeature([GridPlugin, StateAccessor]), i0.ɵɵNgOnChangesFeature], decls: 0, vars: 0, template: function RestComponent_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RestComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'q-grid-rest',\r\n                    template: '',\r\n                    providers: [GridPlugin, StateAccessor],\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                }]\r\n        }], function () { return [{ type: i1$2.HttpClient }, { type: i1.GridPlugin }, { type: i1.StateAccessor }]; }, { restUrl: [{\r\n                type: Input,\r\n                args: ['url']\r\n            }], restMethod: [{\r\n                type: Input,\r\n                args: ['method']\r\n            }], restSerialize: [{\r\n                type: Input,\r\n                args: ['serialize']\r\n            }] });\r\n})();\n\nclass RestModule {\r\n}\r\nRestModule.ɵfac = function RestModule_Factory(t) { return new (t || RestModule)(); };\r\nRestModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: RestModule });\r\nRestModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RestModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        RestComponent,\r\n                    ],\r\n                    exports: [\r\n                        RestComponent,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(RestModule, { declarations: [RestComponent], exports: [RestComponent] }); })();\n\nfunction RuleComponent_ng_template_0_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵprojection(0);\r\n    }\r\n}\r\nconst _c0$1 = [\"*\"];\r\nclass RuleComponent {\r\n    constructor(plugin, templateHost) {\r\n        this.plugin = plugin;\r\n        this.templateHost = templateHost;\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n        this.templateHost.key = () => 'rule';\r\n    }\r\n    ngOnChanges(changes) {\r\n        const rule = {\r\n            for: this.for,\r\n            key: this.key,\r\n        };\r\n        const { model } = this.plugin;\r\n        const validation = model.validation;\r\n        const rules = Array.from(validation().rules);\r\n        Object\r\n            .keys(changes)\r\n            .forEach(key => {\r\n            if (!['for', 'key'].includes(key) && changes[key].firstChange) {\r\n                rule[key] = this[key];\r\n            }\r\n        });\r\n        rules.push(rule);\r\n        validation({ rules });\r\n    }\r\n}\r\nRuleComponent.ɵfac = function RuleComponent_Factory(t) { return new (t || RuleComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i1.TemplateHostService)); };\r\nRuleComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: RuleComponent, selectors: [[\"q-grid-rule\"]], viewQuery: function RuleComponent_Query(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵviewQuery(TemplateRef, 7);\r\n        }\r\n        if (rf & 2) {\r\n            let _t;\r\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\r\n        }\r\n    }, inputs: { for: \"for\", key: \"key\", required: \"required\", not_empty_list: [\"notEmptyList\", \"not_empty_list\"], any_object: [\"anyObject\", \"any_object\"], eq: [\"equal\", \"eq\"], string: \"string\", length_between: [\"lengthBetween\", \"length_between\"], length_equal: [\"lengthEqual\", \"length_equal\"], min_length: [\"minLength\", \"min_length\"], max_length: [\"maxLength\", \"max_length\"], one_of: [\"oneOf\", \"one_of\"], like: [\"pattern\", \"like\"], integer: \"integer\", positive_integer: [\"positiveInteger\", \"positive_integer\"], decimal: \"decimal\", positive_decimal: [\"positiveDecimal\", \"positive_decimal\"], max_number: [\"maxNumber\", \"max_number\"], min_number: [\"minNumber\", \"min_number\"], email: \"email\", url: \"url\", iso_date: [\"isoDate\", \"iso_date\"], equal_to_field: [\"equalToField\", \"equal_to_field\"], list_of: [\"listOf\", \"list_of\"] }, features: [i0.ɵɵProvidersFeature([TemplateHostService, GridPlugin]), i0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0$1, decls: 1, vars: 0, template: function RuleComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵprojectionDef();\r\n            i0.ɵɵtemplate(0, RuleComponent_ng_template_0_Template, 1, 0, \"ng-template\");\r\n        }\r\n    }, encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RuleComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-rule', providers: [TemplateHostService, GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template>\\n\\t<ng-content>\\n\\t</ng-content>\\n</ng-template>\\n\" }]\r\n        }], function () { return [{ type: i1.GridPlugin }, { type: i1.TemplateHostService }]; }, { for: [{\r\n                type: Input\r\n            }], key: [{\r\n                type: Input\r\n            }], required: [{\r\n                type: Input\r\n            }], not_empty_list: [{\r\n                type: Input,\r\n                args: ['notEmptyList']\r\n            }], any_object: [{\r\n                type: Input,\r\n                args: ['anyObject']\r\n            }], eq: [{\r\n                type: Input,\r\n                args: ['equal']\r\n            }], string: [{\r\n                type: Input\r\n            }], length_between: [{\r\n                type: Input,\r\n                args: ['lengthBetween']\r\n            }], length_equal: [{\r\n                type: Input,\r\n                args: ['lengthEqual']\r\n            }], min_length: [{\r\n                type: Input,\r\n                args: ['minLength']\r\n            }], max_length: [{\r\n                type: Input,\r\n                args: ['maxLength']\r\n            }], one_of: [{\r\n                type: Input,\r\n                args: ['oneOf']\r\n            }], like: [{\r\n                type: Input,\r\n                args: ['pattern']\r\n            }], integer: [{\r\n                type: Input\r\n            }], positive_integer: [{\r\n                type: Input,\r\n                args: ['positiveInteger']\r\n            }], decimal: [{\r\n                type: Input\r\n            }], positive_decimal: [{\r\n                type: Input,\r\n                args: ['positiveDecimal']\r\n            }], max_number: [{\r\n                type: Input,\r\n                args: ['maxNumber']\r\n            }], min_number: [{\r\n                type: Input,\r\n                args: ['minNumber']\r\n            }], email: [{\r\n                type: Input\r\n            }], url: [{\r\n                type: Input\r\n            }], iso_date: [{\r\n                type: Input,\r\n                args: ['isoDate']\r\n            }], equal_to_field: [{\r\n                type: Input,\r\n                args: ['equalToField']\r\n            }], list_of: [{\r\n                type: Input,\r\n                args: ['listOf']\r\n            }], templateRef: [{\r\n                type: ViewChild,\r\n                args: [TemplateRef, { static: true }]\r\n            }] });\r\n})();\n\nclass StatusBarComponent {\r\n    constructor(plugin, cd, templateHost) {\r\n        this.plugin = plugin;\r\n        this.cd = cd;\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n        templateHost.key = () => 'plugin-status-bar.tpl.html';\r\n    }\r\n    get rowIndex() {\r\n        return selectRowIndex(this.plugin.model.navigation());\r\n    }\r\n    get columnIndex() {\r\n        return selectColumnIndex(this.plugin.model.navigation());\r\n    }\r\n    ngOnInit() {\r\n        const { model, observe } = this.plugin;\r\n        observe(model.navigationChanged)\r\n            .subscribe(() => this.cd.detectChanges());\r\n    }\r\n}\r\nStatusBarComponent.ɵfac = function StatusBarComponent_Factory(t) { return new (t || StatusBarComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.TemplateHostService)); };\r\nStatusBarComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: StatusBarComponent, selectors: [[\"q-grid-status-bar\"]], features: [i0.ɵɵProvidersFeature([TemplateHostService, GridPlugin])], decls: 1, vars: 1, consts: [[\"key\", \"plugin-status-bar.tpl.html\", 3, \"context\"]], template: function StatusBarComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementContainer(0, 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"context\", ctx.context);\r\n        }\r\n    }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StatusBarComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-status-bar', providers: [TemplateHostService, GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-status-bar.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\n\" }]\r\n        }], function () { return [{ type: i1.GridPlugin }, { type: i0.ChangeDetectorRef }, { type: i1.TemplateHostService }]; }, null);\r\n})();\n\nclass StatusBarModule {\r\n}\r\nStatusBarModule.ɵfac = function StatusBarModule_Factory(t) { return new (t || StatusBarModule)(); };\r\nStatusBarModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: StatusBarModule });\r\nStatusBarModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StatusBarModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        StatusBarComponent,\r\n                    ],\r\n                    exports: [\r\n                        StatusBarComponent,\r\n                    ],\r\n                    imports: [\r\n                        TemplateModule,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(StatusBarModule, { declarations: [StatusBarComponent], imports: [TemplateModule], exports: [StatusBarComponent] }); })();\n\nfunction TabTrapComponent_ng_template_0_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵprojection(0);\r\n    }\r\n}\r\nconst _c0 = [\"*\"];\r\nclass TabTrapComponent {\r\n    constructor(plugin, elementRef) {\r\n        this.plugin = plugin;\r\n        this.isActivating = false;\r\n        this.roundTrip = false;\r\n        // eslint-disable-next-line no-use-before-define\r\n        this.context = {\r\n            $implicit: this,\r\n        };\r\n        this.traps = new Map();\r\n        const listener = new EventListener(elementRef.nativeElement, new EventManager(this));\r\n        listener.on('keydown', e => {\r\n            const code = Shortcut.translate(e);\r\n            if (code === 'tab' || code === 'shift+tab') {\r\n                e.stopPropagation();\r\n            }\r\n        });\r\n    }\r\n    activate(target) {\r\n        if (this.isActivating) {\r\n            return;\r\n        }\r\n        this.isActivating = true;\r\n        try {\r\n            if (this.roundTrip) {\r\n                this.goRound(target);\r\n            }\r\n            else {\r\n                this.exit(target);\r\n            }\r\n        }\r\n        finally {\r\n            this.isActivating = false;\r\n        }\r\n    }\r\n    exit(target) {\r\n        const e = {\r\n            key: 'Tab',\r\n            keyCode: 9,\r\n            shiftKey: target === 'start',\r\n        };\r\n        const { model } = this.plugin;\r\n        const shortcut = model.action().shortcut;\r\n        shortcut.keyDown(e, 'tab-trap');\r\n    }\r\n    goRound(target) {\r\n        switch (target) {\r\n            case 'start': {\r\n                const end = this.traps.get('end');\r\n                end.focus();\r\n                break;\r\n            }\r\n            case 'end': {\r\n                const start = this.traps.get('start');\r\n                start.focus();\r\n                break;\r\n            }\r\n            default:\r\n                throw new GridError('tab.trap', `Invalid target ${target}`);\r\n        }\r\n    }\r\n}\r\nTabTrapComponent.ɵfac = function TabTrapComponent_Factory(t) { return new (t || TabTrapComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nTabTrapComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TabTrapComponent, selectors: [[\"q-grid-tab-trap\"]], viewQuery: function TabTrapComponent_Query(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵviewQuery(TemplateRef, 7);\r\n        }\r\n        if (rf & 2) {\r\n            let _t;\r\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\r\n        }\r\n    }, inputs: { roundTrip: \"roundTrip\" }, features: [i0.ɵɵProvidersFeature([GridPlugin])], ngContentSelectors: _c0, decls: 2, vars: 1, consts: [[\"key\", \"plugin-tab-trap.tpl.html\", 3, \"context\"]], template: function TabTrapComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵprojectionDef();\r\n            i0.ɵɵtemplate(0, TabTrapComponent_ng_template_0_Template, 1, 0, \"ng-template\");\r\n            i0.ɵɵelementContainer(1, 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"context\", ctx.context);\r\n        }\r\n    }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TabTrapComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-tab-trap', providers: [GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template>\\n    <ng-content></ng-content>\\n</ng-template>\\n\\n<ng-container key=\\\"plugin-tab-trap.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\n\" }]\r\n        }], function () { return [{ type: i1.GridPlugin }, { type: i0.ElementRef }]; }, { template: [{\r\n                type: ViewChild,\r\n                args: [TemplateRef, { static: true }]\r\n            }], roundTrip: [{\r\n                type: Input\r\n            }] });\r\n})();\n\nclass TabTrapInDirective {\r\n    constructor(elementRef) {\r\n        this.elementRef = elementRef;\r\n        elementRef.nativeElement.tabIndex = 0;\r\n        const listener = new EventListener(elementRef.nativeElement, new EventManager(this));\r\n        listener.on('focus', () => this.host.activate(this.target));\r\n    }\r\n    ngOnInit() {\r\n        this.host.traps.set(this.target, this);\r\n    }\r\n    focus() {\r\n        this.elementRef.nativeElement.focus();\r\n    }\r\n}\r\nTabTrapInDirective.ɵfac = function TabTrapInDirective_Factory(t) { return new (t || TabTrapInDirective)(i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nTabTrapInDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: TabTrapInDirective, selectors: [[\"\", \"q-grid-tab-trap-in\", \"\"]], inputs: { target: [\"q-grid-tab-trap-in\", \"target\"], host: [\"q-grid-tab-trap-host\", \"host\"] } });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TabTrapInDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-tab-trap-in]',\r\n                }]\r\n        }], function () { return [{ type: i0.ElementRef }]; }, { target: [{\r\n                type: Input,\r\n                args: ['q-grid-tab-trap-in']\r\n            }], host: [{\r\n                type: Input,\r\n                args: ['q-grid-tab-trap-host']\r\n            }] });\r\n})();\n\nclass TabTrapModule {\r\n}\r\nTabTrapModule.ɵfac = function TabTrapModule_Factory(t) { return new (t || TabTrapModule)(); };\r\nTabTrapModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: TabTrapModule });\r\nTabTrapModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TabTrapModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        TabTrapComponent,\r\n                        TabTrapInDirective,\r\n                    ],\r\n                    exports: [\r\n                        TabTrapComponent,\r\n                        TabTrapInDirective,\r\n                    ],\r\n                    imports: [\r\n                        TemplateModule,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(TabTrapModule, { declarations: [TabTrapComponent,\r\n            TabTrapInDirective], imports: [TemplateModule], exports: [TabTrapComponent,\r\n            TabTrapInDirective] });\r\n})();\n\nclass TimeDirective {\r\n    constructor(templateRef, viewContainerRef) {\r\n        this.toMidnight = parseFactory('date');\r\n        viewContainerRef.createEmbeddedView(templateRef, { $implicit: this });\r\n    }\r\n    time(previous, current) {\r\n        if (!previous) {\r\n            previous = new Date();\r\n        }\r\n        const midnight = this.toMidnight(previous);\r\n        const [hours, minutes, seconds, ms,] = current.split(':');\r\n        if (hours && minutes) {\r\n            const time = new Date(midnight.getFullYear(), midnight.getMonth(), midnight.getDate(), +hours, +minutes, seconds ? +seconds : 0, ms ? +ms : 0);\r\n            return time;\r\n        }\r\n        return midnight;\r\n    }\r\n}\r\nTimeDirective.ɵfac = function TimeDirective_Factory(t) { return new (t || TimeDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef)); };\r\nTimeDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: TimeDirective, selectors: [[\"\", \"q-grid-time\", \"\"]] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimeDirective, [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[q-grid-time]',\r\n                }]\r\n        }], function () { return [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }]; }, null);\r\n})();\n\nclass TimeModule {\r\n}\r\nTimeModule.ɵfac = function TimeModule_Factory(t) { return new (t || TimeModule)(); };\r\nTimeModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: TimeModule });\r\nTimeModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimeModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        TimeDirective,\r\n                    ],\r\n                    exports: [\r\n                        TimeDirective,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(TimeModule, { declarations: [TimeDirective], exports: [TimeDirective] }); })();\n\nclass ValidationComponent {\r\n}\r\nValidationComponent.ɵfac = function ValidationComponent_Factory(t) { return new (t || ValidationComponent)(); };\r\nValidationComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ValidationComponent, selectors: [[\"q-grid-validation\"]], inputs: { type: \"type\" }, features: [i0.ɵɵProvidersFeature([GridPlugin])], decls: 0, vars: 0, template: function ValidationComponent_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ValidationComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'q-grid-validation',\r\n                    template: '',\r\n                    providers: [GridPlugin],\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                }]\r\n        }], null, { type: [{\r\n                type: Input\r\n            }] });\r\n})();\n\nclass ValidatorComponent {\r\n    constructor(plugin, templateHost) {\r\n        this.plugin = plugin;\r\n        this.templateHost = templateHost;\r\n        this.templateHost.key = () => 'validator';\r\n    }\r\n    ngOnInit() {\r\n        const { model } = this.plugin;\r\n        const validator = new ValidatorPlugin(model, this);\r\n        this.context = { $implicit: validator };\r\n    }\r\n}\r\nValidatorComponent.ɵfac = function ValidatorComponent_Factory(t) { return new (t || ValidatorComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin), i0.ɵɵdirectiveInject(i1.TemplateHostService)); };\r\nValidatorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ValidatorComponent, selectors: [[\"q-grid-validator\"]], inputs: { value: \"value\", key: \"key\", type: \"type\" }, features: [i0.ɵɵProvidersFeature([TemplateHostService, GridPlugin])], decls: 1, vars: 1, consts: [[\"key\", \"plugin-validator.tpl.html\", 3, \"context\"]], template: function ValidatorComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementContainer(0, 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"context\", ctx.context);\r\n        }\r\n    }, dependencies: [i1.TemplateDirective], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ValidatorComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'q-grid-validator', providers: [TemplateHostService, GridPlugin], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container key=\\\"plugin-validator.tpl.html\\\"\\n              [context]=\\\"context\\\"></ng-container>\\n\" }]\r\n        }], function () { return [{ type: i1.GridPlugin }, { type: i1.TemplateHostService }]; }, { value: [{\r\n                type: Input\r\n            }], key: [{\r\n                type: Input\r\n            }], type: [{\r\n                type: Input\r\n            }] });\r\n})();\n\nclass ValidationModule {\r\n}\r\nValidationModule.ɵfac = function ValidationModule_Factory(t) { return new (t || ValidationModule)(); };\r\nValidationModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ValidationModule });\r\nValidationModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [TemplateModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ValidationModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        ValidationComponent,\r\n                        ValidatorComponent,\r\n                        RuleComponent,\r\n                    ],\r\n                    exports: [\r\n                        ValidationComponent,\r\n                        ValidatorComponent,\r\n                        RuleComponent,\r\n                    ],\r\n                    imports: [\r\n                        TemplateModule,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ValidationModule, { declarations: [ValidationComponent,\r\n            ValidatorComponent,\r\n            RuleComponent], imports: [TemplateModule], exports: [ValidationComponent,\r\n            ValidatorComponent,\r\n            RuleComponent] });\r\n})();\n\nclass VisibilityComponent {\r\n    constructor(plugin) {\r\n        this.plugin = plugin;\r\n        this.head = true;\r\n        this.foot = true;\r\n        this.body = true;\r\n        this.toolbarTop = true;\r\n        this.toolbarBottom = true;\r\n        this.toolbarRight = false;\r\n        this.toolbarLeft = false;\r\n        this.pinLeft = false;\r\n        this.pinTop = false;\r\n        this.pinRight = false;\r\n        this.pinBottom = false;\r\n    }\r\n    ngOnChanges() {\r\n        const { model } = this.plugin;\r\n        model.visibility({\r\n            body: this.body,\r\n            foot: this.foot,\r\n            head: this.head,\r\n            toolbar: {\r\n                bottom: this.toolbarBottom,\r\n                left: this.toolbarLeft,\r\n                right: this.toolbarRight,\r\n                top: this.toolbarTop,\r\n            },\r\n            pin: {\r\n                bottom: this.pinBottom,\r\n                left: this.pinLeft,\r\n                right: this.pinRight,\r\n                top: this.pinTop,\r\n            },\r\n        });\r\n    }\r\n}\r\nVisibilityComponent.ɵfac = function VisibilityComponent_Factory(t) { return new (t || VisibilityComponent)(i0.ɵɵdirectiveInject(i1.GridPlugin)); };\r\nVisibilityComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: VisibilityComponent, selectors: [[\"q-grid-visibility\"]], inputs: { head: \"head\", foot: \"foot\", body: \"body\", toolbarTop: \"toolbarTop\", toolbarBottom: \"toolbarBottom\", toolbarRight: \"toolbarRight\", toolbarLeft: \"toolbarLeft\", pinLeft: \"pinLeft\", pinTop: \"pinTop\", pinRight: \"pinRight\", pinBottom: \"pinBottom\" }, features: [i0.ɵɵProvidersFeature([GridPlugin]), i0.ɵɵNgOnChangesFeature], decls: 0, vars: 0, template: function VisibilityComponent_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VisibilityComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'q-grid-visibility',\r\n                    template: '',\r\n                    providers: [GridPlugin],\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                }]\r\n        }], function () { return [{ type: i1.GridPlugin }]; }, { head: [{\r\n                type: Input\r\n            }], foot: [{\r\n                type: Input\r\n            }], body: [{\r\n                type: Input\r\n            }], toolbarTop: [{\r\n                type: Input\r\n            }], toolbarBottom: [{\r\n                type: Input\r\n            }], toolbarRight: [{\r\n                type: Input\r\n            }], toolbarLeft: [{\r\n                type: Input\r\n            }], pinLeft: [{\r\n                type: Input\r\n            }], pinTop: [{\r\n                type: Input\r\n            }], pinRight: [{\r\n                type: Input\r\n            }], pinBottom: [{\r\n                type: Input\r\n            }] });\r\n})();\n\nclass VisibilityModule {\r\n}\r\nVisibilityModule.ɵfac = function VisibilityModule_Factory(t) { return new (t || VisibilityModule)(); };\r\nVisibilityModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: VisibilityModule });\r\nVisibilityModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VisibilityModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        VisibilityComponent,\r\n                    ],\r\n                    exports: [\r\n                        VisibilityComponent,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(VisibilityModule, { declarations: [VisibilityComponent], exports: [VisibilityComponent] }); })();\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { ActionBarComponent, ActionBarModule, ActionComponent, ActionCoreComponent, ActionListComponent, ActionModule, AltComponent, AltModule, ArrayPipe, AutoCompleteEditorComponent, AutoCompleteEditorModule, AutoFocusDirective, BackdropComponent, BackdropDirective, BackdropModule, BackdropService, BlurDirective, BoolEditorComponent, BoolEditorModule, CaptionComponent, CaptionModule, CellEditorComponent, CellEditorModule, CellTooltipComponent, CellTooltipDirective, CellTooltipModule, ColumnChooserComponent, ColumnChooserModule, ColumnChooserTriggerComponent, ColumnChooserTriggerModule, ColumnFilterByComponent, ColumnFilterComponent, ColumnFilterItemDirective, ColumnFilterItemListDirective, ColumnFilterModule, ColumnFilterTriggerComponent, ColumnSortComponent, ColumnSortModule, CommandDirective, CommandModule, ConvertPipe, CurrencyPipe, DataManipulationComponent, DataManipulationModule, DataProviderComponent, DataProviderModule, DateDirective, DateMaskDirective, DateModule, DatePipe, DateService, EbClassDirective, EbExpressionComponent, EbModule, EbNodeComponent, EbNodeService, EditFormComponent, EditFormControlComponent, EditFormModule, EditFormTriggerComponent, ExportComponent, ExportModule, FileDirective, FileModule, FilterPipe, FocusAfterRender, FocusDirective, FocusModule, HighlightPipe, ImportComponent, ImportModule, ItemLabelPipe, LayoutModule, LegendComponent, LegendModule, LiveCellComponent, LiveCellModule, LiveColumnComponent, LiveColumnModule, LiveRowComponent, LiveRowModule, NumberPipe, PagerComponent, PagerModule, PagerTargetComponent, PaneComponent, PaneModule, PersistenceComponent, PersistenceModule, PersistencePanelComponent, PipeModule, PositionDirective, ProgressComponent, ProgressModule, QueryBuilderComponent, QueryBuilderModel, QueryBuilderModule, QueryBuilderPanelComponent, QueryBuilderPipe, QueryBuilderService, RaiseDirective, RaiseModule, ReferenceComponent, ReferenceEditorComponent, ReferenceEditorModule, RestComponent, RestModule, RuleComponent, SerializationService, StatusBarComponent, StatusBarModule, TabTrapComponent, TabTrapInDirective, TabTrapModule, TextPipe, TimeDirective, TimeModule, TimePipe, ValidationComponent, ValidationModule, ValidatorComponent, VisibilityComponent, VisibilityModule };\n//# sourceMappingURL=qgrid-ngx-plugins.mjs.map\n","map":{"version":3,"file":"qgrid-ngx-plugins.mjs","sources":["../../src/lib/action-bar/action-bar.component.ts","../../src/lib/action-bar/action-bar.component.html","../../src/lib/action-bar/action-list.component.ts","../../src/lib/action-bar/action-bar.module.ts","../../src/lib/action/action.component.ts","../../src/lib/action/action-core.component.ts","../../src/lib/action/action-core.component.html","../../src/lib/action/action.module.ts","../../src/lib/alt/alt.component.html","../../src/lib/alt/alt.component.ts","../../src/lib/alt/alt.module.ts","../../src/lib/pipes/array.pipe.ts","../../src/lib/autocomplete-editor/autocomplete-editor.component.ts","../../src/lib/autocomplete-editor/autocomplete-editor.component.html","../../src/lib/autocomplete-editor/autocomplete-editor.module.ts","../../src/lib/focus/autofocus.directive.ts","../../src/lib/backdrop/backdrop.service.ts","../../src/lib/backdrop/backdrop.component.ts","../../src/lib/backdrop/backdrop.component.html","../../src/lib/backdrop/backdrop.directive.ts","../../src/lib/backdrop/backdrop.module.ts","../../src/lib/focus/blur.directive.ts","../../src/lib/bool-editor/bool-editor.component.ts","../../src/lib/bool-editor/bool-editor.component.html","../../src/lib/bool-editor/bool-editor.module.ts","../../src/lib/caption/caption.component.ts","../../src/lib/caption/caption.component.html","../../src/lib/caption/caption.module.ts","../../src/lib/cell-editor/cell-editor.component.html","../../src/lib/cell-editor/cell-editor.component.ts","../../src/lib/cell-editor/cell-editor.module.ts","../../src/lib/cell-tooltip/cell-tooltip.directive.ts","../../src/lib/cell-tooltip/cell-tooltip.component.html","../../src/lib/cell-tooltip/cell-tooltip.component.ts","../../src/lib/cell-tooltip/cell-tooltip.module.ts","../../src/lib/focus/focus.service.ts","../../src/lib/colum-chooser/column-chooser.component.ts","../../src/lib/colum-chooser/column-chooser.component.html","../../src/lib/colum-chooser/column-chooser.module.ts","../../src/lib/column-chooser-trigger/column-chooser-trigger.component.ts","../../src/lib/column-chooser-trigger/column-chooser-trigger.component.html","../../src/lib/column-chooser-trigger/column-chooser-trigger.module.ts","../../src/lib/column-filter/column-filter-by.component.ts","../../src/lib/column-filter/column-filter-by.component.html","../../src/lib/column-filter/column-filter.component.ts","../../src/lib/column-filter/column-filter.component.html","../../src/lib/column-filter/column-filter-item-list.directive.ts","../../src/lib/column-filter/column-filter-item.directive.ts","../../src/lib/column-filter/column-filter-trigger.component.ts","../../src/lib/column-filter/column-filter-trigger.component.html","../../src/lib/column-filter/column-filter.module.ts","../../src/lib/column-sort/column-sort.component.html","../../src/lib/column-sort/column-sort.component.ts","../../src/lib/column-sort/column-sort.module.ts","../../src/lib/command/command.directive.ts","../../src/lib/command/command.module.ts","../../src/lib/pipes/convert.pipe.ts","../../src/lib/pipes/currency.pipe.ts","../../src/lib/data-manipulation/data-manipulation.component.ts","../../src/lib/data-manipulation/data-manipulation.module.ts","../../src/lib/data-provider/data-provider.component.ts","../../src/lib/data-provider/data-provider.module.ts","../../src/lib/date/date-mask.directive.ts","../../src/lib/date/date.service.ts","../../src/lib/date/date.directive.ts","../../src/lib/date/date.module.ts","../../src/lib/pipes/date.pipe.ts","../../src/lib/expression-builder/digest/evaluate.ts","../../src/lib/expression-builder/eb-node.service.ts","../../src/lib/expression-builder/eb-node.component.html","../../src/lib/expression-builder/eb-node.component.ts","../../src/lib/expression-builder/eb-class.directive.ts","../../src/lib/expression-builder/digest/watch.ts","../../src/lib/expression-builder/eb-expression.component.ts","../../src/lib/expression-builder/eb-expression.component.html","../../src/lib/expression-builder/model/node.ts","../../src/lib/expression-builder/utility.ts","../../src/lib/expression-builder/serialization.service.ts","../../src/lib/expression-builder/eb.module.ts","../../src/lib/edit-form/edit-form.component.ts","../../src/lib/edit-form/edit-form.component.html","../../src/lib/edit-form/edit-form-control.component.ts","../../src/lib/edit-form/edit-form-control.component.html","../../src/lib/edit-form/edit-form-trigger.component.ts","../../src/lib/edit-form/edit-form-trigger.component.html","../../src/lib/edit-form/edit-form.module.ts","../../src/lib/export/export.component.ts","../../src/lib/export/export.module.ts","../../src/lib/file/file.directive.ts","../../src/lib/file/file.module.ts","../../src/lib/pipes/filter.pipe.ts","../../src/lib/focus/focus.directive.ts","../../src/lib/focus/focus.module.ts","../../src/lib/pipes/highlight.pipe.ts","../../src/lib/import/import.component.ts","../../src/lib/import/import.module.ts","../../src/lib/pipes/item-label.pipe.ts","../../src/lib/layout/position.directive.ts","../../src/lib/layout/layout.module.ts","../../src/lib/legend/legend.component.ts","../../src/lib/legend/legend.component.html","../../src/lib/legend/legend.module.ts","../../src/lib/live-cell/live-cell.tpl.html","../../src/lib/live-cell/live-cell.component.ts","../../src/lib/pipes/time.pipe.ts","../../src/lib/pipes/number.pipe.ts","../../src/lib/pipes/text.pipe.ts","../../src/lib/pipes/pipe.module.ts","../../src/lib/live-cell/live-cell.module.ts","../../src/lib/live-column/live-column.component.ts","../../src/lib/live-column/live-column.module.ts","../../src/lib/live-row/live-row.component.ts","../../src/lib/live-row/live-row.module.ts","../../src/lib/pagination/pager.component.ts","../../src/lib/pagination/pager.component.html","../../src/lib/pagination/pager-target.component.ts","../../src/lib/pagination/pager-target.component.html","../../src/lib/pagination/pager.module.ts","../../src/lib/pane/pane.component.html","../../src/lib/pane/pane.component.ts","../../src/lib/pane/pane.module.ts","../../src/lib/persistence/persistence.component.ts","../../src/lib/persistence/persistence-panel.component.ts","../../src/lib/persistence/persistence-panel.component.html","../../src/lib/persistence/persistence.module.ts","../../src/lib/progress/progress.component.ts","../../src/lib/progress/progress.component.html","../../src/lib/progress/progress.module.ts","../../src/lib/query-builder/query-builder.component.ts","../../src/lib/query-builder/query-builder.component.html","../../src/lib/query-builder/query-builder.model.ts","../../src/lib/expression-builder/traverse.service.ts","../../src/lib/expression-builder/patch.ts","../../src/lib/expression-builder/model/expression.ts","../../src/lib/expression-builder/model/group.schema.ts","../../src/lib/expression-builder/model/line.ts","../../src/lib/expression-builder/model/node.schema.ts","../../src/lib/expression-builder/model/statement.ts","../../src/lib/expression-builder/model/expression.builder.ts","../../src/lib/query-builder/schema/operator.ts","../../src/lib/query-builder/query-builder.service.ts","../../src/lib/query-builder/schema/converter.ts","../../src/lib/query-builder/schema/suggest.service.ts","../../src/lib/query-builder/schema/validator.ts","../../src/lib/query-builder/schema/where.schema.ts","../../src/lib/query-builder/query-builder-panel.component.ts","../../src/lib/query-builder/query-builder-panel.component.html","../../src/lib/query-builder/query-builder.pipe.ts","../../src/lib/query-builder/query-builder.module.ts","../../src/lib/raise/raise.directive.ts","../../src/lib/raise/raise.module.ts","../../src/lib/reference-editor/reference.component.ts","../../src/lib/reference-editor/reference.component.html","../../src/lib/reference-editor/reference-editor.component.ts","../../src/lib/reference-editor/reference-editor.component.html","../../src/lib/reference-editor/reference-editor.module.ts","../../src/lib/rest/rest.component.ts","../../src/lib/rest/rest.module.ts","../../src/lib/validation/rule.component.html","../../src/lib/validation/rule.component.ts","../../src/lib/status-bar/status-bar.component.ts","../../src/lib/status-bar/status-bar.component.html","../../src/lib/status-bar/status-bar.module.ts","../../src/lib/tab-trap/tab-trap.component.html","../../src/lib/tab-trap/tab-trap.component.ts","../../src/lib/tab-trap/tab-trap-in.directive.ts","../../src/lib/tab-trap/tab-trap.module.ts","../../src/lib/time/time.directive.ts","../../src/lib/time/time.module.ts","../../src/lib/validation/validation.component.ts","../../src/lib/validation/validator.component.ts","../../src/lib/validation/validator.component.html","../../src/lib/validation/validation.module.ts","../../src/lib/visibility/visibility.component.ts","../../src/lib/visibility/visibility.module.ts","../../src/qgrid-ngx-plugins.ts"],"sourcesContent":["import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { Action } from '@qgrid/core';\nimport { GridPlugin } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-action-bar',\n  templateUrl: './action-bar.component.html',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ActionBarComponent implements OnInit {\n\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: ActionBarComponent } = {\n    $implicit: this,\n  };\n\n  get actions(): Action[] {\n    const { model } = this.plugin;\n    return model.action().items;\n  }\n\n  constructor(\n    private plugin: GridPlugin,\n    private cd: ChangeDetectorRef,\n  ) {\n  }\n\n  ngOnInit() {\n    const { model, observeReply } = this.plugin;\n\n    observeReply(model.actionChanged)\n      .subscribe(e => {\n        if (e.hasChanges('items')) {\n          const { items } = e.state;\n          const inRightOrder = this.checkOrder(items);\n\n          if (!inRightOrder) {\n            // todo: make it better\n            model.action({\n              items: items.sort((a: Action, b: Action) => a.command.priority - b.command.priority),\n            });\n          }\n\n          this.cd.markForCheck();\n          this.cd.detectChanges();\n        }\n      });\n  }\n\n  private checkOrder(actions: Action[]): boolean {\n    for (let i = 0; i < actions.length - 1; i++) {\n      const action = actions[i];\n      const nextAction = actions[i + 1];\n      if (action.command.priority > nextAction.command.priority) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n","<ng-container [key]=\"'plugin-action-bar.tpl.html'\"\n\t\t\t\t\t\t\t[context]=\"context\">\n</ng-container>\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'q-grid-actions',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ActionListComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { TemplateModule } from '@qgrid/ngx';\nimport { ActionBarComponent } from './action-bar.component';\nimport { ActionListComponent } from './action-list.component';\n\n@NgModule({\n  declarations: [\n    ActionBarComponent,\n    ActionListComponent,\n  ],\n  exports: [\n    ActionBarComponent,\n    ActionListComponent,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class ActionBarModule { }\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  Input,\n  OnInit,\n  TemplateRef,\n} from '@angular/core';\nimport { Action, Command, guid } from '@qgrid/core';\nimport { GridPlugin, TemplateHostService } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-action',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [GridPlugin, TemplateHostService],\n})\nexport class ActionComponent implements OnInit {\n  @ContentChild(TemplateRef, { static: true }) templateRef: TemplateRef<any>;\n\n  @Input() title: string;\n  @Input() icon: string;\n  @Input() command: Command;\n\n  constructor(\n    private plugin: GridPlugin,\n    private templateHost: TemplateHostService,\n  ) {\n    const id = guid();\n    templateHost.key = source => `action-${source}-${id}.tpl.html`;\n  }\n\n  ngOnInit() {\n    const { model, disposable } = this.plugin;\n    const action = new Action(\n      this.command || new Command(),\n      this.title,\n      this.icon,\n    );\n\n    if (this.templateRef) {\n      action.templateUrl = this.templateHost.key('trigger');\n    }\n\n    model.action({\n      items: model\n        .action()\n        .items\n        .concat([action]),\n    }, {\n      source: 'action.component',\n    });\n\n    disposable.add(() =>\n      model.action({\n        items: model\n          .action()\n          .items\n          .filter(x => x !== action),\n      }),\n    );\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { Action, Command } from '@qgrid/core';\nimport { GridError, GridModel, GridPlugin } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-action-core',\n  templateUrl: './action-core.component.html',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ActionCoreComponent {\n  @Input() action: Action;\n\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: ActionCoreComponent } = {\n    $implicit: this,\n  };\n\n  get model(): GridModel {\n    return this.plugin.model;\n  }\n\n  get command(): Command {\n    const { action } = this;\n    if (!action) {\n      throw new GridError(\n        'action-core.component',\n        'Action is not set',\n      );\n    }\n\n    return action.command;\n  }\n\n  get title() {\n    const { action } = this;\n    if (!action) {\n      throw new GridError(\n        'action-core.component',\n        'Action is not set',\n      );\n    }\n\n    return action.title;\n  }\n\n  get icon() {\n    const { action } = this;\n    if (!action) {\n      throw new GridError(\n        'action-core.component',\n        'Action is not set',\n      );\n    }\n\n    return action.icon;\n  }\n\n  get templateUrl() {\n    const { action } = this;\n    if (!action) {\n      throw new GridError(\n        'action-core.component',\n        'Action is not set',\n      );\n    }\n\n    return action.templateUrl;\n  }\n\n  get mode(): 'template' | 'icon' | 'text' | 'none' {\n    const { action } = this;\n    if (!action) {\n      throw new GridError(\n        'action-core.component',\n        'Action is not set',\n      );\n    }\n\n    if (action.templateUrl) {\n      return 'template';\n    }\n\n    if (action.icon) {\n      return 'icon';\n    }\n\n    if (action.title) {\n      return 'text';\n    }\n\n    return 'none';\n  }\n\n  constructor(\n    private plugin: GridPlugin,\n  ) {\n  }\n}\n","<ng-container key=\"plugin-action-core.tpl.html\"\n              [context]=\"context\">\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { ActionCoreComponent } from './action-core.component';\nimport { ActionComponent } from './action.component';\nimport { TemplateModule } from '@qgrid/ngx';\n\n@NgModule({\n  declarations: [\n    ActionComponent,\n    ActionCoreComponent,\n  ],\n  exports: [\n    ActionComponent,\n    ActionCoreComponent,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class ActionModule { }\n","<ng-template for=\"body-cell-row-number-the-$alt.number.tpl.html\"\n                        let-$cell>\n\t{{$cell.rowIndex}}\n</ng-template>\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ColumnModel } from '@qgrid/core';\nimport { GridPlugin } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-alt',\n  templateUrl: './alt.component.html',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AltComponent implements OnInit {\n  constructor(\n    private plugin: GridPlugin,\n  ) {\n  }\n\n  ngOnInit() {\n    const { model, observe, service } = this.plugin;\n\n    const altColumn: ColumnModel = {\n      key: '$alt.number',\n      type: 'row-number',\n      title: 'Alt',\n      canHighlight: false,\n      canMove: false,\n      canResize: false,\n    };\n\n    model\n      .pagination({\n        size: 10,\n      }, {\n        source: 'alt.component',\n      })\n      .data({\n        columns:\n          [altColumn]\n            .concat(model.data().columns),\n      }, {\n        source: 'alt.component',\n      });\n\n    observe(model.keyboardChanged)\n      .subscribe(e => {\n        const { codes, status } = e.state;\n        if (status === 'down') {\n          switch (codes[0]) {\n            case 'alt': {\n              const rowNo = Number.parseInt(codes[1], 10);\n              if (!Number.isNaN(rowNo)) {\n                const { rows } = model.view();\n                const { current, size } = model.pagination();\n\n                const rowIndex = rowNo + current * size;\n                const altRow = rows[rowIndex];\n                if (altRow) {\n                  model.selection({\n                    items: [altRow],\n                  }, {\n                    source: 'alt.component',\n                  });\n\n                  service.focus(rowIndex);\n                }\n              }\n              break;\n            }\n          }\n        }\n      });\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { TemplateModule } from '@qgrid/ngx';\nimport { AltComponent } from './alt.component';\n\n@NgModule({\n  declarations: [\n    AltComponent,\n  ],\n  exports: [\n    AltComponent,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class AltModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isArray, isUndefined, Log } from '@qgrid/core';\n\n@Pipe({\n  name: 'qGridArray',\n})\nexport class ArrayPipe implements PipeTransform {\n  transform(value: any) {\n    if (isArray(value)) {\n      return value;\n    }\n\n    Log.warn('ArrayPipe', `${value} is not of array type`);\n    return isUndefined(value) || value === null ? [] : [value];\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { isArray, predicateFactory } from '@qgrid/core';\nimport { GridPlugin } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-autocomplete-editor',\n  templateUrl: './autocomplete-editor.component.html',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AutoCompleteEditorComponent {\n  private get cell() {\n    return this.plugin.view.edit.cell;\n  }\n\n  options: any[] = [];\n\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: AutoCompleteEditorComponent } = {\n    $implicit: this,\n  };\n\n  get items() {\n    return (this.cell.fetch as any).result;\n  }\n\n  get title() {\n    return this.cell.column.title;\n  }\n\n  get value() {\n    return this.cell.value;\n  }\n\n  set value(value) {\n    this.cell.value = value;\n  }\n\n  constructor(\n    private plugin: GridPlugin,\n  ) {\n  }\n\n  filter(search: string) {\n    const test = predicateFactory(search);\n    const getLabel = this.itemLabelFactory(this.cell.column);\n    if (isArray(this.items)) {\n      this.options = this.items.filter(item => test(getLabel(item)));\n    }\n  }\n\n  reset() {\n    this.options = [];\n  }\n\n  itemLabelFactory(column) {\n    const { itemLabel } = column;\n    if (itemLabel) {\n      return item => itemLabel(item);\n    }\n\n    return item => item;\n  }\n}\n","<ng-container key=\"plugin-autocomplete-editor.tpl.html\"\n              [context]=\"context\">\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { TemplateModule } from '@qgrid/ngx';\nimport { AutoCompleteEditorComponent } from './autocomplete-editor.component';\n\n@NgModule({\n  declarations: [\n    AutoCompleteEditorComponent,\n  ],\n  exports: [\n    AutoCompleteEditorComponent,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class AutoCompleteEditorModule {\n}\n","import { AfterViewInit, Directive, Input } from '@angular/core';\nimport { GridPlugin } from '@qgrid/ngx';\nimport { AutofocusPlugin } from '@qgrid/plugins';\n\n@Directive({\n  selector: '[q-grid-autofocus]',\n  providers: [GridPlugin],\n})\nexport class AutoFocusDirective implements AfterViewInit {\n  @Input('q-grid-autofocus') enabled: boolean | string;\n\n  constructor(\n    private plugin: GridPlugin,\n  ) { }\n\n  ngAfterViewInit() {\n    if (this.enabled !== false) {\n      new AutofocusPlugin(this.plugin);\n    }\n  }\n}\n","import { ElementRef, Injectable } from '@angular/core';\nimport { Guard } from '@qgrid/core';\n\n@Injectable()\nexport class BackdropService {\n  isActive = true;\n  element: ElementRef;\n\n  hide() {\n    Guard.notNull(this.element, 'element');\n\n    if (this.isActive) {\n      this.element.nativeElement.classList.add('q-grid-backdrop-inactive');\n      this.isActive = false;\n    }\n  }\n\n  reveal() {\n    Guard.notNull(this.element, 'element');\n\n    if (!this.isActive) {\n      this.element.nativeElement.classList.remove('q-grid-backdrop-inactive');\n      this.isActive = true;\n    }\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { BackdropPlugin } from '@qgrid/plugins';\nimport { BackdropService } from './backdrop.service';\n\n@Component({\n  selector: 'q-grid-backdrop',\n  templateUrl: './backdrop.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BackdropComponent implements OnInit, OnDestroy {\n  @ViewChild(TemplateRef, { static: true }) template: TemplateRef<any>;\n  @Output('close') closeEvent = new EventEmitter<any>();\n  @Input() propagate = true;\n\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: BackdropComponent } = {\n    $implicit: this,\n  };\n\n  constructor(private backdropService: BackdropService, elementRef: ElementRef) {\n    backdropService.element = elementRef;\n  }\n\n  ngOnInit() {\n    const context = {\n      element: this.backdropService.element.nativeElement,\n      propagate: this.propagate,\n      onKeyDown: () => { },\n    };\n\n    const backdrop = new BackdropPlugin(context);\n    backdrop.closeEvent.on(() => this.closeEvent.emit());\n  }\n\n  ngOnDestroy() {\n    this.backdropService.element = null;\n  }\n}\n","<ng-container key=\"plugin-backdrop.tpl.html\" [context]=\"context\"></ng-container>\n","import { DOCUMENT } from '@angular/common';\nimport {\n  Directive,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  Output,\n} from '@angular/core';\n\n@Directive({\n  selector: '[q-grid-backdrop]',\n})\nexport class BackdropDirective {\n  private backdrop: HTMLElement;\n\n  @Output('q-grid-backdrop') close = new EventEmitter<any>();\n\n  @Input('q-grid-backdrop-selector') selector = '';\n\n  @Input('q-grid-backdrop-active') set backdropHost(value: any) {\n    if (!value) {\n      if (this.backdrop) {\n        this.backdrop.remove();\n        this.backdrop = null;\n      }\n\n      return;\n    }\n    this.backdrop = this.document.createElement('div');\n    this.backdrop.classList.add('q-grid-backdrop');\n    this.backdrop.style.zIndex = '1000';\n\n    this.zone.runOutsideAngular(() => {\n      this.backdrop.addEventListener('click', () => {\n        if (this.backdrop) {\n          this.backdrop.remove();\n          this.backdrop = null;\n          this.close.emit();\n        }\n      });\n    });\n\n    this.zone.runOutsideAngular(() => {\n      const element = <HTMLElement>document.querySelector(this.selector);\n\n      element.style.zIndex = '1001';\n      element.parentElement.appendChild(this.backdrop);\n    });\n  }\n\n  constructor(private zone: NgZone, @Inject(DOCUMENT) private document: any) {\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BackdropComponent } from './backdrop.component';\nimport { BackdropDirective } from './backdrop.directive';\nimport { BackdropService } from './backdrop.service';\nimport { TemplateModule } from '@qgrid/ngx';\n\n@NgModule({\n  declarations: [\n    BackdropComponent,\n    BackdropDirective,\n  ],\n  exports: [\n    BackdropComponent,\n    BackdropDirective,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n  providers: [\n    BackdropService,\n  ],\n})\nexport class BackdropModule {\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  Renderer2,\n} from '@angular/core';\nimport { noop } from '@qgrid/core';\n\n@Directive({\n  selector: '[q-grid-on-blur]',\n})\nexport class BlurDirective implements OnInit {\n  @Input('q-grid-on-blur') onBlur = noop;\n  @Input('q-grid-on-blur-selector') selector = 'input';\n\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) {\n  }\n\n  ngOnInit() {\n    const element = this.renderer.selectRootElement(this.selector);\n    this.renderer.listen(element, 'blur', this.onBlur);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { BoolColumnModel } from '@qgrid/core';\n\n@Component({\n  selector: 'q-grid-bool-editor',\n  templateUrl: './bool-editor.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BoolEditorComponent implements OnInit {\n  private state: any;\n\n  @Input() autofocus = false;\n  @Input() column: BoolColumnModel;\n  @Input() label: string;\n  @Output() valueChange = new EventEmitter<any>();\n\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: BoolEditorComponent } = {\n    $implicit: this,\n  };\n\n  @Input() get value() {\n    return this.state;\n  }\n\n  set value(value) {\n    if (value !== this.value) {\n      this.state = value;\n      this.valueChange.emit(value);\n    }\n  }\n\n  get isChecked() {\n    return this.column.isChecked(this.value);\n  }\n\n  set isChecked(value: boolean) {\n    this.value = value ? this.trueValue : this.falseValue;\n  }\n\n  get trueValue() {\n    return this.column.trueValue;\n  }\n\n  get falseValue() {\n    return this.column.falseValue;\n  }\n\n  ngOnInit() {\n    // entering edit mode means toggling boolean value\n    if (this.autofocus && this.column.editorOptions.trigger === 'click') {\n      setTimeout(\n        () =>\n          this.value =\n          this.value === this.trueValue\n            ? this.falseValue\n            : this.trueValue\n        , 10);\n    }\n  }\n\n  isIndeterminate() {\n    return this.column.isIndeterminate(this.value);\n  }\n}\n","<ng-container key=\"plugin-bool-editor.tpl.html\" [context]=\"context\"></ng-container>\n","import { NgModule } from '@angular/core';\nimport { BoolEditorComponent } from './bool-editor.component';\nimport { TemplateModule } from '@qgrid/ngx';\n\n@NgModule({\n  declarations: [\n    BoolEditorComponent,\n  ],\n  exports: [\n    BoolEditorComponent,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class BoolEditorModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { GridPlugin } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-caption',\n  templateUrl: './caption.component.html',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CaptionComponent implements OnInit {\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: CaptionComponent } = {\n    $implicit: this,\n  };\n\n  get value() {\n    const { caption, title } = this.plugin.model.grid();\n    return caption || title;\n  }\n\n  constructor(\n    private plugin: GridPlugin,\n    private cd: ChangeDetectorRef,\n  ) {\n  }\n\n  ngOnInit() {\n    const { model, observe } = this.plugin;\n    observe(model.gridChanged)\n      .subscribe(() => this.cd.detectChanges());\n  }\n}\n","<ng-container key=\"plugin-caption.tpl.html\" [context]=\"context\"></ng-container>\n","import { NgModule } from '@angular/core';\nimport { CaptionComponent } from './caption.component';\nimport { TemplateModule } from '@qgrid/ngx';\n\n@NgModule({\n  declarations: [\n    CaptionComponent,\n  ],\n  exports: [\n    CaptionComponent,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class CaptionModule {}\n","<ng-template>\n    <ng-content>\n    </ng-content>\n</ng-template>\n\n<ng-container key=\"plugin-cell-editor.tpl.html\"\n              [context]=\"context\">\n</ng-container>\n","import {\n  Component,\n  TemplateRef,\n  EventEmitter,\n  Output,\n  ViewChild,\n  ChangeDetectionStrategy,\n  OnInit,\n} from '@angular/core';\nimport { GridPlugin } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-cell-editor',\n  templateUrl: './cell-editor.component.html',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CellEditorComponent implements OnInit {\n  @ViewChild(TemplateRef, { static: true }) template: TemplateRef<any>;\n  @Output('close') closeEvent = new EventEmitter<any>();\n\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: CellEditorComponent } = {\n    $implicit: this,\n  };\n\n  constructor(private plugin: GridPlugin) {\n  }\n\n  ngOnInit() {\n    const { view, disposable } = this.plugin;\n    if (this.closeEvent.observers.length) {\n      view.edit.cell.requestClose = () => {\n        this.close();\n        return true;\n      };\n    }\n\n    disposable.add(() => view.edit.cell.requestClose = null);\n  }\n\n  close() {\n    this.closeEvent.emit();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CellEditorComponent } from './cell-editor.component';\nimport { TemplateModule } from '@qgrid/ngx';\n\n@NgModule({\n  declarations: [\n    CellEditorComponent,\n  ],\n  exports: [\n    CellEditorComponent,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class CellEditorModule {\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  Renderer2,\n  SimpleChanges,\n} from '@angular/core';\nimport { GRID_PREFIX, jobLine } from '@qgrid/core';\nimport { GridPlugin, TemplateHostService } from '@qgrid/ngx';\n\n@Directive({\n  selector: '[q-grid-tooltip]',\n  providers: [GridPlugin, TemplateHostService],\n})\n\nexport class CellTooltipDirective implements OnChanges {\n  private job: (job: () => void) => Promise<void>;\n\n  @Input() host: HTMLElement;\n  @Input() showDelay = 1000;\n\n  constructor(\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n  ) {\n    this.job = jobLine(this.showDelay);\n  }\n\n  ngOnChanges(e: SimpleChanges) {\n    if (e.showDelay) {\n      this.job = jobLine(this.showDelay);\n    }\n\n    if (e.host && this.host) {\n      const { top, left, height } = this.host.getBoundingClientRect();\n      const box = this.getBoxRect(this.host);\n      const host = this.elementRef.nativeElement;\n      this.job(() => {\n        this.renderer.setStyle(host, 'top', top - box.top + height + 'px');\n        this.renderer.setStyle(host, 'left', left - box.left + 'px');\n        this.renderer.removeClass(host, 'q-grid-hide');\n      });\n\n    }\n\n  }\n\n  // TODO: Extract to external function\n  private getBoxRect(element: HTMLElement) {\n    let view = element;\n    const marker = `${GRID_PREFIX}-box`;\n    while (view) {\n      if (view.classList && view.classList.contains(marker)) {\n        return view.getBoundingClientRect();\n      }\n\n      view = view.parentNode as HTMLElement;\n    }\n\n    return view.getBoundingClientRect();\n  }\n}\n","<q-grid-layer>\n\t<ng-template for=\"tooltip\">\n\t\t<div class=\"q-grid-cell-tooltip q-grid-hide\"\n\t\t\t*ngIf=\"cellElement\"\n\t\t\tq-grid-tooltip\n\t\t\t[showDelay]=\"showDelay\"\n\t\t\t[host]=\"cellElement\">\n\n\t\t\t<ng-container key=\"body-cell-tooltip.tpl.html\"\n\t\t\t\t\t\t\t[context]=\"context\">\n\t\t\t</ng-container>\n\t\t</div>\n\t</ng-template>\n</q-grid-layer>\n","import {\n  ApplicationRef,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { DomTd, GridPlugin, TemplateHostService } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-cell-tooltip',\n  templateUrl: './cell-tooltip.component.html',\n  providers: [GridPlugin, TemplateHostService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n\nexport class CellTooltipComponent implements OnInit {\n  @Input() showDelay: number;\n\n  context: { $implicit: DomTd } = {\n    $implicit: null,\n  };\n  cellElement: HTMLElement;\n\n  constructor(\n    private plugin: GridPlugin,\n    private cd: ChangeDetectorRef,\n    private appRef: ApplicationRef,\n  ) { }\n\n  ngOnInit() {\n    const { model, observe, table } = this.plugin;\n\n    observe(model.mouseChanged)\n      .subscribe(e => {\n        if (e.state.status !== 'move' && e.state.status !== 'leave') {\n          return;\n        }\n\n        if (e.state.target) {\n          const { rowIndex, columnIndex } = e.state.target;\n          const domCell = table.body.cell(rowIndex, columnIndex);\n\n          if (domCell.model()) {\n            this.context = {\n              $implicit: domCell.model(),\n            };\n            this.cellElement = domCell.element;\n            this.addTooltipLayer();\n          }\n\n        } else {\n          this.cellElement = null;\n        }\n        this.invalidate();\n      });\n  }\n\n  private addTooltipLayer(): void {\n    const tooltipLayer = 'tooltip';\n    const table = this.plugin.table;\n    if (table.view.hasLayer(tooltipLayer)) {\n      table.view.removeLayer(tooltipLayer);\n    }\n\n    table.view.addLayer(tooltipLayer);\n  }\n\n  private invalidate(): void {\n    // ToDo: Investigate how to improve.\n    this.cd.markForCheck();\n    this.cd.detectChanges();\n    this.appRef.tick();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CellTooltipComponent } from './cell-tooltip.component';\nimport { CellTooltipDirective } from './cell-tooltip.directive';\nimport { TemplateModule, LayerModule } from '@qgrid/ngx';\n\n@NgModule({\n  declarations: [\n    CellTooltipComponent,\n    CellTooltipDirective,\n  ],\n  exports: [\n    CellTooltipComponent,\n    CellTooltipDirective,\n  ],\n  imports: [\n    CommonModule,\n    TemplateModule,\n    LayerModule,\n  ],\n})\nexport class CellTooltipModule {}\n","import { Injectable, Optional } from '@angular/core';\nimport { FocusAfterRenderService } from '@qgrid/core';\nimport { GridPlugin } from '@qgrid/ngx';\n\n@Injectable()\nexport class FocusAfterRender {\n  constructor(\n\t\t@Optional() plugin: GridPlugin,\n  ) {\n    if (plugin) {\n      new FocusAfterRenderService(plugin);\n    }\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { Node, noop } from '@qgrid/core';\nimport { GridPlugin, StateAccessor } from '@qgrid/ngx';\nimport { ColumnChooserPlugin, ColumnChooserState } from '@qgrid/plugins';\nimport { FocusAfterRender } from '../focus/focus.service';\n\nconst COLUMN_CHOOSER_NAME = 'qGridColumnChooser';\n\nexport class RootContext {\n  get node(): Node {\n    return this.ctrl.treeView;\n  }\n\n  constructor(public ctrl: ColumnChooserPlugin) {\n  }\n}\n\n@Component({\n  selector: 'q-grid-column-chooser',\n  templateUrl: './column-chooser.component.html',\n  providers: [\n    FocusAfterRender,\n    GridPlugin,\n    StateAccessor,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ColumnChooserComponent implements OnInit, OnChanges {\n  private ccState = this.stateAccessor.setter(ColumnChooserState);\n\n  @Output('submit') submitEvent = new EventEmitter<any>();\n  @Output('cancel') cancelEvent = new EventEmitter<any>();\n\n  context: {\n    $implicit: ColumnChooserPlugin;\n    // eslint-disable-next-line no-use-before-define\n    plugin: ColumnChooserComponent;\n  };\n\n  @Input('canAggregate') set columnChooserCanAggregate(canAggregate: boolean) { this.ccState({ canAggregate }); }\n\n  constructor(\n    public focusAfterRender: FocusAfterRender,\n    private plugin: GridPlugin,\n    private zone: NgZone,\n    private cd: ChangeDetectorRef,\n    private stateAccessor: StateAccessor,\n  ) {\n  }\n\n  root() {\n    return { $implicit: new RootContext(this.context.$implicit) };\n  }\n\n  ngOnChanges() {\n    const { model } = this.plugin;\n    this.stateAccessor.write(model);\n  }\n\n  ngOnInit() {\n    const context = {\n      name: COLUMN_CHOOSER_NAME,\n    };\n\n    const columnChooser = new ColumnChooserPlugin(this.plugin, context);\n    columnChooser.submitEvent.on(() => this.submitEvent.emit());\n    columnChooser.cancelEvent.on(() => this.cancelEvent.emit());\n    columnChooser.dropEvent.on(() => {\n      this.cd.markForCheck();\n      this.zone.run(noop);\n    });\n\n    this.context = { $implicit: columnChooser, plugin: this };\n  }\n}\n","<ng-container key=\"column-chooser.tpl.html\" [context]=\"context\"></ng-container>\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { GridModelBuilder, TemplateModule } from '@qgrid/ngx';\nimport { ColumnChooserState } from '@qgrid/plugins';\nimport { ColumnChooserComponent } from './column-chooser.component';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    TemplateModule,\n  ],\n  exports: [\n    ColumnChooserComponent,\n  ],\n  declarations: [\n    ColumnChooserComponent,\n  ],\n})\nexport class ColumnChooserModule {\n  constructor(modelBuilder: GridModelBuilder) {\n    modelBuilder.register('columnChooser', ColumnChooserState);\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'q-grid-column-chooser-trigger',\n  templateUrl: './column-chooser-trigger.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ColumnChooserTriggerComponent { }\n","<ng-container key=\"plugin-column-chooser-trigger.tpl.html\"></ng-container>\n","import { NgModule } from '@angular/core';\nimport { ColumnChooserTriggerComponent } from './column-chooser-trigger.component';\nimport { TemplateModule } from '@qgrid/ngx';\n\n@NgModule({\n  imports: [\n    TemplateModule,\n  ],\n  exports: [\n    ColumnChooserTriggerComponent,\n  ],\n  declarations: [\n    ColumnChooserTriggerComponent,\n  ],\n})\nexport class ColumnChooserTriggerModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { ColumnModel } from '@qgrid/core';\n\n@Component({\n  selector: 'q-grid-column-filter-by',\n  templateUrl: './column-filter-by.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ColumnFilterByComponent {\n  @Input() column: ColumnModel;\n\n  @Input() by: Set<string>;\n  @Input() byBlanks: boolean;\n  @Output() byBlanksChange = new EventEmitter();\n\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: ColumnFilterByComponent } = {\n    $implicit: this,\n  };\n\n  get isBlanks() {\n    return this.byBlanks;\n  }\n\n  remove(item: string): void {\n    this.by.delete(item);\n  }\n\n  removeByBlanks() {\n    this.byBlanksChange.emit(false);\n  }\n}\n","<ng-container key=\"plugin-column-filter-by.tpl.html\"\n              [context]=\"context\">\n</ng-container>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  ColumnModel,\n  Fetch,\n  flatten,\n  getValue,\n  Guard,\n  uniq,\n} from '@qgrid/core';\nimport {\n  Grid,\n  GridError,\n  GridPlugin,\n  TemplateService,\n  VscrollContext,\n  VscrollService,\n} from '@qgrid/ngx';\nimport { ColumnFilterPlugin, ColumnFilterState } from '@qgrid/plugins';\nimport { FocusAfterRender } from '../focus/focus.service';\n\n@Component({\n  selector: 'q-grid-column-filter',\n  templateUrl: './column-filter.component.html',\n  providers: [FocusAfterRender, GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ColumnFilterComponent implements OnInit {\n  private vscrollContext: VscrollContext;\n\n  @Input() column: ColumnModel;\n  @Input() search = '';\n\n  @Output('submit') submitEvent = new EventEmitter<any>();\n  @Output('cancel') cancelEvent = new EventEmitter<any>();\n\n  context: {\n    $implicit: ColumnFilterPlugin;\n    // eslint-disable-next-line no-use-before-define\n    plugin: ColumnFilterComponent;\n    vscroll: VscrollContext;\n  };\n\n  get operators() {\n    const { model } = this.plugin;\n    return model\n      .filter()\n      .operatorFactory(this.column);\n  }\n\n  get hasOperators() {\n    return this.operators && this.operators.length > 1;\n  }\n\n  constructor(\n    public focusAfterRender: FocusAfterRender,\n    private plugin: GridPlugin,\n    private vscroll: VscrollService,\n    private qgrid: Grid,\n    private cd: ChangeDetectorRef,\n    private templateService: TemplateService,\n  ) {\n  }\n\n  ngOnInit() {\n    const { model } = this.plugin;\n    const { column } = this;\n\n    const context = { column };\n    const columnFilter = model.resolve(ColumnFilterState);\n    const columnFilterPlugin = new ColumnFilterPlugin(this.plugin, context);\n\n    columnFilterPlugin.submitEvent.on(() => this.submitEvent.emit());\n    columnFilterPlugin.cancelEvent.on(() => this.cancelEvent.emit());\n\n    const vscrollContext = this.vscroll.context({\n      emit: f => {\n        f();\n\n        this.cd.markForCheck();\n        this.cd.detectChanges();\n      },\n      threshold: columnFilter.state().threshold,\n      fetch: (skip, take, d) => {\n        const filterState = model.filter();\n        const service = this.qgrid.service(model);\n        // We need to close items property for correct reset behavior\n        const items = columnFilterPlugin.items;\n        if (column.key && filterState.fetch !== this.qgrid.noop) {\n          const cancelBusy = service.busy();\n          const select = filterState\n            .fetch(column.key, {\n              skip,\n              take,\n              value: columnFilterPlugin.getValue,\n              search: '' + this.search,\n\n              // @deprecated\n              filter: '' + this.search,\n            });\n\n          const fetch = new Fetch(select);\n          fetch.run();\n          fetch.busy\n            .then(page => {\n              items.push(...page);\n              d.resolve(items.length + (page.length === take ? take : 0));\n              cancelBusy();\n            })\n            .catch(cancelBusy);\n        } else {\n          const cancelBusy = service.busy();\n          const isBlank = model.filter().assertFactory().isNull;\n          try {\n            if (!items.length) {\n              const source = model[columnFilter.state().source];\n              Guard.notNull(source, 'source');\n\n              const sourceState = source();\n              Guard.hasProperty(sourceState, 'rows');\n\n              let values: any[];\n              if (columnFilterPlugin.column.type === 'array') {\n                values = flatten(sourceState.rows.map(row => getValue(row, column)));\n              } else {\n                values = sourceState.rows.map(columnFilterPlugin.getValue);\n              }\n\n              const uniqValues = uniq(values);\n              const notBlankValues = uniqValues.filter(x => !isBlank(x));\n\n              // TODO: improve search also\n              const search = ('' + this.search).toLowerCase();\n              const filteredItems = search\n                ? notBlankValues.filter(x => ('' + x).toLowerCase().indexOf(search) >= 0)\n                : notBlankValues;\n\n              filteredItems.sort(columnFilterPlugin.column.compare);\n              columnFilterPlugin.items = filteredItems;\n              columnFilterPlugin.hasBlanks =\n                notBlankValues.length !== uniqValues.length &&\n                (!search || 'blanks'.indexOf(search.toLowerCase()) >= 0);\n            }\n\n            d.resolve(columnFilterPlugin.items.length);\n          } finally {\n            cancelBusy();\n          }\n        }\n      },\n    });\n\n    this.vscrollContext = vscrollContext;\n\n    this.context = {\n      $implicit: columnFilterPlugin,\n      plugin: this,\n      vscroll: vscrollContext,\n    };\n  }\n\n  reset() {\n    this.context.$implicit.items = [];\n    this.vscrollContext.container.reset();\n  }\n\n  clear() {\n    this.search = '';\n    this.context.$implicit.reset.execute();\n  }\n\n  getOperatorTemplateKey(op: string) {\n    const keys = this.buildTemplateKeys(op);\n    for (const key of keys) {\n      if (this.templateService.find(key)) {\n        return key;\n      }\n    }\n\n    throw new GridError(\n      'column-filter.component',\n      `Column filter template for operator ${op} is not found`,\n    );\n  }\n\n  private buildTemplateKeys(op: string) {\n    const { key, type } = this.column;\n    const PREFIX = 'plugin-column-filter';\n\n    const keys = [\n      `${PREFIX}-${type}-the-${key}-${op}.tpl.html`,\n      `${PREFIX}-the-${key}-${op}.tpl.html`,\n      `${PREFIX}-the-${key}.tpl.html`,\n      `${PREFIX}-${type}-${op}.tpl.html`,\n      `${PREFIX}-${type}.tpl.html`,\n      `${PREFIX}-${op}.tpl.html`,\n    ];\n\n    switch (op) {\n      case 'isEmpty':\n      case 'isNotEmpty':\n      case 'isNull':\n      case 'isNotNull': {\n        keys.push(`${PREFIX}-${type}-the-${key}-label.tpl.html`);\n        keys.push(`${PREFIX}-${type}-label.tpl.html`);\n        keys.push(`${PREFIX}-label.tpl.html`);\n        break;\n      }\n      case 'like':\n      case 'notLike':\n      case 'startsWith':\n      case 'endsWith':\n      case 'lessThan':\n      case 'lessThanOrEquals':\n      case 'greaterThan':\n      case 'greaterThanOrEquals': {\n        keys.push(`${PREFIX}-${type}-the-${key}-input.tpl.html`);\n        keys.push(`${PREFIX}-${type}-input.tpl.html`);\n        keys.push(`${PREFIX}-input.tpl.html`);\n        break;\n      }\n    }\n\n    keys.push(`${PREFIX}-contains.tpl.html`);\n    return keys;\n  }\n}\n","<ng-container key=\"plugin-column-filter.tpl.html\"\n              [context]=\"context\">\n</ng-container>\n","import { Directive, Input } from '@angular/core';\nimport { ColumnModel } from '@qgrid/core';\nimport { CellTemplateService } from '@qgrid/ngx';\n\n@Directive({\n  selector: '[q-grid-column-filter-item-list]',\n  providers: [CellTemplateService],\n})\nexport class ColumnFilterItemListDirective {\n  @Input('q-grid-column-filter-item-list') column: ColumnModel;\n  @Input('q-grid-column-filter-search') search: string;\n\n  constructor(\n    public cellService: CellTemplateService,\n  ) {\n  }\n}\n","import { Directive, Input, OnInit, ViewContainerRef } from '@angular/core';\nimport { ColumnFilterItemListDirective } from './column-filter-item-list.directive';\n\n@Directive({\n  selector: '[q-grid-column-filter-item]',\n})\nexport class ColumnFilterItemDirective implements OnInit {\n  @Input('q-grid-column-filter-item') value: any;\n\n  $implicit = this;\n\n  constructor(\n    private viewContainerRef: ViewContainerRef,\n    private itemList: ColumnFilterItemListDirective,\n  ) {\n  }\n\n  ngOnInit() {\n    const itemList = this.itemList;\n    const link = itemList.cellService.build('column-filter', itemList.column);\n    link(this.viewContainerRef, this);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { ColumnModel, GRID_PREFIX } from '@qgrid/core';\nimport { GridPlugin } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-column-filter-trigger',\n  templateUrl: './column-filter-trigger.component.html',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ColumnFilterTriggerComponent implements OnInit {\n  @Input() column: ColumnModel;\n\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: ColumnFilterTriggerComponent } = {\n    $implicit: this,\n  };\n\n  constructor(\n    private plugin: GridPlugin,\n    private element: ElementRef,\n  ) {\n  }\n\n  ngOnInit() {\n    const { model, observeReply } = this.plugin;\n\n    observeReply(model.filterChanged)\n      .subscribe(e => {\n        if (e.hasChanges('by')) {\n          if (this.plugin.view.filter.has(this.column)) {\n            this.element.nativeElement.classList.add(`${GRID_PREFIX}-active`);\n          } else {\n            this.element.nativeElement.classList.remove(`${GRID_PREFIX}-active`);\n          }\n        }\n      });\n  }\n}\n","<ng-container key=\"plugin-column-filter-trigger.tpl.html\"\n              [context]=\"context\">\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { GridModelBuilder, TemplateModule } from '@qgrid/ngx';\nimport { ColumnFilterState } from '@qgrid/plugins';\nimport { ColumnFilterByComponent } from './column-filter-by.component';\nimport { ColumnFilterItemListDirective } from './column-filter-item-list.directive';\nimport { ColumnFilterItemDirective } from './column-filter-item.directive';\nimport { ColumnFilterTriggerComponent } from './column-filter-trigger.component';\nimport { ColumnFilterComponent } from './column-filter.component';\n\n@NgModule({\n  declarations: [\n    ColumnFilterComponent,\n    ColumnFilterTriggerComponent,\n    ColumnFilterByComponent,\n    ColumnFilterItemListDirective,\n    ColumnFilterItemDirective,\n  ],\n  exports: [\n    ColumnFilterComponent,\n    ColumnFilterTriggerComponent,\n    ColumnFilterByComponent,\n    ColumnFilterItemListDirective,\n    ColumnFilterItemDirective,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class ColumnFilterModule {\n  constructor(modelBuilder: GridModelBuilder) {\n    modelBuilder.register('columnFilter', ColumnFilterState);\n  }\n}\n","<ng-template>\n    <ng-content></ng-content>\n</ng-template>\n\n<ng-container key=\"plugin-column-sort.tpl.html\"\n              [context]=\"context\">\n</ng-container>\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  NgZone,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { ColumnModel, EventListener, EventManager } from '@qgrid/core';\nimport { GridPlugin } from '@qgrid/ngx';\nimport { ColumnSortPlugin } from '@qgrid/plugins';\nimport { FocusAfterRender } from '../focus/focus.service';\n\n@Component({\n  selector: 'q-grid-column-sort',\n  templateUrl: './column-sort.component.html',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ColumnSortComponent implements AfterViewInit {\n  @ViewChild(TemplateRef, { static: true }) template: TemplateRef<any>;\n  @Input() column: ColumnModel;\n\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: ColumnSortComponent } = {\n    $implicit: this,\n  };\n\n  constructor(\n    private plugin: GridPlugin,\n    private elementRef: ElementRef,\n    private zone: NgZone,\n  ) {\n  }\n\n  ngAfterViewInit() {\n    const { nativeElement } = this.elementRef;\n    const iconAsc = nativeElement.querySelector('.q-grid-asc');\n    const iconDesc = nativeElement.querySelector('.q-grid-desc');\n\n    const columnSort = new ColumnSortPlugin(this.plugin, {\n      element: nativeElement,\n      column: this.column,\n      iconAsc,\n      iconDesc,\n    });\n\n    const listener = new EventListener(nativeElement, new EventManager(this));\n    listener.on('click', () => {\n      if (columnSort.click()) {\n        new FocusAfterRender(this.plugin);\n      }\n    });\n\n    this.zone.runOutsideAngular(() =>\n      listener.on('mouseleave', () => columnSort.mouseLeave()),\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ColumnSortComponent } from './column-sort.component';\nimport { TemplateModule } from '@qgrid/ngx';\n\n@NgModule({\n  declarations: [\n    ColumnSortComponent,\n  ],\n  exports: [\n    ColumnSortComponent,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class ColumnSortModule {\n}\n","/* eslint-disable @angular-eslint/no-conflicting-lifecycle */\n\nimport {\n  AfterViewInit,\n  Directive,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { Command, CommandManager, Shortcut, ShortcutDispatcher } from '@qgrid/core';\nimport { Disposable, GridPlugin } from '@qgrid/ngx';\n\nexport class ZoneCommandManager {\n  constructor(\n    private run: <T>(f: () => T) => T,\n    private manager: CommandManager,\n    private commandArg: any,\n  ) {\n  }\n\n  invoke(commands: Command[]) {\n    return this.run(() =>\n      this.manager.invoke(commands, this.commandArg, 'command.directive'),\n    );\n  }\n\n  filter(commands) {\n    return this.manager.filter(commands);\n  }\n}\n\n@Directive({\n  selector: '[q-grid-command]',\n  providers: [Disposable],\n})\nexport class CommandDirective implements DoCheck, OnChanges, OnInit, AfterViewInit {\n  private isAfterViewInit = false;\n\n  @Input('q-grid-command') command: Command<any>;\n  @Input('q-grid-command-arg') commandArg: any;\n  @Input('q-grid-command-use-shortcut') useCommandShortcut: boolean;\n  @Input('q-grid-command-event') commandEvent = 'click';\n  @Input('q-grid-command-use-zone') useZone: boolean;\n  @Input('q-grid-command-host') host: 'grid' | 'document' = 'grid';\n  @Output('q-grid-command-execute') commandExecute = new EventEmitter<any>();\n\n  constructor(\n    private disposable: Disposable,\n    private elementRef: ElementRef,\n    private zone: NgZone,\n    @Optional() private plugin: GridPlugin,\n  ) {\n  }\n\n  ngOnInit() {\n    const { nativeElement } = this.elementRef;\n\n    this.aroundZone(() =>\n      nativeElement\n        .addEventListener(this.commandEvent, e => this.execute(e)),\n    );\n  }\n\n  ngDoCheck() {\n    if (!this.isAfterViewInit) {\n      return;\n    }\n\n    if (this.command) {\n      this.updateState();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.command) {\n      this.unregister();\n\n      if (this.command) {\n        this.register();\n      }\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.command) {\n      this.updateState();\n    }\n\n    this.isAfterViewInit = true;\n  }\n\n  private register() {\n    const { command, commandArg } = this;\n\n    this.disposable.add(\n      command\n        .canExecuteCheck\n        .subscribe(() => this.updateState()),\n    );\n\n    if (this.useCommandShortcut && command.shortcut) {\n      if (this.plugin && this.host === 'grid') {\n        const { model } = this.plugin;\n        const { shortcut, manager } = model.action();\n\n        const zoneManager = new ZoneCommandManager(\n          f => {\n            const result = this.aroundZone(f);\n            this.afterExecute();\n            return result;\n          },\n          manager,\n          commandArg,\n        );\n\n        this.disposable.add(\n          shortcut.register(zoneManager, [command]),\n        );\n      } else {\n        const manager = new CommandManager(f => {\n          this.aroundZone(f);\n          this.afterExecute();\n        }, commandArg);\n\n        const shortcut = new Shortcut(new ShortcutDispatcher());\n\n        const keyDown = e => {\n          shortcut.keyDown(e);\n        };\n\n        document.addEventListener('keydown', keyDown);\n\n        this.disposable.add(() =>\n          document.removeEventListener('keydown', keyDown),\n        );\n\n        this.disposable.add(\n          shortcut.register(manager, [command]),\n        );\n      }\n    }\n  }\n\n  private execute(e?: MouseEvent) {\n    const { command, commandArg } = this;\n    const result = command.execute(commandArg) === true;\n    if (result && e) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    this.afterExecute();\n  }\n\n  private afterExecute() {\n    const { commandArg } = this;\n    this.commandExecute.emit(commandArg);\n    this.command.canExecuteCheck.next();\n  }\n\n  private unregister() {\n    this.disposable.finalize();\n  }\n\n  private updateState() {\n    const nativeElement = this.elementRef.nativeElement as HTMLElement;\n    if (!nativeElement.setAttribute) {\n      return;\n    }\n\n    const { command, commandArg } = this;\n    const canExecute = command.canExecute(commandArg) === true;\n    if (canExecute) {\n      if (nativeElement.hasAttribute('disabled')) {\n        nativeElement.removeAttribute('disabled');\n        nativeElement.classList.remove('q-grid-disabled');\n      }\n    } else {\n      if (!nativeElement.hasAttribute('!disabled')) {\n        nativeElement.setAttribute('disabled', 'true');\n        nativeElement.classList.add('q-grid-disabled');\n      }\n    }\n  }\n\n  private aroundZone<T>(f: () => T): T {\n    if (this.useZone) {\n      return this.zone.run(f);\n    }\n\n    return this.zone.runOutsideAngular(f);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommandDirective } from './command.directive';\n\n@NgModule({\n  declarations: [\n    CommandDirective,\n  ],\n  exports: [\n    CommandDirective,\n  ],\n})\nexport class CommandModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { parseFactory } from '@qgrid/core';\n\n@Pipe({\n  name: 'qGridConvert',\n})\nexport class ConvertPipe implements PipeTransform {\n  constructor() { }\n\n  transform(value: any, type: string) {\n    const parse = parseFactory(type);\n    const result = parse(value);\n    return result === null ? value : result;\n  }\n}\n","import { CurrencyPipe as NgCurrencyPipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Log } from '@qgrid/core';\n\n@Pipe({\n  name: 'qGridCurrency',\n})\nexport class CurrencyPipe implements PipeTransform {\n  constructor(private pipe: NgCurrencyPipe) { }\n\n  transform(value: any, currencyCode?: string, display?: boolean, digitsInfo?: any, locale?: any) {\n    try {\n      return this.pipe.transform(value, currencyCode, display, digitsInfo, locale);\n    } catch (ex) {\n      Log.warn('DatePipe', ex.message);\n      return value;\n    }\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n} from '@angular/core';\nimport { GridPlugin, StateAccessor } from '@qgrid/ngx';\nimport { DataManipulationPlugin, DataManipulationState } from '@qgrid/plugins';\n\n@Component({\n  selector: 'q-grid-data-manipulation',\n  template: '',\n  providers: [GridPlugin, StateAccessor],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DataManipulationComponent implements OnInit, OnChanges {\n  private dmState = this.stateAccessor.setter(DataManipulationState);\n\n  context: {\n    $implicit: DataManipulationPlugin;\n  };\n\n  @Input('rowFactory') set dataManipulationRowFactory(rowFactory: (x: any) => any) { this.dmState({ rowFactory }); }\n\n  constructor(\n    private plugin: GridPlugin,\n    private stateAccessor: StateAccessor,\n  ) {\n  }\n\n  ngOnChanges() {\n    const { model } = this.plugin;\n    this.stateAccessor.write(model);\n  }\n\n  ngOnInit() {\n    const dm = new DataManipulationPlugin(this.plugin);\n    this.context = { $implicit: dm };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { GridModelBuilder } from '@qgrid/ngx';\nimport { DataManipulationState } from '@qgrid/plugins';\nimport { DataManipulationComponent } from './data-manipulation.component';\n\n@NgModule({\n  declarations: [\n    DataManipulationComponent,\n  ],\n  exports: [\n    DataManipulationComponent,\n  ],\n})\nexport class DataManipulationModule {\n  constructor(modelBuilder: GridModelBuilder) {\n    modelBuilder\n      .register('dataManipulation', DataManipulationState);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { PipeUnit } from '@qgrid/core';\nimport { GridModel, GridPlugin } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-data-provider',\n  template: '',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DataProviderComponent implements OnInit {\n  private next: ((rows: any[]) => void) | null;\n\n  @Output() requestRows = new EventEmitter<GridModel>();\n\n  @Input('rows') set rows(value: any[] | null) {\n    if (Array.isArray(value)) {\n      const next = this.next;\n      if (next) {\n        this.next = null;\n        next(value);\n      }\n    }\n  }\n\n  constructor(\n    private plugin: GridPlugin,\n    private zone: NgZone,\n  ) {\n  }\n\n  ngOnInit() {\n    this.plugin.model.data({\n      pipe: [\n        (data, context, next) =>\n          this.zone.run(() => {\n            this.next = next;\n            this.requestRows.emit(context.model);\n          }),\n        ...PipeUnit.view,\n      ],\n    }, { source: 'data.provider' });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { DataProviderComponent } from './data-provider.component';\n\n@NgModule({\n  declarations: [\n    DataProviderComponent,\n  ],\n  exports: [\n    DataProviderComponent,\n  ],\n})\nexport class DataProviderModule {\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\nimport { Keyboard } from '@qgrid/core';\n\nconst DELIMITER = '/';\n\n@Directive({\n  selector: '[q-grid-date-mask]',\n})\nexport class DateMaskDirective {\n  @Input('q-grid-date-mask') mask: string;\n\n  constructor(private elementRef: ElementRef) {\n  }\n\n  @HostListener('keypress', ['$event'])\n  keyUp(e: KeyboardEvent) {\n    if (!this.mask) {\n      return;\n    }\n\n    const input = this.elementRef.nativeElement as HTMLInputElement;\n    const value = input.value || '';\n    const maskChar = this.mask[value.length];\n    if (!maskChar) {\n      e.preventDefault();\n      return;\n    }\n\n    const code = Keyboard.translate(e.keyCode);\n    if (this.isDigit(code)) {\n      if (maskChar === DELIMITER) {\n        e.preventDefault();\n        input.value += DELIMITER + code;\n        return;\n      }\n\n      const nextMaskChar = this.mask[input.value.length + 1];\n      if (nextMaskChar === DELIMITER) {\n        e.preventDefault();\n        input.value += code + DELIMITER;\n      }\n    }\n  }\n\n  private isDigit(char: string) {\n    return /^[0-9]$/i.test(char);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { isDate, parseFactory } from '@qgrid/core';\n\n@Injectable()\nexport class DateService {\n  private toDateTime: (x: Date | string) => Date = parseFactory('datetime');\n\n  parseDateTime(dateOrText: Date | string, format: string): Date | null {\n    if (!dateOrText) {\n      return null;\n    }\n\n    if (isDate(dateOrText)) {\n      return dateOrText as Date;\n    }\n\n    if (format) {\n      const simpleFormat = format.replace(/[^A-Za-z]/g, '');\n      const justDigitsValue = (dateOrText as string).replace(/[^0-9]/g, '');\n      return this.parseDateText(justDigitsValue, simpleFormat);\n    }\n\n    return this.toDateTime(dateOrText);\n  }\n\n  isValid(dateOrText: Date | string, format: string) {\n    if (!dateOrText) {\n      return true;\n    }\n\n    const result = this.parseDateTime(dateOrText, format);\n    return result && !isNaN(result.getTime());\n  }\n\n  private parseDateText(text: string, format: string): Date | null {\n    let year = '';\n    let month = '';\n    let day = '';\n\n    let cursor = 0;\n    for (const formatKey of format) {\n      switch (formatKey) {\n        case 'y': {\n          const digit = text[cursor++];\n          if (digit) {\n            year += digit;\n          }\n          break;\n        }\n        case 'M': {\n          const digit = text[cursor++];\n          if (digit) {\n            month += digit;\n          }\n          break;\n        }\n        case 'd': {\n          const digit = text[cursor++];\n          if (digit) {\n            day += digit;\n          }\n          break;\n        }\n      }\n    }\n\n    if (year.length < 4 || month.length < 1 || day.length < 1) {\n      return null;\n    }\n\n    month = month.length === 1 ? '0' + month : month;\n    day = day.length === 1 ? '0' + day : day;\n\n    return this.toDateTime(`${year}-${month}-${day}`);\n  }\n}\n","import { Directive, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { parseFactory } from '@qgrid/core';\nimport { DateService } from './date.service';\n\n@Directive({\n  selector: '[q-grid-date]',\n})\nexport class DateDirective {\n  private toMidnight: (x: Date | string) => Date = parseFactory('date');\n\n  constructor(\n    templateRef: TemplateRef<any>,\n    viewContainerRef: ViewContainerRef,\n\t\tprivate dateService: DateService,\n  ) {\n    viewContainerRef.createEmbeddedView(templateRef, { $implicit: this });\n  }\n\n  isValid(dateOrText: Date | string, format: string) {\n    return this.dateService.isValid(dateOrText, format);\n  }\n\n  dateLow(value: Date | string, format: string) {\n    const date = this.dateService.parseDateTime(value, format);\n    if (date) {\n      return this.toMidnight(date);\n    }\n\n    return value;\n  }\n\n  datetime(previous: Date | string, current: Date | string, format: string) {\n    const previousDate = this.dateService.parseDateTime(previous, format);\n    const currentDate = this.dateService.parseDateTime(current, format);\n    if (previousDate && currentDate) {\n      const midnight = this.toMidnight(currentDate);\n      const sameHours = new Date(\n        midnight.getFullYear(),\n        midnight.getMonth(),\n        midnight.getDate(),\n        previousDate.getHours(),\n        previousDate.getMinutes(),\n        previousDate.getSeconds(),\n        previousDate.getMilliseconds(),\n      );\n\n      return sameHours;\n    }\n\n    if (currentDate) {\n      return this.toMidnight(currentDate);\n    }\n\n    return current;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { DateMaskDirective } from './date-mask.directive';\nimport { DateDirective } from './date.directive';\nimport { DateService } from './date.service';\n\n@NgModule({\n  declarations: [\n    DateDirective,\n    DateMaskDirective,\n  ],\n  exports: [\n    DateDirective,\n    DateMaskDirective,\n  ],\n  providers: [\n    DateService,\n  ],\n})\nexport class DateModule {\n}\n","import { DatePipe as NgDatePipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Log } from '@qgrid/core';\n\n@Pipe({\n  name: 'qGridDate',\n})\nexport class DatePipe implements PipeTransform {\n  constructor(private pipe: NgDatePipe) { }\n\n  transform(value: any, format?: any, timezone?: any, locale?: any) {\n    try {\n      // The value expression: a Date object, a number (milliseconds since UTC epoch), or an ISO string\n      return this.pipe.transform(value, format, timezone, locale);\n    } catch (ex) {\n      Log.warn('DatePipe', ex.message);\n      return value;\n    }\n  }\n}\n","import { isArray, isFunction, isObject } from '@qgrid/core';\n\nexport function evaluateFactory(expression, args) {\n  return visit;\n\n  function visit(value) {\n    if (isArray(value)) {\n      return visitArray(value);\n    } else if (isFunction(value)) {\n      return visitFunction(value);\n    } else if (isObject(value)) {\n      return visitObject(value);\n    }\n\n    return value;\n  }\n\n  function visitObject(inst) {\n    const keys = Object.keys(inst);\n    const length = keys.length;\n    const result = {};\n    for (let i = 0; i < length; i++) {\n      const key = keys[i];\n      result[key] = visit(inst[key]);\n    }\n\n    return result;\n  }\n\n  function visitArray(list) {\n    const result = [];\n    for (let i = 0, length = list.length; i < length; i++) {\n      result[i] = visit(list[i]);\n    }\n    return result;\n  }\n\n  function visitFunction(delegate) {\n    return delegate.apply(expression, args);\n  }\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { Node } from './model/node';\n\nexport interface EbNodeServiceEventArg<T> {\n\tnewValue: T;\n\toldValue: T;\n}\n\n@Injectable()\nexport class EbNodeService {\n  private node: Node = null;\n\n  currentChange = new EventEmitter<EbNodeServiceEventArg<Node>>();\n\n  get current() {\n    return this.node;\n  }\n\n  set current(value) {\n    const oldNode = this.node;\n    if (value !== oldNode) {\n      this.node = value;\n      this.currentChange.emit({\n        oldValue: oldNode,\n        newValue: value,\n      });\n    }\n  }\n}\n","<ul class=\"q-grid-eb-node\"\n\t[q-grid-eb-class]=\"model.attr('class')\"\n\t[ngClass]=\"{'q-grid-eb-active': service.current === model}\"\n\t(click)=\"select($event)\">\n\t<li class=\"q-grid-eb-line\">\n\t\t<ul>\n\t\t\t<li *ngFor=\"let expr of model.line.expressions\"\n\t\t\t\t\tclass=\"q-grid-eb-expression\">\n\t\t\t\t<q-grid-eb-expression [model]=\"expr\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[node]=\"model\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[line]=\"model.line\">\n\t\t\t\t</q-grid-eb-expression>\n\t\t\t</li>\n\t\t</ul>\n\t</li>\n\n\t<li class=\"q-grid-eb-children\">\n\t\t<ul>\n\t\t\t<li *ngFor=\"let child of model.children\"\n\t\t\t\t\tclass=\"q-grid-eb-child\">\n\t\t\t\t<q-grid-eb-node [model]=\"child\">\n\t\t\t\t</q-grid-eb-node>\n\t\t\t</li>\n\t\t</ul>\n\t</li>\n</ul>\n\n<ng-template key=\"eb-group.tpl.html\"\n\t\t\tlet-$group\n\t\t\tlet-$node=\"node\"\n\t\t\tlet-$line=\"line\">\n\t<ul class=\"q-grid-eb-group\">\n\t\t<li *ngFor=\"let expr of $group.expressions\"\n\t\t\t\tclass=\"q-grid-eb-expression\">\n\t\t\t<q-grid-eb-expression [model]=\"expr\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[node]=\"$node\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[line]=\"$line\">\n\t\t\t</q-grid-eb-expression>\n\t\t</li>\n\t</ul>\n</ng-template>\n","import { Component, Input } from '@angular/core';\nimport { EbNodeService } from './eb-node.service';\nimport { Node } from './model/node';\n\n@Component({\n  selector: 'q-grid-eb-node',\n  templateUrl: './eb-node.component.html',\n})\nexport class EbNodeComponent {\n  @Input() model: Node;\n\n  constructor(public service: EbNodeService) {\n  }\n\n  select(e) {\n    e.stopPropagation();\n\n    if (this.model.parent) {\n      this.service.current = this.model;\n    }\n  }\n}\n","import {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Input,\n  OnInit,\n  Optional,\n} from '@angular/core';\nimport { isArray } from '@qgrid/core';\nimport { evaluateFactory } from './digest/evaluate';\nimport { EbNodeComponent } from './eb-node.component';\n\n@Directive({\n  selector: '[q-grid-eb-class]',\n})\nexport class EbClassDirective implements OnInit, DoCheck {\n  private evaluate: (value: any) => any;\n  private oldClassList: Array<string> = [];\n\n  @Input('q-grid-eb-class') klass: any;\n  @Input('q-grid-eb-class-model') model: any;\n\n  constructor(private elementRef: ElementRef, @Optional() private node: EbNodeComponent) {\n  }\n\n  ngOnInit() {\n    this.evaluate = evaluateFactory(this.model, [this.node ? this.node.model : null]);\n  }\n\n  ngDoCheck() {\n    const result = this.evaluate(this.klass);\n    if (result) {\n      const classList = this.fetchClasses(result);\n      if (this.oldClassList.length !== classList.length\n        || this.oldClassList.join(' ') !== classList.join(' ')) {\n\n        const element = this.elementRef.nativeElement as HTMLElement;\n        element.classList.remove(...this.oldClassList);\n        element.classList.add(...classList);\n        this.oldClassList = classList;\n      }\n    } else if (this.oldClassList.length) {\n      const element = this.elementRef.nativeElement as HTMLElement;\n      element.classList.remove(...this.oldClassList);\n      this.oldClassList = [];\n    }\n  }\n\n  private fetchClasses(meta) {\n    if (isArray(meta)) {\n      return meta;\n    }\n\n    const keys = Object.keys(meta);\n    const classList = [];\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      if (meta[key]) {\n        classList.push(key);\n      }\n    }\n\n    return classList;\n  }\n}\n","import { evaluateFactory } from './evaluate';\n\nexport class Watcher {\n  private evaluate: (x: any) => any;\n  private oldValue: any;\n  private isFirstRun = true;\n\n  constructor(\n\t\tprivate expression: any,\n\t\tprivate key: string,\n\t\tprivate handler: (context: any, e: any) => void,\n\t\tprivate args = []) {\n\n    this.evaluate = evaluateFactory(expression, args);\n    this.oldValue = this.evaluate(expression[key]);\n  }\n\n  detect() {\n    const inst = this.expression[this.key];\n    const newValue = this.evaluate(inst);\n    if (this.isFirstRun || this.oldValue !== newValue) {\n      this.isFirstRun = false;\n\n      this.handler.apply(this.expression, [newValue, this.oldValue].concat(this.args));\n      this.oldValue = newValue;\n    }\n  }\n}\n","import { Component, DoCheck, Input, OnInit } from '@angular/core';\nimport { Watcher } from './digest/watch';\nimport { Line } from './model/line';\nimport { Node } from './model/node';\n\n@Component({\n  selector: 'q-grid-eb-expression',\n  templateUrl: './eb-expression.component.html',\n})\nexport class EbExpressionComponent implements OnInit, DoCheck {\n  private watchers: Watcher[];\n\n  @Input() node: Node;\n  @Input() line: Line;\n  @Input() model: any;\n\n  context: { $implicit: any; node: Node; line: Line };\n\n  ngOnInit() {\n    this.context = { $implicit: this.model, node: this.node, line: this.line };\n\n    const $watch = this.model.$watch;\n    if ($watch) {\n      this.watchers =\n        Object\n          .keys($watch)\n          .map(key =>\n            new Watcher(\n              this.model,\n              key,\n              $watch[key],\n              [this.node, this.line]),\n          );\n    }\n  }\n\n  ngDoCheck() {\n    const ws = this.watchers;\n    if (!ws) {\n      return;\n    }\n\n    for (let i = 0, length = ws.length; i < length; i++) {\n      ws[i].detect();\n    }\n  }\n}\n","<ng-container [key]=\"model.templateUrl\" [context]=\"context\">\n</ng-container>\n","import { GridError } from '@qgrid/ngx';\nimport { Line } from './line';\n\nexport class Node {\n  readonly attributes: { [key: string]: any } = {};\n  // eslint-disable-next-line no-use-before-define\n  children: Node[] = [];\n  level: number;\n  line: Line;\n\n  constructor(public id: string, public schema, public parent?: Node) {\n    this.level = parent ? parent.level + 1 : 0;\n  }\n\n  attr(key: string, value?) {\n    if (arguments.length === 2) {\n      this.attributes[key] = value;\n    } else {\n      return this.attributes[key];\n    }\n  }\n\n  classes() {\n  }\n\n  addChildAfter(child: Node, after?: Node) {\n    const index = after ? this.children.indexOf(after) : this.children.length - 1;\n\n    this.children.splice(index + 1, 0, child);\n    child.parent = this;\n    child.level = this.level + 1;\n  }\n\n  addChildBefore(child: Node, before: Node) {\n    const index = before ? this.children.indexOf(before) : 0;\n\n    this.children.splice(index, 0, child);\n    child.parent = this;\n    child.level = this.level + 1;\n  }\n\n  addAfter(child: Node) {\n    if (!this.parent) {\n      throw new GridError('node', 'Can\\'t add after root');\n    }\n    this.parent.addChildAfter(child, this);\n  }\n\n  addBefore(child: Node) {\n    if (!this.parent) {\n      throw new GridError('node', 'Can\\'t add after root');\n    }\n    this.parent.addChildBefore(child, this);\n  }\n\n  clone() {\n    return this.schema.apply(new Node(this.id, this.schema));\n  }\n\n  remove() {\n    if (!this.parent) {\n      throw new GridError('node', 'Root element can\\'t be removed');\n    }\n\n    const index = this.parent.children.indexOf(this);\n    this.parent.children.splice(index, 1);\n  }\n\n  clear() {\n    this.children.forEach(child => child.parent = null);\n    this.children = [];\n  }\n\n  toString(indent = 0) {\n    return Array(indent).join('-') + ' ' + this.level + '\\n' +\n      this.children\n        .map(child => child.toString(indent + 1))\n        .join('\\n');\n  }\n\n  toTraceString() {\n    if (this.parent) {\n      let parent = this.parent;\n      while (null !== parent.parent) {\n        parent = parent.parent;\n      }\n\n      return parent.toString();\n    }\n\n    return this.toString();\n  }\n}\n","import { clone } from '@qgrid/core';\n\nexport function indexOf(array, predicate) {\n  for (let i = 0, length = array.length; i < length; i++) {\n    if (predicate(array[i], i)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nexport function defaults<T>(...args: any[]): T {\n  const dst = args[0];\n  const result = clone(dst) as T;\n\n  for (let i = 1, sourcesLength = args.length; i < sourcesLength; i++) {\n    const source = args[i];\n\n    if (!source) {\n      continue;\n    }\n\n    const keys = Object.keys(source);\n\n    for (let k = 0, keysLength = keys.length; k < keysLength; k++) {\n      const key = keys[k];\n      if (!Object.prototype.hasOwnProperty.call(result, key)) {\n        result[key] = source[key];\n      }\n    }\n  }\n\n  return result;\n}\n\nexport function override(dst, src) {\n  const keys = Object.keys(src);\n  const length = keys.length;\n\n  for (let i = 0; i < length; i++) {\n    const key = keys[i];\n    dst[key] = src[key];\n  }\n\n  return dst;\n}\n","/* eslint-disable no-use-before-define */\nimport { Injectable } from '@angular/core';\nimport { GroupExpression } from './model/expression';\nimport { Line } from './model/line';\nimport { Node } from './model/node';\nimport { INodeSchema } from './model/node.schema';\nimport { indexOf, override } from './utility';\n\nclass Serializer {\n  constructor(private node: Node) {\n  }\n\n  serialize(): ISerializationNode {\n    const groups = this.node.line.expressions.map(expr => this.serializeGroup(expr));\n\n    return {\n      id: this.node.id,\n      attributes: this.serializeAttributes(this.node),\n      children: this.node.children.map(child => new Serializer(child).serialize()),\n      line: groups.filter(group => group.expressions.length),\n    };\n  }\n\n  serializeGroup(group): ISerializationGroup {\n    return {\n      id: group.id,\n      expressions: group.expressions\n        .filter(expr => this.canSerialize(expr))\n        .map(expr => this.serializeExpression(expr)),\n    };\n  }\n\n  serializeExpression(expression): ISerializationExpression {\n    const result = {} as ISerializationExpression;\n\n    const serializeAttr = this.node.attr('serialize');\n    const serializableProps = serializeAttr[expression.id];\n    for (let i = 0, length = serializableProps.length; i < length; i++) {\n      const prop = serializableProps[i];\n      result[prop] = expression[prop];\n    }\n\n    result.id = expression.id;\n    result.type = expression.type;\n    result.method = expression.method;\n\n    return result;\n  }\n\n  serializeAttributes(node: Node) {\n    const serializeAttr = node.attr('serialize');\n    if (serializeAttr && serializeAttr['@attr']) {\n      const props = serializeAttr['@attr'];\n      return props.reduce((memo, attr) => {\n        memo[attr] = node.attr(attr);\n        return memo;\n      }, {});\n    }\n    return {};\n  }\n\n  canSerialize(expression) {\n    const serializeAttr = this.node.attr('serialize');\n    if (!serializeAttr) {\n      return false;\n    }\n\n    const props = serializeAttr[expression.id];\n    return !!(props && props.length);\n  }\n}\n\nclass Deserializer {\n  constructor(private schema: INodeSchema) {\n  }\n\n  deserialize(data: ISerializationNode, parent: Node = null, nodeMap?: { [key: string]: Node }) {\n    nodeMap = nodeMap || {};\n\n    let node: Node;\n    if (!parent) {\n      node = new Node(data.id, this.schema);\n      this.schema.apply(node);\n      traverse(node, nodeMap);\n      node.clear();\n    } else {\n      node = nodeMap[data.id].clone();\n      parent.addChildAfter(node);\n      traverse(parent, nodeMap);\n      node.clear();\n    }\n\n    override(node.attributes, data.attributes);\n\n    this.deserializeLine(node, node.line, data.line);\n\n    const children = data.children;\n    const length = children.length;\n    for (let i = 0; i < length; i++) {\n      const child = children[i];\n      const childSchema = this.schema.schemaMap[child.id];\n      new Deserializer(childSchema).deserialize(child, node, nodeMap);\n    }\n\n    return node;\n  }\n\n  private deserializeLine(node: Node, line: Line, dataGroups: ISerializationGroup[]) {\n    for (let i = 0, length = dataGroups.length; i < length; i++) {\n      const dataGroup = dataGroups[i];\n      const exprGroup = line.get(dataGroup.id) as GroupExpression;\n      this.deserializeGroup(node, line, exprGroup, dataGroup);\n    }\n  }\n\n  private deserializeGroup(node: Node, line: Line, group: GroupExpression, dataGroup: ISerializationGroup) {\n    const dataExpressions = dataGroup.expressions;\n    const length = dataExpressions.length;\n\n    let index;\n    for (let i = 0; i < length; i++) {\n      const dataExp = dataExpressions[i];\n      index = indexOf(group.expressions, expr => expr.id === dataExp.id);\n      override(group.expressions[index], dataExp);\n    }\n\n    for (let i = 0; i < length; i++) {\n      const dataExpr = dataExpressions[i];\n      if (dataExpr.method) {\n        dataExpr.method.forEach(m => {\n          group.expressions[index][m](node, line);\n          group.expressions[index].method = dataExpressions[i].method;\n        });\n      }\n    }\n  }\n}\n\nfunction traverse(node: Node, map: { [key: string]: Node }) {\n  if (!Object.prototype.hasOwnProperty.call(map, node.id)) {\n    map[node.id] = node;\n  }\n\n  for (let i = 0, length = node.children.length; i < length; i++) {\n    const child = node.children[0];\n    traverse(child, map);\n  }\n}\n\nexport declare interface ISerializationNode {\n  id: string;\n  attributes: any;\n  children: ISerializationNode[];\n  line: ISerializationGroup[];\n}\n\nexport declare interface ISerializationGroup {\n  id: string;\n  expressions: ISerializationExpression[];\n}\n\nexport declare interface ISerializationExpression {\n  id: string;\n  type: string;\n  method: Array<string>;\n}\n\n@Injectable()\nexport class SerializationService {\n  serialize(node: Node): ISerializationNode {\n    return new Serializer(node).serialize();\n  }\n\n  deserialize(schema: INodeSchema, data: ISerializationNode): Node {\n    return new Deserializer(schema).deserialize(data);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SerializationService } from './serialization.service';\nimport { EbNodeComponent } from './eb-node.component';\nimport { EbExpressionComponent } from './eb-expression.component';\nimport { EbClassDirective } from './eb-class.directive';\nimport { EbNodeService } from './eb-node.service';\nimport { TemplateModule } from '@qgrid/ngx';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TemplateModule,\n  ],\n  exports: [\n    EbNodeComponent,\n    EbClassDirective,\n  ],\n  declarations: [\n    EbNodeComponent,\n    EbExpressionComponent,\n    EbClassDirective,\n  ],\n  providers: [\n    SerializationService,\n    EbNodeService,\n  ],\n})\nexport class EbModule {\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { GridPlugin } from '@qgrid/ngx';\nimport { EditFormPanelPlugin } from '@qgrid/plugins';\n\n@Component({\n  selector: 'q-grid-edit-form',\n  templateUrl: './edit-form.component.html',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EditFormComponent implements OnInit {\n  @Input() caption: string;\n  @Input() row: any;\n\n  @Output() cancel = new EventEmitter();\n  @Output() reset = new EventEmitter();\n  @Output() submit = new EventEmitter();\n\n  context: { $implicit: EditFormPanelPlugin };\n\n  constructor(\n    private plugin: GridPlugin,\n  ) {\n  }\n\n  ngOnInit() {\n    const context = {\n      row: this.row,\n      caption: this.caption,\n    };\n\n    const editFormPanel = new EditFormPanelPlugin(this.plugin, context);\n    const { service } = this.plugin;\n\n    editFormPanel.cancelEvent.on(() => this.cancel.emit());\n    editFormPanel.resetEvent.on(() => this.reset.emit());\n    editFormPanel.submitEvent.on(() => {\n      this.submit.emit();\n\n      service.invalidate({\n        source: 'edit-form.component',\n        why: 'refresh',\n      });\n    });\n\n    this.context = { $implicit: editFormPanel };\n  }\n}\n","<ng-container key=\"plugin-edit-form.tpl.html\"\n              [context]=\"context\">\n</ng-container>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { CellEditor } from '@qgrid/core';\n\n@Component({\n  selector: 'q-grid-edit-form-control',\n  templateUrl: './edit-form-control.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EditFormControlComponent {\n  @Input() editor: CellEditor;\n\n  get key() {\n    if (this.editor) {\n      const { column } = this.editor.cell;\n      const type = column.editor || column.type;\n      return `edit-form-${type}.tpl.html`;\n    }\n\n    return 'edit-form-text.tpl.html';\n  }\n}\n","<ng-container key=\"{{key}}\"\n              [context]=\"{$implicit: editor}\">\n</ng-container>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'q-grid-edit-form-trigger',\n  templateUrl: './edit-form-trigger.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EditFormTriggerComponent {\n  @Input() caption: string;\n  @Input() row: any;\n\n  context: any = {\n    $implicit: this,\n  };\n}\n","<ng-container key=\"plugin-edit-form-trigger.tpl.html\"\n              [context]=\"context\">\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EditFormTriggerComponent } from './edit-form-trigger.component';\nimport { EditFormComponent } from './edit-form.component';\nimport { EditFormControlComponent } from './edit-form-control.component';\nimport { TemplateModule } from '@qgrid/ngx';\n\n@NgModule({\n  declarations: [\n    EditFormTriggerComponent,\n    EditFormComponent,\n    EditFormControlComponent,\n  ],\n  exports: [\n    EditFormTriggerComponent,\n    EditFormComponent,\n    EditFormControlComponent,\n  ],\n  imports: [\n    CommonModule,\n    TemplateModule,\n  ],\n})\nexport class EditFormModule { }\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  Input,\n  TemplateRef,\n} from '@angular/core';\nimport { Action, Command, Composite } from '@qgrid/core';\nimport { GridPlugin, TemplateHostService } from '@qgrid/ngx';\nimport { ExportPlugin } from '@qgrid/plugins';\n\n@Component({\n  selector: 'q-grid-export',\n  templateUrl: './export.component.html',\n  providers: [TemplateHostService, GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ExportComponent implements AfterViewInit {\n  @Input() type: string;\n  @ContentChild(TemplateRef) templateRef: TemplateRef<any>;\n\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: ExportComponent } = {\n    $implicit: this,\n  };\n\n  constructor(\n    private plugin: GridPlugin,\n    private templateHost: TemplateHostService,\n  ) {\n    this.templateHost.key = () => `export-${this.type}`;\n  }\n\n  ngAfterViewInit() {\n    const { model, disposable } = this.plugin;\n    const exportPlugin = new ExportPlugin(model, this.type);\n    const action = new Action(\n      new Command({\n        execute: () => exportPlugin[this.type].execute(),\n      }),\n      `Export to ${this.type}`,\n      'file_download',\n    );\n\n    if (this.templateRef) {\n      action.templateUrl = this.templateHost.key('trigger');\n    }\n\n    const items = Composite.list([model.action().items, [action]]);\n    model.action({\n      items,\n    }, {\n      source: 'export.component',\n    });\n\n    disposable.add(() => {\n      model.action({\n        items: model\n          .action()\n          .items\n          .filter(x => x !== action),\n      }, {\n        source: 'export.component',\n      });\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ExportComponent } from './export.component';\nimport { TemplateModule } from '@qgrid/ngx';\n\n@NgModule({\n  declarations: [\n    ExportComponent,\n  ],\n  exports: [\n    ExportComponent,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class ExportModule {\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Optional,\n  Output,\n} from '@angular/core';\nimport { EventListener, EventManager, yes } from '@qgrid/core';\nimport { Disposable } from '@qgrid/ngx';\nimport { BackdropService } from '../backdrop/backdrop.service';\n\n@Directive({\n  selector: '[q-grid-file]',\n  providers: [Disposable],\n})\nexport class FileDirective {\n  private reader = new FileReader();\n  private _value: any;\n  private _label: string;\n\n  @Output('q-grid-fileChange') valueChange = new EventEmitter<any>();\n  @Output('q-grid-file-labelChange') labelChange = new EventEmitter<string>();\n\n  @Input('q-grid-file-is-valid') isValid: (name: string) => boolean = yes;\n\n  @Input('q-grid-file') get value() {\n    return this._value;\n  }\n\n  set value(value: any) {\n    if (value !== this._value) {\n      this._value = value;\n      this.valueChange.emit(value);\n    }\n  }\n\n  @Input('q-grid-file-label') get label() {\n    return this._label;\n  }\n\n  set label(value: string) {\n    if (value !== this._label) {\n      this._label = value;\n      this.labelChange.emit(value);\n    }\n  }\n\n  constructor(\n    @Optional() private backdropService: BackdropService,\n    disposable: Disposable,\n    elementRef: ElementRef) {\n\n    const listener = new EventListener(elementRef.nativeElement, new EventManager(this));\n\n    disposable.add(listener.on('change', this.onUpload));\n    disposable.add(listener.on('drop', this.onUpload));\n    disposable.add(listener.on('click', this.hideBackdrop));\n    disposable.add(listener.on('focus', this.revealBackdrop));\n\n    this.reader.onloadend = e => this.onLoadEnd(e);\n  }\n\n  onUpload(e) {\n    const { files } = e.target;\n    const file = files[0];\n    if (file && this.isValid(file.name)) {\n      this.reader.readAsDataURL(file);\n      this.label = file.name;\n    }\n  }\n\n  onLoadEnd(e) {\n    if (e.target.readyState === this.reader.DONE) {\n      this.value = e.target.result;\n    }\n  }\n\n  hideBackdrop() {\n    if (this.backdropService) {\n      this.backdropService.hide();\n    }\n  }\n\n  revealBackdrop() {\n    if (this.backdropService) {\n      if (!this.backdropService.isActive) {\n        setTimeout(() => this.backdropService.reveal(), 300);\n      }\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FileDirective } from './file.directive';\n\n@NgModule({\n  declarations: [\n    FileDirective,\n  ],\n  exports: [\n    FileDirective,\n  ],\n})\nexport class FileModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { filterNode, Node, predicateFactory } from '@qgrid/core';\n\n@Pipe({\n  name: 'qGridFilter',\n})\nexport class FilterPipe implements PipeTransform {\n  transform(items: any[] | Node, { search = null, type = 'plain' }) {\n    if (search || search === 0 || search === false) {\n      const predicate = predicateFactory(search);\n      switch (type) {\n        case 'node': {\n          const root = items as Node;\n          return filterNode(root, predicate);\n        }\n        default: {\n          return (items as any[]).filter(predicate);\n        }\n      }\n    }\n\n    return items;\n  }\n}\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  Input,\n  NgZone,\n} from '@angular/core';\nimport { isFunction, isString } from '@qgrid/core';\nimport { GridError } from '@qgrid/ngx';\n\n@Directive({\n  selector: '[q-grid-focus]',\n})\nexport class FocusDirective implements AfterViewInit {\n  @Input('q-grid-focus') selector;\n  @Input('q-grid-focus-disabled') disabled = false;\n\n  constructor(\n    private elementRef: ElementRef,\n    private zone: NgZone,\n  ) { }\n\n  ngAfterViewInit() {\n    if (this.disabled) {\n      return;\n    }\n\n    const selector = this.selector;\n    const element = selector\n      ? isString(selector) ? this.elementRef.nativeElement.querySelector(selector) : selector\n      : this.elementRef.nativeElement;\n\n    if (!element) {\n      throw new GridError(\n        'focus.directive',\n        `Element ${this.selector} is not found`,\n      );\n    }\n\n    if (!isFunction(element.focus)) {\n      throw new GridError(\n        'focus.directive',\n        `Can't find focus method in ${element}`,\n      );\n    }\n\n    // we need a small timeout to wait, for example, position directive\n    // in other case it will scroll to element before layout\n    this.zone.runOutsideAngular(() =>\n      setTimeout(() => {\n        element.focus();\n      }, 10));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FocusDirective } from './focus.directive';\nimport { AutoFocusDirective } from './autofocus.directive';\nimport { BlurDirective } from './blur.directive';\n\n@NgModule({\n  declarations: [\n    FocusDirective,\n    AutoFocusDirective,\n    BlurDirective,\n  ],\n  exports: [\n    FocusDirective,\n    AutoFocusDirective,\n    BlurDirective,\n  ],\n})\nexport class FocusModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { escapeRegexp, GRID_PREFIX, htmlEncode } from '@qgrid/core';\n\n\n@Pipe({\n  name: 'qGridHighlight',\n})\nexport class HighlightPipe implements PipeTransform {\n  transform(text: string | number, search: string | number): string {\n    if ((text || text === 0) && (search || search === 0)) {\n      text = text.toString();\n      search = search.toString();\n\n      const contains = new RegExp(escapeRegexp(search), 'gi');\n      if (contains.test(text)) {\n        return text.replace(contains,\n          s => `<span class=\"${GRID_PREFIX}-highlight-part\">${htmlEncode(s)}</span>`,\n        );\n      }\n\n      const contained = new RegExp(escapeRegexp(text), 'gi');\n      if (contained.test(search)) {\n        return `<span class=\"${GRID_PREFIX}-highlight-part\">${htmlEncode(text)}</span>`;\n      }\n    }\n\n    return htmlEncode(text as string);\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  ElementRef,\n  Input,\n  TemplateRef,\n} from '@angular/core';\nimport {\n  Action,\n  ColumnModel,\n  Command,\n  Composite,\n  EventListener,\n  EventManager,\n} from '@qgrid/core';\nimport { GridPlugin, TemplateHostService } from '@qgrid/ngx';\nimport { ImportPlugin } from '@qgrid/plugins';\n\n@Component({\n  selector: 'q-grid-import',\n  templateUrl: './import.component.html',\n  providers: [TemplateHostService, GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ImportComponent implements AfterViewInit {\n  @Input() options: any;\n  @ContentChild(TemplateRef) templateRef: TemplateRef<any>;\n\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: ImportComponent } = {\n    $implicit: this,\n  };\n\n  get rows() {\n    return this.plugin.model.data().rows;\n  }\n\n  get columns(): ColumnModel[] {\n    return this.plugin.model.columnList().line;\n  }\n\n  get id() {\n    return this.plugin.model.grid().id;\n  }\n\n  constructor(\n    private plugin: GridPlugin,\n    private templateHost: TemplateHostService,\n    private hostElement: ElementRef,\n  ) {\n    this.templateHost.key = () => 'import';\n  }\n\n  ngAfterViewInit() {\n    const { model, disposable } = this.plugin;\n    const { nativeElement } = this.hostElement;\n\n    const eventListener = new EventListener(nativeElement, new EventManager(this));\n    const importPlugin = new ImportPlugin(model, nativeElement, this.options);\n\n    eventListener.on('change', e => importPlugin.load(e));\n\n    const action = new Action(\n      new Command({\n        execute: () => importPlugin.upload(),\n      }),\n      'Import data',\n      'file_upload',\n    );\n\n    if (this.templateRef) {\n      action.templateUrl = this.templateHost.key('trigger');\n    }\n\n    const items = Composite.list([model.action().items, [action]]);\n\n    model.action({\n      items,\n    }, {\n      source: 'import.component',\n    });\n\n    disposable.add(() => {\n      // notImportItems\n      model.action({\n        items: model\n          .action()\n          .items\n          .filter(x => x !== action),\n      }, {\n        source: 'import.component',\n      });\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ImportComponent } from './import.component';\nimport { TemplateModule } from '@qgrid/ngx';\n\n@NgModule({\n  declarations: [\n    ImportComponent,\n  ],\n  exports: [\n    ImportComponent,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class ImportModule {\n}\n","import { PipeTransform, Pipe } from '@angular/core';\n\n@Pipe({\n  name: 'qGridItemLabel',\n})\nexport class ItemLabelPipe implements PipeTransform {\n  constructor() { }\n\n  transform(value: any, itemLabel: (x: any) => string) {\n    if (itemLabel) {\n      return itemLabel(value);\n    }\n\n    return value;\n  }\n}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\nimport { Disposable } from '@qgrid/ngx';\nimport { PositionPlugin } from '@qgrid/plugins';\n\n@Directive({\n  selector: '[q-grid-position]',\n  providers: [Disposable],\n})\nexport class PositionDirective implements OnInit {\n  @Input('q-grid-position') target = '';\n\n  constructor(\n    private elementRef: ElementRef,\n    private disposable: Disposable,\n  ) {\n  }\n\n  ngOnInit() {\n    const position = new PositionPlugin(\n      {\n        element: this.elementRef.nativeElement,\n        targetName: this.target,\n      },\n      this.disposable,\n    );\n\n    position.invalidate();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PositionDirective } from './position.directive';\n\n@NgModule({\n  declarations: [\n    PositionDirective,\n  ],\n  exports: [\n    PositionDirective,\n  ],\n})\nexport class LayoutModule {\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { TemplateHostService } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-legend',\n  templateUrl: './legend.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [TemplateHostService],\n})\nexport class LegendComponent {\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: LegendComponent } = {\n    $implicit: this,\n  };\n\n  constructor(templateHost: TemplateHostService) {\n    templateHost.key = () => 'plugin-legend-core.tpl.html';\n  }\n}\n","<ng-container key=\"plugin-legend-core.tpl.html\"\n              [context]=\"context\">\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { LegendComponent } from './legend.component';\nimport { TemplateModule as TemplateModule } from '@qgrid/ngx';\n\n@NgModule({\n  declarations: [\n    LegendComponent,\n  ],\n  exports: [\n    LegendComponent,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class LegendModule {\n}\n","<ng-container *ngTemplateOutlet=\"getTemplate()\"></ng-container>\n\n<ng-template #currency>\n  <span class=\"q-grid-live-cell-arrow\">\n    <i *ngIf=\"getDifference(cell.changes) > 0\"\n       class=\"q-grid-icon q-grid-asc\">\n      &uarr;\n    </i>\n    <i *ngIf=\"getDifference(cell.changes) < 0\"\n       class=\"q-grid-icon q-grid-desc\">\n      &darr;\n    </i>\n  </span>\n  <span class=\"q-grid-live-cell-diff\">{{ getDifference(cell.changes) | qGridCurrency: cell.column.code}}</span>\n  <span class=\"q-grid-live-cell-prev\">{{ cell.changes.previousValue | qGridCurrency: cell.column.code}}</span>\n  <span class=\"q-grid-live-cell-curr\">{{ cell.label | qGridCurrency: cell.column.code}}</span>\n</ng-template>\n\n<ng-template #number>\n  <span class=\"q-grid-live-cell-curr\">{{ cell.label }}</span>\n  <span class=\"q-grid-live-cell-prev\">{{ cell.changes.previousValue }}</span>\n  <span class=\"q-grid-live-cell-diff\">{{ getDifference(cell.changes) }}</span>\n  <span class=\"q-grid-live-cell-arrow\">\n    <i *ngIf=\"getDifference(cell.changes) > 0\"\n       class=\"q-grid-icon q-grid-asc\">\n      &uarr;\n    </i>\n    <i *ngIf=\"getDifference(cell.changes) < 0\"\n       class=\"q-grid-icon q-grid-desc\">\n      &darr;\n    </i>\n  </span>\n</ng-template>\n\n<ng-template #time>\n  <span class=\"q-grid-live-cell-prev\">{{ cell.changes.previousValue }}</span>\n  <span class=\"q-grid-live-cell-curr\">{{ cell.label }}</span>\n</ng-template>\n\n<ng-template #text>\n  <span class=\"q-grid-live-cell-prev\">{{ cell.changes.previousValue }}</span>\n  <span class=\"q-grid-live-cell-curr\">{{ cell.label }}</span>\n</ng-template>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  SimpleChange,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { GridError, TdCoreDirective, TemplateHostService } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-live-cell',\n  templateUrl: './live-cell.tpl.html',\n  providers: [TemplateHostService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LiveCellComponent implements OnInit, OnDestroy {\n  @Input() cell: TdCoreDirective;\n  @Input() duration = 500;\n\n  @HostBinding('class') class: string;\n\n  @ViewChild('currency', { static: true }) currencyTemplate: TemplateRef<any>;\n  @ViewChild('number', { static: true }) numberTemplate: TemplateRef<any>;\n  @ViewChild('time', { static: true }) timeTemplate: TemplateRef<any>;\n  @ViewChild('text', { static: true }) textTemplate: TemplateRef<any>;\n\n  timeoutId: any = null;\n\n  constructor(private zone: NgZone) {\n  }\n\n  ngOnInit() {\n    if (!this.cell.changes) {\n      throw new GridError('live-cell.component', 'No changes found');\n    }\n    this.class = `q-grid-live-cell q-grid-live-cell-${this.cell.column.type} `;\n\n    if (this.getDifference(this.cell.changes)) {\n      this.class += this.getDifference(this.cell.changes) > 0 ? 'q-grid-live-cell-up ' : 'q-grid-live-cell-down ';\n    }\n    this.zone.runOutsideAngular(() => {\n      this.timeoutId = setTimeout(() => {\n        this.cell.mode('view');\n      }, this.duration);\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n    }\n  }\n\n  getDifference(value: SimpleChange) {\n    switch (this.cell.column.type) {\n      case 'number':\n      case 'currency':\n        return +value.currentValue - +value.previousValue;\n      default:\n        return null;\n    }\n  }\n\n  getTemplate() {\n    switch (this.cell.column.type) {\n      case 'currency':\n        return this.currencyTemplate;\n      case 'time':\n        return this.timeTemplate;\n      case 'number':\n        return this.numberTemplate;\n      default:\n        return this.textTemplate;\n    }\n  }\n}\n","import { DatePipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Log } from '@qgrid/core';\n\n@Pipe({\n  name: 'qGridTime',\n})\nexport class TimePipe implements PipeTransform {\n  constructor(private pipe: DatePipe) { }\n\n  transform(value: any, format?: any, timezone?: any, locale?: any) {\n    try {\n      return this.pipe.transform(value, format, timezone, locale);\n    } catch (ex) {\n      Log.warn('TimePipe', ex.message);\n      return value;\n    }\n  }\n}\n","import { DecimalPipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Log } from '@qgrid/core';\n\n@Pipe({\n  name: 'qGridNumber',\n})\nexport class NumberPipe implements PipeTransform {\n  constructor(private pipe: DecimalPipe) { }\n\n  transform(value: any, digitsInfo?: any, locale?: any) {\n    try {\n      return this.pipe.transform(value, digitsInfo, locale);\n    } catch (ex) {\n      Log.warn('NumberPipe', ex.message);\n      return value;\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { GridError } from '@qgrid/ngx';\n\n@Pipe({\n  name: 'qGridText',\n})\nexport class TextPipe implements PipeTransform {\n  transform(item: string, format: 'fromCamelCase'): string {\n    switch (format) {\n      case 'fromCamelCase': {\n        return item.replace(/([a-z])([A-Z])/g, '$1 $2').toLowerCase();\n      }\n      default: {\n        throw new GridError('text.pipe', `Unknown input format type '${format}'`);\n      }\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { HighlightPipe } from './highlight.pipe';\nimport { FilterPipe } from './filter.pipe';\nimport { TimePipe } from './time.pipe';\nimport { NumberPipe } from './number.pipe';\nimport { DatePipe } from './date.pipe';\nimport { TextPipe } from './text.pipe';\nimport { CurrencyPipe } from './currency.pipe';\nimport { ArrayPipe } from './array.pipe';\nimport { ItemLabelPipe } from './item-label.pipe';\nimport { ConvertPipe } from './convert.pipe';\n\n@NgModule({\n  declarations: [\n    ArrayPipe,\n    ConvertPipe,\n    CurrencyPipe,\n    DatePipe,\n    FilterPipe,\n    HighlightPipe,\n    ItemLabelPipe,\n    NumberPipe,\n    TextPipe,\n    TimePipe,\n  ],\n  exports: [\n    ArrayPipe,\n    ConvertPipe,\n    CurrencyPipe,\n    DatePipe,\n    FilterPipe,\n    HighlightPipe,\n    ItemLabelPipe,\n    NumberPipe,\n    TextPipe,\n    TimePipe,\n  ],\n})\nexport class PipeModule {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TemplateModule } from '@qgrid/ngx';\nimport { PipeModule } from '../pipes/pipe.module';\nimport { LiveCellComponent } from './live-cell.component';\n\n@NgModule({\n  declarations: [\n    LiveCellComponent,\n  ],\n  exports: [\n    LiveCellComponent,\n  ],\n  imports: [\n    TemplateModule,\n    CommonModule,\n    PipeModule,\n  ],\n})\nexport class LiveCellModule {\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  NgZone,\n  OnInit,\n} from '@angular/core';\nimport { Fastdom, GRID_PREFIX } from '@qgrid/core';\nimport { GridPlugin } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-live-columns',\n  template: '',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LiveColumnComponent implements OnInit {\n  @Input('duration') duration = 500;\n\n  constructor(private plugin: GridPlugin, private zone: NgZone) { }\n\n  ngOnInit() {\n    let startPos: number;\n    let endPos: number;\n    const { model } = this.plugin;\n    let currentColumns: any[];\n\n    model.animation({\n      apply: model.animation().apply.concat((memo, context, complete) => {\n        const previousColumns = currentColumns;\n        currentColumns = memo.columns ? memo.columns[0] : currentColumns;\n\n        if (!previousColumns || !memo.columns) {\n          complete(0);\n          return;\n        }\n\n        const { columnId } = model.data();\n        const animations = [];\n\n        startPos = currentColumns.length;\n        endPos = 0;\n\n        for (let columnIndex = 0, length = previousColumns.length; columnIndex < length; columnIndex++) {\n          const newColumnIndex = currentColumns.findIndex((column, i) =>\n            columnId(i, column.model) === columnId(columnIndex, previousColumns[columnIndex].model));\n\n          if (newColumnIndex !== columnIndex) {\n            startPos = Math.min(Math.min(columnIndex, newColumnIndex), startPos);\n            endPos = Math.max(Math.max(columnIndex, newColumnIndex), endPos);\n          }\n        }\n\n        for (let columnIndex = 0, length = previousColumns.length; columnIndex < length; columnIndex++) {\n          const newColumnIndex = currentColumns.findIndex((column, i) =>\n            columnId(i, column.model) === columnId(columnIndex, previousColumns[columnIndex].model));\n\n          if (newColumnIndex !== columnIndex) {\n            animations.push(this.moveColumn(columnIndex, newColumnIndex, startPos, endPos));\n          }\n        }\n\n        this.zone.runOutsideAngular(() => {\n          Promise.all(animations)\n            .then(complete);\n        });\n      }),\n    });\n  }\n\n  private moveColumn(from: number, to: number, startPos: number, endPos: number) {\n    const { table } = this.plugin;\n\n    return new Promise((animationEnd, animationError) => {\n      const oldColumn = table.body.column(from);\n      const newColumn = table.body.column(to);\n      const startColumn = table.body.column(startPos);\n      const endColumn = table.body.column(endPos);\n\n      if (!oldColumn.model() || !newColumn.model()) {\n        const errorIndex = oldColumn.model() ? to : from;\n        animationError(`Can't find model for column ${errorIndex}`);\n        return;\n      }\n\n      Fastdom.measure(() => {\n        const newRect = newColumn.cells()[0].rect();\n        const oldRect = oldColumn.cells()[0].rect();\n        const startRect = startColumn.cells()[0].rect();\n        const endRect = endColumn.cells()[0].rect();\n        let offset = 0;\n\n        if (from < to) {\n          offset = (Math.abs(from - to) > 1) ? newRect.left - oldRect.right + endRect.width : endRect.width;\n        } else {\n          offset = (Math.abs(from - to) > 1) ? newRect.left - oldRect.left : -1 * startRect.width;\n        }\n\n        Fastdom.mutate(() => {\n          const animatedCells = [];\n          oldColumn.addClass(`${GRID_PREFIX}-live-column`);\n          oldColumn.cells().forEach(cell => animatedCells.push(\n            new Promise(columnAnimationEnd => {\n              const animation = cell.model().element.animate(\n                [{ transform: 'translateX(0px)' }, { transform: `translateX(${offset}px)` }],\n                { duration: this.duration },\n              );\n\n              animation.onfinish = () => Fastdom.mutate(() => {\n                oldColumn.removeClass(`${GRID_PREFIX}-live-column`);\n                oldColumn.removeClass(`${GRID_PREFIX}-drag`);\n                columnAnimationEnd(null);\n              });\n            })));\n\n          Promise.all(animatedCells).finally(() => animationEnd(null));\n        });\n      });\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LiveColumnComponent } from './live-column.component';\n\n@NgModule({\n  declarations: [\n    LiveColumnComponent,\n  ],\n  exports: [\n    LiveColumnComponent,\n  ],\n  imports: [\n    CommonModule,\n  ],\n})\nexport class LiveColumnModule {\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  NgZone,\n  OnInit,\n} from '@angular/core';\nimport { Fastdom, GRID_PREFIX } from '@qgrid/core';\nimport { GridPlugin } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-live-rows',\n  template: '',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LiveRowComponent implements OnInit {\n  @Input('duration') duration = 400;\n\n  constructor(private plugin: GridPlugin, private zone: NgZone) { }\n\n  ngOnInit() {\n    const { model } = this.plugin;\n    let currentRows: any[];\n\n    model.animation({\n      apply: model.animation().apply.concat((memo, context, complete) => {\n        const previousRows = currentRows;\n        currentRows = memo.rows ? memo.rows : currentRows;\n\n        if (!previousRows || !currentRows) {\n          complete(0);\n          return;\n        }\n\n        const { rowId } = model.data();\n        const animations = [];\n\n        for (let rowIndex = 0, length = previousRows.length; rowIndex < length; rowIndex++) {\n          const newRowIndex = currentRows.findIndex((row, i) => rowId(i, row) === rowId(rowIndex, previousRows[rowIndex]));\n          if (newRowIndex < 0) {\n            animations.push(this.fadeOutRow(rowIndex));\n          } else if (newRowIndex !== rowIndex) {\n            animations.push(this.moveRow(rowIndex, newRowIndex));\n          }\n        }\n\n        this.zone.runOutsideAngular(() => {\n          Promise.all(animations)\n            .then(complete);\n        });\n      }),\n    });\n  }\n\n  private fadeOutRow(index: number) {\n    return new Promise((resolve, reject) => {\n      const tr = this.plugin.table.body.row(index);\n      if (!tr.model()) {\n        reject(`Can't find model for row ${index}`);\n        return;\n      }\n\n      Fastdom.mutate(() => {\n        const animation = tr.model().tr.element.animate(\n          [{ opacity: '1' }, { opacity: '0' }],\n          { duration: this.duration },\n        );\n\n        animation.onfinish = () => resolve(null);\n      });\n    });\n  }\n\n  private moveRow(from: number, to: number) {\n    const { table } = this.plugin;\n\n    return new Promise((animationEnd, animationError) => {\n      const oldTr = table.body.row(from);\n      const newTr = table.body.row(to);\n\n      if (!oldTr.model() || !newTr.model()) {\n        const errorIndex = oldTr.model() ? to : from;\n        animationError(`Can't find model for row ${errorIndex}`);\n        return;\n      }\n\n      Fastdom.measure(() => {\n        const offset = newTr.rect().top - oldTr.rect().top;\n\n        Fastdom.mutate(() => {\n          const animatedRows = [];\n          oldTr.addClass(`${GRID_PREFIX}-live-row`);\n          (oldTr.getElement() as any)\n            .elements\n            .forEach(rowElement =>\n              animatedRows.push(\n                new Promise(animationRowEnd => {\n                  const animation = rowElement.animate(\n                    [{ transform: 'translateY(0px)' }, { transform: `translateY(${offset}px)` }],\n                    { duration: this.duration },\n                  );\n\n                  animation.onfinish = () => Fastdom.mutate(() => {\n                    oldTr.removeClass(`${GRID_PREFIX}-live-row`);\n                    oldTr.removeClass(`${GRID_PREFIX}-drag`);\n                    animationRowEnd(null);\n                  });\n                })),\n            );\n\n          Promise.all(animatedRows).finally(() => animationEnd(null));\n        });\n      });\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LiveRowComponent } from './live-row.component';\n\n@NgModule({\n  declarations: [\n    LiveRowComponent,\n  ],\n  exports: [\n    LiveRowComponent,\n  ],\n  imports: [\n    CommonModule,\n  ],\n})\nexport class LiveRowModule {\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n} from '@angular/core';\nimport { PaginationState, PaginationStateMode } from '@qgrid/core';\nimport { GridPlugin, StateAccessor } from '@qgrid/ngx';\nimport { PagerPlugin } from '@qgrid/plugins';\n\n@Component({\n  selector: 'q-grid-pager',\n  templateUrl: './pager.component.html',\n  providers: [GridPlugin, StateAccessor],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PagerComponent implements OnInit, OnChanges {\n  private pagerState = this.stateAccessor.setter(PaginationState);\n\n  context: { $implicit: PagerPlugin };\n\n  @Input('size') set size(size: number) { this.pagerState({ size }); }\n  @Input('sizeList') set sizeList(sizeList: number[]) { this.pagerState({ sizeList }); }\n  @Input('mode') set mode(mode: PaginationStateMode) { this.pagerState({ mode }); }\n\n  constructor(\n    private plugin: GridPlugin,\n    private cd: ChangeDetectorRef,\n    private stateAccessor: StateAccessor,\n  ) {\n  }\n\n  ngOnChanges() {\n    const { model } = this.plugin;\n    this.stateAccessor.write(model);\n  }\n\n  ngOnInit() {\n    const { model, observe } = this.plugin;\n\n    const pager = new PagerPlugin(this.plugin);\n    this.context = { $implicit: pager };\n\n    observe(model.paginationChanged)\n      .subscribe(() => this.cd.detectChanges());\n  }\n}\n","<ng-container key=\"plugin-pager.tpl.html\" [context]=\"context\"></ng-container>\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Shortcut } from '@qgrid/core';\nimport { GridPlugin } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-pager-target',\n  templateUrl: './pager-target.component.html',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PagerTargetComponent implements OnInit {\n  private value: number;\n\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: PagerTargetComponent } = {\n    $implicit: this,\n  };\n\n  get current() {\n    return this.plugin.model.pagination().current + 1;\n  }\n\n  get total() {\n    const { count, size } = this.plugin.model.pagination();\n    return size === 0 ? 0 : Math.max(1, Math.ceil(count / size));\n  }\n\n  constructor(private plugin: GridPlugin) {\n  }\n\n  ngOnInit() {\n    this.value = this.current;\n  }\n\n  keyDown(e: KeyboardEvent) {\n    let code = Shortcut.translate(e);\n    if (code.startsWith('numpad')) {\n      code = code.slice(6);\n    }\n\n    const value = this.value || 0;\n\n    switch (code) {\n      case 'enter': {\n        if (value) {\n          const current = value - 1;\n          if (this.plugin.model.pagination().current !== current) {\n            // new FocusAfterRender(this.plugin);\n            this.plugin.model.pagination({\n              current,\n            }, {\n              source: 'pager-target.component',\n            });\n          }\n        }\n        break;\n      }\n      case 'up': {\n        if (value < this.total) {\n          this.value = value + 1;\n        }\n        break;\n      }\n      case 'down': {\n        if (value > 1) {\n          this.value = value - 1;\n        }\n        break;\n      }\n      case 'left':\n      case 'right':\n      case 'backspace': {\n        break;\n      }\n      default: {\n        const digit = Number.parseInt(code, 10);\n        const page = Number.parseInt('' + value + digit, 10);\n        const min = 1;\n        const max = this.total;\n        const isValid = page >= min && page <= max && !isNaN(digit);\n\n        if (!isValid) {\n          this.value = page > this.total ? max : min;\n          e.preventDefault();\n        }\n      }\n    }\n  }\n}\n","<ng-container key=\"plugin-pager-target.tpl.html\" [context]=\"context\"></ng-container>\n","import { NgModule } from '@angular/core';\nimport { PagerComponent } from './pager.component';\nimport { PagerTargetComponent } from './pager-target.component';\nimport { TemplateModule } from '@qgrid/ngx';\n\n@NgModule({\n  declarations: [\n    PagerComponent,\n    PagerTargetComponent,\n  ],\n  exports: [\n    PagerComponent,\n    PagerTargetComponent,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class PagerModule {\n}\n","<q-grid-layer>\n    <ng-template for=\"pane-right\">\n        <div class=\"q-grid-pane q-grid-pane-right\">\n            <ng-container key=\"plugin-pane-right.tpl.html\"\n                          [context]=\"context.right\">\n            </ng-container>\n        </div>\n    </ng-template>\n    <ng-template for=\"pane-left\">\n        <div class=\"q-grid-pane q-grid-pane-left\">\n            <ng-container key=\"plugin-pane-left.tpl.html\"\n                          [context]=\"context.left\">\n            </ng-container>\n        </div>\n    </ng-template>\n</q-grid-layer>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { isUndefined } from '@qgrid/core';\nimport { GridError, GridEventArg, GridPlugin, TemplateHostService } from '@qgrid/ngx';\n\ntype PaneSide = 'left' | 'right';\nconst DEFAULT_SIDE: PaneSide = 'right';\n\n@Component({\n  selector: 'q-grid-pane',\n  templateUrl: './pane.component.html',\n  providers: [GridPlugin, TemplateHostService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaneComponent implements OnInit {\n  @Input() trigger: string;\n\n  context: {\n    [side in PaneSide]?: {\n      // eslint-disable-next-line no-use-before-define\n      $implicit: PaneComponent;\n      value: any;\n    }\n  };\n\n  constructor(\n    private plugin: GridPlugin,\n    private cd: ChangeDetectorRef,\n    templateHost: TemplateHostService,\n  ) {\n    templateHost.key = source => `plugin-pane-${source}.tpl.html`;\n\n    this.context = {\n      left: {\n        $implicit: this,\n        value: null,\n      },\n      right: {\n        $implicit: this,\n        value: null,\n      },\n    };\n  }\n\n  ngOnInit() {\n    const { model, observeReply } = this.plugin;\n    const scope = this.parse();\n    if (scope) {\n      const [state, prop] = scope;\n      observeReply(model[`${state}Changed`])\n        .subscribe((e: GridEventArg<any>) => {\n          if (!prop || e.hasChanges(prop)) {\n            this.open(DEFAULT_SIDE);\n          }\n        });\n    }\n  }\n\n  open(side: PaneSide = DEFAULT_SIDE, value?: any) {\n    const { table, model } = this.plugin;\n\n    const scope = this.parse();\n    if (scope && isUndefined(value)) {\n      const [state, prop] = scope;\n      value = model[state]()[prop];\n    }\n\n    this.context[side] = { $implicit: this, value };\n\n    const paneLayer = `pane-${side}`;\n    if (table.view.hasLayer(paneLayer)) {\n      table.view.removeLayer(paneLayer);\n    }\n    table.view.addLayer(paneLayer);\n\n    this.invalidate();\n  }\n\n  close(side: PaneSide = DEFAULT_SIDE) {\n    const { table } = this.plugin;\n\n    table.view.removeLayer(`pane-${side}`);\n\n    this.context[side] = null;\n\n    this.invalidate();\n  }\n\n  private invalidate(): void {\n    this.cd.markForCheck();\n    this.cd.detectChanges();\n  }\n\n  private parse() {\n    const { model } = this.plugin;\n    const parts = this.trigger ? this.trigger.split('.') : [];\n    if (parts.length > 0) {\n      const [state, prop] = parts;\n      if (!model[state]) {\n        throw new GridError('pane.component', `Trigger ${state} not found`);\n      }\n      return [state, prop];\n    }\n\n    return null;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TemplateModule, LayerModule } from '@qgrid/ngx';\nimport { PaneComponent } from './pane.component';\n\n@NgModule({\n  declarations: [\n    PaneComponent,\n  ],\n  exports: [\n    PaneComponent,\n  ],\n  imports: [\n    CommonModule,\n    TemplateModule,\n    LayerModule,\n  ],\n})\nexport class PaneModule { }\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n} from '@angular/core';\nimport {\n  Action,\n  Command,\n  Composite,\n  filter,\n  PersistenceSchedule,\n  PersistenceService,\n  PersistenceState,\n  PersistenceStorage,\n  takeOnce,\n} from '@qgrid/core';\nimport { GridEvent, GridModelBuilder, GridPlugin, StateAccessor } from '@qgrid/ngx';\nimport { PersistenceItem } from '@qgrid/plugins';\n\n@Component({\n  selector: 'q-grid-persistence',\n  template: '',\n  providers: [GridPlugin, StateAccessor],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PersistenceComponent implements OnInit, OnChanges {\n  private persistenceState = this.stateAccessor.setter(PersistenceState);\n  private service: PersistenceService | null = null;\n\n  @Input('schedule') set schedule(schedule: PersistenceSchedule) { this.persistenceState({ schedule }); }\n  @Input('storage') set storage(storage: PersistenceStorage) { this.persistenceState({ storage }); }\n\n  constructor(\n    private plugin: GridPlugin,\n    private modelBuilder: GridModelBuilder,\n    private stateAccessor: StateAccessor,\n  ) {\n  }\n\n  ngOnChanges() {\n    const { model } = this.plugin;\n    this.stateAccessor.write(model);\n  }\n\n  ngOnInit() {\n    const { model, disposable, observe, observeReply } = this.plugin;\n\n    const id = `q-grid:${model.grid().id}:persistence-list`;\n    model.persistence({ id });\n\n    this.service = new PersistenceService(model, () => this.modelBuilder.build());\n\n    observeReply(model.dataChanged)\n      .pipe(\n        filter(e => {\n          if (e.hasChanges('rows') || e.hasChanges('columns')) {\n            const { rows, columns } = e.state;\n            if (rows.length > 0 && columns.length > 0) {\n              return true;\n            }\n          }\n\n          return false;\n        }),\n        takeOnce(),\n      )\n      .subscribe(() =>\n        model.persistence()\n          .storage\n          .getItem<PersistenceItem[]>(id)\n          .then((items: PersistenceItem[]) => {\n            if (!items || items.length === 0) {\n              return;\n            }\n\n            const defaultItem = items.find(item => item.isDefault);\n            if (defaultItem) {\n              this.service.load(defaultItem.model);\n            }\n          }),\n      );\n\n    switch (model.persistence().schedule) {\n      case 'onDemand': {\n        const historyAction =\n          new Action(\n            new Command(),\n            'Save/Load',\n            'history',\n          );\n\n        historyAction.templateUrl = 'plugin-persistence.tpl.html';\n\n        const items = Composite.list([model.action().items, [historyAction]]);\n        model.action({ items }, { source: 'persistence.component' });\n\n        disposable.add(() => {\n          const notPersistenceActions = model.action().items.filter(x => x !== historyAction);\n          model.action({ items: notPersistenceActions }, { source: 'persistence.component' });\n        });\n\n        break;\n      }\n      case 'onStateChange': {\n        const { settings, storage, defaultGroup } = model.persistence();\n        for (const state of Object.keys(settings)) {\n          for (const key of settings[state]) {\n            observe(model[state + 'Changed'] as GridEvent<any>)\n              .pipe(\n                // TODO: get rid of e.tag.source check\n                filter(e => e.hasChanges(key) && e.tag.source !== 'persistence.service'),\n              )\n              .subscribe(() => {\n                const currentModel = this.service.save();\n                const item = {\n                  title: `auto-save: ${state}.${key} changed`,\n                  modified: Date.now(),\n                  group: defaultGroup,\n                  model: currentModel,\n                  isDefault: true,\n                  canEdit: false,\n                };\n\n                storage.setItem(id, [item]);\n              });\n          }\n        }\n\n        break;\n      }\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { GridModelBuilder, GridPlugin } from '@qgrid/ngx';\nimport { PersistencePlugin } from '@qgrid/plugins';\n\n@Component({\n  selector: 'q-grid-persistence-panel',\n  templateUrl: './persistence-panel.component.html',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PersistencePanelComponent implements OnInit {\n  context: {\n\t\t$implicit: PersistencePlugin;\n\t};\n\n  constructor(\n\t\tprivate plugin: GridPlugin,\n\t\tprivate modelBuilder: GridModelBuilder,\n  ) {\n  }\n\n  ngOnInit() {\n    const persistence = new PersistencePlugin(this.plugin, () => this.modelBuilder.build());\n    this.context = { $implicit: persistence };\n  }\n}\n","<ng-container key=\"plugin-persistence-panel.tpl.html\" [context]=\"context\"></ng-container>\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { PersistenceComponent } from './persistence.component';\nimport { PersistencePanelComponent } from './persistence-panel.component';\nimport { TemplateModule } from '@qgrid/ngx';\n\n@NgModule({\r\n    imports: [\r\n        FormsModule,\r\n        TemplateModule,\r\n    ],\r\n    exports: [\r\n        PersistenceComponent,\r\n        PersistencePanelComponent,\r\n    ],\r\n    declarations: [\r\n        PersistenceComponent,\r\n        PersistencePanelComponent,\r\n    ]\r\n})\nexport class PersistenceModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { GridPlugin } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-progress',\n  templateUrl: './progress.component.html',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProgressComponent implements OnInit {\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: ProgressComponent } = {\n    $implicit: this,\n  };\n\n  get isBusy() {\n    const { isBusy, queue } = this.plugin.model.progress();\n    return isBusy || queue.length;\n  }\n\n  constructor(\n    private plugin: GridPlugin,\n    private cd: ChangeDetectorRef,\n  ) {\n  }\n\n  ngOnInit() {\n    const { model, observeReply } = this.plugin;\n\n    observeReply(model.progressChanged)\n      .subscribe(() => this.cd.detectChanges());\n  }\n}\n","<ng-container key=\"plugin-progress.tpl.html\" [context]=\"context\"></ng-container>\n","import { NgModule } from '@angular/core';\nimport { ProgressComponent } from './progress.component';\nimport { TemplateModule } from '@qgrid/ngx';\n\n@NgModule({\n  declarations: [\n    ProgressComponent,\n  ],\n  exports: [\n    ProgressComponent,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class ProgressModule {\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Action, Command, Composite } from '@qgrid/core';\nimport { GridPlugin } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-query-builder',\n  templateUrl: './query-builder.component.html',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class QueryBuilderComponent implements OnInit {\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: QueryBuilderComponent } = {\n    $implicit: this,\n  };\n\n  constructor(\n    private plugin: GridPlugin,\n  ) {\n  }\n\n  ngOnInit() {\n    const { model, disposable } = this.plugin;\n    const action =\n      new Action(\n        new Command(),\n        'Query Builder',\n        'filter',\n      );\n\n    action.templateUrl = 'plugin-query-builder.tpl.html';\n\n    const items = Composite.list([model.action().items, [action]]);\n    model.action({\n      items,\n    }, {\n      source: 'query-builder.component',\n    });\n\n    disposable.add(() => {\n      model.action({\n        items: model\n          .action()\n          .items\n          .filter(x => x !== action),\n      }, {\n        source: 'query-builder.component',\n      });\n    });\n  }\n}\n","<ng-container key=\"plugin-query-builder.tpl.html\"\n              [context]=\"context\">\n</ng-container>\n","import { ISerializationNode } from '../expression-builder/serialization.service';\n\nexport class QueryBuilderModel {\n  node: ISerializationNode = null;\n}\n","import { Node } from './model/node';\n\nexport class TraverseService {\n  findUp(node: Node, test: (foundNode: Node) => boolean) {\n    while (node) {\n      if (test(node)) {\n        return node;\n      }\n\n      node = node.parent;\n    }\n\n    return null;\n  }\n\n  findUpSibling(node: Node) {\n    if (node.parent) {\n      const children = node.parent.children;\n      const index = children.indexOf(node);\n      if (index >= 0) {\n        if (index > 0) {\n          return children[index - 1];\n        }\n\n        return node.parent;\n      }\n    }\n\n    return null;\n  }\n\n  depth(root: Node): (reduce: any, memo: any) => any {\n    return (reduce, memo) => {\n      memo = this.visitLine(reduce, memo, root, root.line);\n\n      const children = root.children;\n      const length = children.length;\n\n      for (let i = 0; i < length; i++) {\n        memo = this.depth(children[i])(reduce, memo);\n      }\n\n      return memo;\n    };\n  }\n\n  private visitLine(reduce, memo, node, line) {\n    const groups = line.expressions;\n    const length = groups.length;\n\n    for (let i = 0; i < length; i++) {\n      memo = this.visitGroup(reduce, memo, node, line, groups[i]);\n    }\n\n    return memo;\n  }\n\n  private visitGroup(reduce, memo, node, line, group) {\n    const expressions = group.expressions;\n    const length = expressions.length;\n\n    for (let i = 0; i < length; i++) {\n      memo = reduce(memo, expressions[i], line, node);\n    }\n\n    return memo;\n  }\n}\n","import { isFunction } from '@qgrid/core';\n\nexport function method(inst: any, key: string) {\n  const sourceFn = inst[key];\n\n  return {\n    with: withFactory(inst, key, sourceFn),\n  };\n}\n\nexport function methodsOf(inst: any) {\n  const keys = Object.keys(inst);\n  const length = keys.length;\n  const patch = {};\n\n  for (let i = 0; i < length; i++) {\n    const key = keys[i];\n    if (isFunction(inst[key])) {\n      patch[key] = method(inst, key);\n    }\n  }\n\n  return {\n    with: (...args) => {\n      const patchKeys = Object.keys(patch);\n      const patchLength = patchKeys.length;\n\n      for (let i = 0; i < patchLength; i++) {\n        const key = patchKeys[i];\n\n        inst.action = key;\n        patch[key].with.apply(inst, args);\n      }\n    },\n  };\n}\n\nexport function withFactory(inst, key, sourceFn) {\n  const withFn = (...withArgs) =>\n    inst[key] = (...keyArgs) =>\n      sourceFn.apply(inst, withArgs.concat(keyArgs));\n\n  (withFn as any).decorator = (...args) => {\n    const decorate = args[0];\n    args = args.slice(1);\n\n    inst[key] = () => decorate.apply(inst, [\n      sourceFn,\n      inst,\n      key,\n    ].concat(args));\n  };\n\n  return withFn;\n}\n","export abstract class Expression {\n  id: string;\n  type: string;\n  templateUrl = '';\n  method: string[] = [];\n}\n\nexport class GroupExpression extends Expression {\n  expressions: Expression[] = [];\n\n  constructor() {\n    super();\n\n    this.type = 'group';\n    this.templateUrl = 'eb-group.tpl.html';\n  }\n}\n\n","import { Line } from './line';\nimport { Node } from './node';\nimport { GroupExpression } from './expression';\n\nexport class GroupSchema {\n  plan: Array<(node: Node, line: Line, group: GroupExpression) => void> = [];\n\n  constructor(public node: Node, public line: Line) {\n  }\n\n  apply(group: GroupExpression) {\n    this.plan.forEach(p => p(this.node, this.line, group));\n  }\n}\n","import { cloneDeep } from '@qgrid/core';\nimport { GridError } from '@qgrid/ngx';\nimport { Expression, GroupExpression } from './expression';\nimport { GroupSchema } from './group.schema';\nimport { Node } from './node';\n\ninterface ExpressionEntry {\n\tindex: number;\n\texpression: Expression;\n\tparent: GroupExpression;\n}\n\nexport class Line {\n  immutable = true;\n  readonly expressions: Expression[] = [];\n\n  constructor(private GroupSchemaT: typeof GroupSchema) {\n  }\n\n  add(expression: Expression) {\n    this.expressions.push(expression);\n  }\n\n  clone(id: string) {\n    return cloneDeep(this.get(id)) as Expression;\n  }\n\n  get(id: string) {\n    const expression = this.findById(this.expressions, id);\n    if (!expression) {\n      throw new GridError('line', `Expression ${id} not found`);\n    }\n\n    return expression.expression;\n  }\n\n  put(id: string, node: Node, build) {\n    const index = this.getIndex(id);\n    const schema = new this.GroupSchemaT(node, this);\n    const group = new GroupExpression();\n\n    const item = this.findById(this.expressions, id);\n    if (item.expression instanceof GroupExpression) {\n      build(schema);\n      schema.apply(group);\n      group.id = id;\n      this.expressions.splice(index, 1, group);\n      this.immutable = false;\n    } else {\n      throw new GridError('line', 'Unsupported operation: put to expression, that is not a group');\n    }\n  }\n\n  remove(id) {\n    const item = this.findById(this.expressions, id);\n    if (item.expression instanceof GroupExpression) {\n      item.expression.expressions = [];\n    } else {\n      throw new GridError('line', 'Unsupported operation: remove expression, that is not a group');\n    }\n  }\n\n  private getIndex(id: string) {\n    const index = this.expressions.findIndex(item => item.id === id);\n    if (index < 0) {\n      throw new GridError('line', `Expression ${id} not found`);\n    }\n\n    return index;\n  }\n\n  private findById(expressions: Expression[], id: string, parent: GroupExpression = null): ExpressionEntry {\n    for (let index = 0, length = expressions.length; index < length; index++) {\n      const expression = expressions[index];\n      if (expression.id === id) {\n        return { index, expression, parent };\n      }\n      if (expression instanceof GroupExpression) {\n        const group = expression as GroupExpression;\n        const groupChild = this.findById(group.expressions, id, group);\n        if (groupChild) {\n          return groupChild;\n        }\n      }\n    }\n\n    return null;\n  }\n}\n","import { GridError } from '@qgrid/ngx';\nimport { GroupExpression } from './expression';\nimport { GroupSchema } from './group.schema';\nimport { Line } from './line';\nimport { Node } from './node';\n\nexport interface INodeSchema {\n\tschemaMap: { [key: string]: INodeSchema };\n\n\tapply(node?: Node): Node;\n\tattr(key: string, value: any): INodeSchema;\n\tnode(id: string, build: (schema: INodeSchema) => void): INodeSchema;\n\tgroup(id: string, build: (schema: GroupSchema) => void): INodeSchema;\n\tget(id: string): INodeSchema;\n\tmaterialize(id: string): Node;\n}\n\nexport function nodeSchema(GroupSchemaT: typeof GroupSchema): any {\n  return class NodeSchema implements INodeSchema {\n    plan = [];\n    planMap = {};\n\n    constructor(public schemaMap = {}) {\n    }\n\n    clone(): INodeSchema {\n      const schema = new NodeSchema({ ...this.schemaMap });\n      schema.plan = [...this.plan];\n      schema.planMap = { ...this.planMap };\n      return schema;\n    }\n\n    attr(key: string, value: any) {\n      this.plan.push(node => node.attr(key, value));\n      return this;\n    }\n\n    apply(node?: Node): Node {\n      node = node || new Node('#root', this);\n\n      const line = new Line(GroupSchemaT);\n      node.line = line;\n\n      this.plan.forEach(p => p(node, line));\n\n      return node;\n    }\n\n    node(id: string, build: (schema: INodeSchema) => void) {\n      if (!build) {\n        throw new GridError('node.schema', 'Build function is not defined');\n      }\n\n      this.plan.push(node => {\n        const schema = new NodeSchema(this.schemaMap);\n        build(schema);\n\n        const newNode = new Node(id, schema, node);\n        schema.apply(newNode);\n        node.addChildAfter(newNode);\n        this.schemaMap[id] = schema;\n\n        return node;\n      });\n\n      return this;\n    }\n\n    group(id: string, build: (schema: GroupSchema) => void) {\n      if (!build) {\n        throw new GridError('node.schema', 'Build function is not defined');\n      }\n\n      const buildGroup = (node, line) => {\n        const group = new GroupExpression();\n        group.id = id;\n\n        const schema = new GroupSchemaT(node, line);\n        build(schema);\n        schema.apply(group);\n        line.add(group);\n\n        return node;\n      };\n\n      this.plan.push(buildGroup);\n      this.planMap[id] = buildGroup;\n\n      return this;\n    }\n\n    get(id: string) {\n      const schema = this.schemaMap[id];\n      if (!schema) {\n        throw new GridError('node.schema', `Schema ${id} is not found`);\n      }\n\n      return schema;\n    }\n\n    materialize(id: string): Node {\n      const schema = this.get(id);\n      return schema.apply(new Node(id, schema));\n    }\n  };\n}\n","export interface IStatement {\n\ttype: string;\n\ttemplateKey: string;\n\tdefaults?: any;\n}\n\nexport class EmptyStatement implements IStatement {\n  type = 'empty';\n  templateKey = 'eb-empty.tpl.html';\n}\n","import { guid, isFunction } from '@qgrid/core';\nimport * as patch from '../patch';\nimport * as utility from '../utility';\nimport { Expression, GroupExpression } from './expression';\nimport { GroupSchema } from './group.schema';\nimport { Line } from './line';\nimport { Node } from './node';\nimport { nodeSchema } from './node.schema';\nimport { EmptyStatement, IStatement } from './statement';\n\n\nexport class ExpressionBuilder {\n  constructor(private settings) {\n  }\n\n  build<T>(statements: Array<IStatement>): T {\n    const NodeSchemaT = nodeSchema(GroupSchema);\n\n    const settings = this.settings;\n    statements\n      .concat([new EmptyStatement()])\n      .forEach(statement => {\n        const factory = function (...args) {\n          let id = guid();\n          let sampleExpression: Expression;\n          if (args.length > 1) {\n            id = args[0];\n            sampleExpression = args[1];\n          } else if (args.length === 1) {\n            sampleExpression = args[0];\n          }\n\n          const build = function (node: Node, line: Line) {\n            const expression =\n              utility.defaults<Expression>(\n                sampleExpression,\n                statement.defaults,\n                settings.defaults,\n              );\n\n            expression.id = id;\n            expression.type = statement.type;\n            expression.templateUrl = statement.templateKey;\n\n            const group = new GroupExpression();\n            group.id = id;\n            group.expressions.push(expression);\n\n            line.add(group);\n            patch.methodsOf(expression).with(node, line);\n\n            const keys = Object.keys(expression);\n\n            keys.forEach(key => {\n              const sourceFunction = expression[key];\n\n              if (isFunction(sourceFunction)) {\n                expression[key] = (...context) => {\n                  const result = sourceFunction.apply(expression, context);\n\n                  // TODO add decorator for mutable methods instead of trigger\n                  if (!line.immutable) {\n                    expression.method = expression.method || [];\n                    if (expression.method.indexOf(key) < 0) {\n                      expression.method.push(key);\n                    }\n\n                    line.immutable = true;\n                  }\n                  return result;\n                };\n              }\n            });\n\n            return node;\n          };\n\n          this.plan.push(build);\n          this.planMap[id] = build;\n\n          return this;\n        };\n\n        const groupFactory = function (...args) {\n          let id = guid();\n          let sampleExpression: Expression;\n          if (args.length > 1) {\n            id = args[0];\n            sampleExpression = args[1];\n          } else if (args.length === 1) {\n            sampleExpression = args[0];\n          }\n\n          const build = function (node, line, expressionGroup) {\n            const expression =\n              utility.defaults<Expression>(\n                sampleExpression,\n                statement.defaults,\n                settings.defaults,\n              );\n\n            expression.id = id;\n            expression.type = statement.type;\n            expression.templateUrl = statement.templateKey;\n            expressionGroup.expressions.push(expression);\n\n            patch.methodsOf(expression).with(node, line);\n\n            return node;\n          };\n\n          this.plan.push(build);\n\n          return this;\n        };\n\n        NodeSchemaT.prototype[statement.type] = factory;\n        GroupSchema.prototype[statement.type] = groupFactory;\n      });\n\n    // TODO: think how to avoid this\n    return new NodeSchemaT() as T;\n  }\n}\n","function swap(inst: { [key: string]: string }): { [key: string]: string } {\n  const result = {};\n  for (const prop in inst) {\n    if (Object.prototype.hasOwnProperty.call(inst, prop)) {\n      result[inst[prop]] = prop;\n    }\n  }\n\n  return result;\n}\n\nconst commonOperators = [\n  'EQUALS',\n  'NOT EQUALS',\n  'IN',\n  'IS EMPTY',\n  'IS NOT EMPTY',\n];\n\nconst oneToOneCommonOperators = ['EQUALS', 'NOT EQUALS'];\n\nconst textOperators = [\n  'LIKE',\n  'NOT LIKE',\n  'STARTS WITH',\n  'ENDS WITH',\n];\n\nconst numberOperators = [\n  'BETWEEN',\n  'GREATER THAN',\n  'LESS THAN',\n  'GREATER OR EQ. TO',\n  'LESS OR EQ. TO',\n];\n\nconst oneToOneNumberOperators = [\n  'GREATER THAN',\n  'LESS THAN',\n  'GREATER OR EQ. TO',\n  'LESS OR EQ. TO',\n];\n\nexport const camelCaseMapping = {\n  'IS EMPTY': 'isNull',\n  'IS NOT EMPTY': 'isNotNull',\n  'EQUALS': 'equals',\n  'NOT EQUALS': 'notEquals',\n  'GREATER OR EQ. TO': 'greaterThanOrEquals',\n  'LESS OR EQ. TO': 'lessThanOrEquals',\n  'GREATER THAN': 'greaterThan',\n  'LESS THAN': 'lessThan',\n  'LIKE': 'like',\n  'NOT LIKE': 'notLike',\n  'STARTS WITH': 'startsWith',\n  'ENDS WITH': 'endsWith',\n  'IN': 'in',\n  'BETWEEN': 'between',\n};\n\nexport const typeMapping = {\n  bool: oneToOneCommonOperators,\n  id: commonOperators.concat(textOperators),\n  text: commonOperators.concat(textOperators),\n  email: commonOperators.concat(textOperators),\n  url: commonOperators.concat(textOperators),\n  password: commonOperators.concat(textOperators),\n  number: commonOperators.concat(numberOperators),\n  date: commonOperators.concat(numberOperators),\n  time: commonOperators.concat(numberOperators),\n  currency: commonOperators.concat(numberOperators),\n};\n\nexport const oneToOneMapping = {\n  bool: oneToOneCommonOperators,\n  id: oneToOneCommonOperators.concat(textOperators),\n  text: oneToOneCommonOperators.concat(textOperators),\n  email: oneToOneCommonOperators.concat(textOperators),\n  url: oneToOneCommonOperators.concat(textOperators),\n  password: oneToOneCommonOperators.concat(textOperators),\n  number: oneToOneCommonOperators.concat(oneToOneNumberOperators),\n  date: oneToOneCommonOperators.concat(oneToOneNumberOperators),\n  time: oneToOneCommonOperators.concat(oneToOneNumberOperators),\n  currency: oneToOneCommonOperators.concat(oneToOneNumberOperators),\n};\n\nexport const labelMapping = swap(camelCaseMapping);\n","import * as columnService from '@qgrid/core';\nimport { getValueFactory, isUndefined, uniq } from '@qgrid/core';\nimport { GridError, GridModel } from '@qgrid/ngx';\nimport { ExpressionBuilder } from '../expression-builder/model/expression.builder';\nimport { Node } from '../expression-builder/model/node';\nimport { typeMapping } from './schema/operator';\n\nexport interface Column {\n\tkey: string; title: string; type: string;\n}\n\nexport interface ColumnMap {\n\t[key: string]: Column;\n}\n\nexport interface IQueryBuilderSchema {\n\tapply(node?: Node): Node;\n\tattr(key: string, value: any): IQueryBuilderSchema;\n\tnode(id: string, build: (schema: IQueryBuilderSchema) => void): IQueryBuilderSchema;\n\tgroup(id: string, build: (schema: IQueryBuilderSchema) => void): IQueryBuilderSchema;\n\tget(id: string): IQueryBuilderSchema;\n\tmaterialize(id: string): Node;\n\n\tautocomplete(id: string, settings?: any): IQueryBuilderSchema;\n\tbutton(id: string, settings?: any): IQueryBuilderSchema;\n\tinput(id: string, settings?: any): IQueryBuilderSchema;\n\ticonButton(id: string, settings?: any): IQueryBuilderSchema;\n\tlabel(id: string, settings?: any): IQueryBuilderSchema;\n\tmultiselect(id: string, settings?: any): IQueryBuilderSchema;\n\tselect(id: string, settings?: any): IQueryBuilderSchema;\n}\n\nexport class QueryBuilderService {\n  constructor(private model: GridModel) {\n  }\n\n  columns(): Array<Column> {\n    const model = this.model;\n    return model\n      .columnList()\n      .line\n      .filter(column => Object.prototype.hasOwnProperty.call(typeMapping, column.type))\n      .map(column => ({\n        key: column.key,\n        title: column.title,\n        type: column.type,\n      }));\n  }\n\n  columnMap(): ColumnMap {\n    return this.columns().reduce((memo, column) => {\n      memo[column.key] = column;\n      return memo;\n    }, {});\n  }\n\n  submit(expression) {\n    const model = this.model;\n    model.filter({\n      by: expression,\n    }, {\n      source: 'query-builder.service',\n    });\n  }\n\n  suggest(key, skip, take, search, selection?: Array<string>): Promise<string[]> {\n    selection = (selection || []).map(item => ('' + item).toLowerCase());\n\n    const model = this.model;\n    const columnMap = columnService.mapColumns(model.columnList().line);\n    const column = columnMap[key];\n    if (!column) {\n      throw new GridError('query-builder.service', `Column ${key} is not found`);\n    }\n\n    const getValue = getValueFactory(column);\n    return new Promise(resolve => {\n      const view = model\n        .data()\n        .rows\n        .map(getValue)\n        .filter(item =>\n          !isUndefined(item) &&\n\t\t\t\t\titem !== '' &&\n\t\t\t\t\titem !== null &&\n\t\t\t\t\tselection.indexOf(('' + item).toLowerCase()) < 0,\n        );\n\n      const uniqueView = uniq(view);\n      const sortedView = uniqueView.sort();\n      const searchText = ('' + search).toLowerCase();\n      const filterView = searchText\n        ? sortedView.filter(x => ('' + x).toLowerCase().indexOf(searchText) >= 0)\n        : sortedView;\n\n      const toggleView = filterView.length ? filterView : sortedView;\n      const pageView = toggleView.slice(skip, take);\n      resolve(pageView);\n    });\n  }\n\n  build(): IQueryBuilderSchema {\n    const statements = [\n      {\n        type: 'label',\n        templateKey: 'plugin-eb-label.tpl.html',\n      },\n      {\n        type: 'input',\n        templateKey: 'plugin-eb-input.tpl.html',\n      },\n      {\n        type: 'select',\n        templateKey: 'plugin-eb-select.tpl.html',\n      },\n      {\n        type: 'button',\n        templateKey: 'plugin-eb-button.tpl.html',\n      },\n      {\n        type: 'iconButton',\n        templateKey: 'plugin-eb-icon-button.tpl.html',\n      },\n      {\n        type: 'autocomplete',\n        templateKey: 'plugin-eb-autocomplete.tpl.html',\n      },\n      {\n        type: 'multiselect',\n        templateKey: 'plugin-eb-multiselect.tpl.html',\n      },\n    ];\n\n    const settings = {\n      defaults: {\n        isValid: function () {\n          return !this.validate || !(this.state = this.validate()).length;\n        },\n      },\n    };\n\n    return new ExpressionBuilder(settings)\n      .build<IQueryBuilderSchema>(statements);\n  }\n}\n","import { cloneDeep } from '@qgrid/core';\nimport { GridError } from '@qgrid/ngx';\nimport { camelCaseMapping } from './operator';\n\nexport function visit(item) {\n  switch (item.id) {\n    case '#root':\n      return visit(item.children[0]);\n    case '#logical': {\n      const group = visitGroup(item);\n      if (group) {\n        if (!(group.left || group.right)) {\n          return null;\n        }\n      }\n\n      return group;\n    }\n    case '#condition':\n      return visitCondition(item);\n    default:\n      throw new GridError('converter', `Invalid kind ${item.kind}`);\n  }\n}\n\nfunction visitGroup(node) {\n  const line = node.line;\n  const opExpr = find(line, '#logical-op', '#logical-op');\n  const children = node.children.filter(notPlaceholder).map(visit);\n\n  if (children.length === 0) {\n    return null;\n  }\n\n  if (children.length === 1) {\n    return {\n      kind: 'group',\n      op: opExpr.value.toLowerCase(),\n      left: children[0],\n      right: null,\n    };\n  }\n\n  return children\n    .slice(1)\n    .reduce((memo, item) => ({\n      kind: 'group',\n      op: opExpr.value.toLowerCase(),\n      left: memo,\n      right: item,\n    }), children[0]);\n}\n\nfunction visitCondition(node) {\n  const line = node.line;\n  const opExpr = find(line, '#operator', '#operator');\n  const value = opExpr.value.toUpperCase();\n\n  let condition;\n  switch (value) {\n    case 'IS NOT EMPTY':\n    case 'IS EMPTY':\n      condition = visitUnary(line, opExpr.value);\n      break;\n    case 'EQUALS':\n    case 'NOT EQUALS':\n    case 'GREATER OR EQ. TO':\n    case 'GREATER THAN':\n    case 'LESS OR EQ. TO':\n    case 'LESS THAN':\n    case 'LIKE':\n    case 'NOT LIKE':\n    case 'STARTS WITH':\n    case 'ENDS WITH':\n      condition = visitBinary(line, opExpr.value);\n      break;\n    case 'BETWEEN':\n      condition = visitBetween(line);\n      break;\n    case 'IN':\n      condition = visitIn(line);\n      break;\n    default:\n      throw new GridError('converter', `Invalid operation ${value}`);\n  }\n\n  condition.kind = 'condition';\n  return condition;\n}\n\nfunction visitUnary(line, op) {\n  const left = visitField(line);\n\n  return {\n    left: left.value,\n    op: camelCaseMapping[op.toUpperCase()],\n  };\n}\n\nfunction visitBinary(line, op) {\n  const left = visitField(line);\n  const right = find(line, '#operand', '#value') || find(line, '#fieldRight');\n\n  return {\n    left: left.value,\n    op: camelCaseMapping[op.toUpperCase()],\n    right: right.value,\n  };\n}\n\nfunction visitIn(line) {\n  const left = visitField(line);\n  const right = find(line, '#operand', '#in-operand') || find(line, '#fieldRight');\n\n  return {\n    left: left.value,\n    op: 'in',\n    right: cloneDeep(right.values) || right.value,\n  };\n}\n\nfunction visitBetween(line) {\n  const left = visitField(line);\n  const from = find(line, '#operand', '#from') || find(line, '#fieldFrom');\n  const to = find(line, '#operand', '#to') || find(line, '#fieldTo');\n\n  return {\n    left: left.value,\n    op: 'between',\n    right: [from.value, to.value],\n  };\n}\n\nfunction visitField(line) {\n  return find(line, '#field') || find(line, '#fieldLeft');\n}\n\nfunction notPlaceholder(node) {\n  return !node.attributes.placeholder;\n}\n\nfunction find(line, groupId: string, exprId?: string) {\n  const group = findById(line, groupId);\n  if (!group) {\n    return null;\n  }\n\n  return findById(group.expressions, exprId || groupId);\n}\n\nfunction findById(items, id: string) {\n  const result = items.filter(item => item.id === id);\n  const length = result.length;\n\n  if (length === 1) {\n    return result[0];\n  }\n\n  if (length > 1) {\n    throw new GridError('converter', `Ambiguous id ${id}`);\n  }\n\n  return null;\n}\n","import { QueryBuilderService } from '../query-builder.service';\n\nexport function suggestFactory(service: QueryBuilderService, name: string) {\n  return function (node, line) {\n    const search = (this.value || '').toLowerCase();\n    const field = line.get(name).expressions[0].value;\n    return service.suggest(field, 0, 10, search);\n  };\n}\n\nexport function suggestsFactory(service: QueryBuilderService, name: string) {\n  return function (node, line) {\n    const search = this.search;\n    const field = line.get(name).expressions[0].value;\n    const selection =\n      (this.values || [])\n        .map(item => ('' + item).toLowerCase());\n\n    return new Promise((resolve, reject) =>\n      service\n        .suggest(field, 0, 10, search, selection)\n        .then(items => {\n          const result = selection.length\n            ? items.filter(item => selection.indexOf(('' + item).toLowerCase()) < 0)\n            : items;\n          resolve(result);\n        })\n        .catch(ex => reject(ex)),\n    );\n  };\n}\n","import { createValidator, isArray } from '@qgrid/core';\nimport { GridError } from '@qgrid/ngx';\nimport { ColumnMap, QueryBuilderService } from '../query-builder.service';\n\nexport class Validator {\n  private columnMap: ColumnMap;\n  private trueResult: Array<string> = [];\n  private validators: { [key: string]: (value: any) => Array<string> } = {};\n  private rules = {\n    'bool': ['required'],\n    'currency': ['required', 'decimal'],\n    'date': ['required', 'iso_date'],\n    'email': ['required'],\n    'file': ['required'],\n    'id': ['required'],\n    'image': ['required'],\n    'number': ['required', 'decimal'],\n    'password': ['required'],\n    'url': ['required'],\n    'reference': ['required'],\n    'text': ['required', 'string'],\n    'time': ['required'],\n  };\n\n  constructor(service: QueryBuilderService) {\n    this.columnMap = service.columnMap();\n  }\n\n  for(key: string) {\n    const validators = this.validators;\n    if (Object.prototype.hasOwnProperty.call(validators, 'key')) {\n      return validators[key];\n    }\n\n    const column = this.columnMap[key];\n    if (!column) {\n      throw new GridError('validator', `Can't find column ${key}`);\n    }\n\n    const trueResult = this.trueResult;\n    const id = column.type;\n    const rule = this.rules[id];\n    let validate: ((value: any) => string[]) = () => trueResult;\n    if (rule) {\n      const schema = { [id]: rule };\n      validate = function test(value): Array<string> {\n        if (isArray(value)) {\n          const result = [];\n          for (const item of value) {\n            result.push(...test(item));\n          }\n\n          return result;\n        }\n\n        const target = { [id]: value };\n        const validator = createValidator(schema);\n        const isValid = validator.validate(target);\n        if (isValid) {\n          return trueResult;\n        }\n\n        const error = validator.getErrors()[id];\n        return isArray(error) ? error : [error];\n      };\n    }\n\n    validators[key] = validate;\n    return validate;\n  }\n}\n","import { isArray, noop } from '@qgrid/core';\nimport { IQueryBuilderSchema, QueryBuilderService } from '../query-builder.service';\nimport { typeMapping } from './operator';\nimport { suggestFactory, suggestsFactory } from './suggest.service';\nimport { Validator } from './validator';\n\nexport const getValue = (line, id, props) => {\n  const group = line.get(id);\n  if (group) {\n    if (group.expressions.length === 1) {\n      const expr = group.expressions[0];\n      const prop = props.filter(p => Object.prototype.hasOwnProperty.call(expr, p))[0];\n      if (prop) {\n        const value = expr[prop];\n        if (isArray(value) && value.length) {\n          return value[0];\n        }\n\n        return value;\n      }\n    }\n  }\n\n  return null;\n};\n\nexport class WhereSchema {\n  constructor(private service: QueryBuilderService) {\n  }\n\n  factory(): IQueryBuilderSchema {\n    const service = this.service;\n    const suggest = suggestFactory(service, '#field');\n    const suggests = suggestsFactory(service, '#field');\n    const validator = new Validator(service);\n\n    return this.service.build()\n      .node('#logical', function (logical) {\n        logical\n          .attr('serialize', {\n            '#logical-op': ['value'],\n          })\n          .attr('class', {\n            'qb-logical': true,\n            'qb-and': function (node) {\n              const op = node.line.get('#logical-op');\n              return op.expressions[0].value === 'AND';\n            },\n            'qb-or': function (node) {\n              const op = node.line.get('#logical-op');\n              return op.expressions[0].value === 'OR';\n            },\n          })\n          .select('#logical-op', {\n            classes: ['qb-operation'],\n            options: ['AND', 'OR'],\n            value: 'AND',\n          })\n          .node('#condition', function (condition) {\n            condition\n              .attr('serialize', {\n                '#field': ['value'],\n                '#operator': ['value'],\n                '#value': ['value'],\n                '#from': ['value'],\n                '#to': ['value'],\n                '#in-operand': ['values'],\n              })\n              .select('#field', {\n                classes: ['qb-field'],\n                options: service.columns().map(c => c.key),\n                value: service.columns().length ? service.columns()[0].key : '',\n                getLabel: function (node, line, key) {\n                  const column = service.columns().filter(c => c.key === key)[0];\n                  return (column && column.title) || null;\n                },\n                getType: function (node, line, key) {\n                  const column = service.columns().filter(c => c.key === key)[0];\n                  return (column && column.type) || null;\n                },\n                change: function (node, line) {\n                  const field = this.value;\n                  const type = this.getType(field);\n                  const ops = typeMapping[type] || [];\n                  const op = line.get('#operator').expressions[0];\n\n                  if (ops.indexOf(op.value) < 0) {\n                    op.value = ops.length ? ops[0] : null;\n                    op.change();\n                  } else {\n                    const operand = line.get('#operand').expressions[0];\n                    if (operand.validate) {\n                      const result = operand.validate();\n                      if (result.length) {\n                        operand.value = null;\n                      }\n                    } else {\n                      operand.value = null;\n                    }\n                  }\n                },\n              })\n              .select('#operator', {\n                classes: ['qb-operator'],\n                getOptions: function (node, line) {\n                  const field = line.get('#field').expressions[0];\n                  const name = field.value;\n                  const type = field.getType(name);\n\n                  return type ? typeMapping[type] : [];\n                },\n                value: 'EQUALS',\n                change: function (node, line) {\n                  switch (this.value.toLowerCase()) {\n                    case 'equals':\n                    case 'not equals':\n                    case 'greater than':\n                    case 'less than':\n                    case 'greater or eq. to':\n                    case 'less or eq. to':\n                    case 'like':\n                    case 'not like':\n                    case 'starts with':\n                    case 'ends with':\n                      line.put('#operand', node, function (schema) {\n                        schema.input('#value', {\n                          classes: {\n                            'qb-operand': true,\n                            'qb-has-value': function () {\n                              return !!this.value;\n                            },\n                            'qb-invalid': function (n) {\n                              return !this.isValid(n);\n                            },\n                          },\n                          value: getValue(line, '#operand', ['value', 'values']),\n                          validate: function () {\n                            const field = line.get('#field').expressions[0].value;\n                            return validator.for(field)(this.value);\n                          },\n                          placeholderText: 'Select value',\n                          suggest: suggest,\n                          options: null,\n                          refresh: function (n, l) {\n                            this.options = this.suggest(n, l);\n                          },\n                        });\n                      });\n                      break;\n                    case 'between':\n                      line.put('#operand', node, function (operand) {\n                        operand\n                          .input('#from', {\n                            classes: {\n                              'qb-operand': true,\n                              'qb-has-value': function () {\n                                return !!this.value;\n                              },\n                              'qb-invalid': function (n) {\n                                return !this.isValid(n);\n                              },\n                            },\n                            validate: function () {\n                              const field = line.get('#field').expressions[0].value;\n                              return validator.for(field)(this.value);\n                            },\n                            options: suggest,\n                            value: null,\n                            placeholderText: 'Select value',\n                          })\n                          .label('#and', {\n                            classes: ['qb-operand', 'qb-operand-and-label'],\n                            text: 'AND',\n                          })\n                          .input('#to', {\n                            classes: {\n                              'qb-operand': true,\n                              'qb-has-value': function () {\n                                return !!this.value;\n                              },\n                              'qb-invalid': function (n) {\n                                return !this.isValid(n);\n                              },\n                            },\n                            value: null,\n                            validate: function () {\n                              const field = line.get('#field').expressions[0].value;\n                              return validator.for(field)(this.value);\n                            },\n                            placeholderText: 'Select value',\n                            suggest: suggest,\n                            options: null,\n                            refresh: function (n, l) {\n                              this.options = this.suggest(n, l);\n                            },\n                          });\n                      });\n                      break;\n                    case 'in':\n                      line.put('#operand', node, function (schema) {\n                        schema\n                          .label('#in-open', {\n                            text: '(',\n                          })\n                          .multiselect('#in-operand', {\n                            classes: {\n                              'qb-operand': true,\n                              'qb-has-value': function () {\n                                return !!this.values.length;\n                              },\n                              'qb-invalid': function (n) {\n                                return !this.isValid(n);\n                              },\n                            },\n                            validate: function () {\n                              const field = line.get('#field').expressions[0].value;\n                              return validator.for(field)(this.values);\n                            },\n                            values: [],\n                            options: suggests,\n                            placeholderText: 'Select value',\n                            add: function (n, l, v) {\n                              if (v && this.values.indexOf(v) < 0) {\n                                this.values.push(v);\n                              }\n                            },\n                          })\n                          .label('#in-close', {\n                            text: ')',\n                          });\n                      });\n                      break;\n                    case 'is empty':\n                    case 'is not empty':\n                      line.put('#operand', node, noop);\n                      break;\n                  }\n                },\n              })\n              .group('#operand', function (schema) {\n                schema.autocomplete('#value', {\n                  classes: {\n                    'qb-operand': true,\n                    'qb-has-value': function () {\n                      return !!this.value;\n                    },\n                    'qb-invalid': function (node) {\n                      return !this.isValid(node);\n                    },\n                  },\n                  value: null,\n                  validate: function (node, line) {\n                    const field = line.get('#field').expressions[0].value;\n                    return validator.for(field)(this.value);\n                  },\n                  placeholderText: 'Select value',\n                  suggest: suggest,\n                  options: null,\n                  refresh: function (node, line) {\n                    this.options = this.suggest(node, line);\n                  },\n                });\n              });\n          });\n      });\n  }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { clone, Command } from '@qgrid/core';\nimport { GridPlugin } from '@qgrid/ngx';\nimport { EbNodeService } from '../expression-builder/eb-node.service';\nimport { Node } from '../expression-builder/model/node';\nimport { INodeSchema } from '../expression-builder/model/node.schema';\nimport { SerializationService } from '../expression-builder/serialization.service';\nimport { TraverseService } from '../expression-builder/traverse.service';\nimport { FocusAfterRender } from '../focus/focus.service';\nimport { QueryBuilderModel } from './query-builder.model';\nimport { QueryBuilderService } from './query-builder.service';\nimport * as converter from './schema/converter';\nimport { WhereSchema } from './schema/where.schema';\n\n@Component({\n  selector: 'q-grid-query-builder-panel',\n  templateUrl: './query-builder-panel.component.html',\n  providers: [FocusAfterRender, GridPlugin],\n})\nexport class QueryBuilderPanelComponent implements OnInit {\n  private traverse = new TraverseService();\n  private plan: INodeSchema;\n\n  @Output() close = new EventEmitter<any>();\n\n  node: Node;\n  queryService: QueryBuilderService;\n\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: QueryBuilderPanelComponent } = {\n    $implicit: this,\n  };\n\n  addGroup = new Command({\n    execute: () => {\n      const current = this.nodeService.current;\n      const parent = this.findLogicalNode(current);\n      const group = parent.clone();\n      parent.addChildAfter(group, current.id === '#condition' && current);\n      if (current.id === '#condition') {\n        this.nodeService.current = group;\n      }\n    },\n    canExecute: () => !!this.findLogicalNode(this.nodeService.current),\n  });\n\n  addRule = new Command({\n    execute: () => {\n      const current = this.nodeService.current;\n      const parent = this.findLogicalNode(current);\n      const rule = this.plan.materialize('#condition');\n      parent.addChildAfter(rule, current.id === '#condition' && current);\n      if (current.id === '#condition') {\n        this.nodeService.current = rule;\n      }\n    },\n    canExecute: () => !!this.findLogicalNode(this.nodeService.current),\n  });\n\n  remove = new Command({\n    execute: () => {\n      const current = this.nodeService.current;\n      if (current.id === '#logical' && current.level === 1) {\n        current.clear();\n      } else {\n        const previous = this.traverse.findUpSibling(current);\n        this.nodeService.current = previous;\n        current.remove();\n      }\n    },\n    canExecute: () => {\n      const current = this.nodeService.current;\n      return current && (current.id === '#condition' || (current.level > 1 || current.children.length > 0));\n    },\n  });\n\n  submit = new Command({\n    source: 'query-builder.component',\n    execute: () => {\n      const serializer = new SerializationService();\n      const node = serializer.serialize(this.node);\n\n      const by = clone(this.plugin.model.filter().by);\n      by.$expression = converter.visit(node);\n\n      const { model } = this.plugin;\n      model.filter({ by });\n      const qb = model.resolve(QueryBuilderModel);\n      qb.state({ node: by.$expression ? node : null });\n\n      this.close.emit();\n    },\n    canExecute: () => {\n      const depth = this.traverse.depth(this.node);\n      return depth(\n        (memo, expression, line, node) =>\n          node.attr('placeholder')\n            ? memo\n            : memo && expression.isValid()\n        , true);\n    },\n  });\n\n  cancel = new Command({\n    source: 'query-builder.component',\n    execute: () => {\n      this.close.emit();\n    },\n  });\n\n  reset = new Command({\n    source: 'query-builder.component',\n    execute: () => {\n      const schema = new WhereSchema(this.queryService);\n      const plan = schema.factory();\n      this.node = plan.apply();\n\n      const root = this.node.children[0];\n      root.clear();\n\n      this.nodeService.current = this.node.children[0];\n\n    },\n  });\n\n  constructor(\n    public focusAfterRender: FocusAfterRender,\n    private plugin: GridPlugin,\n    private nodeService: EbNodeService,\n  ) {\n  }\n\n  ngOnInit() {\n    this.queryService = new QueryBuilderService(this.plugin.model);\n\n    const schema = new WhereSchema(this.queryService);\n    this.plan = schema.factory() as any;\n    this.node = this.plan.apply();\n\n    const serializer = new SerializationService();\n    const qb = this.plugin.model.resolve(QueryBuilderModel);\n    const { node } = qb.state();\n    if (node) {\n      this.node = serializer.deserialize(this.plan, node);\n    }\n\n    this.nodeService.current = this.node.children[0];\n  }\n\n  private findLogicalNode(node: Node) {\n    return this.traverse.findUp(node, n => n.id === '#logical');\n  }\n}\n","<ng-container key=\"plugin-query-builder-panel.tpl.html\"\n              [context]=\"context\">\n</ng-container>\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { MarkupVisitor } from '@qgrid/core';\nimport { Node } from '../expression-builder/model/node';\nimport { SerializationService } from '../expression-builder/serialization.service';\nimport { QueryBuilderService } from './query-builder.service';\nimport * as converter from './schema/converter';\nimport { Validator } from './schema/validator';\n\n@Pipe({\n  name: 'qGridQueryBuilderMarkup',\n  pure: false,\n})\nexport class QueryBuilderPipe implements PipeTransform {\n  visitor: MarkupVisitor;\n\n  transform(value: any, service: QueryBuilderService): any {\n    const node = value as Node;\n    if (node) {\n      if (!this.visitor) {\n        const validator = new Validator(service);\n        const columnMap = service.columnMap();\n        this.visitor =\n          new MarkupVisitor(\n            k => columnMap[k].title,\n            k => columnMap[k].type,\n            (k, v) => validator.for(k)(v).length === 0,\n          );\n      }\n\n      const serializer = new SerializationService();\n      const filter = serializer.serialize(node);\n      const expression = converter.visit(filter);\n      if (expression) {\n        return this.visitor.visit(expression);\n      }\n    }\n\n    return 'Please, select a query';\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { TemplateModule, GridModelBuilder } from '@qgrid/ngx';\nimport { QueryBuilderComponent } from './query-builder.component';\nimport { QueryBuilderPanelComponent } from './query-builder-panel.component';\nimport { QueryBuilderPipe } from './query-builder.pipe';\nimport { QueryBuilderModel } from './query-builder.model';\n\n@NgModule({\n  imports: [\n    TemplateModule,\n  ],\n  exports: [\n    QueryBuilderComponent,\n    QueryBuilderPanelComponent,\n    QueryBuilderPipe,\n  ],\n  declarations: [\n    QueryBuilderComponent,\n    QueryBuilderPanelComponent,\n    QueryBuilderPipe,\n  ],\n})\nexport class QueryBuilderModule {\n  constructor(modelBuilder: GridModelBuilder) {\n    modelBuilder\n      .register('queryBuilder', QueryBuilderModel);\n  }\n}\n","import { AfterViewInit, Directive, ElementRef, Input } from '@angular/core';\nimport { GridError } from '@qgrid/ngx';\n\n@Directive({\n  selector: '[q-grid-raise]',\n})\nexport class RaiseDirective implements AfterViewInit {\n  @Input('q-grid-raise') type = 'click';\n  @Input('q-grid-raise-target') target: string;\n\n  constructor(private element: ElementRef) { }\n\n  ngAfterViewInit() {\n    const event = new Event(this.type);\n    const element = this.element.nativeElement;\n\n    const target = this.target\n      ? element.querySelector(this.target)\n      : element;\n\n    if (!target) {\n      throw new GridError('raise.directive', 'raise target is not found');\n    }\n\n    target.dispatchEvent(event);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RaiseDirective } from './raise.directive';\n\n@NgModule({\n  declarations: [\n    RaiseDirective,\n  ],\n  exports: [\n    RaiseDirective,\n  ],\n})\nexport class RaiseModule {\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  CellView,\n  Command,\n  getValueFactory,\n  isArray,\n  isUndefined,\n  SelectionService,\n} from '@qgrid/core';\nimport { Disposable, GridModel, GridModelBuilder } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-reference',\n  templateUrl: './reference.component.html',\n  providers: [Disposable],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReferenceComponent implements OnInit {\n  private _value: any;\n  private _model: GridModel;\n  private _reference: {\n    commit: Command<{ entries: any[]; items: any[] }>;\n    cancel: Command;\n    value: any;\n  };\n\n  @Output() modelChange = new EventEmitter<GridModel>();\n  @Output() valueChange = new EventEmitter<any>();\n  @Output() referenceChange = new EventEmitter<{ commit: ReferenceComponent['reference']['commit']; cancel: Command; value: any }>();\n\n  @Input() caption = '';\n  @Input() autofocus = false;\n  @Input() cell: CellView;\n\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: ReferenceComponent } = {\n    $implicit: this,\n  };\n\n  get value() { return this._value; }\n  @Input() set value(value) {\n    if (value !== this._value) {\n      this._value = value;\n      this.valueChange.emit(value);\n    }\n  }\n\n  get model() { return this._model; }\n  @Input() set model(value) {\n    if (value !== this._model) {\n      this._model = value;\n      this.modelChange.emit(value);\n    }\n  }\n\n  get reference() { return this._reference; }\n  @Input() set reference(value) {\n    if (value !== this._reference) {\n      this._reference = value;\n      this.referenceChange.emit(value);\n    }\n  }\n\n  constructor(\n    private modelBuilder: GridModelBuilder,\n    private disposable: Disposable,\n  ) {\n  }\n\n  ngOnInit() {\n    this.reference = {\n      commit: new Command({ execute: e => this.value = e.entries }),\n      cancel: new Command(),\n      value: this.value,\n    };\n\n    if (this.cell.column.editorOptions?.modelFactory) {\n      this.model = this.cell.column.editorOptions.modelFactory({\n        reference: this.reference,\n        row: this.cell.row,\n        column: this.cell.column,\n        getValue: getValueFactory(this.cell.column),\n        createDefaultModel: () => this.modelBuilder.build(),\n      });\n\n      const selectionService = new SelectionService(this.model);\n      this.disposable.add(\n        this.model.dataChanged.watch((e, off) => {\n          if (e.hasChanges('rows') && e.state.rows.length > 0) {\n            off();\n\n            if (!this.model.selection().items.length) {\n              const { value } = this.reference;\n              if (!isUndefined(value)) {\n                const entries = isArray(value) ? value : [value];\n                const items = selectionService.map(entries);\n                this.model.selection({\n                  items,\n                }, {\n                  source: 'reference.component',\n                });\n              }\n            }\n          }\n        }),\n      );\n\n      this.disposable.add(\n        this.model\n          .selectionChanged\n          // TODO: use rx syntax\n          .watch(e => {\n            // TODO: get rid of this check\n            if (e.tag.source === 'reference.component') {\n              return;\n            }\n\n            if (e.hasChanges('items')) {\n              const entries = selectionService.lookup(e.state.items);\n              this.value = entries;\n            }\n          }),\n      );\n    }\n  }\n}\n","<ng-container key=\"plugin-reference.tpl.html\"\n              [context]=\"context\">\n</ng-container>\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { CellView, Command, SelectionService } from '@qgrid/core';\nimport { Disposable, GridModel } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-reference-editor',\n  templateUrl: './reference-editor.component.html',\n  providers: [Disposable],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReferenceEditorComponent implements AfterViewInit {\n  private state: any;\n\n  @Output() valueChange = new EventEmitter<any>();\n  @Output() afterSubmit = new EventEmitter();\n  @Output() afterCancel = new EventEmitter();\n\n  @Input() caption = '';\n  @Input() cell: CellView;\n\n  reference: { commit: Command; cancel: Command };\n  model: GridModel;\n\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: ReferenceEditorComponent } = {\n    $implicit: this,\n  };\n\n  submit = new Command();\n  cancel = new Command();\n\n  @Input() get value() {\n    return this.state;\n  }\n  set value(value) {\n    if (value !== this.state) {\n      this.state = value;\n      this.valueChange.emit(value);\n    }\n  }\n\n  constructor(private disposable: Disposable) { }\n\n  ngAfterViewInit() {\n    const { model } = this;\n    const { commit, cancel } = this.reference;\n\n    const { commitShortcuts, cancelShortcuts } = model.edit();\n    const selectionService = new SelectionService(model);\n\n    // TODO: think how to get rid of this shit.\n    setTimeout(() => {\n      this.submit = new Command({\n        shortcut: commitShortcuts.form,\n        canExecute: () => {\n          const { items } = model.selection();\n          const entries = selectionService.lookup(items);\n          const context = { items, entries };\n\n          return commit.canExecute(context);\n        },\n        execute: () => {\n          const { items } = model.selection();\n          const entries = selectionService.lookup(items);\n          const context = { items, entries };\n          if (commit.execute(context) !== false) {\n            this.afterSubmit.emit();\n          } else {\n            this.afterCancel.emit();\n          }\n\n          return false;\n        },\n      });\n\n      this.cancel = new Command({\n        shortcut: cancelShortcuts.form || cancelShortcuts.$default,\n        canExecute: () => cancel.canExecute(),\n        execute: () => {\n          if (cancel.execute() !== false) {\n            this.afterCancel.emit();\n          }\n\n          return false;\n        },\n      });\n\n      const { shortcut, manager } = model.action();\n      this.disposable.add(\n        shortcut.register(manager, [this.submit, this.cancel]),\n      );\n    }, 0);\n  }\n}\n","<ng-container key=\"plugin-reference-editor.tpl.html\" [context]=\"context\"></ng-container>\n","import { NgModule } from '@angular/core';\nimport { ReferenceEditorComponent } from './reference-editor.component';\nimport { ReferenceComponent } from './reference.component';\nimport { TemplateModule } from '@qgrid/ngx';\n\n@NgModule({\n  declarations: [\n    ReferenceEditorComponent,\n    ReferenceComponent,\n  ],\n  exports: [\n    ReferenceEditorComponent,\n    ReferenceComponent,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class ReferenceEditorModule {}\n","import { HttpClient } from '@angular/common/http';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n} from '@angular/core';\nimport { RestState } from '@qgrid/core';\nimport { GridPlugin, StateAccessor } from '@qgrid/ngx';\nimport { RestPlugin } from '@qgrid/plugins';\n\n@Component({\n  selector: 'q-grid-rest',\n  template: '',\n  providers: [GridPlugin, StateAccessor],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RestComponent implements OnInit, OnChanges {\n  private restState = this.stateAccessor.setter(RestState);\n\n  context: { $implicit: RestPlugin };\n\n  @Input('url') set restUrl(url: string) { this.restState({ url }); }\n  @Input('method') set restMethod(method: string) { this.restState({ method }); }\n  @Input('serialize') set restSerialize(serialize: (x: any) => any) { this.restState({ serialize }); }\n\n  constructor(\n    private http: HttpClient,\n    private plugin: GridPlugin,\n    private stateAccessor: StateAccessor,\n  ) {\n  }\n\n  ngOnChanges() {\n    const { model } = this.plugin;\n    this.stateAccessor.write(model);\n  }\n\n  ngOnInit() {\n    const rest = new RestPlugin(\n      this.plugin.model,\n      {\n        get: (url, params) => this.http.get(url, { params }).toPromise(),\n        post: (url, data) => this.http.post(url, { data }).toPromise(),\n      },\n    );\n\n    this.context = { $implicit: rest };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RestComponent } from './rest.component';\n\n@NgModule({\n  declarations: [\n    RestComponent,\n  ],\n  exports: [\n    RestComponent,\n  ],\n})\nexport class RestModule {\n}\n","<ng-template>\n\t<ng-content>\n\t</ng-content>\n</ng-template>\n","import {\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { GridPlugin } from '@qgrid/ngx';\nimport { TemplateHostService } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-rule',\n  templateUrl: './rule.component.html',\n  providers: [TemplateHostService, GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RuleComponent implements OnChanges {\n  @Input() for: string;\n  @Input() key: string;\n\n  // Common Rules\n  @Input() required: string;\n  @Input('notEmptyList') not_empty_list: string;\n  @Input('anyObject') any_object: string;\n\n  // String Rules\n  @Input('equal') eq: string;\n  @Input() string: string;\n  @Input('lengthBetween') length_between: number[];\n  @Input('lengthEqual') length_equal: number;\n  @Input('minLength') min_length: number;\n  @Input('maxLength') max_length: number;\n  @Input('oneOf') one_of: string[];\n  @Input('pattern') like: string;\n\n  // Numeric Rules\n  @Input() integer: string;\n  @Input('positiveInteger') positive_integer: string;\n  @Input() decimal: string;\n  @Input('positiveDecimal') positive_decimal: string;\n  @Input('maxNumber') max_number: number;\n  @Input('minNumber') min_number: number;\n\n  // Special Rules\n  @Input() email: string;\n  @Input() url: string;\n  @Input('isoDate') iso_date: string;\n  @Input('equalToField') equal_to_field: string;\n  @Input('listOf') list_of: string[];\n\n  @ViewChild(TemplateRef, { static: true }) templateRef: TemplateRef<any>;\n\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: RuleComponent } = {\n    $implicit: this,\n  };\n\n  constructor(\n    private plugin: GridPlugin,\n    private templateHost: TemplateHostService,\n  ) {\n    this.templateHost.key = () => 'rule';\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const rule = {\n      for: this.for,\n      key: this.key,\n    };\n\n    const { model } = this.plugin;\n    const validation = model.validation;\n    const rules = Array.from(validation().rules);\n\n    Object\n      .keys(changes)\n      .forEach(key => {\n        if (!['for', 'key'].includes(key) && changes[key].firstChange) {\n          rule[key] = this[key];\n        }\n      });\n\n    rules.push(rule);\n    validation({ rules });\n  }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { selectColumnIndex, selectRowIndex } from '@qgrid/core';\nimport { GridPlugin, TemplateHostService } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-status-bar',\n  templateUrl: './status-bar.component.html',\n  providers: [TemplateHostService, GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StatusBarComponent implements OnInit {\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: StatusBarComponent } = {\n    $implicit: this,\n  };\n\n  get rowIndex() {\n    return selectRowIndex(this.plugin.model.navigation());\n  }\n\n  get columnIndex() {\n    return selectColumnIndex(this.plugin.model.navigation());\n  }\n\n  constructor(\n    private plugin: GridPlugin,\n    private cd: ChangeDetectorRef,\n    templateHost: TemplateHostService) {\n    templateHost.key = () => 'plugin-status-bar.tpl.html';\n  }\n\n  ngOnInit() {\n    const { model, observe } = this.plugin;\n    observe(model.navigationChanged)\n      .subscribe(() => this.cd.detectChanges());\n  }\n}\n","<ng-container key=\"plugin-status-bar.tpl.html\" [context]=\"context\"></ng-container>\n","import { NgModule } from '@angular/core';\nimport { TemplateModule } from '@qgrid/ngx';\nimport { StatusBarComponent } from './status-bar.component';\n\n@NgModule({\n  declarations: [\n    StatusBarComponent,\n  ],\n  exports: [\n    StatusBarComponent,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class StatusBarModule {\n}\n","<ng-template>\n    <ng-content></ng-content>\n</ng-template>\n\n<ng-container key=\"plugin-tab-trap.tpl.html\" [context]=\"context\"></ng-container>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { EventListener, EventManager, Shortcut } from '@qgrid/core';\nimport { GridError, GridPlugin } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-tab-trap',\n  templateUrl: './tab-trap.component.html',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TabTrapComponent {\n  private isActivating = false;\n\n  @ViewChild(TemplateRef, { static: true }) template: TemplateRef<any>;\n  @Input() roundTrip = false;\n\n  // eslint-disable-next-line no-use-before-define\n  context: { $implicit: TabTrapComponent } = {\n    $implicit: this,\n  };\n\n  traps = new Map<string, any>();\n\n  constructor(private plugin: GridPlugin, elementRef: ElementRef) {\n    const listener = new EventListener(elementRef.nativeElement, new EventManager(this));\n    listener.on('keydown', e => {\n      const code = Shortcut.translate(e);\n      if (code === 'tab' || code === 'shift+tab') {\n        e.stopPropagation();\n      }\n    });\n  }\n\n  activate(target) {\n    if (this.isActivating) {\n      return;\n    }\n\n    this.isActivating = true;\n    try {\n      if (this.roundTrip) {\n        this.goRound(target);\n      } else {\n        this.exit(target);\n      }\n    } finally {\n      this.isActivating = false;\n    }\n  }\n\n  exit(target) {\n    const e = {\n      key: 'Tab',\n      keyCode: 9,\n      shiftKey: target === 'start',\n    };\n\n    const { model } = this.plugin;\n    const shortcut = model.action().shortcut;\n    shortcut.keyDown(e, 'tab-trap');\n  }\n\n  goRound(target) {\n    switch (target) {\n      case 'start': {\n        const end = this.traps.get('end');\n        end.focus();\n        break;\n      }\n      case 'end': {\n        const start = this.traps.get('start');\n        start.focus();\n        break;\n      }\n      default:\n        throw new GridError('tab.trap', `Invalid target ${target}`);\n    }\n  }\n}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\nimport { EventListener, EventManager } from '@qgrid/core';\nimport { TabTrapComponent } from './tab-trap.component';\n\n@Directive({\n  selector: '[q-grid-tab-trap-in]',\n})\nexport class TabTrapInDirective implements OnInit {\n  @Input('q-grid-tab-trap-in') target;\n  @Input('q-grid-tab-trap-host') host: TabTrapComponent;\n\n  constructor(private elementRef: ElementRef) {\n    elementRef.nativeElement.tabIndex = 0;\n\n    const listener = new EventListener(elementRef.nativeElement, new EventManager(this));\n    listener.on('focus', () => this.host.activate(this.target));\n  }\n\n  ngOnInit() {\n    this.host.traps.set(this.target, this);\n  }\n\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { TabTrapComponent } from './tab-trap.component';\nimport { TemplateModule } from '@qgrid/ngx';\nimport { TabTrapInDirective } from './tab-trap-in.directive';\n\n@NgModule({\n  declarations: [\n    TabTrapComponent,\n    TabTrapInDirective,\n  ],\n  exports: [\n    TabTrapComponent,\n    TabTrapInDirective,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class TabTrapModule {\n}\n","import { Directive, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { parseFactory } from '@qgrid/core';\n\n@Directive({\n  selector: '[q-grid-time]',\n})\nexport class TimeDirective {\n  private toMidnight: (x: Date | string) => Date = parseFactory('date');\n\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    viewContainerRef.createEmbeddedView(templateRef, { $implicit: this });\n  }\n\n  time(previous, current) {\n    if (!previous) {\n      previous = new Date();\n    }\n\n    const midnight = this.toMidnight(previous);\n    const [\n      hours,\n      minutes,\n      seconds,\n      ms,\n    ] = current.split(':');\n\n    if (hours && minutes) {\n      const time = new Date(\n        midnight.getFullYear(),\n        midnight.getMonth(),\n        midnight.getDate(),\n        +hours,\n        +minutes,\n        seconds ? +seconds : 0,\n        ms ? +ms : 0,\n      );\n\n      return time;\n    }\n\n    return midnight;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { TimeDirective } from './time.directive';\n\n@NgModule({\n  declarations: [\n    TimeDirective,\n  ],\n  exports: [\n    TimeDirective,\n  ],\n})\nexport class TimeModule {\n}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { GridPlugin } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-validation',\n  template: '',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ValidationComponent {\n\t@Input() type: string;\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { GridPlugin, TemplateHostService } from '@qgrid/ngx';\nimport { ValidatorPlugin } from '@qgrid/plugins';\n\n@Component({\n  selector: 'q-grid-validator',\n  templateUrl: './validator.component.html',\n  providers: [TemplateHostService, GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ValidatorComponent implements OnInit {\n  @Input() value: string;\n  @Input() key: string;\n  @Input() type: string;\n  context: { $implicit: ValidatorPlugin };\n\n  constructor(\n    private plugin: GridPlugin,\n    private templateHost: TemplateHostService,\n  ) {\n    this.templateHost.key = () => 'validator';\n  }\n\n  ngOnInit() {\n    const { model } = this.plugin;\n    const validator = new ValidatorPlugin(model, this);\n    this.context = { $implicit: validator };\n  }\n}\n","<ng-container key=\"plugin-validator.tpl.html\"\n              [context]=\"context\"></ng-container>\n","import { NgModule } from '@angular/core';\nimport { ValidatorComponent } from './validator.component';\nimport { RuleComponent } from './rule.component';\nimport { ValidationComponent } from './validation.component';\nimport { TemplateModule } from '@qgrid/ngx';\n\n@NgModule({\n  declarations: [\n    ValidationComponent,\n    ValidatorComponent,\n    RuleComponent,\n  ],\n  exports: [\n    ValidationComponent,\n    ValidatorComponent,\n    RuleComponent,\n  ],\n  imports: [\n    TemplateModule,\n  ],\n})\nexport class ValidationModule {\n}\n","import { Component, Input, OnChanges, ChangeDetectionStrategy } from '@angular/core';\nimport { GridPlugin } from '@qgrid/ngx';\n\n@Component({\n  selector: 'q-grid-visibility',\n  template: '',\n  providers: [GridPlugin],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VisibilityComponent implements OnChanges {\n  @Input() head = true;\n  @Input() foot = true;\n  @Input() body = true;\n  @Input() toolbarTop = true;\n  @Input() toolbarBottom = true;\n  @Input() toolbarRight = false;\n  @Input() toolbarLeft = false;\n\n  @Input() pinLeft = false;\n  @Input() pinTop = false;\n  @Input() pinRight = false;\n  @Input() pinBottom = false;\n\n  constructor(private plugin: GridPlugin) {\n  }\n\n  ngOnChanges() {\n    const { model } = this.plugin;\n    model.visibility({\n      body: this.body,\n      foot: this.foot,\n      head: this.head,\n      toolbar: {\n        bottom: this.toolbarBottom,\n        left: this.toolbarLeft,\n        right: this.toolbarRight,\n        top: this.toolbarTop,\n      },\n      pin: {\n        bottom: this.pinBottom,\n        left: this.pinLeft,\n        right: this.pinRight,\n        top: this.pinTop,\n      },\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { VisibilityComponent } from './visibility.component';\n\n@NgModule({\n  declarations: [\n    VisibilityComponent,\n  ],\n  exports: [\n    VisibilityComponent,\n  ],\n})\nexport class VisibilityModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.BackdropService","_c0","i1.FocusAfterRender","i2","getValue","i1.ColumnFilterItemListDirective","i1","i1.DateService","i1.EbNodeService","i1.EbNodeComponent","utility.defaults","patch.methodsOf","converter.visit","i3.EbNodeService"],"mappings":"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"}}}